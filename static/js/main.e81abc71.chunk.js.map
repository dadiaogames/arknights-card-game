{"version":3,"sources":["icons.js","orders.js","cards.js","enemies.js","upgrades.js","utils.js","DeckGenerator.js","Game.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","rma","rock","d32","mine","block","order_illust","material_icons","add_atk_hp","G","ctx","field_selected","card","field","length","logMsg","atk","hp","deal4dmg","enemy_selected","enemy","efield","dmg","name","ready_order","order","random","Shuffle","finished","filter","x","exhausted","default_order","desc","effect","payCost","refreshOrder","ORDERS","requirements","score","reward","cost","style","transform","materials","costs","harvest","CARDS","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","power","achieve","deal_random_damage","onPlay","draw","onTurnBegin","action","onFight","exhaust_random_enemy","num_exhausted","move","init_card_state","hand","gainMaterials","indexOf","ready_random_card","cure","new_card","push","this","onPlayCard","get_rhine_order","count","material","Die","payMaterials","is_rhine","unshift","num_finished","miners","deck","Object","assign","fighters","map","actors","battlecries","Math","floor","played","score_gained","idx","i","cards","slice","extracted_attrs","use_count","sort","danger","reinforce_hand","reinforce_card","onRest","num_rest_cards","get_num_rest_cards","resters","card_idx","splice","discard","num_cards","player","includes","damaged_enemy","enemy_idx","miner","fighter","enemy2card","drawEnemy","e","texas","find","j","BORROWS","time_point","effects","EFFECTS","generate_combined_card","was_enemy","blank_enemy","ENEMIES","join","self_copy","is_elite","high","onOut","deal_damage","unyielding","enraged","goal","UPGRADES","is_init","onPlayBonus","map_object","fn","obj","new_obj","k","PRNG","seed","val","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","scorer","strategies","mini_sets","mini_set","get_random_card","rng","banned_cards","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","deck2str","output","keys","c","deck_from_strategy","strategy","amount","parseInt","shuffle","arr2deck","generate_deck","deck_name","amount_add","generate_deck_s2","sets","deck_from_mini_sets","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","_","sum","d1","d2","cd_idx","gained","use","out","undefined","exhausted_enter","limit_hand_field","pop","orders","odeck","y","sort_orders","sort_finished","order_id","edeck","enemy_exhausted_enter","surge","not_switch","switcher","switchEnemy","replace","reversed","time_points","title","reverse","unexhausted","exhausted_cards","prepared_cards","ready_times","rhine","clearField","str2deck","card_dict","item","arr2obj","card_data","target_card","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_scenario","ediscard","picks","max_danger","num_enemies_out","onCardMine","onCardFight","onCardAct","onCardReinforced","playing","stage","round_num","console","log","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","AC","setup","moves","setDecks","decks","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","play","f","act","harder_reinforce","rest","rest_cards","setValue","attr","finishOrder","useOrder","harvest_orders","fight","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","max","get_blocker","blocker_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","times","D4","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","pick","price","turn","onBegin","concat","refresh","refresh_picks","enemy_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","interpolate","ripple_style","position","borderRadius","width","background","Ripple","props","variants","opacity","anim","springConfig","default","div","className","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","cardState","border","selected","damaged","color","shaker","shaking","setShaking","duration","useEffect","onClick","handleClick","cardStyle","top","left","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","Controller","actions","process_action","checkCard","display","EnterGame","divAlign","Panel","content","ScoreBoard","useState","MaterialDisplay","TagSelection","tbody","row","row_tags","tag","borderColor","locked","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","margin","Competition","results","finalResult","fontSize","TAGS","tag_list","t","process_tags","standard_level","rhodes_training_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","enter_competition_mode","upgrade_card","start_competition","change_board","choose_tag","choose_standard_tags","get_risk_level","enter_game","check_deck","state","hand_selected","efield_selected","order_selected","finished_selected","selection_selected","upgrade_selected","pick_selected","hand_choices","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","finished_mode","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","一键收货","拿取","log_select","new_tags","setState","current_standard_level","competition_mode","reduce","acc","cardrow","icon","order_effect","finished_effect","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","shuffle_times","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","finish","failed","overflow","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","onSelect","selectedIndex","进入游戏","快速设置","返回标题","deck_generation","deck_construction","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"sOAIaA,EAAQ,CACnBC,QAAU,yBAAKC,IAAI,qGAAqGC,OAJtG,KAMlBC,IAAM,yBAAKF,IAAI,kFAAkFC,OAN/E,KAQlBE,KAAO,yBAAKH,IAAI,qGAAqGC,OARnG,KAUlBG,IAAM,yBAAKJ,IAAI,sFAAsFC,OAVnF,KAYlBI,KAAO,yBAAKL,IAAI,2JAA2JC,OAXpJ,KAavBK,MAAQ,yBAAKN,IAAI,wEAAwEC,OAblE,MCEZM,EAAe,qFAIfC,EAAiB,CAACV,EAAMC,QAASD,EAAMI,IAAKJ,EAAMK,KAAML,EAAMM,KAE3E,SAASK,EAAWC,EAAGC,EAAKC,GAC1B,IAAIC,EAAOH,EAAEI,MAAMF,GACnB,IAAKC,EAAM,CACT,GAAsB,GAAlBH,EAAEI,MAAMC,OAAa,OACzBF,EAAOH,EAAEI,MAAMJ,EAAEI,MAAMC,OAAS,GAChCC,GAAON,EAAGC,EAAK,8HAEjBE,EAAKI,KAAO,EACZJ,EAAKK,IAAM,EAGb,SAASC,EAAST,EAAGC,EAAKC,EAAgBQ,GACxC,IAAIC,EAAQX,EAAEY,OAAOF,GACrB,IAAKC,EAAO,CACV,GAAuB,GAAnBX,EAAEY,OAAOP,OAAa,OAC1BM,EAAQX,EAAEY,OAAOZ,EAAEY,OAAOP,OAAS,GACnCC,GAAON,EAAGC,EAAK,gGAEjBU,EAAME,KAAO,EACbP,GAAON,EAAGC,EAAJ,UAAYU,EAAMG,KAAlB,qCAGR,SAASC,EAAYf,EAAGC,GACtB,IAAIe,EAAQf,EAAIgB,OAAOC,QAAQlB,EAAEmB,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,cAAY,GAChEN,IACFA,EAAMM,WAAY,GAIf,IAAMC,EAAgB,CAC3BC,KAAM,4BACNC,OAF2B,SAEpBzB,EAAGC,GACJyB,EAAQ1B,EAAGC,EAAK,IAClB0B,EAAa3B,EAAGC,KAKT2B,EAAS,CACpB,CACEC,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,mBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAE8B,OAAS,IAGjB,CACED,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,mBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAE8B,OAAS,IAIjB,CACED,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,mBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAE8B,OAAS,IAKjB,CACED,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,0BAAMS,MAAO,CAACC,UAAU,eAAgBpC,EAAe,GAAvD,SAA4DA,EAAe,GAAIA,EAAe,IACrGkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACRD,EAAEmC,UAAU,IAAM,EAClBnC,EAAEmC,UAAU,IAAM,IAGtB,CACEN,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,0BAAMS,MAAO,CAACC,UAAU,eAAgBpC,EAAe,GAAvD,SAA4DA,EAAe,GAAIA,EAAe,IACrGkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACRD,EAAEmC,UAAU,IAAM,EAClBnC,EAAEmC,UAAU,IAAM,IAItB,CACEN,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,0BAAMS,MAAO,CAACC,UAAU,eAAgBpC,EAAe,GAAvD,SAA4DA,EAAe,GAAIA,EAAe,IACrGkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACRD,EAAEmC,UAAU,IAAM,EAClBnC,EAAEmC,UAAU,IAAM,IAItB,CACEN,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,SAA2BA,EAAe,GAA1C,YACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAEmC,UAAU,IAAM,EAClBnC,EAAEoC,OAAS,IAGjB,CACEP,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,SAA2BA,EAAe,GAA1C,YAEPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAPF,SAOSzB,EAAGC,GACND,EAAEmC,UAAU,IAAM,EAClBnC,EAAEoC,OAAS,IAIjB,CACEP,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,SAA2BA,EAAe,GAA1C,YAEPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAPF,SAOSzB,EAAGC,GACND,EAAEmC,UAAU,IAAM,EAClBnC,EAAEoC,OAAS,IAIjB,CACEP,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,+CAAW1B,EAAe,IACjCuC,SAAS,EACTZ,OANF,SAMSzB,EAAGC,GACRD,EAAEmC,UAAU,IAAM,IAItB,CACEN,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,+CAAW1B,EAAe,IACjCuC,SAAS,EACTZ,OANF,SAMSzB,EAAGC,GACRD,EAAEmC,UAAU,IAAM,IAItB,CACEN,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,+CAAW1B,EAAe,IACjCuC,SAAS,EACTZ,OANF,SAMSzB,EAAGC,GACRD,EAAEmC,UAAU,IAAM,IAItB,CACEN,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,mBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAEoC,OAAS,IAGjB,CACEP,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,mBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAEoC,OAAS,IAIjB,CACEP,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,mBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OANF,SAMSzB,EAAGC,GACND,EAAEoC,OAAS,IAKjB,CACEP,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,eACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAAQ1B,GAEV,CACE8B,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,eACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAAQ1B,GAEV,CACE8B,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,eACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAAQ1B,GAEV,CACE8B,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,yBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAAQhB,GAEV,CACEoB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,yBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAAQhB,GAEV,CACEoB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAO1B,EAAe,GAAtB,yBACPkC,KAAM,CAAC,EAAE,EAAE,EAAE,GACbP,OAAQhB,GAIV,CACEoB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,2DACPC,OAAQV,GAEV,CACEc,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,2DACPC,OAAQV,GAEV,CACEc,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,2DACPC,OAAQV,ICtRCuB,EAAQ,CACnB,CACExB,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,oFACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,oFACRf,KAAM,oCACNoB,OATF,SASS5C,EAAGC,EAAKyC,GACb,IAAIG,EAAQ,EAAI,EAAIH,EAAKI,MACzB9C,EAAE8B,OAASe,EAEPA,GAAS,IACXE,GAAQ/C,EAAGC,EAAK,qBAAO,iEAAgByC,IAG3CF,UAAW,EACXG,eAAgB,6BAGlB,CACE7B,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,oFACRf,KAAM,gDACNoB,OATF,SASS5C,EAAGC,EAAKyC,GACbM,EAAmBhD,EAAGC,EAAK,EAAI,EAAIyC,EAAKI,QAE1CN,UAAW,EACXG,eAAgB,kBAGlB,CACE7B,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,oFACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAO,oFACPC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,oFACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAM,2BACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,6FACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAK/C,MAAQ,GAEfgD,eAAgB,QAGlB,CACE7B,KAAM,MACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,4DACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAK/C,MAAQ,GAEfgD,eAAgB,QAGlB,CACE7B,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,oFACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAM,eACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAQ,2EACRC,UAAW,EACXC,YATF,SASczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,GACLzB,IAAI,GACJC,GAAG,GACHb,KAAK,EACLC,MAAM,EACN2C,OAAO,2EACPC,UAAW,EAEXC,YAVF,SAUczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,EAEPkC,EAAKnC,KAAO,IACdwC,GAAQ/C,EAAGC,EAAK,uCAAU,qDAAcyC,IAG5CC,eAAgB,SAGlB,CACE7B,KAAM,SACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP4B,KAAM,oCACNe,OAAQ,kEACRU,OATF,SASSjD,EAAGC,EAAKyC,GACbQ,EAAKlD,EAAGC,GACRiD,EAAKlD,EAAGC,IAEVuC,UAAW,EACXC,YAdF,SAcczC,EAAGC,EAAKyC,GAClBQ,EAAKlD,EAAGC,GACRiD,EAAKlD,EAAGC,IAEV0C,eAAgB,uBAIlB,CACE7B,KAAM,qBACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP2C,OAAO,oFACPf,KAAM,4FACN2B,YATF,SAScnD,EAAGC,EAAKyC,GACdA,EAAK9C,OAAS,IAChB8C,EAAK9C,MAAQ,IAGjBwD,OAdF,SAcSpD,EAAGC,EAAKyC,GACb1C,EAAEoC,OAAS,EAAI,EAAIM,EAAKI,MACxBJ,EAAK9C,OAAS,GAEhB4C,UAAW,EACXG,eAAgB,yCAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,gDACLe,OAAO,2EACPc,QATF,SASUrD,EAAGC,EAAKyC,GACd1C,EAAEoC,OAAS,EAAI,EAAIM,EAAKI,OAE1BN,UAAW,EACXG,eAAgB,yCAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,gDACLe,OAAO,2EACPK,OATF,SASS5C,EAAGC,EAAKyC,GACb1C,EAAEoC,OAAS,EAAI,EAAIM,EAAKI,OAE1BN,UAAW,EACXG,eAAgB,yCAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,gDACNe,OAAO,2EACPC,UAAW,EAEXS,OAXF,SAWSjD,EAAGC,GACRD,EAAEoC,OAAS,GAGbK,YAfF,SAeczC,EAAGC,EAAKyC,GAClB1C,EAAEoC,OAAS,GAEbO,eAAgB,mCAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,iDACLe,OAAO,oFACPK,OATF,SASS5C,EAAGC,GACRiD,EAAKlD,EAAGC,IAEVoD,QAZF,SAYUrD,EAAGC,GACTiD,EAAKlD,EAAGC,IAEVuC,UAAW,EACXG,eAAgB,QAChBF,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,IAIf,CACEM,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,8JACLe,OAAO,6FACPK,OATF,SASS5C,EAAGC,EAAKyC,GACbY,GAAqBtD,EAAGC,GACxB,IAAIsD,EAAgBvD,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,OAAEA,EAAEC,aAAWjB,OACpDL,EAAEoC,OAASmB,EAA6B,EAAbb,EAAKI,OAElCN,UAAW,EACXC,YAfF,SAeczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,6GACNe,OAAO,2EACPC,UAAW,EACXa,QAVF,SAUUrD,EAAGC,EAAKyC,EAAM/B,GACpB,GAAIA,EAAME,IAAMF,EAAMH,GAAI,CACxB,IAAIqC,GAASlC,EAAME,IAAMF,EAAMH,IAAM,EACrCR,EAAEoC,OAASS,EACXvC,GAAON,EAAGC,EAAJ,uBAAeyC,EAAK5B,KAApB,wBAA8B+B,EAA9B,uBAEFA,GAAS,GACXE,GAAQ/C,EAAGC,EAAK,iCAAS,sEAAgByC,KAI/CD,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kEACLe,OAAO,2EACPa,OATF,SASSpD,EAAGC,EAAKyC,GAKb,IAAIvC,EAAOqD,EAAKxD,EAAGC,EAAK,OAAQ,SAChCwD,EAAgBzD,EAAGC,EAAKE,GACP,gBAAbA,EAAKW,MACPiC,GAAQ/C,EAAGC,EAAK,2BAAQ,mDAAYyC,IAGxCF,UAAW,EACXC,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAyBlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,6DACLe,OAAO,6FACPU,OATF,SASSjD,EAAGC,EAAKyC,GAAO,IAAD,gBACF1C,EAAE0D,MADA,IACnB,2BAAyB,SAClB1B,MAAQ,GAFI,gCAKrBQ,UAAW,EACXC,YAfF,SAeczC,EAAGC,EAAKyC,GACdA,EAAKO,QACPP,EAAKO,OAAOjD,EAAGC,GAEbyC,EAAKI,OAAS,GAChBC,GAAQ/C,EAAGC,EAAK,2BAAQ,8CAAYyC,IAGxCC,eAAgB,kDAGlB,CACE7B,KAAM,eACNkB,KAAM,EACNzB,IAAK,EACLC,GAAI,EACJb,KAAM,EACNC,MAAO,EACP4B,KAAM,gDACNe,OAAO,2EACPc,QATF,SASUrD,EAAGC,EAAKyC,GACdiB,EAAc3D,EAAGC,EAAK,EAAE,EAAEyC,EAAKI,QAEjCN,UAAW,EACXG,eAAgB,yCAIlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,sDACLe,OAAO,2EACPc,QATF,SASUrD,EAAGC,EAAKyC,GACdM,EAAmBhD,EAAGC,EAAK,EAAI,EAAIyC,EAAKI,QAE1CN,UAAW,EACXG,eAAgB,kBAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kFACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GAAO,IAAD,gBACF1C,EAAEI,OADA,IACnB,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,GAAQuC,IACVvC,EAAKI,KAAO,EACZJ,EAAKK,IAAM,IAJI,gCAQrBgC,UAAW,EACXC,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,iFACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GAAO,IAAD,gBACF1C,EAAEI,OADA,IACnB,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,GAAQuC,IACVvC,EAAKR,MAAQ,IAHE,gCAOrB6C,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClBA,EAAK/C,MAAQ,GAEfgD,eAAgB,QAIlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,yEACLe,OAAO,kEACPU,OATF,SASSjD,EAAGC,EAAKyC,GACbM,EAAmBhD,EAAGC,EAAK,GAC3B+C,EAAmBhD,EAAGC,EAAK,IAE7BuC,UAAW,EACXC,YAdF,SAcczC,EAAGC,EAAKyC,GACdA,EAAKO,QACPP,EAAKO,OAAOjD,EAAGC,IAGZD,EAAE0D,KAAKE,QAAQlB,IAAUA,EAAKI,OAAS,GAC1CC,GAAQ/C,EAAGC,EAAK,+BAAS,4EAAiByC,IAG9CC,eAAgB,kDAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,kCACNe,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUS5C,EAAGC,EAAKyC,GACbA,EAAKnC,KAAO,EAAI,EAAImC,EAAKI,MACzBJ,EAAKlC,IAAM,EAAI,EAAIkC,EAAKI,OAE1BH,eAAgB,2BAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAO,2EACPC,UAAW,EACXhB,KAAM,uDACN6B,QAVF,SAUUrD,EAAGC,EAAKyC,EAAM/B,GACpBA,EAAMJ,KAAO,GAEfkC,YAbF,SAaczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,kEAAe1B,EAAe,IACpCyC,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GACb1C,EAAEmC,UAAU,IAAM,GAEpBK,UAAW,EACXC,YAbF,SAaczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,EACXkC,EAAK/C,MAAQ,GAEfgD,eAAgB,cAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,iDACLe,OAAO,oFACPa,OATF,SASSpD,EAAGC,EAAKyC,GACbA,EAAKlC,IAAM,EAAI,EAAIkC,EAAKI,OAE1BN,UAAW,EACXG,eAAgB,0CAGlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,qFACLe,OAAO,kEACPU,OATF,SASSjD,EAAGC,EAAKyC,GAAO,IAAD,gBACF1C,EAAEI,OADA,IACnB,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,GAAQuC,IACVvC,EAAKP,OAAS,IAHC,gCAOrB4C,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClBA,EAAK9C,OAAS,GAEhB+C,eAAgB,wBAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,GACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,6DACLe,OAAO,2EACPK,OATF,SASS5C,EAAGC,EAAKyC,GACbY,GAAqBtD,EAAGC,IAE1BoD,QAZF,SAYUrD,EAAGC,EAAKyC,GACdY,GAAqBtD,EAAGC,IAE1BuC,UAAW,EACXC,YAhBF,SAgBczC,EAAGC,EAAKyC,GAClBA,EAAKlC,IAAM,IAEbmC,eAAgB,UAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,GACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,6DACLe,OAAO,2EACPK,OATF,SASS5C,EAAGC,EAAKyC,GACbmB,GAAkB7D,EAAGC,EAAKyC,IAE5BW,QAZF,SAYUrD,EAAGC,EAAKyC,GACdmB,GAAkB7D,EAAGC,EAAKyC,IAE5BF,UAAW,EACXC,YAhBF,SAgBczC,EAAGC,EAAKyC,GAClBA,EAAKlC,IAAM,IAEbmC,eAAgB,UAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,0EACLe,OAAO,2EACPa,OATF,SASSpD,EAAGC,EAAKyC,GACboB,GAAK9D,EAAGC,EAAK,EAAI,EAAIyC,EAAKI,QAE5BN,UAAW,EACXG,eAAgB,0CAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,yEACLe,OAAO,oFACPa,OATF,SASSpD,EAAGC,EAAKyC,GACb,IAAIqB,EAAW9D,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAGA,EAAEW,MAAO,GAAGU,EAAKI,OAAO,OAAO,GAChFiB,GACF/D,EAAEI,MAAM4D,KAAKP,EAAgBzD,EAAGC,EAAJ,eAAa8D,MAG7CvB,UAAW,EACXG,eAAgB,gDAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,2DACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAGA,GAAGqB,MAAQ,GACxDvC,IACFA,EAAKI,KAAO,EACZJ,EAAKK,IAAM,IAGfgC,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClBoB,GAAK9D,EAAGC,EAAK,IAEf0C,eAAgB,6DAoElB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,gDACLe,OAAO,kEACPa,OATF,SASSpD,EAAGC,EAAKyC,GACbY,GAAqBtD,EAAGC,GACxBqD,GAAqBtD,EAAGC,IAE1BwC,YAbF,SAaczC,EAAGC,EAAKyC,GAClBA,EAAKpB,WAAY,GAEnBkB,UAAW,EACXG,eAAgB,4BAGlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,gIACLe,OAAO,6FACPK,OATF,SASS5C,EAAGC,EAAKyC,GACb,IAAIa,EAAgBvD,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,OAAEA,EAAEC,aAAWjB,OACpDsD,EAAc3D,EAAGC,EAAKsD,IAGxBF,QAdF,SAcUrD,EAAGC,EAAKyC,GACduB,KAAKrB,OAAO5C,EAAGC,EAAKyC,IAEtBF,UAAW,EACXC,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,EACXkC,EAAK/C,MAAQ,GAEfgD,eAAgB,cAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,uGACLe,OAAO,4CACPU,OATF,SASSjD,EAAGC,EAAKyC,GACb,IAAIa,EAAgBvD,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,OAAEA,EAAEC,aAAWjB,OACpDL,EAAE8B,OAAS,EAAIyB,EACXA,GAAiB,GACnBR,GAAQ/C,EAAGC,EAAK,2BAAQ,oGAAqByC,IAGjDF,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAIlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,yEACLe,OAAO,2EACPa,OATF,SASSpD,EAAGC,EAAKyC,GACb,GAAIhB,EAAQ1B,EAAGC,EAAK,EAAI,EAAIyC,EAAKI,OAAQ,CACvC,IAAID,EAAQ,EAAI,EAAIH,EAAKI,MACzB9C,EAAE8B,OAASe,EAEPA,GAAS,IACXE,GAAQ/C,EAAGC,EAAK,iCAAS,2DAAeyC,KAI9CF,UAAW,EACXG,eAAgB,kDAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,2IACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,GACRD,EAAEkE,WAAWF,MACX,SAAChE,EAAGC,GACFD,EAAE8B,OAAS,MAIjBW,YAhBF,SAgBczC,EAAGC,EAAKyC,GAClBA,EAAKO,OAAOjD,EAAGC,IAEjBuC,UAAW,EACXG,eAAgB,iDAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,wEACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GACbyB,GAAgBnE,EAAGC,GACnBkE,GAAgBnE,EAAGC,IAErBuC,UAAW,EACXC,YAdF,SAcczC,EAAGC,EAAKyC,GAClByB,GAAgBnE,EAAGC,IAErB0C,eAAgB,2DAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,6GACLe,OAAO,oFACPa,OATF,SASSpD,EAAGC,EAAKyC,GACbyB,GAAgBnE,EAAGC,GACnB4D,GAAkB7D,EAAGC,EAAKyC,IAE5BF,UAAW,EACXC,YAdF,SAcczC,EAAGC,EAAKyC,GAClB1C,EAAEoC,OAAS,GAEbO,eAAgB,mCAGlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,6EACLe,OAAO,6FACPK,OATF,SASS5C,EAAGC,EAAKyC,GACb,IADmB,EACf0B,EAAQpE,EAAEmB,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,aAAWjB,OAD7B,cAEDL,EAAEmB,UAFD,IAEnB,2BAA8B,SACtBG,WAAY,GAHD,8BAMf8C,GAAS,IACXrB,GAAQ/C,EAAGC,EAAK,uCAAU,mFAAmByC,IAIjDF,UAAW,EACXC,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAK/C,MAAQ,GAEfgD,eAAgB,QA4BlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,8IACNe,OAAO,2EACPC,UAAW,EAEXS,OAXF,SAWSjD,EAAGC,GACR,IAAIe,EAAQ,GACRqD,EAAWpE,EAAIgB,OAAOqD,IAAI,GAAK,EAC/BzC,EAAe,CAAC,EAAE,EAAE,EAAE,GAC1BA,EAAawC,GAAY,EACzBrD,EAAMQ,KAAO,8BAAO1B,EAAeuE,GAAtB,uBACbrD,EAAMS,OAAS,SAACzB,EAAEC,GACZsE,EAAavE,EAAGC,EAAK4B,IACvBmB,EAAmBhD,EAAGC,EAAK,IAG/Be,EAAMwD,UAAW,EACjBxE,EAAEmB,SAASsD,QAAQzD,IAGrByB,YA1BF,SA0BczC,EAAGC,GACb+C,EAAmBhD,EAAGC,EAAK,IAE7B0C,eAAgB,mCA6BlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,qIAA2B1B,EAAe,GAAIA,EAAe,GAAIA,EAAe,GAAhF,8BACLyC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb,IAAI1B,EAAQ,GACRa,EAAe,CAAC,EAAE,EAAE,EAAE,GAC1Bb,EAAMQ,KAAO,8BAAO1B,EAAe,GAAIA,EAAe,GAAIA,EAAe,GAA5D,iBACbkB,EAAMS,OAAS,SAACzB,EAAGC,GACbsE,EAAavE,EAAGC,EAAK4B,KACvB7B,EAAE8B,OAAS,IAGf9B,EAAEmB,SAASsD,QAAQzD,IAErByB,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAKlC,IAAM,EACXkC,EAAKnC,KAAO,GAEdoC,eAAgB,SAMlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,qGACLe,OAAO,oFACPU,OATF,SASSjD,EAAGC,EAAKyC,GACb,IAAIgC,EAAe1E,EAAEmB,SAASd,OAC9BqC,EAAKnC,KAAOmE,EACZhC,EAAKlC,IAAM,EAAIkE,GAEjBlC,UAAW,EACXC,YAfF,SAeczC,EAAGC,EAAKyC,GAClBA,EAAK9C,OAAS,GAEhB+C,eAAgB,wBAGlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kGACLe,OAAO,6FACPK,OATF,SASS5C,EAAGC,EAAKyC,GACb,IAAK1C,EAAEI,MAAMwD,QAAQlB,GAAO,qBACT1C,EAAEI,OADO,IAC1B,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,EAAKyC,QAAWzC,EAAKyC,QAAUF,EAAKE,QACtCzC,EAAKyC,OAAO5C,EAAGC,EAAKE,IAHE,iCAQ9BqC,UAAW,EACXC,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClB,IAAIiC,EAAS3E,EAAE4E,KAAKxD,QAAO,SAAAC,GAAC,OAAIA,EAAEuB,UAClC,GAAI+B,EAAOtE,OAAS,EAAG,CACrB,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQyD,GAAQ,GACtC3E,EAAE0D,KAAKe,QAAQI,OAAOC,OAAO,GAAI3E,MAGrCwC,eAAgB,oEAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kGACLe,OAAO,oFACPc,QATF,SASUrD,EAAGC,EAAKyC,EAAM/B,GACpB,IAAKX,EAAEI,MAAMwD,QAAQlB,GAAO,CAAC,IAAD,gBACT1C,EAAEI,OADO,IAC1B,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,EAAKkD,SAAYlD,EAAKkD,SAAWX,EAAKW,SACxClD,EAAKkD,QAAQrD,EAAGC,EAAKE,EAAMQ,IAHL,iCAQ9B6B,UAAW,EACXC,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClB,IAAIqC,EAAW/E,EAAE4E,KAAKxD,QAAO,SAAAC,GAAC,OAAIA,EAAEgC,WACpC,GAAI0B,EAAS1E,OAAS,EAAG,CACvB,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQ6D,GAAU,GACxC/E,EAAE0D,KAAKe,QAAQI,OAAOC,OAAO,GAAI3E,MAGrCwC,eAAgB,oEAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kGACLe,OAAO,2EACPa,OATF,SASSpD,EAAGC,EAAKyC,EAAM/B,GACnB,IAAKX,EAAEI,MAAMwD,QAAQlB,GAAO,CAAC,IAAD,gBACT1C,EAAEI,MAAM4E,KAAI,SAAA3D,GAAC,OAAEA,MADN,IAC1B,2BAAoC,CAAC,IAA5BlB,EAA2B,QAC9BA,EAAKiD,QAAWjD,EAAKiD,QAAUV,EAAKU,QACtCjD,EAAKiD,OAAOpD,EAAGC,EAAKE,IAHE,iCAQ9BqC,UAAW,EACXC,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClB,IAAIuC,EAASjF,EAAE4E,KAAKxD,QAAO,SAAAC,GAAC,OAAIA,EAAE+B,UAClC,GAAI6B,EAAO5E,OAAS,EAAG,CACrB,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQ+D,GAAQ,GACtCjF,EAAE0D,KAAKe,QAAQI,OAAOC,OAAO,GAAI3E,MAGrCwC,eAAgB,oEAElB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,wGACLe,OAAO,6FACPU,OATF,SASSjD,EAAGC,EAAKyC,GAAO,IAAD,gBACF1C,EAAE0D,KAAKsB,KAAI,SAAA3D,GAAC,OAAEA,MADZ,IACnB,2BAAmC,CAAC,IAA3BlB,EAA0B,QAC7BA,EAAK8C,QAAW9C,EAAK8C,QAAUP,EAAKO,QACtC9C,EAAK8C,OAAOjD,EAAGC,EAAKE,IAHL,gCAOrBqC,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClB,IAAIwC,EAAclF,EAAE4E,KAAKxD,QAAO,SAAAC,GAAC,OAAIA,EAAE4B,UACvC,GAAIiC,EAAY7E,OAAS,EAAG,CAC1B,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQgE,GAAa,GAC3ClF,EAAE0D,KAAKe,QAAQI,OAAOC,OAAO,GAAI3E,MAGrCwC,eAAgB,oEAGlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,0KACLe,OAAO,6FACPK,OATF,SASS5C,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,cAAa,GAC7DnB,IACFA,EAAKmB,WAAY,EACjBtB,EAAE8B,OAASqD,KAAKC,MAAMjF,EAAKI,IAAM,KAGrCiC,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClB1C,EAAE8B,OAAS,GAEba,eAAgB,uBAIlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,sFACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GACbA,EAAKnC,KAAO,GACZmC,EAAK2C,QAAS,EACd3C,EAAKS,YAAc,SAACnD,EAAGC,EAAKyC,GACtBA,EAAK2C,SACP3C,EAAKnC,KAAO,GACZmC,EAAK2C,QAAS,KAIpB7C,UAAW,EACXC,YApBF,SAoBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,iGACLe,OAAO,kEACPc,QATF,SASUrD,EAAGC,EAAKyC,EAAM/B,GACpB,GAAIA,EAAME,IAAMF,EAAMH,GAAI,CACxB,IAAIqC,EAAQlC,EAAME,IAAMF,EAAMH,GAC1B8E,EAAeH,KAAKC,MAAMvC,EAAQ,GACtC7C,EAAE8B,OAASwD,EACXhF,GAAON,EAAGC,EAAJ,uBAAeyC,EAAK5B,KAApB,wBAA8BwE,EAA9B,WACFA,GAAgB,GAClBvC,GAAQ/C,EAAGC,EAAK,2BAAQ,oDAAayC,KAI3CF,UAAW,EACXC,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,oFACLe,OAAO,kEACPc,QATF,SASUrD,EAAGC,EAAKyC,EAAM/B,GACpB,GAAIA,EAAME,IAAMF,EAAMH,GAAI,CACxB,IAAI+E,EAAMvF,EAAEI,MAAMwD,QAAQlB,GAC1B,IAAK6C,EAAK,CACR,IAAI5E,EAAQX,EAAEY,OAAO2E,GACjB5E,IACFA,EAAME,KAAO,EAAI,EAAI6B,EAAKI,UAKlCN,UAAW,EACXG,eAAgB,kBAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,mGACLe,OAAO,oFACPU,OATF,SASSjD,EAAGC,EAAKyC,GACb,IAAK,IAAI8C,EAAE,EAAGA,EAAG,GAAG,EAAE9C,EAAKI,OAAS0C,IAClCxC,EAAmBhD,EAAGC,EAAK,IAG/B2C,OAdF,SAcS5C,EAAGC,EAAKyC,GACb,IAAK,IAAI8C,EAAE,EAAGA,EAAG,GAAG,EAAE9C,EAAKI,OAAS0C,IAClCxC,EAAmBhD,EAAGC,EAAK,IAG/BoD,QAnBF,SAmBUrD,EAAGC,EAAKyC,GACd,IAAK,IAAI8C,EAAE,EAAGA,EAAG,GAAG,EAAE9C,EAAKI,OAAS0C,IAClCxC,EAAmBhD,EAAGC,EAAK,IAG/BuC,UAAW,EACXG,eAAgB,6BAKlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,oFACRC,UAAW,EACXhB,KAAM,wKACNyB,OAVF,SAUSjD,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAEA,EAAE4B,WAAS,GAC3D9C,EAAK8C,OAAOjD,EAAGC,EAAKyC,GACH,sBAAbvC,EAAKW,MACPR,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,4CAAoCX,EAAKqB,KAAzC,OAEVoB,OAhBF,SAgBS5C,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAEA,EAAEuB,WAAS,GAC3DzC,EAAKyC,OAAO5C,EAAGC,EAAKyC,GACH,sBAAbvC,EAAKW,MACPR,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,4CAAoCX,EAAKqB,KAAzC,OAEV6B,QAtBF,SAsBUrD,EAAGC,EAAKyC,EAAM/B,GACpB,IAAIR,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAEA,EAAEgC,YAAU,GAC5DlD,EAAKkD,QAAQrD,EAAGC,EAAKyC,EAAM/B,GACV,sBAAbR,EAAKW,MACPR,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,4CAAoCX,EAAKqB,KAAzC,OAEV4B,OA5BF,SA4BSpD,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAEA,EAAE+B,WAAS,GAC3DjD,EAAKiD,OAAOpD,EAAGC,EAAKyC,GACH,sBAAbvC,EAAKW,MACPR,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,4CAAoCX,EAAKqB,KAAzC,OAEViB,YAlCF,SAkCczC,EAAGC,EAAKyC,GAClB,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAEA,EAAEoB,gBAAc,GAChEtC,EAAKsC,YAAYzC,EAAGC,EAAKyC,GACR,sBAAbvC,EAAKW,MACPR,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,4CAAoCX,EAAKwC,eAAzC,OAGVA,eAAgB,6EAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,iFACLe,OAAO,oFACPU,OATF,SASSjD,EAAGC,GAER,IADA,IAAIwF,EAAQxF,EAAIgB,OAAOC,QAAQlB,EAAEsC,OAAOoD,MAAM,EAAG,IACxCF,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACtB,IAAIrF,EAAI,eAAOsF,EAAMD,IACrBrF,EAAKI,IAAM,EACXJ,EAAKK,GAAK,EACVL,EAAKR,KAAO,EACZQ,EAAK6B,KAAO,EACZhC,EAAEI,MAAM4D,KAAKP,EAAgBzD,EAAGC,EAAKE,MAGzCqC,UAAW,EACXC,YArBF,SAqBczC,EAAGC,GACbD,EAAE8B,OAAS,GAEba,eAAgB,uBAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,4GACLe,OAAO,2EACPU,OATF,SASSjD,EAAGC,GACR,IAAIwF,EAAQxF,EAAIgB,OAAOC,QAAQlB,EAAEsC,OAAOoD,MAAM,EAAG1F,EAAE0D,KAAKrD,QACxDL,EAAE0D,KAAO+B,EAAMT,KAAI,SAAA3D,GAAC,sBAASA,OAE/BuB,OAbF,SAaS5C,EAAGC,GACRgE,KAAKhB,OAAOjD,EAAGC,IAEjBuC,UAAW,EACXC,YAjBF,SAiBczC,EAAGC,GACbgE,KAAKhB,OAAOjD,EAAGC,IAEjB0C,eAAgB,kFAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,+FACLe,OAAO,oFACPU,OATF,SASSjD,EAAGC,EAAKyC,GAOb1C,EAAEI,MAAQJ,EAAEI,MAAM4E,KANA,SAAC7E,GACjB,IAAI4D,EAAW9D,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAKA,EAAEuB,QAAUvB,EAAEgC,SAAWhC,EAAE+B,WAAU,GAExFuC,EAAkB,CAAE7E,KADsEiD,EAAxFjD,KACwBU,KADgEuC,EAAlFvC,KACwBe,OAD0DwB,EAA5ExB,OAC0BK,OADkDmB,EAApEnB,OAC0BS,QAD0CU,EAA5DV,QAC2BD,OADiCW,EAAnDX,OAC0BZ,UADyBuB,EAA3CvB,UAC6BG,eADcoB,EAAhCpB,eACkCF,YADFsB,EAAhBtB,aAE9E,OAAO,2BAAItC,GAASwF,OAIxBnD,UAAW,EACXG,eAAgB,iFAChBF,YApBF,SAoBczC,EAAGC,GACbgE,KAAKhB,OAAOjD,EAAGC,KAInB,CACEa,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,+EAAkB1B,EAAe,GAAjC,kCACNyC,OAAO,2EACPK,OATF,SASS5C,EAAGC,EAAKyC,GACT6B,EAAavE,EAAGC,EAAK,CAAC,EAAE,EAAE,EAAE,MAC9ByC,EAAKpB,WAAY,EAEjBoB,EAAKkD,UAAYlD,EAAKkD,WAAa,EACnClD,EAAKkD,WAAa,EAEdlD,EAAKkD,WAAa,GACpB7C,GAAQ/C,EAAGC,EAAK,qBAAO,sEAAgByC,KAI7CW,QArBF,SAqBUrD,EAAGC,EAAKyC,GACduB,KAAKrB,OAAO5C,EAAGC,EAAKyC,IAEtBS,YAxBF,SAwBcnD,EAAGC,EAAKyC,GAClBA,EAAKkD,UAAY,GAEnBpD,UAAW,EACXG,eAAgB,aAChBF,YA7BF,SA6BczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,EACXkC,EAAK/C,MAAQ,IAGjB,CACEmB,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kEAAe1B,EAAe,GAA9B,6BACLyC,OAAO,2EACPa,OATF,SASSpD,EAAGC,EAAKyC,GACT6B,EAAavE,EAAGC,EAAK,CAAC,EAAE,EAAE,EAAE,MAC9BD,EAAE8B,OAAS,EAAIY,EAAKI,QAGxBN,UAAW,EACXG,eAAgB,6BAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kEAAe1B,EAAe4F,MAAM,EAAE,GAAtC,kCAAgD5F,EAAe,IACpEyC,OAAO,2EACPa,OATF,SASSpD,EAAGC,EAAKyC,GACb1C,EAAEmC,UAAU,IAAMnC,EAAEmC,UAAUuD,MAAM,EAAE,GAAGG,OAAO,IAElDrD,UAAW,EACXG,eAAgB,kCAChBF,YAdF,SAcczC,EAAGC,EAAKyC,GAClB1C,EAAEoC,OAAS,IAGf,CACEtB,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kEAAe1B,EAAe,GAA9B,iCACLyC,OAAO,2EACPU,OATF,SASSjD,EAAGC,EAAKyC,GACbA,EAAKnC,KAAOP,EAAEmC,UAAU,GACxBO,EAAKlC,IAAMR,EAAEmC,UAAU,IAEzBK,UAAW,EACXC,YAdF,SAcczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,gFACNe,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUS5C,EAAGC,EAAKyC,GACb1C,EAAE8F,QAAU,GAEdzC,QAbF,SAaUrD,EAAGC,EAAKyC,GACd1C,EAAE8F,QAAU,GAEd7C,OAhBF,SAgBSjD,EAAGC,EAAKyC,GACb1C,EAAE8F,QAAU,GAEdrD,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClB1C,EAAE8F,QAAU,GAEdnD,eAAgB,yCAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kEAAe1B,EAAe4F,MAAM,EAAE,GAAtC,mCACLnD,OAAO,oFACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb1C,EAAE8B,OAAS,EAAI9B,EAAEmC,UAAUuD,MAAM,EAAE,GAAGG,OAAO,IAE/CpD,YAbF,SAaczC,EAAGC,GACb6D,GAAK9D,EAAGC,EAAK,IAEf0C,eAAgB,6DAGlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,+JACLe,OAAO,kEACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACbA,EAAKS,YAAc,SAACnD,EAAGC,EAAKyC,GACfhB,EAAQ1B,EAAGC,EAAK,KAEzByC,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,KAIjBiC,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAKlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,6DACNe,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUS5C,EAAGC,EAAKyC,GACbqD,GAAe/F,EAAGC,IAEpBoD,QAbF,SAaUrD,EAAGC,EAAKyC,GACdqD,GAAe/F,EAAGC,IAEpBwC,YAhBF,SAgBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,gDACNe,OAAO,2EACPC,UAAW,EACXY,OAVF,SAUSpD,EAAGC,EAAKyC,GACb,IAAK,IAAI8C,EAAE,EAAGA,EAAE9C,EAAKI,MAAM,EAAG0C,IAC5BO,GAAe/F,EAAGC,IAGtB0C,eAAgB,6BAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,4DACNe,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb,IADmB,EACf+C,EAAK,YAAOzF,EAAE0D,MADC,cAEF+B,GAFE,IAEnB,2BAAwB,CACtBO,GAAehG,EAAGC,EADI,UAFL,gCAMrBwC,YAhBF,SAgBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAwBlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,gDACNe,OAAO,oFACPC,UAAW,EACXyD,OAVF,SAUSjG,EAAGC,EAAKyC,GACbM,EAAmBhD,EAAGC,EAAK,EAAI,EAAIyC,EAAKI,QAE1CH,eAAgB,kBAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,qGACNe,OAAO,2EACPC,UAAW,EACXyD,OAVF,SAUSjG,EAAGC,EAAKyC,GACb,IAAIwD,EAAiBC,GAAmBnG,EAAGC,GAC3CyC,EAAKnC,KAAO2F,EACZxD,EAAKlC,IAAM0F,GAEbzD,YAfF,SAeczC,EAAGC,EAAKyC,GAClBA,EAAK9C,OAAS,GAEhB+C,eAAgB,wBAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,uGACNe,OAAO,2EACPC,UAAW,EACXyD,OAVF,SAUSjG,EAAGC,EAAKyC,GACb,IAAIwD,EAAiBC,GAAmBnG,EAAGC,GAC3CD,EAAE8B,OAASoE,GAEbzD,YAdF,SAcczC,EAAGC,EAAKyC,GAClB1C,EAAEoC,OAAS,GAEbO,eAAgB,mCAyBlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,kGACNe,OAAO,2EACP0D,OATF,SASSjG,EAAGC,EAAKyC,GACb,IAAK1C,EAAEI,MAAMwD,QAAQlB,GAAO,CAAC,IAAD,gBACT1C,EAAEI,MAAM4E,KAAI,SAAA3D,GAAC,OAAEA,MADN,IAC1B,2BAAoC,CAAC,IAA5BlB,EAA2B,QAC9BA,EAAK8F,QAAW9F,EAAK8F,QAAUvD,EAAKuD,QACtC9F,EAAK8F,OAAOjG,EAAGC,EAAKE,IAHE,iCAQ9BqC,UAAW,EACXC,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClB,IAAI0D,EAAUpG,EAAE4E,KAAKxD,QAAO,SAAAC,GAAC,OAAIA,EAAE4E,UACnC,GAAIG,EAAQ/F,OAAS,EAAG,CACtB,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQkF,GAAS,GACvCpG,EAAE0D,KAAKe,QAAQI,OAAOC,OAAO,GAAI3E,MAGrCwC,eAAgB,oEAGlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,6JACNe,OAAO,kEACPC,UAAW,EACXY,OAVF,SAUSpD,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAKA,GAAGqB,MAAQ,GAC9D,GAAIvC,EAAM,CAER,GADAA,EAAKU,KAAO,EACRV,EAAKU,KAAOV,EAAKK,GAAI,CACvB,IAAI6F,EAAWrG,EAAEI,MAAMwD,QAAQzD,GAC/BH,EAAEI,MAAMkG,OAAOD,EAAU,GACzBrG,EAAEuG,QAAQvC,KAAK7D,QAGfA,EAAKyC,OAAS,SAAC5C,EAAGC,GAASD,EAAE8B,OAAS,GACtC3B,EAAKkD,QAAUlD,EAAKyC,OACpBzC,EAAKqB,KAAO,iDAGdkB,EAAKkD,UAAYlD,EAAKkD,WAAa,EACnClD,EAAKkD,WAAa,EACdlD,EAAKkD,WAAa,GACpB7C,GAAQ/C,EAAGC,EAAK,2CAAW,0DAAcyC,KAI/CD,YAhCF,SAgCczC,EAAGC,EAAKyC,GAClBA,EAAKpB,WAAY,GAEnBqB,eAAgB,4BAGlB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,+HACNe,OAAO,oFACPC,UAAW,EACXY,OAVF,SAUSpD,EAAGC,EAAKyC,GACb,IAAI8D,EAAYxG,EAAE0D,KAAKrD,OACvBL,EAAEuG,QAAF,sBAAgBvG,EAAEuG,SAAlB,YAA8BvG,EAAE0D,OAChC1D,EAAE0D,KAAO,GACT1D,EAAE8B,OAAS0E,EACXlG,GAAON,EAAGC,EAAJ,sDAAqBuG,EAArB,WAEFA,GAAa,IACfzD,GAAQ/C,EAAGC,EAAK,yCAAY,6EAAkByC,IAGlDD,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,+FACNe,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb1C,EAAE0D,KAAF,sBAAa1D,EAAEuG,SAAf,YAA2BvG,EAAE0D,OAC7B1D,EAAEuG,QAAU,IAOd9D,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClBoB,GAAK9D,EAAGC,EAAK,IAEf0C,eAAgB,6DAElB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,oCACNe,OAAO,oFACPC,UAAW,EACXI,OAVF,SAUS5C,EAAGC,EAAKyC,GACbQ,EAAKlD,EAAGC,GACRiD,EAAKlD,EAAGC,IAEV0C,eAAgB,sBAChBF,YAfF,SAeczC,EAAGC,GACb,IAAK,IAAIuF,EAAE,EAAGA,EAAE,EAAGA,IACjBtC,EAAKlD,EAAGC,KAKd,CACEa,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,oCACNe,OAAO,oFACPC,UAAW,EACXY,OAVF,SAUSpD,EAAGC,GACRD,EAAE8B,OAAS,GAEbW,YAbF,SAaczC,EAAGC,EAAKyC,GAClB1C,EAAE8B,OAAS,GAEba,eAAgB,uBAGlB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,sEACNe,OAAO,kEACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACbA,EAAKnC,KAAO,EACZmC,EAAK7B,KAAO,EAEZ6B,EAAK2C,QAAS,EACd3C,EAAKS,YAAc,SAACnD,EAAGC,EAAKyC,GACtBA,EAAK2C,SACP3C,EAAKnC,KAAO,EACRmC,EAAK7B,IAAM,IACb6B,EAAK7B,IAAM,GAER6B,EAAKlC,GAAKkC,EAAK7B,KAAQ,IAC1B6B,EAAKpB,WAAY,GAEnBoB,EAAK2C,QAAS,KAIpB5C,YA5BF,SA4BczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,uFACLe,OAAO,2EACPK,OATF,SASS5C,EAAGC,EAAKyC,GACb,IAAIvC,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAIA,GAAKqB,MAAO,GAC1DvC,IACFA,EAAKI,KAAO,IAGhB8C,QAfF,SAeUrD,EAAGC,EAAKyC,GACduB,KAAKrB,OAAO5C,EAAGC,EAAKyC,IAEtBF,UAAW,EACXG,eAAgB,QAChBF,YApBF,SAoBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,IAKf,CACEM,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,gDACNe,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACbiB,EAAc3D,EAAGC,EAAK,IAExBwC,YAbF,SAaczC,EAAGC,EAAKyC,GAClBA,EAAK/C,MAAQ,GAEfgD,eAAgB,QAElB,CACE7B,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,oCACNe,OAAO,kEACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb1C,EAAE8B,OAAS,GAIbW,YAfF,SAeczC,EAAGC,EAAKyC,GAClB1C,EAAE8B,OAAS,GAEba,eAAgB,uBAElB,CACE7B,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,6HACNe,OAAO,oFACPC,UAAW,EACXY,OAVF,SAUSpD,EAAGC,EAAKyC,GACb,IAAI+D,EAASxG,EAAIgB,OAAOC,QAAQlB,EAAE0D,KAAKtC,QAAO,SAAAC,GAAC,OAAKA,EAAE4B,SAAW,CAAC,gBAAMyD,SAASrF,EAAEP,UAAS,GACxF2F,IACFA,EAAOxD,OAAOjD,EAAGC,EAAKwG,GACtBnG,GAAON,EAAGC,EAAJ,uBAAewG,EAAO3F,KAAtB,sCAGV2B,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClBQ,EAAKlD,EAAGC,GACRiD,EAAKlD,EAAGC,IAEV0C,eAAgB,uBAmClB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,8EACNe,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb,IAAIiE,EAAgB1G,EAAIgB,OAAOC,QAAQlB,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,OAAKA,EAAER,IAAM,MAAK,GAC1E,GAAI8F,EAAe,CACjB,IAAIC,EAAY5G,EAAEY,OAAOgD,QAAQ+C,GACjC3G,EAAEY,OAAO0F,OAAOM,EAAW,GAC3BtG,GAAON,EAAGC,EAAJ,UAAY0G,EAAc7F,KAA1B,0BAGV2B,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBM,EAAmBhD,EAAGC,EAAK,IAE7B0C,eAAgB,mCAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,4FACNe,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACb,IAAI8D,EAAYxG,EAAE0D,KAAKrD,OACvBqC,EAAKlC,IAAM,EAAIgG,GAEjB/D,YAdF,SAcczC,EAAGC,EAAKyC,GAClBA,EAAKlC,IAAM,EACXkC,EAAK9C,OAAS,GAEhB+C,eAAgB,mCAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAK,kEAAe1B,EAAe4F,MAAM,EAAE,GAAtC,yCACLnD,OAAO,2EACPC,UAAW,EACXY,OAVF,SAUSpD,EAAGC,EAAKyC,GACT6B,EAAavE,EAAGC,EAAK,CAAC,EAAE,EAAE,EAAE,MAC9BD,EAAEoC,OAAS,IAGfK,YAfF,SAeczC,EAAGC,EAAKyC,GAClB1C,EAAEoC,OAAS,GAEbO,eAAgB,mCAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,0HACNe,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUS5C,EAAGC,EAAKyC,GACb,IAAImE,EAAQ5G,EAAIgB,OAAOC,QAAQlB,EAAE0D,KAAKtC,QAAO,SAAAC,GAAC,OAAKA,EAAEuB,SAAW,CAAC,eAAM,2BAAQ,gBAAM8D,SAASrF,EAAEP,UAAS,GACrG+F,GACFA,EAAMjE,OAAO5C,EAAGC,EAAKyC,GACrBpC,GAAON,EAAGC,EAAJ,uBAAe4G,EAAM/F,KAArB,qCAGNR,GAAON,EAAGC,EAAK,6EAGnBoD,QApBF,SAoBUrD,EAAGC,EAAKyC,GACd,IAAIoE,EAAU7G,EAAIgB,OAAOC,QAAQlB,EAAE0D,KAAKtC,QAAO,SAAAC,GAAC,OAAKA,EAAEgC,UAAY,CAAC,eAAM,qBAAO,gBAAMqD,SAASrF,EAAEP,UAAS,GACvGgG,GACFA,EAAQzD,QAAQrD,EAAGC,EAAKyC,GACxBpC,GAAON,EAAGC,EAAJ,uBAAe6G,EAAQhG,KAAvB,qCAGNR,GAAON,EAAGC,EAAK,6EAGnBwC,YA9BF,SA8BczC,EAAGC,EAAKyC,GAClBQ,EAAKlD,EAAGC,IAEV0C,eAAgB,uBAKlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,8EACNe,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSjD,EAAGC,EAAKyC,GACT1C,EAAEI,MAAMC,OAAS,IACnBL,EAAEI,MAAMJ,EAAEI,MAAMC,OAAO,GAAKwE,OAAOC,OAAO,GAAI7E,EAAIgB,OAAOC,QAAQlB,EAAEI,MAAMsF,MAAM,EAAE1F,EAAEI,MAAMC,OAAO,IAAI,MAGxGoC,YAfF,SAeczC,EAAGC,EAAKyC,GAClB1C,EAAE0D,KAAKe,QAAQsC,GAAW/G,EAAGC,KAE/B0C,eAAgB,2DAGlB,CACE7B,KAAK,IACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,sDACNe,OAAO,0DACPU,OATF,SASSjD,EAAGC,GACR+G,GAAUhH,EAAGC,IAEfuC,UAAW,EACXC,YAbF,SAaczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,uHACNe,OAAO,2EACPc,QATF,SASUrD,EAAGC,EAAKyC,EAAM/B,GAEpB,IADA,IAAIiG,EAAY5G,EAAEY,OAAOgD,QAAQjD,GACjC,MAAc,CAACX,EAAEY,OAAOgG,EAAU,GAAI5G,EAAEY,OAAOgG,EAAU,IAAzD,eAA8D,CAAzD,IAAIK,EAAC,KACJA,IACFA,EAAEpG,KAAO6B,EAAKnC,OAIpBiC,UAAW,EACXC,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,GAEdoC,eAAgB,SA0BlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN4B,KAAM,4FACNe,OAAO,6FACPC,UAAW,EAEXa,QAXF,SAWUrD,EAAGC,EAAKyC,EAAM/B,GACpB,IAQI4E,EAAMvF,EAAEY,OAAOgD,QAAQjD,GAC3BX,EAAEY,OAAO2E,GATS,CAChBzE,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACR1B,IAAK,EACLS,WAAW,IAMfmB,YAxBF,SAwBczC,EAAGC,EAAKyC,GAClB,IAAIwE,EAAQlH,EAAEsC,MAAM6E,MAAK,SAAA9F,GAAC,MAAe,4BAAVA,EAAEP,QACjCd,EAAEI,MAAM4D,KAAKP,EAAgBzD,EAAGC,EAAJ,eAAaiH,KAErCxE,EAAKI,OAAS,GAChBC,GAAQ/C,EAAGC,EAAK,mDAAY,kFAAkByC,IAGlDC,eAAgB,0CAGlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,2EACRC,UAAW,EACXhB,KAAM,gDAENyB,OAXF,SAWSjD,EAAGC,EAAKyC,GACbmB,GAAkB7D,EAAGC,EAAKyC,IAG5BD,YAfF,SAeczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SA+BlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,2EACRC,UAAW,EACXhB,KAAM,yGAEN4B,OAXF,SAWSpD,EAAGC,EAAKyC,GACb,IADoB,IAAD,WACV8C,GACP,IAAIrF,EAAOH,EAAEI,MAAMoF,GACfzB,EAAW9D,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAGA,EAAEW,MAAO7B,EAAK6B,KAAK,GAAGU,EAAKI,OAAO,OAAO,GAC9F,GAAIiB,EAAU,CACZ/D,EAAEI,MAAMkG,OAAOd,EAAG,EAAG/B,EAAgBzD,EAAGC,EAAJ,eAAa8D,KACjD,IAAK,IAAIqD,EAAE,EAAGA,EAAEjH,EAAK2C,MAAOsE,IAC1BpB,GAAehG,EAAGC,EAAKD,EAAEI,MAAMoF,IAEjCxF,EAAEI,MAAMoF,GAAGlE,UAAYnB,EAAKmB,YARvBkE,EAAE,EAAGA,EAAExF,EAAEI,MAAMC,OAAQmF,IAAM,EAA7BA,IAYX7C,eAAgB,wBAElB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,GACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,2EACRC,UAAW,EACXhB,KAAM,2FACN4B,OAVF,SAUSpD,EAAGC,EAAKyC,GACb,IAAIvC,EAAI,eAAOF,EAAIgB,OAAOC,QAAQlB,EAAEsC,OAAO,IAC3CtC,EAAE0D,KAAKe,QAAQtE,GACf,IAAK,IAAIqF,EAAE,EAAGA,EAAG,EAAE9C,EAAKI,MAAQ0C,IAC9BQ,GAAehG,EAAGC,EAAKE,IAG3BwC,eAAgB,6BAKlB,CACE7B,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,2EACRC,UAAW,EACXhB,KAAM,2FACNyB,OAVF,SAUSjD,EAAGC,EAAKyC,GACb1C,EAAE0D,KAAKe,QAAP,eAAmBxE,EAAIgB,OAAOC,QAAQmG,GAAS,MAEjDjE,OAbF,SAaSpD,EAAGC,EAAKyC,GACb1C,EAAE0D,KAAKe,QAAP,eAAmBxE,EAAIgB,OAAOC,QAAQmG,GAAS,MAEjD1E,eAAgB,gEAChBF,YAjBF,SAiBczC,EAAGC,EAAKyC,GAClB1C,EAAE0D,KAAKe,QAAP,eAAmBxE,EAAIgB,OAAOC,QAAQmG,GAAS,OAMnD,CACEvG,KAAK,SACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,kEACRC,UAAW,EACXhB,KAAM,4DACNyB,OAVF,SAUSjD,EAAGC,EAAKyC,GACb,IACI4E,EAAarH,EAAIgB,OAAOC,QADV,CAAC,CAAC,iBAAQ,UAAW,CAAC,iBAAQ,WAAY,CAAC,iBAAQ,UAAW,CAAC,iBAAQ,WACxC,GAC7CqG,EAAUtH,EAAIgB,OAAOC,QAAQlB,EAAEwH,SAC/B/F,EAAS8F,EAAQ,GACrB7E,EAAKlB,KAAO8F,EAAW,GAAK7F,EAAO,GACnCiB,EAAK4E,EAAW,IAAM7F,EAAO,GAC7BiB,EAAKC,eAAiB4E,EAAQ,GAAG,GACjC7E,EAAKD,YAAc8E,EAAQ,GAAG,GAC9BjH,GAAON,EAAGC,EAAJ,mCAAiByC,EAAKlB,KAAtB,OAERiB,YArBF,SAqBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,GAEbmC,eAAgB,SAGlB,CACE7B,KAAK,2BACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,4CACRC,UAAW,EACXhB,KAAM,mCACNyB,OAVF,SAUSjD,EAAGC,GACR,IAAK,IAAIuF,EAAE,EAAGA,EAAE,EAAGA,IACjBxF,EAAE0D,KAAKe,QAAQgD,GAAuBzH,EAAGC,KAG7C0C,eAAgB,qBAChBF,YAhBF,SAgBczC,EAAGC,GACbD,EAAE0D,KAAKe,QAAQgD,GAAuBzH,EAAGC,OAMlCoH,EAAU,CACrB,CACEvG,KAAK,eACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,yFACRmF,WAAW,EACXlF,UAAW,EACXhB,KAAM,6HACN4B,OAXF,SAWSpD,EAAGC,EAAKyC,GACQ,GAAjB1C,EAAE0D,KAAKrD,SACT6C,EAAKlD,EAAGC,GACRyC,EAAKpB,WAAY,IAGrBqB,eAAgB,QAChBF,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,IAIf,CACEM,KAAK,eACLkB,KAAK,GACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,sEACRC,UAAW,EACXkF,WAAW,EACXlG,KAAM,oEACN4B,OAXF,SAWSpD,EAAGC,EAAKyC,GACb,IAAI/B,EAAQV,EAAIgB,OAAOC,QAAQlB,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,MAAe,gBAAVA,EAAEP,SAAgB,GACnEH,IACFX,EAAEY,OAAOZ,EAAEY,OAAOgD,QAAQjD,IAA1B,2BAAwC+B,GAAxC,IAA8CpB,WAAW,MAG7DqB,eAAgB,QAChBF,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,IAIf,CACEM,KAAK,2BACLkB,KAAK,EACLzB,IAAI,IACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,yIACRmF,WAAW,EACXlF,UAAW,EACXhB,KAAM,gDACNyB,OAXF,SAWSjD,EAAGC,EAAKyC,GACT1C,EAAEI,MAAMC,OAAS,EACnBL,EAAEI,MAAQJ,EAAEI,MAAMsF,MAAM,GAGxB1F,EAAEI,MAAQJ,EAAEI,MAAMsF,MAAM,EAAG1F,EAAEI,MAAMC,OAAO,IAG9CsC,eAAgB,gDAChBF,YApBF,SAoBczC,EAAGC,EAAKyC,GAClB1C,EAAE0D,KAAKe,QAAP,eAAmB/B,MAIvB,CACE5B,KAAK,2BACLkB,KAAK,GACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,uJACRC,UAAW,EACXkF,WAAW,EACXlG,KAAM,6DACNyB,OAXF,SAWSjD,EAAGC,EAAKyC,GACb,IAAK,IAAI8C,EAAE,EAAGA,EAAE,GAAIA,IAAK,CACvB,IAAI/D,EAASxB,EAAIgB,OAAOC,QAAQlB,EAAEwH,SAAS,GAC3C/F,EAAO,GAAGzB,EAAGC,EAAKyC,GAClBpC,GAAON,EAAGC,EAAK,gBAAMwB,EAAO,MAGhCkB,eAAgB,8CAChBF,YAnBF,SAmBczC,EAAGC,EAAKyC,GAClB,IAAIjB,EAASxB,EAAIgB,OAAOC,QAAQlB,EAAEwH,SAAS,GAC3C/F,EAAO,GAAGzB,EAAGC,EAAKyC,GAClBpC,GAAON,EAAGC,EAAK,gBAAMwB,EAAO,MAIhC,CACEX,KAAK,qBACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,iEACRC,UAAW,EACXkF,WAAW,EACXlG,KAAM,iFACNyB,OAXF,SAWSjD,EAAGC,EAAKyC,GACb,IAAIiF,EAAc,CAChB7G,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACR1B,IAAK,EACLS,WAAW,GAEbtB,EAAEY,OAAOoD,KAAT,eAAkB2D,IAClB3H,EAAEY,OAAOoD,KAAT,eAAkB2D,KAEpBhF,eAAgB,QAChBF,YAxBF,SAwBczC,EAAGC,EAAKyC,GAClBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,IAIf,CACEM,KAAK,iCACLkB,KAAK,EACLzB,IAAI,EACJC,GAAG,EACHb,KAAK,EACLC,MAAM,EACN2C,OAAQ,kDACRmF,WAAW,EACXlF,UAAW,EACXhB,KAAM,qKACN2B,YAXF,SAWcnD,EAAGC,EAAKyC,GAClB,IAAI6C,EAAMvF,EAAE0D,KAAKE,QAAQlB,IACpB6C,IACHvF,EAAE0D,KAAK6B,GAAP,2BAAkBtF,EAAIgB,OAAOC,QAAQlB,EAAEsC,OAAO,IAA9C,IAAkDa,YAAaT,EAAKS,YAAaR,eAAgBD,EAAKC,eAAgB+E,WAAU,MAGpI/E,eAAgB,qEAChBF,YAlBF,SAkBczC,EAAGC,EAAKyC,GAClBA,EAAKS,YAAYnD,EAAGC,EAAKyC,MClnFpBkF,GDwnFiBtF,EAAM0C,KAAI,SAAA3D,GAAC,kBAASA,EAAEP,SAAQ+G,KAAK,MCxnF1C,CACnB,CACE/G,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,6FAEV,CACEzB,KAAM,iCACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,uHACRf,KAAM,2DACNyB,OANF,SAMSjD,EAAGC,EAAKyC,GACb,IAAI/B,EAAQV,EAAIgB,OAAOC,QAAQlB,EAAEY,QAAQ,GACzCD,EAAMJ,KAAO,EACbI,EAAMH,IAAM,IAGhB,CACEM,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,4FACRf,KAAM,mHACN4B,OANF,SAMSpD,EAAGC,EAAKyC,GACb,IAAIvC,EAAOH,EAAEI,MAAMJ,EAAEI,MAAMC,OAAO,GAC9BF,IACFA,EAAKU,KAAO6B,EAAKnC,OAIvB,CACEO,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,4FACRf,KAAM,eACNyB,OANF,SAMSjD,EAAGC,EAAKyC,GACbA,EAAKpB,WAAY,IAGrB,CACER,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACRf,KAAM,+DACNyB,OANF,SAMSjD,EAAGC,EAAKyC,GACb,IAAIoF,EAAS,2BAAOpF,GAAP,IAAanC,IAAI,EAAGC,GAAG,IACpCR,EAAEY,OAAO0F,OAAOtG,EAAEY,OAAOP,OAAO,EAAG,EAAGyH,KAG1C,CACEhH,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,uHACRf,KAAM,eACNuG,UAAU,GAEZ,CACEjH,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACRf,KAAM,kEACNoB,OANF,SAMS5C,EAAGC,GACRD,EAAE8F,QAAU,IAGhB,CACEhF,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,4FACRf,KAAM,gIACN4B,OANF,SAMSpD,EAAGC,EAAKyC,GACb,IAAIsF,EAAOhI,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAgB,GAAXA,EAAEzB,SAC9BoI,EAAK3H,OAAS,IAChBJ,EAAIgB,OAAOC,QAAQ8G,GAAM,GAAGnH,KAAO6B,EAAKnC,OAI9C,CACEO,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACRf,KAAM,0EACNyB,OANF,SAMSjD,EAAGC,GACRA,EAAIgB,OAAOC,QAAQlB,EAAEY,QAAQ,GAAGL,KAAO,IAG3C,CACEO,KAAM,2BACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,8GACRwF,UAAU,EACVvG,KAAM,0IACN4B,OAPF,SAOSpD,EAAGC,EAAKyC,GACb,IADmB,EACfsF,EAAOhI,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAgB,GAAXA,EAAEzB,SADf,cAEFK,EAAIgB,OAAOC,QAAQ8G,GAAMtC,MAAM,EAAE,IAF/B,IAEnB,2BAAsD,SAC/C7E,KAAO6B,EAAKnC,KAHA,iCAQvB,CACEO,KAAM,iCACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,uHACRf,KAAM,qHACNyG,MANF,SAMQjI,EAAGC,EAAKyC,GACZ,IAAI6C,EAAMvF,EAAEI,MAAMC,OAAS,EACvBL,EAAEI,MAAMmF,KACV2C,EAAYlI,EAAGC,EAAK,QAASsF,EAAK7C,EAAKnC,IAAI,GAC3CD,GAAON,EAAGC,EAAJ,+CAAmBD,EAAEI,MAAMmF,GAAKzE,KAAhC,8BAA2C4B,EAAKnC,IAAI,EAApD,0BAKZ,CACEO,KAAM,2BACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,gIACRf,KAAM,iCACN2G,YAAY,GAGd,CACErH,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACRf,KAAM,eACN4G,SAAS,GAGX,CACEtH,KAAM,qBACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,qGACRf,KAAM,0FACNuG,UAAU,EACVK,SAAS,EACT/E,QARF,SAQUrD,EAAGC,EAAKyC,EAAMvC,GAChBA,EAAKU,IAAMV,EAAKK,KAClBR,EAAE8F,QAAU,KAKlB,CACEhF,KAAM,qBACNyB,OAAQ,qGACRhC,KAAM,EACNC,GAAI,EACJ2C,YALF,SAKcnD,EAAGC,EAAKyC,GACdA,EAAKnC,KAAO,IACdmC,EAAKnC,IAAM,KAKjB,CACEO,KAAM,iCACNyB,OAAQ,uHACRhC,KAAM,EACNC,GAAI,GACJgB,KAAM,eACNuG,UAAU,EACV5E,YAPF,SAOcnD,EAAGC,EAAKyC,GACdA,EAAKnC,KAAO,IACdmC,EAAKnC,IAAM,KAKjB,CACEO,KAAM,iCACNyB,OAAQ,mIACRhC,KAAM,EACNC,GAAI,EACJgB,KAAM,4FACNuG,UAAU,EACVE,MAPF,SAOQjI,EAAGC,EAAKyC,GAAO,IAAD,gBACD1C,EAAEI,OADD,IAClB,2BAA0B,SACnBS,KAAO,GAFI,iCAOtB,CACEC,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,4FACRf,KAAM,gDACNyG,MANF,SAMQjI,EAAGC,EAAKyC,GACZmB,GAAkB7D,EAAGC,EAAKyC,KAI9B,CACE5B,KAAM,2BACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,8GACRf,KAAM,oCACNyG,MANF,SAMQjI,EAAGC,EAAKyC,GACZ1C,EAAE8B,OAAS,IAIf,CACEhB,KAAM,uCACNP,IAAK,EACLC,GAAI,EACJuH,UAAU,EACVxF,OAAQ,gIACRf,KAAM,oCACNyG,MAPF,SAOQjI,EAAGC,EAAKyC,GACZ1C,EAAE8B,OAAS,IAIf,CACEhB,KAAM,eACNP,IAAK,EACLC,GAAI,EACJ+B,OAAQ,uHACRf,KAAM,sDACN4B,OANF,SAMSpD,EAAGC,EAAKyC,GACbsE,GAAUhH,EAAGC,IAEfkD,YATF,SAScnD,EAAGC,EAAKyC,GACdA,EAAKnC,IAAM,IACbmC,EAAKnC,IAAM,KAKjB,CACEO,KAAM,uCACNP,KAAM,EACNC,GAAI,EACJuH,UAAU,EACVxF,OAAQ,yIACRf,KAAM,yEACNyG,MAPF,SAOQjI,EAAGC,EAAKyC,GACZ1C,EAAEqI,MAAQ,GAEZlF,YAVF,SAUcnD,EAAGC,EAAKyC,GACdA,EAAKnC,KAAO,IACdmC,EAAKnC,IAAM,OCtQN+H,EAAW,CACtB,CACExH,KAAM,QACNU,KAAM,uBACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKI,KAAO,IAUhB,CACEO,KAAM,QACNU,KAAM,QACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKI,KAAO,EACZJ,EAAKK,IAAM,IAIf,CACEM,KAAM,WACNU,KAAM,6BACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAK6B,MAAQ,IAIjB,CACElB,KAAM,eACNU,KAAM,yFACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKoI,SAAU,EACS,iBAAbpI,EAAKqB,OACdrB,EAAKqB,MAAQ,sBAQnB,CACEV,KAAM,UACNU,KAAM,iDACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACbH,EAAE8B,OAAS,OAMnB,CACEhB,KAAM,gBACNU,KAAM,6DACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACbwD,EAAc3D,EAAGC,EAAK,QAM9B,CACEa,KAAM,gBACNU,KAAM,iDACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACb+C,EAAKlD,EAAGC,GACRiD,EAAKlD,EAAGC,QAMhB,CACEa,KAAM,gBACNU,KAAM,6DACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACb6C,EAAmBhD,EAAGC,EAAK,QAMnC,CACEa,KAAM,gBACNU,KAAM,6DACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACb6F,GAAehG,EAAGC,EAAKE,QAM/B,CACEW,KAAM,4BACNU,KAAM,6DACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACb4F,GAAe/F,EAAGC,GAClB8F,GAAe/F,EAAGC,QAM1B,CACEa,KAAM,sBACNU,KAAM,uIACNC,OAHF,SAGSzB,EAAGC,EAAKE,GAEbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACb,IAAI4D,EAAW9D,EAAIgB,OAAOC,QAAQlB,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAW,GAARA,EAAEW,SAAW,GAC9D+B,KACFA,EAAWN,EAAgBzD,EAAGC,EAAJ,eAAa8D,KAC9BvD,GAAK,EACdR,EAAEI,MAAM4D,KAAKD,SAoBvB,CACEjD,KAAM,gBACNU,KAAM,qFACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACbgE,GAAgBnE,EAAGC,QAM3B,CACEa,KAAM,eACNU,KAAM,wEACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAYxE,KAAK,CACpBlD,KAAMmD,KAAKnD,KACXW,OAFoB,SAEbzB,EAAGC,EAAKE,GACbH,EAAE8F,OAAS,OAMnB,CACEhF,KAAM,eACNU,KAAM,qEACNC,OAHF,SAGSzB,EAAGC,EAAKE,GACbA,EAAKqI,YAAL,sBAAuBrI,EAAKqI,aAA5B,YAA4CrI,EAAKqI,iB,cC9LhD,SAASC,EAAWC,EAAIC,GAC7B,IAAIC,EAAU,GAEd,IAAK,IAAIC,KAAKF,EACZC,EAAQC,GAAKH,EAAGC,EAAIE,GAAIA,GAG1B,OAAOD,EAiBF,IAAME,EAAb,WACE,WAAYC,GAIV,GAJiB,oBACjB9E,KAAK8E,KAAOA,EAEZ9E,KAAK+E,IAAM,EACQ,iBAARD,EACT,IAAK,IAAIvD,EAAE,EAAGA,EAAEuD,EAAK1I,OAAQmF,IAC3BvB,KAAK+E,KAAOD,EAAKE,WAAWzD,QAI9BvB,KAAK+E,IAAMD,EAXjB,qDAmBI,IAAI1H,EAA2B,IAAvB8D,KAAK+D,IAAIjF,KAAK+E,OAClBG,EAAS9H,EAAI8D,KAAKC,MAAM/D,GAE5B,OADA4C,KAAK+E,KAAO,EACLG,IAtBX,gCAyBY9H,GACR,OAAO8D,KAAKC,MAAM/D,EAAI4C,KAAKhD,YA1B/B,6BA6BSmI,GACL,IAAIC,EAAMD,EAAI/I,OACd,OAAO+I,EAAInF,KAAKqF,UAAUD,MA/B9B,8BAkCUzE,GAMN,IALA,IAAI2E,EAAQ3E,EAAKc,MAAM,GACnB8D,EAAW5E,EAAKvE,OAChBoJ,EAAW,EACXC,EAAW,IAAIC,MAAMH,GAElBA,GAAU,CACf,IAAII,EAAaJ,EAAWvF,KAAKhD,SAAY,EAC7CyI,EAASD,KAAcF,EAAMK,GAC7BL,EAAMK,GAAaL,IAAQC,GAG7B,OAAOE,MA9CX,KCpBMG,EAAW,4vBAAoKC,MAAM,KAErLC,EAAQ,4QAA0DD,MAAM,KAyBxEE,EAAM,+HAuRNC,EAAa,CAjPR,ueA0BE,2XAkBC,oVAmBH,qaAyCG,2UAkBF,uPAcD,2aA0DD,uVAkBI,8hBA+BRC,EAAY,CAAC,iEAClB,iEACA,4FACA,+JACA,oIACA,+EACA,6DACA,yDACA,qEACA,sCACA,yDACA,mDACA,iDACA,iDACA,oFACA,+BACA,6CACA,6CACA,mDACA,iGACA,mDACA,yFACA,qHACA,6EACA,6EACA,yDACA,2FACA,uHACA,mGACA,mEACA,qHACA,8EACA,iGACA,2CACA,6CACA,2CACA,yBACA,qCACA,+BACA,2CACA,2CACA,2CACA,8CAAgBlF,KAAI,SAAAmF,GAAQ,OAAIA,EAASL,MAAM,KAAK1I,QAAO,SAAAjB,GAAI,MAAY,IAARA,QAGpE,SAASiK,EAAgBC,GACvB,IAAIC,EAAe,CAAC,SAAK,4BACrBC,EAAYjI,EAAMlB,QAAO,SAAAC,GAAC,OAAMiJ,EAAa5D,SAASrF,EAAEP,SAC5D,OAAOuJ,EAAIG,OAAOD,GAAWzJ,KAGxB,SAAS2J,IACd,IAAIJ,EAAM,IAAIvB,EAAK3D,KAAKlE,UACxB,MAAO,IAAMoJ,EAAIG,OAAOX,GAAY,IAAMO,EAAgBC,GAGrD,SAASK,IACd,IAAIL,EAAM,IAAIvB,EAAK3D,KAAKlE,UACxB,OAAOoJ,EAAIG,OAAOT,GAASY,OAAOC,aAAa,GAAGP,EAAIf,UAAU,KAG3D,SAASuB,EAAgBR,EAAKvJ,EAAMgK,EAAQC,GACjD,IAAI3G,EAAQ0G,EAIZ,OAHIC,IACF3G,GAASiG,EAAIf,UAAUyB,EAASD,EAAS,IAEpC,CAAC1G,EAAOtD,GAgBjB,SAASkK,EAASpG,GAChB,IADsB,EAClBqG,EAAS,GADS,cAGLrG,GAHK,IAGtB,2BAAuB,CAAC,IAAfzE,EAAc,QACjB8K,EAAO9K,GACT8K,EAAO9K,IAAS,EAGhB8K,EAAO9K,GAAQ,GARG,8BAatB,OADY0E,OAAOqG,KAAKD,GAAQpF,OACnBb,KAAI,SAAAmG,GAAC,gBAAOF,EAAOE,GAAd,YAAoBA,MAAKtD,KAAK,MAYlD,SAASuD,EAAmBC,EAAUC,EAAQjB,GAC5C,IADiD,EAC7CzF,EAAO,GADsC,cAEnCyG,EAASvB,MAAM,OAFoB,IAEjD,2BAAoC,CAAC,IAC/B3J,EAD8B,QACrB2J,MAAM,KACnBlF,EAAKZ,KAAK6G,EAAgBR,EAAKlK,EAAK,GAAIoL,SAASpL,EAAK,IAAKoL,SAASpL,EAAK,OAJ1B,8BAOjD,OADAyE,EAAOyF,EAAImB,QA5Cb,SAAkBpC,GAChB,IADqB,EACjBxE,EAAO,GADU,cAGJwE,GAHI,IAGrB,2BACE,IADqB,IAAdjJ,EAAa,QACXqF,EAAE,EAAGA,EAAErF,EAAK,GAAIqF,IACvBZ,EAAKZ,KAAK7D,EAAK,IALE,8BASrB,OAAOyE,EAmCY6G,CAAS7G,IAAOc,MAAM,EAAG4F,GAkBvC,SAASI,EAAcC,GAC5B,IAAI/G,EAAO,GACPyF,EAAM,IAAIvB,EAAK6C,GAGnB/G,EAAI,sBAAOA,GAAP,YAAgBwG,EA5aH,iGA4aqC,EAAGf,KACzDzF,EAAI,sBAAOA,GAAP,YAAgBwG,EAvaH,+EAuaqC,EAAGf,KACzDzF,EAAI,sBAAOA,GAAP,YAAgBwG,EAAmBpB,EAAQ,EAAGK,KAQlD,IALA,IAAIgB,EAAWhB,EAAIG,OAAOP,GAItB2B,EAAa,IAHjBhH,EAAI,sBAAOA,GAAP,YAAgBwG,EAAmBC,EAAU,GAAIhB,MAG1BhK,OAClBmF,EAAE,EAAGA,EAAEoG,EAAYpG,IAC1BZ,EAAKZ,KAAKoG,EAAgBC,IAG5B,OAAOW,EAASpG,GAGX,SAASiH,EAAiBF,GAC/B,IAAI/G,EAAO,GACPyF,EAAM,IAAIvB,EAAK6C,GAGnB/G,EAAI,sBAAOA,GAAP,YAAgBwG,EAlcH,iGAkcqC,EAAGf,KACzDzF,EAAI,sBAAOA,GAAP,YAAgBwG,EA7bH,+EA6bqC,EAAGf,KACzDzF,EAAI,sBAAOA,GAAP,YAAgBwG,EAAmBpB,EAAQ,EAAGK,KAOlD,IADA,IAAIuB,EAAa,IAHjBhH,EAAI,sBAAOA,GAAP,YA9CN,SAA6B0G,EAAQjB,GACnC,IADwC,EACpCzF,EAAO,GACPkH,EAAOzB,EAAImB,QAAQtB,GAFiB,cAInB4B,GAJmB,IAIxC,2BAA2B,CAAC,IAAnB3B,EAAkB,QAEzB,IADAvF,EAAI,sBAAOA,GAAP,YAAgBuF,KACX9J,QAAUiL,EACjB,OAPoC,8BAWxC,OAAOjB,EAAImB,QAAQ5G,GAAMc,MAAM,EAAG4F,GAmCdS,CAAoB,GAAI1B,MAGjBhK,OAClBmF,EAAE,EAAGA,EAAEoG,EAAYpG,IAC1BZ,EAAKZ,KAAKoG,EAAgBC,IAG5B,OAAOW,EAASpG,GAGX,SAASoH,EAAYC,GAC1B,IAAIC,EAAUD,EAAUnC,MAAM,MAAM9E,KAAI,SAAA3D,GAAC,OAAEkK,SAASlK,EAAEyI,MAAM,KAAK,OAC7DqC,EAAQF,EAAUnC,MAAM,MAAM9E,KAAI,SAAA3D,GAAC,OAAGA,EAAEyI,MAAM,KAAK,MACvDoC,EAAUA,EAAQ9K,QAAO,SAAAC,GAAC,OAAK+K,MAAM/K,MACrC,IAAIgL,EAAY,YAAO,IAAIC,IAAIH,IAC/B,GAAIA,EAAM9L,QAAUgM,EAAahM,OAC/B,OAAO,EAGT,IADA,IACA,MADmB,CAAC,2BAAQ,UAC5B,eAA+B,CAA1B,IAAIF,EAAI,KACX,GAAIgM,EAAMzF,SAASvG,GACjB,OAAO,EAX0B,oBAcvB+L,GAduB,IAcrC,2BAAuB,CACrB,GADqB,QACb,EACN,OAAO,GAhB0B,8BAoBrC,QADgBK,IAAEC,IAAIN,GACN,ICjfX,SAAS1I,EAAKxD,EAAGC,EAAKwM,EAAIC,EAAInH,GACnC,IAAIoH,EAASpH,GAAO,EAChBpF,EAAOH,EAAEyM,GAAInG,OAAOqG,EAAQ,GAAG,GAEnC,OADA3M,EAAE0M,GAAI1I,KAAK7D,GACJA,EAGF,SAASuB,EAAQ1B,EAAGC,EAAK+B,GAC9B,OAAIhC,EAAEoC,OAASJ,GACbhC,EAAEoC,OAASJ,GACJ,IAIP1B,GAAON,EAAGC,EAAK,6BACR,GAIJ,SAAS0D,EAAc3D,EAAGC,EAAKmE,GAGpC,IAFA,IAAIwI,EAAS,GAEJpH,EAAE,EAAGA,EAAEpB,EAAOoB,IAAK,CAC1B,IAAInB,EAAWpE,EAAIgB,OAAOqD,IAAI,GAAG,EACjCtE,EAAEmC,UAAUkC,IAAa,EACzBuI,EAAO5I,KAAKK,GAGdrE,EAAE4M,OAASA,EAGN,SAASrI,EAAavE,EAAGC,EAAK4B,GAEnC,IADA,IAAIgB,EAAQ,EACH2C,EAAE,EAAGA,EAAE,EAAGA,IACbxF,EAAEmC,UAAUqD,GAAK3D,EAAa2D,KAChC3C,GAAShB,EAAa2D,GAAKxF,EAAEmC,UAAUqD,IAI3C,GAAIxF,EAAEmC,UAAU,GAAKU,EAEnB,OADAvC,GAAON,EAAGC,EAAK,6BACR,EAIP,IAAK,IAAIuF,EAAE,EAAGA,EAAE,EAAGA,IACjBxF,EAAEmC,UAAUqD,IAAM3D,EAAa2D,GAE3BxF,EAAEmC,UAAUqD,GAAK,IACnBxF,EAAEmC,UAAU,IAAMnC,EAAEmC,UAAUqD,GAC9BxF,EAAEmC,UAAUqD,GAAK,GAMrB,OAFAxF,EAAE4M,OAAS,IAEJ,EAIX,SAASC,EAAI7M,EAAGC,EAAKE,GACnB,OAAKA,EAAKmB,YACRnB,EAAKmB,WAAY,GACV,GA0BX,SAASwL,EAAI9M,EAAGC,EAAK2E,EAAMW,GACzB,IAAIpF,EAAOH,EAAE4E,GAAMW,GAEnB/B,EAAKxD,EAAGC,EAAK2E,EADU,SAARA,EAAmB,UAAY,WAClBW,GAC5BjF,GAAON,EAAGC,EAAJ,UAAYE,EAAKW,KAAjB,wBACFX,EAAK8H,OACP9H,EAAK8H,MAAMjI,EAAGC,EAAKE,GAIhB,SAAS+H,EAAYlI,EAAGC,EAAK2E,EAAMW,EAAK1E,GAC7C,IAAIV,EAAOH,EAAE4E,GAAMW,GAEfpF,IAEFA,EAAKU,IAAMV,EAAKU,KAAO,EACvBV,EAAKU,KAAOA,EACZP,GAAON,EAAGC,EAAJ,UAAYE,EAAKW,KAAjB,wBAA2BD,EAA3B,uBAEFV,EAAKU,KAAOV,EAAKK,KAInBL,EAAKmB,WAAY,IAKhB,SAAS0B,EAAmBhD,EAAGC,EAAKqL,GACzC,IAAI3K,EAAQV,EAAIgB,OAAOC,QAAQlB,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,OAAKA,EAAER,IAAMQ,EAAEb,OAAM,GACrE,GAAIG,EAAO,CACT,IAAI4E,EAAMvF,EAAEY,OAAOgD,QAAQjD,GAC3BuH,EAAYlI,EAAGC,EAAK,SAAUsF,EAAK+F,IAUhC,SAAS7H,EAAgBzD,EAAGC,EAAKE,GAOtC,OANAA,EAAKU,IAAM,EACXV,EAAK2C,MAAQ3C,EAAK2C,OAAS,OACNiK,GAAjB5M,EAAKkE,WACPlE,EAAKkE,SAAYpE,EAAIgB,OAAOqD,IAAI,GAAK,GAEvCnE,EAAKmB,UAAYtB,EAAEgN,gBACZ7M,EAGF,SAAS+C,EAAKlD,EAAGC,GAElBD,EAAEiN,kBAAqBjN,EAAE0D,KAAKrD,QAAU,EAC1CC,GAAON,EAAGC,EAAK,oDAIbD,EAAE4E,KAAKvE,OAAS,GAClBL,EAAE0D,KAAKe,QAAQzE,EAAE4E,KAAKsI,OAoEnB,SAASvL,EAAa3B,EAAGC,GAC9BD,EAAEmN,OAASlN,EAAIgB,OAAOC,QAAQlB,EAAEoN,OAAO1H,MAAM,EAAG,GAIlD,SAAqB1F,GACnBA,EAAEmN,OAASnN,EAAEmN,OAAOtH,MAAK,SAACxE,EAAEgM,GAAH,OAAQhM,EAAEQ,aAAa+B,QAAQ,GAAGyJ,EAAExL,aAAa+B,QAAQ,MAJlF0J,CAAYtN,GAOd,SAASuN,GAAcvN,GACrBA,EAAEmB,SAAWnB,EAAEmB,SAAS0E,MAAK,SAACxE,EAAEgM,GAAH,OAAQhM,EAAEmM,SAASH,EAAEG,YAgC7C,SAASxG,GAAUhH,EAAGC,GAC3B,GAAID,EAAEyN,MAAMpN,OAAS,EAAG,CACtB,IAAIM,EAAQ6C,EAAKxD,EAAGC,EAAK,QAAS,UAKlC,GAJAU,EAAMW,UAAYtB,EAAE0N,sBACpB/M,EAAME,IAAM,EACZF,EAAMyH,QAAUzH,EAAMyH,UAAW,EACjC9H,GAAON,EAAGC,EAAJ,UAAYU,EAAMG,KAAlB,kBACFH,EAAMoH,SAAU,CAClB,IAAI4F,EAcH,SAAqB3N,EAAGC,GAC7B,GAAID,EAAE4N,WACJ,OAAO,EAGT,IAAIvE,EAAMrJ,EAAEY,OAAOP,OAEfwN,GADQ7N,EAAEY,OAAOyI,EAAI,GACVrJ,EAAEY,OAAOyI,EAAI,IAExBsE,GAAQ,GACD,GAAPtE,GAGKwE,EAAS9F,YAFhB4F,GAAQ,GAMNA,GACF3N,EAAEY,OAAOsM,MACTlG,GAAUhH,EAAGC,IAGbD,EAAEY,OAAO0F,OAAO+C,EAAI,EAAG,GAGzB,OAAOsE,EAvCSG,CAAY9N,EAAGC,GACvBU,EAAMsC,SAAW0K,GACnBhN,EAAMsC,OAAOjD,EAAGC,EAAKU,QAInBA,EAAMsC,QACRtC,EAAMsC,OAAOjD,EAAGC,EAAKU,IAmCtB,SAASoG,GAAW/G,EAAGC,GAC5B,IAAIU,EAAQkE,OAAOC,OAAO,GAAI7E,EAAIgB,OAAOC,QAAQlB,EAAEyN,OAAO,IAmB1D,MAJyB,iBAdzB9M,EAAK,2BACAA,GADA,IAEH+G,WAAW,EACX1F,KAAM,EACNrC,KAAM,EACNC,MAAO,EACP4C,UAAW,EACXG,eAAgB,QAChB0B,SAAUpE,EAAIgB,OAAOqD,IAAI,GAAG,EAC5B7B,YAAa,SAACzC,EAAGC,EAAKyC,GACpBA,EAAKnC,KAAO,EACZmC,EAAKlC,IAAM,MAGEgB,OACfb,EAAMa,KAAOb,EAAMa,KAAKuM,QAAQ,eAAM,gBACtCpN,EAAMa,KAAOb,EAAMa,KAAKuM,QAAQ,eAAM,iBAEjCpN,EAGF,SAAS8G,GAAuBzH,EAAGC,GACxC,IAAIE,EAAO,CACT6N,UAAU,EACVhM,KAAM/B,EAAIgB,OAAOqD,IAAI,IAAI,EACzB/D,IAAKN,EAAIgB,OAAOqD,IAAI,IAAI,EACxB9D,GAAIP,EAAIgB,OAAOqD,IAAI,IACnB3E,KAAMM,EAAIgB,OAAOqD,IAAI,GACrB1E,MAAOK,EAAIgB,OAAOqD,IAAI,GAAG,EACzB9B,UAAW,EACX6B,SAAUpE,EAAIgB,OAAOqD,IAAI,GAAG,EAC5B9C,KAAM,IAGJyM,EAAc,CAChB,CAAC,iBAAQ,UACT,CAAC,iBAAQ,UACT,CAAC,iBAAQ,WACT,CAAC,iBAAQ,UACT,CAAC,iBAAQ,UAEXA,EAAchO,EAAIgB,OAAOC,QAAQ+M,GAAavI,MAAM,EAAE,GAGtD,IAFA,IAAI6B,EAAUtH,EAAIgB,OAAOC,QAAQlB,EAAEwH,SAE1BhC,EAAE,EAAGA,EAAE,EAAGA,IACjBrF,EAAKqB,KAAKwC,KAAV,UAAkBiK,EAAYzI,GAAG,IAAjC,OAAsC+B,EAAQ/B,GAAG,KACjDrF,EAAK8N,EAAYzI,GAAG,IAAM+B,EAAQ/B,GAAG,GAEvCrF,EAAKqB,KAAO,CAACrB,EAAKqB,KAAK,GAAI,6BAAOrB,EAAKqB,KAAK,IAE5CrB,EAAKwC,eAAiB4E,EAAQ,GAAG,GACjCpH,EAAKsC,YAAc8E,EAAQ,GAAG,GAE9B,IAAI2G,EAAQjO,EAAIgB,OAAOC,QAAQlB,EAAEsC,OAAO,GAOxC,OANAnC,EAAKW,KAAOoN,EAAMpN,KAAKgJ,MAAM,IAAIqE,UAAUtG,KAAK,IAC/B,KAAb1H,EAAKW,OACPX,EAAKW,KAAO,KAEdX,EAAKoC,OAAS2L,EAAM3L,OAEbpC,EA+BF,SAAS6F,GAAehG,EAAGC,EAAKE,GACrCA,EAAK2C,MAAQ3C,EAAK2C,OAAS,EAC3B3C,EAAK2C,OAAS,EACV3C,EAAKsC,aACPtC,EAAKsC,YAAYzC,EAAGC,EAAKE,GAItB,SAASgG,GAAmBnG,EAAGC,GACpC,OAAOD,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAMA,EAAEC,aAAYjB,OAoCtC,SAAS0F,GAAe/F,EAAGC,GAChC,IAAIE,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAE0D,MAAM,GAElCvD,GACF6F,GAAehG,EAAGC,EAAKE,GAIpB,SAASmD,GAAqBtD,EAAGC,GACtC,IAAImO,EAAcpO,EAAEY,OAAOQ,QAAO,SAAAC,GAAC,QAAOA,EAAEC,WAAWD,EAAE8G,eACrDiG,EAAY/N,OAAS,IACvBJ,EAAIgB,OAAOC,QAAQkN,GAAa,GAAG9M,WAAY,GAI5C,SAASuC,GAAkB7D,EAAGC,EAAKyC,GACxC,IAAI2L,EAAkBrO,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAKA,EAAEC,WAAcD,GAAKqB,KAC5D4L,EAAiBD,EAAgBjN,QAAO,SAAAC,GAAC,OAAM,CAACqB,EAAK5B,KAAM,eAAM,qBAAO,2BAAQ,qBAAO,eAAM,gBAAM4F,SAASrF,EAAEP,SAIlH,GAH+B,GAA1BuN,EAAgBhO,QAA0C,GAAzBiO,EAAejO,QACnDC,GAAON,EAAGC,EAAK,oGAEbqO,EAAejO,OAAS,EAAG,CAC7B,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQoN,GAAgB,GAE9C,GADAnO,EAAKoO,YAAcpO,EAAKoO,aAAe,EACnCpO,EAAKoO,aAAe,EAEtB,YADAjO,GAAON,EAAGC,EAAJ,UAAYE,EAAKW,KAAjB,gDAGRX,EAAKmB,WAAY,EACjBnB,EAAKoO,aAAe,EACpBjO,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,QAoBvB,SAASgD,GAAK9D,EAAGC,EAAKqL,GAE3B,IAQInL,EARsBH,EAAEI,MAAMyF,MAAK,SAACxE,EAAEgM,GACxC,OAAIhM,EAAER,KAAOwM,EAAExM,IACNwM,EAAExM,IAAMQ,EAAER,IAGVQ,EAAEb,GAAG6M,EAAE7M,MAGa,GAQ/B,OAPIL,IACFA,EAAKU,KAAOyK,EACRnL,EAAKU,IAAM,IACbV,EAAKK,IAAML,EAAKU,IAChBV,EAAKU,IAAM,IAGRV,EAGF,SAASgE,GAAgBnE,EAAGC,GACjC,IAAIe,EAAK,eAAQf,EAAIgB,OAAOC,QAAQlB,EAAE4B,QAAQ,IAC9CZ,EAAMwN,OAAQ,EACdxO,EAAEmB,SAASsD,QAAQzD,GACnBuM,GAAcvN,GAwDhB,SAASyO,GAAWzO,EAAGC,GACrB,IAD0C,IAAhBG,EAAe,uDAAT,QACvBoF,EAAExF,EAAEI,GAAOC,OAAO,EAAGmF,GAAG,EAAGA,IAAK,CACvC,IAAIrF,EAAOH,EAAEI,GAAOoF,GAChBrF,EAAKK,GAAKL,EAAKU,KAAO,GACxBiM,EAAI9M,EAAGC,EAAKG,EAAOoF,IA4BlB,SAASkJ,GAASzC,GAKvB,IAJA,IAAI0C,EF9lBC,SAAiBvF,GACtB,IAD2B,EACvBR,EAAU,GADa,cAGVQ,GAHU,IAG3B,2BAAsB,CAAC,IAAdwF,EAAa,QACpBhG,EAAQgG,EAAK9N,MAAQ8N,GAJI,8BAO3B,OAAOhG,EEulBSiG,CAAQvM,GACpBsC,EAAO,GAEPa,EAAQwG,EAAUnC,MAAM,MACnBtE,EAAE,EAAGA,EAAEC,EAAMpF,OAAQmF,IAAK,CACjC,IACIsJ,EADOrJ,EAAMD,GACIsE,MAAM,KAC3B,GAAIgF,EAAUzO,QAAU,EAAG,CACzB,IAAIiL,EAASC,SAASuD,EAAU,KAAO,EACnCC,EAAcJ,EAAUG,EAAU,IAEtC,GAAIC,EAAa,CAEfA,EAAY1K,SAAWmB,EAAI,EAC3B,IAAK,IAAI4B,EAAE,EAAGA,EAAEkE,EAAQlE,IACpBxC,EAAKZ,KAAKa,OAAOC,OAAO,GAAIiK,MAMtC,OAAOnK,EAiCF,SAAStE,GAAON,EAAGC,EAAK+O,GAC7BhP,EAAEiP,SAASxK,QAAQuK,GAOd,SAASjM,GAAQ/C,EAAGC,EAAKiP,EAAkBC,EAAkBhP,GAC9DA,IAASH,EAAEoP,aAAajP,EAAKW,QAC/BuO,MAAM,6BAAD,OAAUH,EAAV,aAA+BC,IACpCnP,EAAEoP,aAAajP,EAAKW,OAAQ,GAWzB,SAASwO,GAAetP,EAAGC,GAC9BD,EAAE0D,KAAO,GACT1D,EAAEI,MAAQ,GAEVJ,EAAE4E,KAAO,GAIT5E,EAAEyN,MAAQ,GACVzN,EAAEoN,MAAQ,GAEVpN,EAAEY,OAAS,GACXZ,EAAEuG,QAAU,GACZvG,EAAEuP,SAAW,GAEbvP,EAAEmN,OAAS,GACXnN,EAAEmB,SAAW,CAACI,GAEdvB,EAAEwP,MAAQ,GAEVxP,EAAEoC,MAAQ,EACVpC,EAAEmC,UAAY,CAAC,EAAG,EAAG,EAAG,GAExBnC,EAAE8B,MAAQ,EACV9B,EAAE8F,OAAS,EACX9F,EAAEqI,KAAO,GACTrI,EAAEyP,WAAa,EACfzP,EAAE0P,gBAAkB,EAEpB1P,EAAEkE,WAAa,GACflE,EAAE2P,WAAa,GACf3P,EAAE4P,YAAc,GAChB5P,EAAE6P,UAAY,GACd7P,EAAE8P,iBAAmB,GAErB9P,EAAEgN,iBAAkB,EACpBhN,EAAE0N,uBAAwB,EAE1B1N,EAAEiP,SAAW,CAAC,8EACdjP,EAAEoP,aAAe,GAEjBpP,EAAE+P,SAAU,EACZ/P,EAAE4M,OAAS,GACX5M,EAAEgQ,MAAQ,SACVhQ,EAAEiQ,UAAY,EAEdjQ,EAAEsC,MAAQA,EAAMoD,MAAM,GACtB,IAAI4E,EAAe,CAAC,SAAK,4BACzBtK,EAAEsC,MAAQtC,EAAEsC,MAAMlB,QAAO,SAAAC,GAAC,OAAKiJ,EAAa5D,SAASrF,EAAEP,SACvD,IAjDmC,EAiD/ByG,EAAU,GAjDqB,cAkDrBjF,EAAMlB,QAAO,SAAAC,GAAC,MAAqB,iBAAVA,EAAEG,MAAgC,4BAAVH,EAAEP,SAlD9B,IAkDnC,2BAAoF,CAAC,IAA5EqK,EAA2E,QAC9E3J,EAAO2J,EAAE3J,KAAKsI,MAAM,KAAKpE,MAAM,GAAGmC,KAAK,IACvCsD,EAAElI,QACJsE,EAAQvD,KAAK,CAACxC,EAAM2J,EAAElI,SAEpBkI,EAAEvI,QACJ2E,EAAQvD,KAAK,CAACxC,EAAM2J,EAAEvI,SAEpBuI,EAAE/H,QACJmE,EAAQvD,KAAK,CAACxC,EAAM2J,EAAE/H,UA3DS,8BA8DnCpD,EAAEwH,QAAUD,EACZvH,EAAE4B,OAAF,YAAeA,GAEfsO,QAAQC,IAAI,4BAiDhB,SAASC,GAAmBpQ,EAAGC,GAI7BD,EAAEqQ,WAAapQ,EAAIgB,OAAOC,QAAQlB,EAAEsQ,MACpCtQ,EAAEuQ,SAAWtQ,EAAIgB,OAAOC,QAAQoH,GAAU5C,MAAM,EAAE,GAGlD1F,EAAEwQ,cAAgB,EACdxQ,EAAEwQ,cAAgB,IACpBxQ,EAAEyQ,kBAAmB,GAelB,IAAMC,GAAK,CAChBC,MAnJK,SAAe1Q,GAClB,IAAMD,EAAI,GAGV,OAFAsP,GAAetP,EAAGC,GAEXD,GAiJT4Q,MAAO,CACLtB,kBACAuB,SAhMJ,SAAkB7Q,EAAGC,EAAK6Q,GACxBjM,OAAOC,OAAO9E,EAAG8Q,IAgMfC,QAnsBG,SAAiB/Q,EAAGC,EAAK+Q,GAAO,IAAD,gBACtBA,GADsB,IACpC,2BAAoB,SAChBvP,OAAOzB,EAAGC,IAFsB,gCAosBlCgR,gBAhPJ,SAAyBjR,EAAGC,GAE1B,IAAK,IAAIuF,EAAE,EAAGA,EAAE,EAAGA,IACjBtC,EAAKlD,EAAGC,GAGV,IAAK,IAAIuF,EAAE,EAAGA,EAAE,EAAGA,IACjBwB,GAAUhH,EAAGC,GAGf0B,EAAa3B,EAAGC,GAEhBiQ,QAAQC,IAAI,kBACZnQ,EAAE+P,SAAU,EACZ9P,EAAIiR,OAAOC,WAmOTC,SAlqBG,SAAkBpR,EAAGC,EAAKoR,GAC/B,IAAIC,EAAYtR,EAAE0D,KAAKtC,QAAO,SAACC,EAAGkE,GAAJ,OAAY8L,EAAQ9L,MAElD,GADAvF,EAAE0D,KAAO1D,EAAE0D,KAAKtC,QAAO,SAACC,EAAGkE,GAAJ,OAAa8L,EAAQ9L,MACxCvF,EAAE0D,KAAKrD,OAAS,EAAG,CAErB,IADA,IAAIkR,EAAW,EAAIvR,EAAE0D,KAAKrD,OACjBmF,EAAI,EAAGA,EAAI+L,EAAU/L,IAC5BtC,EAAKlD,EAAGC,GAEVD,EAAE4E,KAAO3E,EAAIgB,OAAOC,QAAX,sBAAuBlB,EAAE4E,MAAzB,YAAkC0M,KAI7CtR,EAAE0D,KAAF,sBAAa1D,EAAE4E,KAAKxD,QAAO,SAAAjB,GAAI,OAAIA,EAAKoI,YAAxC,YAAqDvI,EAAE0D,QAupBrDR,OACAsO,KArpBJ,SAAcxR,EAAGC,EAAKsF,GACpB,IAAIpF,EAAOH,EAAE0D,KAAK6B,GAElB,GAAIvF,EAAEiN,kBAAqBjN,EAAEI,MAAMC,QAAU,EAC3CC,GAAON,EAAGC,EAAK,qEAIjB,GAAIyB,EAAQ1B,EAAGC,EAAKE,EAAK6B,MAAO,CAC9BwB,EAAKxD,EAAGC,EAAK,OAAQ,QAASsF,GAC9B9B,EAAgBzD,EAAGC,EAAKE,GACxBG,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,OAHI,oBAIhBd,EAAEkE,YAJc,IAI9B,2BAA4B,EAC1BuN,EAD0B,SACxBzR,EAAGC,EAAKE,IALkB,8BAU9B,GAHIA,EAAK8C,QACP9C,EAAK8C,OAAOjD,EAAGC,EAAKE,GAElBA,EAAKqI,YAAa,CAAC,IAAD,gBACFrI,EAAKqI,aADH,IACpB,2BAAoC,SAC5B/G,OAAOzB,EAAGC,EAAKE,IAFH,kCAooBtBR,KA5nBJ,SAAcK,EAAGC,EAAKsF,GACpB,IAAIpF,EAAOH,EAAEI,MAAMmF,GAEfsH,EAAI7M,EAAGC,EAAKE,IAAqB,UAAXH,EAAEgQ,QAC1BrM,EAAc3D,EAAGC,EAAKE,EAAKR,MAC3BW,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,kBACFX,EAAKyC,QACPzC,EAAKyC,OAAO5C,EAAGC,EAAKE,KAsnBtBuR,IA7bJ,SAAa1R,EAAGC,EAAKsF,GACnB,IAAIpF,EAAOH,EAAEI,MAAMmF,GAEfsH,EAAI7M,EAAGC,EAAKE,IAAqB,UAAXH,EAAEgQ,QAC1B1P,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,kBACNX,EAAKiD,OAAOpD,EAAGC,EAAKE,KAybpBqC,UAzZG,SAAmBxC,EAAGC,EAAKsF,GAChC,IAAIpF,EAAOH,EAAEI,MAAMmF,GACf1D,EAAe,CAAC,EAAE,EAAE,EAAE,GAG1B,GAFAA,EAAa1B,EAAKkE,UAAYlE,EAAKqC,UAE/BxC,EAAE2R,mBACOjQ,EAAQ1B,EAAGC,EAAK,GAEzB,OAIAsE,EAAavE,EAAGC,EAAK4B,IACvBmE,GAAehG,EAAGC,EAAKE,IA6YvByR,KA1aG,SAAc5R,EAAGC,GAItB,IAHA,IAAI4R,EAAa7R,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAMA,EAAEC,aACrC4E,EAAiB2L,EAAWxR,OAEvBmF,EAAE,EAAGA,EAAEU,EAAgBV,IAC5BtC,EAAKlD,EAAGC,GACRD,EAAEoC,OAAS,EANY,oBASVyP,GATU,IAS3B,2BAA6B,CAAC,IAArB1R,EAAoB,QACvBA,EAAK8F,QACP9F,EAAK8F,OAAOjG,EAAGC,EAAKE,IAXG,gCA2azB2R,SApnBJ,SAAkB9R,EAAGC,EAAK8R,EAAM/I,GAC9BhJ,EAAE+R,GAAQ/I,GAonBRrH,eACAqQ,YArmBJ,SAAqBhS,EAAGC,EAAKsF,GAC3B,IAAIvE,EAAQhB,EAAEmN,OAAO5H,GAEjBhB,EAAavE,EAAGC,EAAKe,EAAMa,gBAC7B7B,EAAEmC,UAAUnB,EAAMe,SAAW,EAC7B/B,EAAE8B,OAASd,EAAMc,MACjB9B,EAAEmB,SAAS6C,KAAX,eAAoBhE,EAAEmN,OAAO7G,OAAOf,EAAK,GAAG,KAC5CjF,GAAON,EAAGC,EAAK,4BACfsN,GAAcvN,KA8lBdiS,SA1lBJ,SAAkBjS,EAAGC,EAAKsF,EAAKrF,EAAgBQ,GAC7C,IAAIM,EAAQhB,EAAEmB,SAASoE,GAEnBsH,EAAI7M,EAAGC,EAAKe,UAA0B+L,GAAd/L,EAAMgB,MAAuBuC,EAAavE,EAAGC,EAAKe,EAAMgB,QAClFhB,EAAMS,OAAOzB,EAAGC,EAAKC,EAAgBQ,IAulBrC2B,QAnlBJ,SAAiBrC,EAAGC,GAClB,IADuB,EACnBiS,EAAiBlS,EAAEmB,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEgB,WADvB,cAEL6P,GAFK,IAEvB,2BAAkC,CAAC,IAA1BlR,EAAyB,QAC5B6L,EAAI7M,EAAGC,EAAKe,IACdA,EAAMS,OAAOzB,EAAGC,IAJG,gCAolBrB+G,aACAmL,MAxdJ,SAAenS,EAAGC,EAAKmS,EAAMC,GAC3B,GAAID,EAAO,GAAKA,GAAQpS,EAAEI,MAAMC,QAAUgS,EAAO,GAAKA,GAAQrS,EAAEY,OAAOP,OACrE6P,QAAQC,IAAI,oBADd,CAKA,IAAIhQ,EAAOH,EAAEI,MAAMgS,GACfzR,EAAQX,EAAEY,OAAOyR,GAEjBxF,EAAI7M,EAAGC,EAAKE,IAAqB,UAAXH,EAAEgQ,QAC1B1P,GAAON,EAAGC,EAAJ,uBAAeE,EAAKW,KAApB,kBACNoH,EAAYlI,EAAGC,EAAK,SAAUoS,EAAMlS,EAAKI,KACrCJ,EAAKkD,SACPlD,EAAKkD,QAAQrD,EAAGC,EAAKE,EAAMQ,MA4c7B8N,cACA6D,UApUJ,SAAmBtS,EAAGC,GACpBwO,GAAWzO,EAAGC,EAAK,UACnBD,EAAEgQ,MAAQ,SAmURuC,UAhUG,SAAmBvS,EAAGC,EAAKsF,GAChC,IAAI5E,EAAQX,EAAEY,OAAO2E,GAErB,GAAIsH,EAAI7M,EAAGC,EAAKU,GAEd,GAAIA,EAAMyC,SAAYzC,EAAMyH,QAC1BzH,EAAMyC,OAAOpD,EAAGC,EAAKU,GACrBL,GAAON,EAAGC,EAAJ,UAAYU,EAAMG,KAAlB,oDAGH,CACH,IAAI0R,EAtdH,SAAqBxS,EAAGC,EAAKU,GAClC,IAAI4E,EAAMvF,EAAEY,OAAOgD,QAAQjD,GACvB8R,EAAkB,EAEtB,IAAY,GAARlN,EACF,OAAO,EALgC,oBAQ3BvF,EAAEI,OARyB,IAQzC,2BAAuB,CAAC,IAAf+K,EAAc,QAErB,IADAsH,GAAmBtN,KAAKuN,IAAI,EAAGvH,EAAEvL,OAAO,IAClB2F,EACpB,OAAO4F,GAX8B,8BAezC,OAAO,EAucWwH,CAAY3S,EAAGC,EAAKU,GAC9BiS,EAAc5S,EAAEI,MAAMwD,QAAQ4O,GAElC,IAAoB,GAAhBI,EACF1K,EAAYlI,EAAGC,EAAK,QAAS2S,EAAajS,EAAMJ,KAChDD,GAAON,EAAGC,EAAJ,UAAYU,EAAMG,KAAlB,mBAA4B0R,EAAQ1R,KAApC,oCACFH,EAAM0C,SACR1C,EAAM0C,QAAQrD,EAAGC,EAAKU,EAAO6R,QAK/B,GAAI7R,EAAMyH,SACR,GAAIpI,EAAEI,MAAMC,OAAS,EAAG,CACtB,IAAIF,EAAOF,EAAIgB,OAAOC,QAAQlB,EAAEI,MAAMgB,QAAO,SAAAC,GAAC,OAAGA,EAAEb,GAAGa,EAAER,QAAO,GAC3DwF,EAAWrG,EAAEI,MAAMwD,QAAQzD,GAC3BA,IACF+H,EAAYlI,EAAGC,EAAK,QAASoG,EAAU1F,EAAMJ,KACzCI,EAAM0C,SACR1C,EAAM0C,QAAQrD,EAAGC,EAAKU,EAAOR,IAGjCG,GAAON,EAAGC,EAAJ,6BAAgBU,EAAMG,KAAtB,0CAIRd,EAAE8F,QAAU,EACZxF,GAAON,EAAGC,EAAJ,UAAYU,EAAMG,KAAlB,oCACFH,EAAMiC,QACRjC,EAAMiC,OAAO5C,EAAGC,EAAKU,KAyR7BL,UACAuS,UAvLJ,SAAmB7S,EAAGC,EAAK+O,GACzBhP,EAAEiP,SAAS,GAAKD,GAuLd8D,uBAlGJ,SAAgC9S,EAAGC,GAAe,IAAVqQ,EAAS,uDAAJ,GAC3CtQ,EAAEsQ,KAAOA,GAkGPyC,qBAzEJ,SAA8B/S,EAAGC,EAAK+S,GACpCzG,IAAE0G,MAAMD,EAAc/S,EAAIgB,OAAOiS,IACjClT,EAAEmT,UAAY,GACdnT,EAAEoT,WAAa7G,IAAE0G,MAAM,EAAGxI,GAE1B,IADA,IAAI4I,EAAkBpT,EAAIgB,OAAOC,QAAQ,CAACwK,EAAeA,EAAeG,EAAkBA,IACjFrG,EAAE,EAAGA,EAAE,EAAGA,IACjBxF,EAAEmT,UAAUnP,KAAK0K,GAAS2E,EAAgB7N,GAAGxF,EAAEoT,WAAW5N,MAE5DxF,EAAEwQ,aAAe,IAkEf8C,YA9DJ,SAAqBtT,EAAGC,EAAKsF,GAC3BvF,EAAEsQ,KAAOtQ,EAAEmT,UAAU5N,GADW,oBAEfvF,EAAEsQ,MAFa,IAEhC,2BAAyB,SAClB9H,YAAc,IAHW,8BAKhC4H,GAAmBpQ,EAAGC,IA0DpBmQ,sBACAmD,QA1CJ,SAAiBvT,EAAGC,EAAKoG,EAAUmN,GACjC,IAAIrT,EAAOH,EAAEqQ,WAAWhK,GACpBkN,EAAUvT,EAAEuQ,SAASiD,GACrBrT,GAAQoT,IACVA,EAAQ9R,OAAOzB,EAAGC,EAAKE,GACvBA,EAAKsT,UAAW,GAGlBzT,EAAEsQ,KAAOtQ,EAAEqQ,YAmCTqD,KAnGG,SAAc1T,EAAGC,EAAKsF,GAC3B,IAAIpF,EAAOH,EAAEwP,MAAMjK,GAEfpF,GACEoE,EAAavE,EAAGC,EAAKE,EAAKwT,SAC5B3T,EAAEwP,MAAMlJ,OAAOf,EAAK,GACpBvF,EAAE0D,KAAKe,QAAQtE,MAgGnByT,KAAM,CACJC,QADI,SACI7T,EAAGC,GACT,GAAID,EAAE+P,QAAS,CACbG,QAAQC,IAAI,iBACZ7P,GAAON,EAAGC,EAAK,4BACfD,EAAEgQ,MAAQ,SACVhQ,EAAEiQ,WAAa,EAxRvB,SAAiBjQ,EAAGC,GAAM,IAAD,gBACN,GAAG6T,OAAO9T,EAAEI,MAAOJ,EAAEY,OAAQZ,EAAEmB,WADzB,IACvB,2BAA2D,SACpDG,WAAY,GAFI,+BA0RjByS,CAAQ/T,GACRkD,EAAKlD,EAAGC,GACR0B,EAAa3B,EAAGC,GAChBD,EAAEoC,OAAS,EAtGnB,SAAuBpC,EAAGC,GACxBD,EAAEwP,MAAQvP,EAAIgB,OAAOC,QAAQlB,EAAE4E,MAAMc,MAAM,EAAG,GAO9C1F,EAAEwP,MAAQxP,EAAEwP,MAAMxK,KANF,SAAC0O,EAAMnO,GACrB,IAAIoO,EAAQ,CAAC,EAAG,EAAG,EAAG,GAGtB,OADAA,EADkB1T,EAAIgB,OAAOqD,IAAI,GAAK,GACjBa,KAAKC,MAAMG,EAAM,GAAK,EACpC,2BAAImO,GAAX,IAAiBC,aAiGbK,CAAchU,EAAGC,GAEjBD,EAAEkE,WAAa,GACflE,EAAE2P,WAAa,GACf3P,EAAE4P,YAAc,GAChB5P,EAAE6P,UAAY,GACd7P,EAAE8P,iBAAmB,GAErB,oCAAqB9P,EAAE0D,MAAvB,YAAgC1D,EAAEI,OAAlC,YAA4CJ,EAAEY,SAA9C,eAAuD,CAAlD,IAAIT,EAAI,KACXA,EAAKoO,YAAc,EACfpO,EAAKgD,aACPhD,EAAKgD,YAAYnD,EAAGC,EAAKE,GAI7B,GAAIH,EAAEiU,WACJ,oCAAsBjU,EAAEyN,OAAxB,YAAkCzN,EAAEY,SAApC,eAA6C,CAAxC,IAAID,EAAK,KACZA,EAAMJ,KAAO,EACbI,EAAMH,IAAM,EAIhB,GAAmB,GAAfR,EAAEiQ,WAAkBjQ,EAAEkU,cACxB,oCAAsBlU,EAAEyN,OAAxB,YAAkCzN,EAAEY,SAApC,eAA6C,CAA/B,KACNJ,IAAM,EAQhB,GAJmB,GAAfR,EAAEiQ,WAAkBjQ,EAAEmU,WACxBnU,EAAE0N,uBAAwB,GAGT,GAAf1N,EAAEiQ,WAAkBjQ,EAAEoU,cACxB,oCAAsBpU,EAAEyN,OAAxB,YAAkCzN,EAAEY,SAApC,eAA6C,CAAxC,IAAID,EAAK,KACZA,EAAMJ,KAAO,EACbI,EAAMH,IAAM,EAQhB,GAJmB,GAAfR,EAAEiQ,WAAkBjQ,EAAEqU,kBACxBrU,EAAE0P,iBAAmB,GAGnB1P,EAAEsU,IAAK,CACT,IAAK,IAAI9O,EAAExF,EAAEI,MAAMC,OAAO,EAAGmF,GAAG,EAAGA,IACjC0C,EAAYlI,EAAGC,EAAK,QAASuF,EAAG,GAElCiJ,GAAWzO,EAAGC,EAAK,SAGjBD,EAAE8F,OAAS,IACb9F,EAAE8F,OAAS,KAKjByO,MApEI,SAoEEvU,EAAGC,GACPwO,GAAWzO,EAAGC,EAAK,WAOvBuU,MA/GgB,SA+GVxU,EAAGC,GACP,GAAID,EAAE+P,QAAS,CACb,GAAqB,GAAjB/P,EAAE4E,KAAKvE,OACT,MAAO,CACLoU,KAAK,EACLC,OAAQ,kCAGP,GAAsB,GAAlB1U,EAAEyN,MAAMpN,OACf,MAAO,CACLoU,KAAK,EACLC,OAAQ,8CAGP,GAAI1U,EAAE8F,QAAU9F,EAAEyP,WACrB,MAAO,CACLgF,KAAK,EACLC,OAAQ,wCAGP,GAAI1U,EAAE8B,OAAS9B,EAAEqI,KACpB,MAAO,CACLoM,KAAK,KAMb1L,UAAMgE,G,oDC38BD,SAAS4H,GAAU5E,EAAS6E,GAAkD,IAAtCC,EAAqC,uDAA7B,EAAGC,EAA0B,uDAAlB,EAAGC,EAAe,uCAAPR,EAAO,uCAC9ES,EAAa,CACf3T,EAAG,EACHgM,EAAG,GAED4H,EAAW,CACb5T,EAAGwT,EACHxH,EAAGyH,GAP6E,EAUrEI,aAAU,CACrBC,KAAMH,EACNI,GAAKrF,EAAU,CAACkF,EAAUD,GAAcA,EACxCD,SACA9O,OAJqB,WAKf8J,IACF6E,GAAW,GACXL,GAASA,QAPVlT,EAV6E,EAU7EA,EAAGgM,EAV0E,EAU1EA,EAYR,MAAO,CACLnL,UAAWmT,aAAY,CAAChU,EAAEgM,IAAI,SAAChM,EAAEgM,GAAH,0BAAoBhM,EAApB,eAA4BgM,EAA5B,WCvBlC,IAAMiI,GAAe,CACnBC,SAAU,WACVC,aAAc,MACdC,MAAO,QACPlW,OAAQ,QACRmW,WAAY,4BAIP,SAASC,GAAOC,GAGrB,IAAIZ,EAAU,uCACTM,IACAM,EAAMC,UAFG,IAGZ3T,UAAW,WACX4T,QAAS,IAUPC,EAAOb,aAAU,CACnBC,KAAMH,EACNI,GAAKQ,EAAM7F,QAVE,CAAC,CACd+F,QAAS,EACT5T,UAAW,YAEb,CACEA,UAAW,aAKqB8S,EAChC/O,OAHmB,WAIb2P,EAAM7F,SACR6F,EAAMhB,YAAW,IAGrBG,OAAQiB,KAAaC,UAEtB,OAAO,kBAAC,KAASC,IAAV,CACJC,UAAU,SACVlU,MAAS8T,I,gBChCFK,GAAO,SAACR,GACnB,IAAIS,EAAoB,CACtB9T,OAAQ,GACR+T,SAAU,GACVC,SAAU,GACVC,SAAU,GACVhW,GAAI,GACJD,IAAK,GACLkW,aAAc,GACdzU,KAAM,GACN2R,MAAO,GACP+C,cAAe,IAGjB,GAAId,EAAMe,UAAUrV,UAAW,CAE7B,IAAK,IAAIyQ,KAAQsE,EACXtE,EAAKrL,SAAS,YAChB2P,EAAkBtE,GAAM6E,OAHL,iBAQzB,GAAIhB,EAAMe,UAAUE,SAClB,GAAIjB,EAAMe,UAAUrV,UAAW,CAE7B,IAAK,IAAIyQ,KAAQsE,EACXtE,EAAKrL,SAAS,YAChB2P,EAAkBtE,GAAM6E,OAHI,wBAQ7B,CAEH,IAAK,IAAI7E,KAAQsE,GACXtE,EAAKrL,SAAS,WAAqB,gBAARqL,KAC7BsE,EAAkBtE,GAAM6E,OAHN,kBAQtBhB,EAAMe,UAAUG,UAClBT,EAAkB7V,GAAGuW,MAAQ,OAG3BnB,EAAMe,UAAUvO,UAClBiO,EAAkB9V,IAAIwW,MAAQ,UAE5BnB,EAAMe,UAAUlD,WAClB4C,EAAkBrU,KAAK+U,MAAQ,UAC/BV,EAAkB1C,MAAMoD,MAAQ,WAIlC,IAAIC,EAASrC,GAAUiB,EAAMe,UAAUM,QAASrB,EAAMe,UAAUO,YAAa,IAAK,GAAI,CAACC,SAAS,KAAMvB,EAAMe,UAAUpC,OAStH,OAPA6C,qBAAU,WACHxB,EAAMe,UAAU9V,IAAM,GAAM+U,EAAMe,UAAUO,YAC/CtB,EAAMe,UAAUO,YAAW,KAG/B,CAACtB,EAAMe,UAAU9V,MAGf,yBACEsV,UAAU,OACVkB,QAAWzB,EAAM0B,YACjBrV,MAAS2T,EAAM2B,WAEf,kBAAC5B,GAAD,CACE5F,QAAW6F,EAAMe,UAAU5G,QAC3B6E,WAAcgB,EAAMe,UAAU/B,YAAc,aAC5CiB,SAAY,CAAC2B,IAAI,OAAQC,KAAK,UAEhC,kBAAC,KAASvB,IAAV,CAAcjU,MAAK,aAAGwT,MAAO,OAAQlW,OAAQ,QAAWyX,IACvDnS,OAAOqG,KAAK0K,EAAM8B,MAAM1S,KAAI,SAAC2S,GAAD,OAC3B,kBAAC,GAAD,CACEA,QAAWA,EACXC,MAAShC,EAAM8B,KAAKC,GACpBE,gBAAmBxB,EAAkBsB,WASlCG,GAAO,SAAClC,GACnB,IAAImC,EAASnC,EAAM+B,QAAQjR,SAAS,UAChCsR,EACF,yBACI7B,UAAaP,EAAM+B,QACnBrY,IAAOsW,EAAMgC,QAInB,OACE,yBACEzB,UAAa,QAAQP,EAAM+B,QAC3B1V,MAAS2T,EAAMiC,iBAEbE,EAAUC,EAAUpC,EAAMgC,QAKrBK,GAAU,SAACrC,GAEtB,OACE,yBAAKO,UAAU,WAAWlU,MAAO2T,EAAMiC,iBACpCjC,EAAMnQ,MAAMT,KAAI,SAAC7E,EAAMoF,GAAP,OACf,kBAAC,GAAD,CACEmS,KAAMvX,EACNwW,UAAaf,EAAMsC,OAAQtC,EAAMsC,OAAO3S,GAAK,GAC7C+R,YAAc1B,EAAM0B,YAAe1B,EAAM0B,YAAY/R,GAAQ,KAE7DgS,UAAa3B,EAAM2B,iBAQhBY,GAAQ,SAACvC,GAAD,OACnB,yBAAKO,UAAU,gBAAgBlU,MAAO2T,EAAMiC,gBAAiBR,QAASzB,EAAM0B,aACvEzS,OAAOqG,KAAK0K,EAAMzV,MAAM6E,KAAI,SAAC2S,GAAD,OAC3B,kBAAC,GAAD,CACEA,QAAWA,EACXC,MAAShC,EAAMzV,KAAKwX,UAMjBS,GAAW,SAACxC,GAGvB,OACE,yBAAKO,UAAU,qBACZP,EAAMnQ,MAAMT,KAAI,SAAC7E,EAAMoF,GAAP,OACf,kBAAC,GAAD,CACEpF,KAAQA,EACRmX,YAAe1B,EAAM0B,YAAY1B,EAAM0B,YAAY/R,QAAKwH,EACxD8K,gBAAmBjC,EAAMyC,iBAAiBzC,EAAMyC,iBAAiB9S,QAAKwH,SA2BnEuL,GAAY,SAAC1C,GACxB,OACE,yBAAKO,UAAU,aAAaoC,MAAM,UAChC,kBAAC,GAAD,CAAOpY,KAAMyV,EAAMzV,OACnB,4BAAQgW,UAAU,uBAAuBkB,QAASzB,EAAM0B,aAAxD,8B,MC9KC,IAAMkB,GAAa,SAAC5C,GACzB,OACE,yBAAKO,UAAU,cACZtR,OAAOqG,KAAK0K,EAAM6C,SAASzT,KAC1B,SAAC5B,GAAD,OACE,4BAAQiU,QAASzB,EAAM6C,QAAQrV,GAAS+S,UAAU,qBAb5D,SAAwB/S,GACtB,OAAIA,EAAOsD,SAAS,gBACV,6CAAS5G,EAAeyL,SAASnI,EAAO,MAG3CA,EAQyEsV,CAAetV,OAG3F,4BAAQ+S,UAAU,oBAAoBkB,QAASzB,EAAM+C,UAAW1W,MAAO,CAAC2W,QAAQhD,EAAM+C,UAAU,GAAG,SAAnG,kBAKOE,GAAY,SAACjD,GACxB,OACE,yBAAKO,UAAU,aAAaoC,MAAO3C,EAAMkD,UACtCjU,OAAOqG,KAAK0K,EAAM6C,SAASzT,KAAI,SAAA5B,GAAM,OAAI,4BACxC+S,UAAY,aACZkB,QAAWzB,EAAM6C,QAAQrV,IAExBA,Q,SCxBI2V,I,MAAQ,SAACnD,GACpB,OAAQ,yBAAKO,UAAWP,EAAM+B,SAC3B/B,EAAMoD,WAIJ,SAASC,GAAWrD,GAAQ,IAAD,EACJsD,oBAAS,GADL,oBAC3BnJ,EAD2B,KAClB6E,EADkB,KAKhC,OAFAwC,qBAAU,kBAAMxC,GAAW,KAAO,CAACgB,EAAM9T,QAElC,yBAAKG,MAAO,CAACsT,SAAS,WAAYqD,QAAQ,iBAC/C,kBAACjD,GAAD,CACE5F,QAASA,EACT6E,WAAYA,EACZiB,SAAU,CAAC2B,IAAK,QAASC,KAAK,WAJ3B,gBAMD7B,EAAM9T,MANL,IAMa8T,EAAMvN,MAIrB,SAAS8Q,GAAgBvD,GAE9B,IAAIrQ,EAAMqQ,EAAMrQ,IACZwQ,EAAOpB,GAAUiB,EAAM7F,QAAS6F,EAAMhB,WAAY,GAAI,GAAI,CAACuC,SAAU,MACzE,OACI,yBACElV,MAAO,CACL2W,QAAS,eACT7B,MAAOnB,EAAMhJ,OAAOlG,SAASnB,GAAM,OAAO,UAG5C,kBAAC,KAAS2Q,IAAV,CACEjU,MAAK,aACHsT,SAAU,WACVqD,QAAS,gBACN7C,IAGJjW,EAAeyF,IAbpB,IAeIqQ,EAAMzT,UAAUoD,GAfpB,gB,UC/BO6T,GAAe,SAACxD,GAG3B,IAFA,IAAIyD,EAAQ,GAEH7T,EAAE,EAAGA,EAAEoQ,EAAM5E,KAAK3Q,OAAQmF,GAAG,EAAG,CACvC,IADuC,EACnC8T,EAAM,GACNC,EAAW3D,EAAM5E,KAAKtL,MAAMF,EAAGA,EAAE,GAFE,cAGvB+T,GAHuB,IAGvC,2BAA0B,CAAC,IAAlBC,EAAiB,QACpBC,EAAc,QACdD,EAAI3C,WACN4C,EAAc,OAEZD,EAAIE,SACND,EAAc,WAEhBH,EAAItV,KACF,wBACEqT,QAASzB,EAAM0B,YAAY1B,EAAM5E,KAAKpN,QAAQ4V,KAE9C,yBAAKrD,UAAU,OACf,yBACEA,UAAU,UACV7W,IAAKka,EAAIla,IACT2C,MAAO,CACPwX,YAAaA,SApBkB,8BA2BvCJ,EAAMrV,KAAK,4BAAKsV,IAGlB,OACE,yBAAKnD,UAAU,iBACb,+BACE,+BAAQkD,MAMHM,GAAU,SAAC/D,GACtB,OACE,yBAAKO,UAAU,YACb,wBACElU,MAAS,CACP2X,WAAY,MACZC,UAAW,OAGZjE,EAAMkE,cAAc9U,KAAI,SAACwU,GAAD,OAAU,wBAAIrD,UAAU,WAAWlU,MAAO,CAAC8U,MAAOyC,EAAIO,OAAO,EAAG,MAAM,UAAWP,EAAIhY,YAMzGwY,GAAY,SAACpE,GACxB,OACE,yBAAKO,UAAU,cAAf,4BACO,6BACL,0BAAMA,UAAU,oBAAoBP,EAAMqE,cC5DnCC,I,MAAmB,SAACtE,GAC/B,OACE,yBAAKO,UAAU,qBACb,+GAEE,6BAFF,qCAGcnK,EAAY4J,EAAMgC,OAAO,2BAAO,2BAC5C,6BACA,8BACEA,MAAOhC,EAAMgC,MACbuC,SAAUvE,EAAMwE,aAChBjE,UAAU,6BACVkE,KAAM,GACNC,KAAM,MAGV,4BACEjD,QAASzB,EAAM2E,UACfpE,UAAU,4BAFZ,4BAMA,4BACEkB,QAASzB,EAAM4E,WACfrE,UAAU,4BAFZ,4BAMA,4BACEkB,QAAS,WACPhI,MAAM,yPAER8G,UAAU,4BAJZ,4BAQA,6BACA,6BACA,mKAKOsE,GAAiB,SAAC7E,GAC7B,OACE,yBAAKO,UAAU,mBACb,0EAEE,2BACEuE,KAAO,OACP9C,MAAShC,EAAMgC,MACfuC,SAAYvE,EAAMwE,aAClBjE,UAAY,qBAGhB,4BACIkB,QAASzB,EAAM+E,WACfxE,UAAU,4BAFd,wCAME,4BACEkB,QAASzB,EAAM2E,UACfpE,UAAU,4BAFZ,4BAOF,6BACA,yMAKOyE,GAAW,SAAChF,GAAD,OACtB,yBAAKO,UAAU,kBAAkBlU,MAAO,CAAC4X,UAAU,QACjD,8DAEI,2BACEa,KAAO,OACP9C,MAAShC,EAAMgC,MACfuC,SAAYvE,EAAMwE,aAClBjE,UAAY,qBAGhB,4BACEkB,QAASzB,EAAMiF,KACf1E,UAAU,2BACVlU,MAAO,CAAC6Y,QAAQ,OAHlB,kBCtFOC,I,MAAc,SAACnF,GAAD,OACzB,yBAAK3T,MAAO,CAAC+Y,UAAW,SAAUnB,UAAU,QAC1C,kFACA,8CACM,uBAAGoB,KAAK,+CAAR,6BAEN,4BAAQ9E,UAAU,sBAAsBkB,QAASzB,EAAMsF,WAAvD,4BAA+E,6BAC/E,4BAAQ/E,UAAU,sBAAsBkB,QAASzB,EAAMuF,WAAvD,4BAA+E,6BAC/E,4BAAQhF,UAAU,sBAAsBkB,QAASzB,EAAM2E,WAAvD,4BAA+E,gC,YCJnF,SAASa,GAASxF,GAChB,OAAO,yBAAKO,UAAU,YAAYoC,MAAM,UACtC,yBAAKpC,UAAU,kBAAkBP,EAAMyF,UAAY,sDACnD,4BAAQlF,UAAU,mBAAmBkB,QAASzB,EAAM2E,WAApD,gBACA,4BAAQpE,UAAU,mBAAmBkB,QAASzB,EAAM0F,YAApD,iBAIJ,SAASC,KACPlM,MAAM,08BAGD,SAASmM,GAAc5F,GAC5B,OAAO,yBAAKO,UAAU,QAAQoC,MAAM,UAClC,yBAAKpC,UAAU,wBAAf,yDAA+C,6BAA/C,0DACCP,EAAM9E,MAAM9L,KAAI,SAAAJ,GAAI,OAAI,kBAACwW,GAAaxW,MACvC,6BACA,4BAAQuR,UAAU,wBAAwBkB,QAASkE,IAAnD,wCACA,4BAAQpF,UAAU,wBAAwBkB,QAASzB,EAAMiF,MAAzD,iBAIG,SAASY,GAAY7F,GAC1B,OAAO,yBAAKO,UAAU,SACpB,kBAAC,GAAD,CAAS1Q,MAAOmQ,EAAMrF,UAAY,GAAI2H,OAAQtC,EAAM8F,eAAiB,GAAI7D,gBAAiB,CAACgC,UAAW,OAAQvC,YAAa1B,EAAM+F,qBACjI,yBAAKxF,UAAU,aAAaP,EAAMgG,gBAAgBpa,KAAM,eAAKoU,EAAMgG,gBAAgBpa,KAAO,IAC1F,kBAAC,GAAD,CAASiE,MAAOmQ,EAAMnQ,OAAS,GAAIyS,OAAQtC,EAAMiG,YAAc,GAAIvE,YAAa1B,EAAMkG,kBACtF,yBAAK3F,UAAU,aAAaP,EAAMmG,cAAgBnG,EAAMmG,aAAava,MACrE,4BAAQ2U,UAAU,wBAAwBlU,MAAO,CAAC+Z,OAAO,KAAMlB,QAAQ,QAASzD,QAASzB,EAAM0B,aAA/F,iBAIG,SAAS2E,GAAYrG,GAC1B,OAAO,yBAAKO,UAAU,SACpB,yBAAKA,UAAU,UAAUoC,MAAM,UAC5B3C,EAAMsG,QAAQ,GADjB,WACiCtG,EAAMsG,QAAQ,GAD/C,WAC+DtG,EAAMsG,QAAQ,GAAG,6BAC7EtG,EAAMsG,QAAQ,GAFjB,WAEiCtG,EAAMsG,QAAQ,IAE/C,yBAAK/F,UAAU,eAAeoC,MAAM,UAClC,0BAAMtW,MAAO,CAAC2W,QAAShD,EAAMuG,aAAa,EAAG,GAAG,SAAhD,6BAA+D,yBAAKla,MAAO,CAAC8U,MAAO,UAAWqF,SAAS,SAAUxG,EAAMuG,eAGzH,kBAAC,GAAD,CAAW1D,QAAS7C,EAAM6C,QAASK,SAAS,YCqNzC,IAAMuD,GAnBb,SAAsBC,GACpB,IAD8B,EAC1BtL,EAAO,GADmB,cAGhBsL,GAHgB,IAG9B,2BAAwB,CAAC,IAAhBC,EAAe,QAGtB,GAFAA,EAAE1F,UAAW,EAEE,GAAX0F,EAAExC,MACJ,IAAK,IAAIvU,EAAE,EAAGA,EAAE,EAAGA,IACjBwL,EAAKhN,KAAKa,OAAOC,OAAO,GAAIyX,SAI9BvL,EAAKhN,KAAKa,OAAOC,OAAO,GAAIyX,KAZF,8BAgB9B,OAAOvL,EAGWwL,CApQH,CACf,CACEld,IAAK,+CACLkC,KAAM,+CACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GACRD,EAAEqI,MAAQ,IAGd,CACE/I,IAAK,sDACLkC,KAAM,iEACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GACRD,EAAEyP,YAAc,IAGpB,CACEnQ,IAAK,+CACLkC,KAAM,2DACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GAAM,IAAD,gBACKD,EAAEyN,OADP,IACb,2BAA2B,SACnBlN,KAAO,GAFF,iCAMjB,CACEjB,IAAK,8CACLkC,KAAM,2DACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GAAM,IAAD,gBACKD,EAAEyN,OADP,IACb,2BAA2B,SACnBjN,IAAM,GAFD,iCAMjB,CACElB,IAAK,sDACLkC,KAAM,sDACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GACRD,EAAEyN,MAAQzN,EAAEyN,MAAM/H,MAAM,EAAG1F,EAAEyN,MAAMpN,OAAO,KAa9C,CACEf,IAAK,qDACLkC,KAAM,8EACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GACRD,EAAEmU,UAAW,IAIjB,CACE7U,IAAK,8CACLkC,KAAM,oFACNuY,MAAO,EAEPtY,OALF,SAKSzB,EAAGC,GACRD,EAAEkU,eAAgB,IAItB,CACE5U,IAAK,kDACLkC,KAAM,wDACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GAAM,IAAD,gBACKD,EAAEyN,OADP,IACb,2BAA2B,CAAC,IAAnB9M,EAAkB,QACrBA,EAAMoH,WACRpH,EAAMJ,KAAO,EACbI,EAAMH,IAAM,IAJH,iCAmBjB,CACElB,IAAK,qDACLkC,KAAM,iEACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GAAM,IAAD,gBACID,EAAE4E,MADN,IACb,2BAAyB,SAClBpC,WAAa,GAFP,iCAQjB,CACElD,IAAK,kDACLkC,KAAM,6CACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GAAK,IAAD,gBACMD,EAAEyN,OADR,IACZ,2BAA2B,SACnBtF,YAAa,GAFT,iCAOhB,CACE7I,IAAK,yDACLkC,KAAM,+FACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GACRD,EAAEqU,iBAAkB,IAKxB,CACE/U,IAAK,kDACLkC,KAAM,iDACNuY,OAAQ,GACRtY,OAJF,SAISzB,EAAGC,GACR,IAAI2E,EAAO5E,EAAE4E,KAAKI,KAAI,SAAA3D,GAAC,OAAE0F,GAAW/G,EAAGC,MACvCD,EAAEyN,MAAQxN,EAAIgB,OAAOC,QAAQlB,EAAE4E,KAAKI,KAAI,SAAA3D,GAAC,kCAAOA,GAAP,IAAUyB,MAAM,QACzD9C,EAAE4E,KAAOA,EACT5E,EAAE0c,sBAAuB,EAJZ,oBAMI1c,EAAEyN,OANN,IAMb,2BAA0B,CAAC,IAAlBtN,EAAiB,QACA,iBAAbA,EAAKqB,OACdrB,EAAKqB,KAAOrB,EAAKqB,KAAKuM,QAAQ,eAAM,gBACpC5N,EAAKqB,KAAOrB,EAAKqB,KAAKuM,QAAQ,eAAM,kBAT3B,iCA0BjB,CACEzO,IAAK,qDACLkC,KAAM,+CACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GAAM,IAAD,gBACKD,EAAEoN,OADP,IACb,2BAA2B,SACnBtL,OAAS,GAFJ,iCAOjB,CACExC,IAAK,uDACLkC,KAAM,sEACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GACRD,EAAE0P,iBAAmB,IAMzB,CACEpQ,IAAK,+CACLkC,KAAM,gFACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GACRD,EAAEiU,YAAa,IAInB,CACE3U,IAAK,iDACLkC,KAAM,8FACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GACRD,EAAEsU,KAAM,IAMZ,CACEhV,IAAK,+CACLkC,KAAM,0CACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GACRD,EAAEqI,MAAQ,KAId,CACE/I,IAAK,kDACLkC,KAAM,qEACNuY,MAAO,EACP0C,eAAgB,EAChBhb,OALF,SAKSzB,EAAGC,GACRD,EAAEoU,eAAgB,IAKtB,CACE9U,IAAK,iDACLkC,KAAM,yDACNuY,MAAO,EACPtY,OAJF,SAISzB,EAAGC,GACRD,EAAEgN,iBAAkB,MCtOb2P,GAAQ,6BACnB,2GACA,6BAAK,6BAFc,uDAInB,6BAAK,6BAJc,yFAKH,6BAAK,6BACrB,2DANmB,uKAMyB,6BAAK,6BACjD,uEAPmB,uHAOmB,6BACtC,kTAAuD7c,EAAe,GAAtE,SAA2EA,EAAe,GAA1F,SAA+FA,EAAe,GAA9G,wKAAgJA,EAAe,GAA/J,SAAoKA,EAAe,GAAnL,0MAAgO,6BAAK,6BACrO,sEATmB,0FASc,6BACjC,8aAAiF,6BAAK,6BACtF,sEAXmB,iGAWgB,6BACnC,6TAA+D,6BAAK,6BACpE,0DAbmB,8RAaiDA,EAAe,GAbhE,mGAamF,6BAAK,6BAC3G,0DAdmB,gKAcsB,6BACzC,2KAA8BA,EAAe,GAA7C,wEAA+DA,EAAe,GAA9E,yFAAkGA,EAAe,GAAjH,kFAAmIA,EAAe,GAAlJ,SAAuJA,EAAe,GAAtK,sEAAsLA,EAAe,GAArM,sEAAqNA,EAAe,GAApO,iEAAoPA,EAAe,GAAnQ,gEAAkRA,EAAe,GAAjS,kEAAkTA,EAAe,GAAjU,qGAAuVA,EAAe,GAAtW,yCAAoX,6BACpX,6BAhBmB,mJAiBK,6BACxB,6SAlBmB,yGAkBkD,6BAAK,6BAlBvD,qTAmBqC,6BAnBrC,2OAoBuB,6BAAK,6BApB5B,0GAqBD,6BAAK,6BArBJ,qBAsBhB,0EAtBgB,mDAsBO,6BAAK,6BAtBZ,yDAuBV,qFAvBU,kUAuB4D,6BAAK,6BAvBjE,qXAwB8C,6BACjE,82BACA,6BAAK,6BA1Bc,uNA4BnB,6BA5BmB,mSA8BnB,6BAAK,6BACL,wDACA,6BAhCmB,6CAiCP,6BAjCO,6CAkCP,6BAlCO,oGAmCG,6BAnCH,oGAoCG,6BApCH,iHAqCM,6BArCN,qHAsCU,6BAtCV,0HAuCU,6BAvCV,mIAwCS,6BAxCT,wGAyCO,6BAzCP,wGA0CO,6BA1CP,6CA2CP,6BACZ,6BAAK,6BACL,wDACA,6BACA,sDAAkB,6BAClB,wEAAqB,6BACrB,kEAAoB,6BACpB,4DAAmB,6BACnB,4DAAmB,6BACnB,gEAAoB,6BACpB,4DAAmB,6BACnB,kEAAoB,6BACpB,wEAAqB,6BACrB,4DAAmB,6BACnB,sDAAkB,6BAClB,4EAAsB,6BACtB,0EAAuB,6BACvB,oFAAuB,8BC1CnB8c,GAAkB,CACtBxc,MAAO,GACPQ,OAAQ,GACRO,SAAU,GACVgB,UAAW,IAGA0a,GAAb,oDAEE,WAAYjH,GAAO,IAAD,8BAChB,cAAMA,IAEDkH,oBAAsB,EAAKA,oBAAoBC,KAAzB,iBAC3B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,iBAC5B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,iBAC7B,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,iBAC5B,EAAKI,wBAA0B,EAAKA,wBAAwBJ,KAA7B,iBAC/B,EAAKK,wBAA0B,EAAKA,wBAAwBL,KAA7B,iBAC/B,EAAKM,mBAAqB,EAAKA,mBAAmBN,KAAxB,iBAC1B,EAAKO,yBAA2B,EAAKA,yBAAyBP,KAA9B,iBAChC,EAAKQ,uBAAyB,EAAKA,uBAAuBR,KAA5B,iBAC9B,EAAKS,oBAAsB,EAAKA,oBAAoBT,KAAzB,iBAE3B,EAAKU,WAAa,EAAKA,WAAWV,KAAhB,iBAElB,EAAKW,kBAAoB,EAAKA,kBAAkBX,KAAvB,iBACzB,EAAKY,mBAAqB,EAAKA,mBAAmBZ,KAAxB,iBAC1B,EAAKa,mBAAqB,EAAKA,mBAAmBb,KAAxB,iBAC1B,EAAKc,oBAAsB,EAAKA,oBAAoBd,KAAzB,iBAC3B,EAAKe,oBAAsB,EAAKA,oBAAoBf,KAAzB,iBAC3B,EAAKgB,qBAAuB,EAAKA,qBAAqBhB,KAA1B,iBAC5B,EAAKiB,mBAAqB,EAAKA,mBAAmBjB,KAAxB,iBAC1B,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,iBAC3B,EAAKmB,sBAAwB,EAAKA,sBAAsBnB,KAA3B,iBAC7B,EAAKoB,uBAAyB,EAAKA,uBAAuBpB,KAA5B,iBAC9B,EAAKqB,wBAA0B,EAAKA,wBAAwBrB,KAA7B,iBAC/B,EAAKsB,qBAAuB,EAAKA,qBAAqBtB,KAA1B,iBAC5B,EAAKuB,sBAAwB,EAAKA,sBAAsBvB,KAA3B,iBAC7B,EAAKwB,kBAAoB,EAAKA,kBAAkBxB,KAAvB,iBACzB,EAAKyB,mBAAqB,EAAKA,mBAAmBzB,KAAxB,iBAE1B,EAAK0B,qBAAuB,EAAKA,qBAAqB1B,KAA1B,iBAC5B,EAAK2B,sBAAwB,EAAKA,sBAAsB3B,KAA3B,iBAC7B,EAAK4B,sBAAwB,EAAKA,sBAAsB5B,KAA3B,iBAE7B,EAAK6B,kBAAoB,EAAKA,kBAAkB7B,KAAvB,iBAEzB,EAAK8B,eAAiB,EAAKA,eAAe9B,KAApB,iBACtB,EAAK+B,uBAAyB,EAAKA,uBAAuB/B,KAA5B,iBAC9B,EAAKgC,WAAa,EAAKA,WAAWhC,KAAhB,iBAClB,EAAKiC,WAAa,EAAKA,WAAWjC,KAAhB,iBAClB,EAAKkC,gBAAkB,EAAKA,gBAAgBlC,KAArB,iBAEvB,EAAKmC,UAAY,EAAKA,UAAUnC,KAAf,iBACjB,EAAKoC,SAAW,EAAKA,SAASpC,KAAd,iBAChB,EAAKqC,UAAY,EAAKA,UAAUrC,KAAf,iBACjB,EAAKsC,QAAU,EAAKA,QAAQtC,KAAb,iBACf,EAAK/W,eAAiB,EAAKA,eAAe+W,KAApB,iBACtB,EAAKuC,aAAe,EAAKA,aAAavC,KAAlB,iBACpB,EAAKwC,UAAY,EAAKA,UAAUxC,KAAf,iBACjB,EAAK7K,eAAiB,EAAKA,eAAe6K,KAApB,iBAEtB,EAAKyC,mBAAqB,EAAKA,mBAAmBzC,KAAxB,iBAC1B,EAAK0C,mBAAqB,EAAKA,mBAAmB1C,KAAxB,iBAC1B,EAAK2C,kBAAoB,EAAKA,kBAAkB3C,KAAvB,iBACzB,EAAK4C,iBAAmB,EAAKA,iBAAiB5C,KAAtB,iBACxB,EAAK6C,kBAAoB,EAAKA,kBAAkB7C,KAAvB,iBACzB,EAAK8C,kBAAoB,EAAKA,kBAAkB9C,KAAvB,iBACzB,EAAK+C,qBAAuB,EAAKA,qBAAqB/C,KAA1B,iBAC5B,EAAKgD,sBAAwB,EAAKA,sBAAsBhD,KAA3B,iBAC7B,EAAKiD,qBAAuB,EAAKA,qBAAqBjD,KAA1B,iBAC5B,EAAKkD,4BAA8B,EAAKA,4BAA4BlD,KAAjC,iBACnC,EAAKmD,0BAA4B,EAAKA,0BAA0BnD,KAA/B,iBACjC,EAAKoD,yBAA2B,EAAKA,yBAAyBpD,KAA9B,iBAEhC,EAAKqD,uBAAyB,EAAKA,uBAAuBrD,KAA5B,iBAC9B,EAAKzJ,YAAc,EAAKA,YAAYyJ,KAAjB,iBACnB,EAAKsD,aAAe,EAAKA,aAAatD,KAAlB,iBACpB,EAAKuD,kBAAoB,EAAKA,kBAAkBvD,KAAvB,iBAEzB,EAAKwD,aAAe,EAAKA,aAAaxD,KAAlB,iBACpB,EAAKyD,WAAa,EAAKA,WAAWzD,KAAhB,iBAClB,EAAK0D,qBAAuB,EAAKA,qBAAqB1D,KAA1B,iBAC5B,EAAK2D,eAAiB,EAAKA,eAAe3D,KAApB,iBACtB,EAAK4D,WAAa,EAAKA,WAAW5D,KAAhB,iBAClB,EAAK6D,WAAa,EAAKA,WAAW7D,KAAhB,iBAClB,EAAKlC,KAAO,EAAKA,KAAKkC,KAAV,iBAEZ,EAAK8D,MAAQ,CACXC,eAAgB,EAChB5gB,gBAAiB,EACjB6gB,iBAAkB,EAClBC,gBAAiB,EACjBC,mBAAoB,EACpBC,oBAAqB,EACrBC,kBAAmB,EACnBC,eAAgB,EAChBC,aAAc,EAAC,GAAO,GAAO,GAAO,GAAO,GAE3CC,OAAQ,GACRC,YAAY,EACZC,oBAAoB,EAEpBxR,MAAO,SAEPyR,WAAW,eAAK7E,IAEhB8E,MAAO,EAAKlC,mBAEZmC,WAAY,EAAKnC,mBAEjBxO,KAAMqL,GAAKrX,KAAI,SAAA3D,GAAC,sBAAOA,MACvB4Y,WAAY,EACZwC,eAAgB,EAEhBmF,UAAW,SACXjW,UAAWlB,IACXwB,UAAW3J,EAAMoD,MAAM,EAAE,IAAIV,KAAI,SAAA3D,GAAC,kBAAOA,EAAEP,SAAQ+G,KAAK,MACxDga,aAAcvf,EAAM0C,KAAI,SAAA3D,GAAC,kCAAOA,GAAP,IAAUgD,SAASc,KAAKC,MAAoB,EAAdD,KAAKlE,eAE5D6gB,cAAe,WAEf/Y,KAAM2B,IAENqX,SAAU,GAEVC,mBAAmB,GAGrB,EAAKC,SAAW,CACdve,KAAM,CACJwe,eAAI,EAAKhD,WAEX9e,MAAO,CACL+hB,eAAI,EAAKhD,SACTiD,eAAI,EAAKhD,WAEXxe,OAAQ,CACNwhB,eAAI,EAAKhD,WAEXjS,OAAQ,CACNkV,eAAI,EAAK/C,cAEXne,SAAU,CACRmhB,eAAI,EAAK/C,UACTgD,2BAAM,EAAKrQ,gBAEbwB,KAAM,CACJ8O,eAAI,kBAAM,EAAK5M,MAAMhF,MAAM8C,KAAK,EAAKmN,MAAMO,kBAI/C,EAAKqB,WAAa,kBAAQ,EAAK7M,MAAM5V,EAAEiP,SAAS,GAAGvI,SAAS,gBAAO,EAAKkP,MAAMhF,MAAMiC,UAAY,EAAK+C,MAAMhF,MAAMtQ,QA/IjG,EAFpB,uDAoJaiF,GAAM,IAAD,OACd,OAAO,WACL,IAAImd,EAAW,EAAK7B,MAAM7P,KAC1B0R,EAASnd,GAAKsR,UAAY6L,EAASnd,GAAKsR,SACxC,EAAK8L,SAAS,CAAC3R,KAAM0R,OAxJ3B,2CA4JuB1R,EAAM4R,GACzB,IADiD,EAC7CF,EAAQ,YAAO1R,GAD8B,cAGjC0R,GAHiC,IAGjD,2BAA0B,CAAC,IAAlBlJ,EAAiB,QACpBA,EAAIiD,gBAAkBmG,IACxBpJ,EAAI3C,UAAW,GAEZ+L,GAA0B,GAAM,CAAC,EAAE,GAAGlc,SAASgc,EAAS9e,QAAQ4V,MACnEA,EAAI3C,UAAW,GAEZ+L,GAA0B,GAAM,CAAC,EAAE,EAAE,IAAIlc,SAASgc,EAAS9e,QAAQ4V,MACtEA,EAAI3C,UAAW,IAX8B,8BAejD,GAAI5S,KAAK4c,MAAMgC,iBAAkB,CAAC,IAAD,gBACfH,GADe,IAC/B,2BAA0B,CAAC,IAAlBlJ,EAAiB,QACpBA,EAAI3C,WACN2C,EAAIE,QAAS,IAHc,+BAQjC,OAAOgJ,IAnLX,uCA0LI,OAHoBze,KAAK4c,MAAM7P,KAAK5P,QAAO,SAAAmb,GAAC,OAAKA,EAAE1F,UAAY0F,EAAE7C,UAElCoJ,QADjB,SAACC,EAAK/Z,GAAN,OAAe+Z,EAAM/Z,EAAI+Q,QACQ,KAzLnD,mCA+LI,OADA9V,KAAKsc,aAAa,QACXtc,KAAK4c,MAAMS,SA/LtB,kCAsMI,OAHArd,KAAK2R,MAAMhF,MAAMY,KAAKvN,KAAK4c,MAAMC,eACjC7c,KAAK4a,eAAe,QAAS5a,KAAK2R,MAAM5V,EAAEI,MAAMC,QAAQ,GACxD4D,KAAK0e,SAAS,CAAC7B,eAAgB,IACxB,KAtMX,iCA6MI,OAHA7c,KAAK2R,MAAMhF,MAAMjR,KAAKsE,KAAK4c,MAAM3gB,gBAEjC+D,KAAK0e,SAAS,CAACziB,gBAAiB,IACzB,KA7MX,kCAuNI,OANA+D,KAAK2R,MAAMhF,MAAMuB,MAAMlO,KAAK4c,MAAM3gB,eAAgB+D,KAAK4c,MAAME,iBAE7D9c,KAAK0e,SAAS,CACZziB,gBAAiB,EACjB6gB,iBAAkB,IAEb,KAvNX,gCA8NI,OAHA9c,KAAK2R,MAAMhF,MAAMc,IAAIzN,KAAK4c,MAAM3gB,gBAEhC+D,KAAK0e,SAAS,CAACziB,gBAAiB,IACzB,KA9NX,uCAoOI,OAFA+D,KAAK2R,MAAMhF,MAAMpO,UAAUyB,KAAK4c,MAAM3gB,gBACtC+D,KAAK0e,SAAS,CAACziB,gBAAiB,IACzB,KApOX,qCA2OI,OAHA+D,KAAK2R,MAAMhF,MAAMoB,YAAY/N,KAAK4c,MAAMG,gBAExC/c,KAAK0e,SAAS,CAAC3B,gBAAiB,IACzB,KA3OX,kCAkPI,OAHA/c,KAAK2R,MAAMhF,MAAMqB,SAAShO,KAAK4c,MAAMI,kBAAmBhd,KAAK4c,MAAM3gB,eAAgB+D,KAAK4c,MAAME,iBAE9F9c,KAAK0e,SAAS,CAAC1B,mBAAoB,IAC5B,KAlPX,uCAwPI,OAFAhd,KAAK2R,MAAMhF,MAAMvO,UACjB4B,KAAK0e,SAAS,CAAC1B,mBAAoB,IAC5B,KAxPX,sCA2PkB9gB,GACd,OAAIA,EAAKuH,UACA,WAGAvH,EAAK6N,SACL,WAIA,WArQb,qCAyQiBgV,EAASzd,EAAKqS,GAC3B,IAAI6J,EAAU,eAAOxd,KAAK4c,MAAMY,YAChCA,EAAWuB,GAASzd,GAAOqS,EAC3B3T,KAAK0e,SAAS,CAAClB,iBA5QnB,wCA+QoBthB,GAAO,IAAD,EAClBoC,EAAS0B,KAAKgb,gBAAgB9e,GAC9BuX,GAAI,oBACLnV,EAASpC,EAAKoC,QADT,qBAEDpC,EAAKI,KAFJ,oBAGFJ,EAAKK,IAHH,sBAIAL,EAAK6B,MAJL,GASR,OAHI7B,EAAK2C,MAAQ,IACf4U,EAAK5U,MAAQ,SAAI3C,EAAK2C,OAEjB4U,IA1RX,yCA6RqBvX,EAAMoF,GACvB,MAAO,CACLsR,SAAW5S,KAAK4c,MAAMC,eAAiBvb,EACvCkO,SAAUtT,EAAKsT,YAhSrB,8CAoS0BtT,EAAMoF,GAC5B,MAAO,CACLsR,SAAW5S,KAAK4c,MAAMK,oBAAsB3b,EAC5CkO,SAAUtT,EAAKsT,YAvSrB,wCA2SoBtT,GAGhB,IAHuB,IAAD,EAClBoC,EAAS0B,KAAKgb,gBAAgB9e,GAC9B0B,EAAe,GACV2D,EAAE,EAAGA,EAAE,EAAGA,IAGjB,IAFA,IAAIyd,EAAO7jB,EAAMyF,OAAOqG,KAAK9L,GAAOoG,IAChC8F,EAASnL,EAAKwT,MAAMnO,GACf4B,EAAE,EAAGA,EAAEkE,EAAQlE,IACtBvF,EAAamC,KAAKif,GAStB,OANQ,oBACL1gB,EAASpC,EAAKoC,QADT,qBAEDpC,EAAKI,KAFJ,oBAGFJ,EAAKK,IAHH,uBAICqB,GAJD,IArTZ,yCA8TqB1B,EAAMoF,GACvB,MAAO,CACLsR,SAAW5S,KAAK4c,MAAMO,eAAiB7b,EACvCkO,SAAUtT,EAAKsT,YAjUrB,2CAqUuBtT,GACnB,MAAO,CACLsW,aAAc,8BAAM,6BAAMtW,EAAKW,SAvUrC,4CA2UwBX,EAAMoF,GAC1B,MAAO,CACLsR,SAAW5S,KAAK4c,MAAMM,kBAAoB5b,KA7UhD,yCAiVqBpF,GAAO,IAAD,EACnBoC,EAAS0B,KAAKgb,gBAAgB9e,GAC9BuX,GAAI,oBACLnV,EAASpC,EAAKoC,QADT,qBAEDpC,EAAKI,KAFJ,oBAGDJ,EAAKK,GAAKL,EAAKU,KAHd,sBAIC,8BAAOzB,EAAMO,KAAMQ,EAAKR,OAJzB,GAYR,OANIQ,EAAKP,MAAQ,IACf8X,EAAK9X,MAAS,8BAAOR,EAAMQ,MAAOO,EAAKP,QAErCO,EAAK2C,MAAQ,IACf4U,EAAK5U,MAAL,gBAAiB3C,EAAK2C,QAEjB4U,IA/VX,0CAkWsBvX,EAAMoF,GAAM,IAAD,OAC7B,MAAO,CACLsR,SAAW5S,KAAK4c,MAAM3gB,gBAAkBqF,EACxCjE,UAAWnB,EAAKmB,UAChBwV,QAAU3W,EAAKU,IAAM,EACrBkP,QAAS9L,KAAK4c,MAAMY,WAAWrhB,MAAMmF,GACrCqP,WAAY,SAACgD,GAAD,OAAW,EAAKiH,eAAe,QAAStZ,EAAKqS,OAxW/D,0CA4WsBzX,GAAO,IAAD,EACpBoC,EAAS0B,KAAK2R,MAAM5V,EAAE0c,qBAAqB,SAAS,WACxD,OAAO,EAAP,kBACGna,EAASpC,EAAKoC,QADjB,qBAEOpC,EAAKI,KAFZ,oBAGOJ,EAAKK,GAAKL,EAAKU,KAHtB,IA9WJ,2CAsXuBV,EAAMoF,GAAM,IAAD,OAC9B,MAAO,CACLsR,SAAW5S,KAAK4c,MAAME,iBAAmBxb,EACzCjE,UAAWnB,EAAKmB,UAChBwV,QAAU3W,EAAKU,IAAM,EACrBA,IAAKV,EAAKU,IACVuH,QAASjI,EAAKiI,QACd6O,QAAShT,KAAK4c,MAAMY,WAAW7gB,OAAO2E,GACtC2R,WAAY,SAACU,GAAD,OAAW,EAAKiH,eAAe,SAAUtZ,EAAKqS,IAC1DrD,MAAO,WAAO,EAAKqB,MAAMhF,MAAMnC,WAAW,UAAUyB,QAAQC,IAAI,aA/XtE,yCAmYqBhQ,GAGjB,IADA,IAAI0B,EAAe,GACV2D,EAAE,EAAGA,EAAE,EAAGA,IAGjB,IAFA,IAAIyd,EAAO7jB,EAAMyF,OAAOqG,KAAK9L,GAAOoG,IAChC8F,EAASnL,EAAK0B,aAAa2D,GACtB4B,EAAE,EAAGA,EAAEkE,EAAQlE,IACtBvF,EAAamC,KAAKif,GAGtB,MAAO,CACL1M,SAAU,wFACV1U,aAAcA,EACdC,MAAO3B,EAAK2B,MACZC,OAAQjC,EAAeK,EAAK4B,QAC5BmhB,aAAc/iB,EAAKqB,QAlZzB,0CAsZsBrB,GAClB,MAAO,CACL0W,SAAW5S,KAAK4c,MAAMG,gBAAkB/c,KAAK2R,MAAM5V,EAAEmN,OAAOvJ,QAAQzD,GACpEmB,UAAWnB,EAAKmB,aAzZtB,4CA6ZwBnB,GACpB,MAAO,CACLoW,SAAUpW,EAAKqO,MlBvbO,2FkBube3O,EACrCsjB,gBAAiBhjB,EAAKqB,QAha5B,6CAoayBrB,GACrB,MAAO,CACL0W,SAAW5S,KAAK4c,MAAMI,mBAAqBhd,KAAK2R,MAAM5V,EAAEmB,SAASyC,QAAQzD,GACzEmB,UAAWnB,EAAKmB,aAvatB,2CA4auBnB,GAAO,IAAD,EACrBoC,EAASpC,EAAKuH,UAAU,qBAAqB,kBAIjD,OAHIvH,EAAK6N,WACPzL,EAAS,KAAOA,GAEX,EAAP,kBACGA,EAASpC,EAAKoC,QADjB,+BAEiBpC,EAAK6B,MAFtB,sBAII,8BACE,0BAAMC,MAAO,CAACma,SAAS,SACpBjc,EAAKI,IADR,IACcJ,EAAKK,GADnB,QAEGpB,EAAMO,KAAMQ,EAAKR,KAFpB,QAGIQ,EAAKP,MAAM,EAAK,8BAAOR,EAAMQ,MAAOO,EAAKP,OAAiB,IAE9D,6BACCO,EAAKqB,MAAM,GACZ,6BACA,0BAAMS,MAAO,CACX2W,QAAUzY,EAAKqI,aAAerI,EAAKqI,YAAYnI,OAAS,EAAG,GAAG,SAE9D,wDACOF,EAAKqI,aAAerI,EAAKqI,YAAYsa,QAAO,SAACC,EAAK/Z,GAAN,OAAe+Z,EAAM/Z,EAAIlI,KAAO,MAAM,KAEzF,8BAfJ,IAiBIyL,IAAE0G,MAAM9S,EAAKqC,WAAW,kBAAI1C,EAAeK,EAAKkE,aAjBpD,KAiBkElE,EAAKwC,gBAAgB,GAjBvF,IAkBE,6BACA,2BAAIxC,EAAKijB,OAAO,MAvBtB,IAjbJ,4CA8cwBjjB,GACpB,MAAO,CACLkjB,mBAAoBljB,EAAKoC,OACzBf,KACE,8BACGrB,EAAKI,IADR,IACcJ,EAAKK,GACjB,6BACCL,EAAKqB,MAAM,OArdtB,4CA2dwBrB,GACpB,MAAO,CACLkjB,mBAAoBxjB,EACpB2B,KAAMrB,EAAKqB,QA9djB,iCAkeagE,GAAI,IdtfK8d,EcsfN,OACZ,GAAI9d,EAAIvB,KAAK2R,MAAM5V,EAAEY,OAAOP,OAAQ,CAClC,IAAIkjB,EAAa,IACb/d,EAAI,EACNvB,KAAK2R,MAAMhF,MAAM5J,aAGb/C,KAAK2R,MAAM5V,EAAEY,OAAO4E,GAAGlE,YACzBiiB,EAAa,IAEftf,KAAK2R,MAAMhF,MAAM2B,UAAU/M,KdhgBb8d,EckgBVC,EdjgBH,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASH,OcigB5BK,MAAK,WAAO,EAAKlG,WAAWjY,EAAE,WAGhDvB,KAAK2R,MAAM1E,OAAOC,YAjfxB,0CAqfsB5L,GAAM,IAAD,OACnBpF,EAAO8D,KAAK2R,MAAM5V,EAAE0D,KAAK6B,GAC7B,OAAO,WACL,EAAKod,SAAS,CACZ7B,cAAevb,EACfwc,SAAU,EAAKtD,qBAAqBte,KAEtC,EAAK4e,WAAW,QAChB,EAAK0D,YAAL,CAAkB,gBAAMtiB,EAAKW,SA7fnC,+CAigB2ByE,GAAM,IAAD,OAC5B,OAAO,WACL,EAAKod,SAAS,CACZzB,mBAAoB3b,OApgB5B,0CAwgBsBA,GAAM,IAAD,OACvB,OAAO,WACL,EAAKod,SAAS,CACZvB,cAAe7b,EACfwc,SAAU,EAAKtD,qBAAqB,EAAK7I,MAAM5V,EAAEwP,MAAMjK,MAEzD,EAAKwZ,WAAW,WA9gBtB,6CAihByBxZ,GAAM,IAAD,OAC1B,OAAO,WACL,EAAKod,SAAS,CACZxB,iBAAkB5b,OAphB1B,2CAyhBuBA,GAAM,IAAD,OACpBpF,EAAO8D,KAAK2R,MAAM5V,EAAEI,MAAMmF,GAC9B,OAAO,WACL,EAAKod,SAAS,CACZziB,eAAgBqF,EAChBwc,SAAU,EAAKtD,qBAAqBte,KAEtC,EAAKsiB,YAAL,CAAkB,gBAAMtiB,EAAKW,MAE7B,IAAI8iB,EAAa/e,OAAOC,OAAO,GAAI,EAAKmd,SAAS7hB,OAE7C,EAAKwV,MAAM5V,EAAEI,MAAMmF,GAAKnC,SAC1BwgB,EAAW,gBAAQ,EAAKvE,SAI1BuE,EAAW,eAAKzjB,EAAKkE,UAAY,EAAK2B,eAEtC,EAAK2c,SAAS,CAACrB,OAAQ7Y,EAAW,EAAKqW,uBAAwB8E,QA3iBrE,4CA+iBwBre,GAAM,IAAD,OACrBpF,EAAO8D,KAAK2R,MAAM5V,EAAEY,OAAO2E,GAC/B,OAAO,WACL,EAAKod,SAAS,CACZ5B,gBAAiBxb,EACjBwc,SAAU,EAAKrD,sBAAsBve,KAEvC,EAAK4e,WAAW,UAChB,EAAK0D,YAAL,CAAkB,gBAAMtiB,EAAKW,SAvjBnC,2CA2jBuByE,GAAM,IAAD,OACpBpF,EAAO8D,KAAK2R,MAAM5V,EAAEmN,OAAO5H,GAC/B,OAAO,WACL,EAAKod,SAAS,CACZ3B,eAAgBzb,EAChBwc,SAAU,EAAKpD,sBAAsBxe,KAEvC,EAAK4e,WAAW,UAChB,EAAK0D,YAAL,CAAkB,+BAnkBxB,8CAukB0Bld,GAAM,IAAD,OACvBpF,EAAO8D,KAAK2R,MAAM5V,EAAEmB,SAASoE,GACjC,OAAO,WACL,EAAKod,SAAS,CACZ1B,kBAAmB1b,EACnBwc,SAAU,EAAKpD,sBAAsBxe,KAEvC,EAAK4e,WAAW,YAChB,EAAK0D,YAAL,CAAkB,+BA/kBxB,8CAmlB0Bld,GAAM,IAAD,OAC3B,OAAO,WACL,IAAI8L,EAAU,EAAKwP,MAAMQ,aACzBhQ,EAAQ9L,IAAQ8L,EAAQ9L,GACxB,EAAKod,SAAS,CAACtB,aAAchQ,OAvlBnC,yCA2lBqBwS,GACjB,IACIC,EAAU,GAEdA,EAHoC,UAAxB7f,KAAK4c,MAAMe,UAAwB,YAAc,aAG7CiC,EAAME,OAAOnM,MAC7B3T,KAAK0e,SAASmB,KAhmBlB,6CAmmByB1gB,GAAS,IAAD,OAC7B,OAAO,WAAO,EAAK2b,WAAW3b,QApmBlC,iCAumBake,GACY,iBAAVA,EACPrd,KAAK0e,SAAS,CACZrB,OAAQ7Y,EAAWxE,KAAK6a,uBAAwB7a,KAAKge,SAASX,MAIlErd,KAAK0e,SAAS,CAACrB,OAAQ7Y,EAAWxE,KAAK6a,uBAAwBwC,OA9mBrE,mCAmnBe0C,GACX,IAAMC,EAAS,CACb,MAAShgB,KAAKub,mBACd,MAASvb,KAAKwb,mBACd,KAAQxb,KAAKyb,kBACb,IAAOzb,KAAK0b,iBACZ,KAAQ1b,KAAK2b,kBACb,KAAQ3b,KAAK4b,kBACb,QAAW5b,KAAK6b,qBAChB,SAAY7b,KAAK8b,sBACjB,SAAY9b,KAAK+b,qBACjB,eAAkB/b,KAAKgc,4BACvB,aAAgBhc,KAAKic,0BACrB,YAAejc,KAAKkc,0BAEtBlc,KAAK0e,SAAS,CAAChB,WAAY1d,KAAK4c,MAAMa,QACtCzd,KAAK0e,SAAS,CAACjB,MAAOuC,EAAOD,OAnoBjC,mCAuoBI/f,KAAKsc,aAAa,aAvoBtB,6BA2oBItc,KAAK0e,SAAS,CAACjB,MAAOzd,KAAK4c,MAAMc,eA3oBrC,mCA+oBI,IAAI/c,EAAO,GACPmE,EAAO9E,KAAK4c,MAAM9X,KACjB9E,KAAK4c,MAAMgC,kBAKdje,EAAOX,KAAK4c,MAAMvQ,KAClBvH,GAAQ9E,KAAK4c,MAAM3E,QAAQ7b,QAJ3BuE,EAAO8J,GADkC,UAAxBzK,KAAK4c,MAAMe,UAAwBlW,EAAczH,KAAK4c,MAAMlV,WAAa1H,KAAK4c,MAAM5U,WAQvGhI,KAAK2R,MAAMhF,MAAMC,SZvCd,SAAoBjM,EAAMmE,GAG/B,IAAImb,EAAc,kBAAOtc,EAAQ5C,KAAI,SAAA3D,GAAC,OAAEwD,OAAOC,OAAO,GAAGzD,OACrDoM,EAAQyW,IAAcpQ,OAAOoQ,KAC7B9W,EAAQxL,EAAOoD,KAAI,SAAC3D,EAAEkE,GAAH,mBAAC,eAAalE,GAAd,IAAiBmM,SAASjI,OAE7C8E,EAAM,IAAIvB,EAAKC,GAOnB,OANAnE,EAAOyF,EAAImB,QAAQ5G,GACnB6I,EAAQpD,EAAImB,QAAQiC,GACpBL,EAAQ/C,EAAImB,QAAQ4B,GAIb,CAACxI,OAAM6I,MAFdA,EAAQA,EAAM/H,MAAM,EAAG,IAEF0H,QAAO+W,cAAc9Z,EAAIf,UAAU,KYyB5B8a,CAAWxf,EAAMmE,IAC3C9E,KAAK2R,MAAMhF,MAAMG,QAAQ9M,KAAK4c,MAAM7P,KAAK5P,QAAO,SAAAmb,GAAC,OAAKA,EAAE1F,UAAY0F,EAAE7C,WACtEzV,KAAK2R,MAAMhF,MAAMK,kBACjBhN,KAAK0e,SAAS,CAACtB,aAAc,EAAC,GAAO,GAAO,GAAO,GAAO,KAC1Dpd,KAAKsc,aAAa,cA9pBtB,iCAkqBItc,KAAK2R,MAAMyO,QACXpgB,KAAK0e,SAAS,CACZX,mBAAmB,EACnBjZ,KAAM2B,MAGJzG,KAAK4c,MAAMgC,iBACb5e,KAAKsc,aAAa,eAGlBtc,KAAKsc,aAAa,SA5qBxB,yCAgrBqB+D,EAAWC,GAE5B,IAAK,IAAI/e,EAAE,EAAGA,EAAEvB,KAAK2R,MAAM5V,EAAEmC,UAAU9B,OAAQmF,IAAK,CAC9BvB,KAAK2R,MAAM5V,EAAEmC,UAAUqD,GAAK8e,EAAUtkB,EAAEmC,UAAUqD,GAClD,GAClBvB,KAAK4a,eAAe,YAAarZ,GAAG,GAKxC,IAAI2D,EAASlF,KAAK2R,MAAM3V,IAAIukB,SAC5B,GAAIrb,IAAWlF,KAAK4c,MAAMmB,kBAAmB,CAC3C/d,KAAK0e,SAAS,CAACX,mBAAmB,IAClC,IAAIyC,EAAa,gIAEjB,GAAItb,EAAOsL,IAAK,CACd,IAAIwF,EAAahW,KAAKyc,iBAClBgE,EAAQ,IAGVA,EADEzK,EAAa,GAAKhW,KAAK2R,MAAM5V,EAAE0c,qBACzB+H,EAEDxK,GAAc,GAAKA,EAAa,EAC/B,IAEDA,GAAc,GAAKA,EAAa,EAC/B,IAEDA,GAAc,GAAKA,EAAa,EAC/B,IAEDA,GAAc,GAAKA,EAAa,GAC/B,IAEDA,GAAc,IAAMA,EAAa,GAChC,KAEDA,GAAc,IAAMA,EAAa,GAChC,MAEDA,GAAc,IAAMA,EAAa,GAChC,OAEDA,GAAc,IAAMA,EAAa,GAChC,QAGA,SAGV,IAAI0K,EAAS1gB,KAAK2R,MAAM5V,EAAE0c,qBAAqB,2BAAO,2BACtDrN,MAAM,GAAD,OAAIsV,EAAJ,mDAAuB1K,EAAvB,2BAA0CyK,EAA1C,uCAAgF,UAAtBzgB,KAAK4c,MAAMe,UAAoB3d,KAAK4c,MAAMlV,UAA1C,UAAuDK,EAAY/H,KAAK4c,MAAM5U,WAAW,eAAK,eAA9F,4BAA1D,uCAA6KhI,KAAK4c,MAAM9X,OACzL9E,KAAK4c,MAAMgC,kBACb5e,KAAK0e,SAAS,CAACzG,QAAQ,GAAD,mBAAMjY,KAAK4c,MAAM3E,SAAjB,CAA0BjC,UAI/C,CACH,IAAI2K,EAAS3gB,KAAK2R,MAAM5V,EAAE0c,qBAAqB,2BAAO,2BACtDrN,MAAM,GAAD,OAAIuV,EAAJ,2BAAmBzb,EAAOuL,OAA1B,aAAqCzQ,KAAK2R,MAAM5V,EAAE0c,qBAAb,wBAAyC+H,EAAzC,MAAwD,GAA7F,qCAAwGxgB,KAAK4c,MAAM9X,OACpH9E,KAAK4c,MAAMgC,kBACb5e,KAAK0e,SAAS,CAACzG,QAAQ,GAAD,mBAAMjY,KAAK4c,MAAM3E,SAAjB,CAA0B,UA7uB1D,2CAovBwB,IAAD,OACnB,OAAO,yBAAK/F,UAAU,SACpB,kBAAC,GAAD,CAAa+E,UAAW,kBAAI,EAAKqF,aAAa,QAAQpF,UAAW,kBAAI,EAAKoF,aAAa,UAAUhG,UAAWtW,KAAK2c,gBAtvBvH,2CA0vBwB,IAAD,OACnB,OAAO,yBAAKzK,UAAU,SACpB,yBAAKlU,MAAO,CACV1C,OAAQ,MACRkW,MAAO,MACPuG,OAAO,KACP6I,SAAS,WAMRlI,IAEH,4BACEtF,QAAS,kBAAI,EAAKkJ,aAAa,UAC/BpK,UAAU,kBAFZ,mBAxwBN,6CAkxBI,OAAQ,yBAAKA,UAAU,SACrB,kBAAC,GAAD,CACE1Q,MAASxB,KAAK4c,MAAMgB,aAAa7c,IAAIf,KAAKwa,wBAE5C,4BAAQtI,UAAU,iBAAiBkB,QAASpT,KAAK4W,MAAjD,mBAtxBN,8CA4xB2B,IAAD,OAEtB,OAAQ,yBAAK1E,UAAU,QAAQlU,MAAO,CAACsT,SAAS,aAC9C,0BAAMtT,MAAO,CAACsT,SAAS,WAAYiC,IAAI,MAAOC,KAAK,OAAnD,0DACA,kBAAC,GAAD,CACEhS,MAASxB,KAAK2R,MAAM5V,EAAE0D,KAAKsB,IAAIf,KAAKwa,sBACpCnH,YAAerT,KAAKmZ,wBACpB/E,iBAAoBpU,KAAK4c,MAAMQ,aAAarc,KAAI,SAAA3D,GAAC,MAAK,CAACuV,OAAQvV,EAAE,iBAAiB,kBAEpF,4BACE8U,UAAU,iBACVkB,QAAS,WACP,EAAKzB,MAAMhF,MAAMQ,SAAS,EAAKyP,MAAMQ,cACrC,EAAKd,aAAa,UAJtB,+BAryBN,wCAkzBoB3b,EAAMW,GAAM,IAAD,OAK3B,MAAO,CACL8V,SAAUpX,KAAK2R,MAAM5V,EAAEoT,WAAW7N,GAClCgV,UANc,WACd,EAAKoI,SAAS,CAACd,aAAcjd,IAC7B,EAAKgc,cAKLtF,WAAY,WAAO,EAAKhI,YAAY/N,OA1zB1C,qCA+zBItB,KAAK2R,MAAMhF,MAAM2C,QAAQtP,KAAK4c,MAAMK,mBAAoBjd,KAAK4c,MAAMM,kBACnEld,KAAK2R,MAAMhF,MAAMR,qBACjBnM,KAAK0e,SAAS,CAACzB,oBAAqB,EAAGC,kBAAmB,IAEtDld,KAAK2R,MAAM5V,EAAEyQ,kBACfxM,KAAKqc,sBAp0BX,+CAy0BIrc,KAAK0e,SAAS,CAACE,kBAAkB,IACjC5e,KAAK2R,MAAMhF,MAAMmC,qBAAqBxG,IAAEtL,OAAO,KAC/CgD,KAAKsc,aAAa,oBA30BtB,0CA+0BItc,KAAK0e,SAAS,CAGZzG,QAAS,KAEXjY,KAAK0e,SAAS,CAAC3R,KAAM/M,KAAKwc,qBAAqBpE,GAAKrX,KAAI,SAAA3D,GAAC,sBAAOA,MAAM,KACtE4C,KAAKsc,aAAa,iBAr1BtB,kCAw1Bchb,GACVtB,KAAK2R,MAAMhF,MAAM0C,YAAY/N,GAC7BtB,KAAKsc,aAAa,kBA11BtB,oDA61BiC,IAAD,OAM5B,OAAO,kBAAC/E,GAAD,CAAe1K,MAAO7M,KAAK2R,MAAM5V,EAAEmT,UAAUnO,IAAIf,KAAK2a,mBAAoB/D,KALtE,WACT,EAAK0F,aAAa,SAElB,EAAKoC,SAAS,CAACE,kBAAkB,SAj2BvC,kDAu2BI,OAAO,kBAACpH,GAAD,CACLhW,MAASxB,KAAK2R,MAAM5V,EAAEqQ,WAAWrL,IAAIf,KAAKyZ,mBAAmBhY,MAAM,EAAE,GACrEmW,WAAc5X,KAAK2R,MAAM5V,EAAEqQ,WAAWrL,IAAIf,KAAKma,yBAC/CrC,aAAY,eAAQ9X,KAAK2R,MAAM5V,EAAEqQ,WAAWpM,KAAK4c,MAAMK,qBACvDpF,gBAAmB7X,KAAKqZ,yBACxB/M,SAAYtM,KAAK2R,MAAM5V,EAAEuQ,SAASvL,IAAIf,KAAKoa,sBAC3C3C,cAAiBzX,KAAK2R,MAAM5V,EAAEuQ,SAASvL,IAAIf,KAAKqa,uBAChD1C,gBAAe,eAAQ3X,KAAK2R,MAAM5V,EAAEuQ,SAAStM,KAAK4c,MAAMM,mBACxDxF,mBAAsB1X,KAAKsZ,uBAC3BjG,YAAerT,KAAKoc,iBAh3B1B,iDAo3B8B,IAAD,OACrB5H,EAAU,CACX,2BAAQ,WACN,EAAKkK,SAAS,CAACd,aAAc,EAAKhB,MAAMvQ,MAAQ,EAAKsF,MAAM5V,EAAEsQ,OAC7D,EAAKiQ,aAAa,YAEpB,2BAAQ,WACN,EAAKoC,SAAS,CAACrS,KAAM,EAAKuQ,MAAMvQ,MAAQ,EAAKsF,MAAM5V,EAAEsQ,OACrD,EAAKiQ,aAAa,SAGlBpE,OAAcpP,EAgBnB,OAfK9I,KAAK4c,MAAM3E,QAAQ7b,QAAU,IAC/B8b,EAAc5P,IAAEuY,KAAK7gB,KAAK4c,MAAM3E,QAAQrW,MAAK,SAACkf,EAAEC,GAAH,OAAUA,EAAED,KAAIrf,MAAM,EAAE,IACrEyW,EAAc5P,IAAE0Y,MAAM9I,EAAa,GACnC1D,EAAU,CACR,2BAAQA,EAAQyM,yBAChB,2BAAQ,WACN,EAAK3E,aAAa,SAClB,EAAKoC,SAAS,CACZE,kBAAkB,EAClBvS,UAAMvD,EACNiE,KAAMqL,GAAKrX,KAAI,SAAA3D,GAAC,sBAASA,WAK3B,kBAAC,GAAD,CACN6a,QAAO,sBAAQjY,KAAK4c,MAAM3E,SAAnB,YAA+B3P,IAAE0G,MAAM,EAAEhP,KAAK4c,MAAM3E,QAAQ7b,QAAQ,iBAAI,SAC/E8b,YAAeA,EACf1D,QAAWA,MAl5BhB,0CAs5BuB,IAAD,OAuBd0M,EAAgB,yBAAK5M,MAAM,UAC7B,uBAAGtW,MAAO,CAAC4X,UAAU,OAClB,CAAC,EAAE,EAAE,EAAE,GAAG7U,KACP,SAACO,GAAD,OAAS,kBAAC4T,GAAD,CACPpJ,QAAW,EAAK8Q,MAAMY,WAAWtf,UAAUoD,GAC3CqP,WAAc,SAACgD,GAAD,OAAW,EAAKiH,eAAe,YAAatZ,EAAKqS,IAC/DrS,IAAOA,EACPqH,OAAU,EAAKgJ,MAAM5V,EAAE4M,OACvBzK,UAAa,EAAKyT,MAAM5V,EAAEmC,eAPlC,iBAWO8B,KAAK2R,MAAM5V,EAAEoC,MAClB,6BACA,4BACE+T,UAAU,sBACVkB,QAAS,WAAO,EAAKsL,SAAS,CAACpB,YAAa,EAAKV,MAAMU,eAErDtd,KAAK4c,MAAMU,WAAa,2BAAS,4BAErC,4BACEpL,UAAU,sBACVlU,MAAO,CACL2W,QAA8B,SAApB3U,KAAK2R,MAAM5V,EAAEgQ,MAAiB,OAAS,IAEnDqH,QAAS,WACP,EAAKzB,MAAMhF,MAAMgB,OACjB,EAAKgE,MAAMhF,MAAM0B,YACjB,EAAKmL,YAAY,EAAK7H,MAAM5V,EAAE0P,mBARlC,4BAaA,4BACEyG,UAAU,sBACVlU,MAAO,CACL2W,QAAU3U,KAAK2R,MAAM3V,IAAIukB,SAAW,GAAK,QAE3CnN,QAAS,WAAK,EAAK+N,aALrB,8BAcAC,EAAc,6BAChB,uBAAGpjB,MAAO,CAAC4X,UAAW,OAAtB,gBACM5V,KAAK2R,MAAM5V,EAAE8F,OADnB,IAC4B7B,KAAK2R,MAAM5V,EAAEyP,WADzC,gBAGE,kBAACwJ,GAAD,CAAYnX,MAAOmC,KAAK2R,MAAM5V,EAAE8B,MAAOuG,KAAMpE,KAAK2R,MAAM5V,EAAEqI,OAC5D,6BACE,4BACEgP,QAAS,kBAAI,EAAK+N,YAClBnjB,MAAS,CACPsT,SAAU,WACV6G,SAAU,OACV5E,IAAK,KACLC,KAAM,MAENmB,QAAU3U,KAAK4c,MAAMgC,iBAAkB,OAAO,KARlD,UAcA,0BACExL,QAAS,WAAKhI,MAAM,EAAKuG,MAAM5V,EAAEiP,SAASvJ,MAAM,EAAE,IAAImC,KAAK,SAE1D5D,KAAK2R,MAAM5V,EAAEiP,SAAS,MAKzBqW,EACF,kBAAC,GAAD,CACE7f,MAASxB,KAAK2R,MAAM5V,EAAEI,MAAM4E,IAAIf,KAAK2Z,oBACrC1F,OAAUjU,KAAK2R,MAAM5V,EAAEI,MAAM4E,IAAIf,KAAK4Z,qBACtCvG,YAAerT,KAAK+Y,uBAIpBuI,EACF,kBAAC,GAAD,CACI9f,MAASxB,KAAK2R,MAAM5V,EAAE0D,KAAKsB,IAAIf,KAAKyZ,mBACpCxF,OAAUjU,KAAK2R,MAAM5V,EAAE0D,KAAKsB,IAAIf,KAAK0Z,oBACrCrG,YAAerT,KAAK6Y,sBAItB0I,EACF,kBAAC,GAAD,CACE/f,MAASxB,KAAK2R,MAAM5V,EAAEmN,OAAOnI,IAAIf,KAAK+Z,oBACtC9F,OAAUjU,KAAK2R,MAAM5V,EAAEmN,OAAOnI,IAAIf,KAAKga,qBACvC3G,YAAerT,KAAKiZ,qBACpBrF,gBAAmB,CAACtY,OAAQ,OAC5BgY,UAAa,CAAChY,OAAQ,MAAOkmB,YAAY,QAIzCC,EAAoB,kBAAC,GAAD,CACtBjgB,MAASxB,KAAK2R,MAAM5V,EAAEmB,SAAS6D,IAAIf,KAAKia,uBACxChG,OAAUjU,KAAK2R,MAAM5V,EAAEmB,SAAS6D,IAAIf,KAAKka,wBACzC7G,YAAerT,KAAKkZ,wBACpBtF,gBAAmB,CAACtY,OAAQ,SAG1BomB,EAAgB,kBAAC,GAAD,CAClBlgB,MAASxB,KAAK2R,MAAM5V,EAAEwP,MAAMxK,IAAIf,KAAKsa,mBACrCrG,OAAUjU,KAAK2R,MAAM5V,EAAEwP,MAAMxK,IAAIf,KAAKua,oBACtClH,YAAerT,KAAKuZ,oBACpB3F,gBAAmB,CAACtY,OAAQ,SAG1BqmB,EACJ,oCACE,kBAAC,KAAD,CACEC,SAAU,SAACtgB,GAAD,OAAO,EAAKod,SAAS,CAACb,cAAc,CAAC,WAAY,QAAQvc,MACnEugB,cAAe,CAAC,WAAY,QAAQliB,QAAQK,KAAK4c,MAAMiB,eACvD7f,MAAO,CAAC+Z,OAAQ,KAAMnC,UAAW,KAAMta,OAAQ,OAE/C,kBAAC,KAAD,KACE,kBAAC,KAAD,2BACA,kBAAC,KAAD,6BAGwB,YAA1B0E,KAAK4c,MAAMiB,cAA2B4D,EAAiBC,GAK3D,OACE,yBAAKxP,UAAU,SACb,kBAAC,GAAD,CACEwB,QAAU,aACVqB,QAAWqM,IAEb,kBAAC,GAAD,CACE5f,MAASxB,KAAK2R,MAAM5V,EAAEY,OAAOoE,IAAIf,KAAK6Z,qBACtC5F,OAAUjU,KAAK2R,MAAM5V,EAAEY,OAAOoE,IAAIf,KAAK8Z,sBACvCzG,YAAerT,KAAKgZ,sBACpBpF,gBAAmB,CAACe,QAAS3U,KAAK4c,MAAMU,WAAW,GAAG,UAEtDtd,KAAK4c,MAAMU,WAAa+D,EAAgBM,EAC1C,kBAAC,GAAD,CACEnN,QAAWxU,KAAK4c,MAAMS,OACtB3I,UAAqD,GAAvC9T,OAAOqG,KAAKjH,KAAK4c,MAAMS,QAAQjhB,OAAW4D,KAAK6a,uBAAuB7a,KAAK+a,iBAAYjS,IAErG9I,KAAK4c,MAAMU,WAAagE,EAAeC,EACzC,kBAAC,GAAD,CACE7N,QAAU,eACVqB,QAAWmM,IAEb,yBAAKhP,UAAU,gBACb,kBAAC,GAAD,CAAOhW,KAAM8D,KAAK4c,MAAMkB,eAxkClC,0CA+kCuB,IAAD,OAClB,OACE,yBAAK5L,UAAU,QAAQoC,MAAM,UAC3B,kBAAC,GAAD,CACEpY,KAAM8D,KAAK4c,MAAMkB,SACjBzK,YAAa,kBAAI,EAAKiJ,aAAa,cAplC7C,yCA2lCsB,IAAD,OACbtG,EAAahW,KAAKyc,iBAElBjI,EAAU,CACZsN,2BAAM,WAAO,EAAKxF,aAAa,SAC/ByF,2BAAM,kBAAM,EAAKrD,SAAS,CACxB3R,KAAM,EAAKyP,qBAAqB,EAAKI,MAAM7P,KAAM,EAAK6P,MAAMpE,eAAe,GAC3EA,eAAgB,EAAKoE,MAAMpE,eAAiB,KAE9C,yCAAYxY,KAAKmc,uBACjB6F,2BAAM,kBAAM,EAAK1F,aAAa,WAShC,OANItc,KAAK4c,MAAMgC,mBACbpK,EAAU,CACRsN,2BAAM,kBAAM,EAAKpF,gBAKnB,yBAAKxK,UAAU,SACb,kBAAC,GAAD,CACEnF,KAAQ/M,KAAK4c,MAAM7P,KACnBsG,YAAerT,KAAKuc,aAEtB,kBAAC,GAAD,CACE1G,cAAiB7V,KAAK4c,MAAM7P,KAAK5P,QAAO,SAAAmb,GAAC,OAAKA,EAAE1F,UAAY0F,EAAE7C,YAEhE,kBAAC,GAAD,CACEO,WAAcA,IAEhB,6BACA,yBACEhY,MAAO,CACL8U,MAAO,MACP6C,WAAY,KACZC,UAAW,MACXjB,QAASqB,GAAY,GAAK,GAAK,SALnC,wFAWA,kBAAC,GAAD,CACExB,QAAWA,OAvoCrB,0CA8oCuB,IAAD,OACdyN,EAAmB,kBAAC,GAAD,CACrBtO,MAAS3T,KAAK4c,MAAMlV,UACpByO,aAAgBnW,KAAKoZ,mBACrB1C,WAAc,kBAAM,EAAKgI,SAAS,CAAChX,UAAUlB,OAC7C8P,UAAa,WACX,EAAKoI,SAAS,CAACd,aAAcnT,GAAShD,EAAc,EAAKmV,MAAMlV,cAC/D,EAAKiV,gBAILuF,EAAqB,kBAAC,GAAD,CACvBvO,MAAS3T,KAAK4c,MAAM5U,UACpBmO,aAAgBnW,KAAKoZ,mBACrB9C,UAAa,WACX,EAAKoI,SAAS,CAACd,aAAcnT,GAAS,EAAKmS,MAAM5U,aACjD,EAAK2U,cAEPpG,WAAc,WACZ,EAAKmI,SAAS,CACZd,aAAcvf,EAAM0C,KAAI,SAAA3D,GAAC,kCAAOA,GAAP,IAAUgD,SAASc,KAAKC,MAAoB,EAAdD,KAAKlE,iBAC9D,EAAK2f,gBAIT,OACE,yBAAKzK,UAAU,SACb,kBAAC,KAAD,CACE0P,SAAU,SAACtgB,GAAD,OAAO,EAAKod,SAAS,CAACf,UAAU,CAAC,SAAU,UAAUrc,MAC/DugB,cAAe,CAAC,SAAU,UAAUliB,QAAQK,KAAK4c,MAAMe,WACvD3f,MAAO,CAAC+Z,OAAQ,KAAMzc,OAAQ,OAE9B,kBAAC,KAAD,KACE,kBAAC,KAAD,iCACA,kBAAC,KAAD,mCAIsB,UAAxB0E,KAAK4c,MAAMe,UAAwBsE,EAAkBC,EAEvD,kBAAC,GAAD,CACE1N,QAAW,CACTsN,2BAAM,kBAAM,EAAKpF,cACjByF,2BAAM,kBAAM,EAAK7F,aAAa,aAC9B8F,2BAAM,kBAAM,EAAK9F,aAAa,cA1rC1C,6CAisC0B,IAAD,OACrB,OAAQ,yBAAKpK,UAAU,SACrB,kBAAC,GAAD,CACE0E,KAAQ,kBAAM,EAAKA,QACnBT,aAAgB,SAACyJ,GAAW,EAAKlB,SAAS,CAAC5Z,KAAM8a,EAAME,OAAOnM,SAC9DA,MAAS3T,KAAK4c,MAAM9X,UAtsC5B,+BA4sCI,OAAO9E,KAAK4c,MAAMa,YA5sCtB,GAA2B4E,IAAMC,WClBlBC,GANHC,YAAO,CACjBC,KAAMhW,GACNgR,MAAO7E,GACP8J,OAAO,ICGWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e81abc71.chunk.js","sourcesContent":["import React from 'react';\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[G.field.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  card.atk += 3;\n  card.hp += 3;\n}\n\nfunction deal4dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 4;\n  logMsg(G, ctx, `${enemy.name} 受到4点伤害`);\n}\n\nfunction ready_order(G, ctx) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nexport const default_order = {\n  desc: \"1费→刷新\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span style={{transform:\"scale(0.8)\"}}>{material_icons[2]}→{material_icons[0]}{material_icons[1]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n      G.materials[0] += 1;\n      G.materials[1] += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span style={{transform:\"scale(0.8)\"}}>{material_icons[0]}→{material_icons[1]}{material_icons[2]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n      G.materials[1] += 1;\n      G.materials[2] += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span style={{transform:\"scale(0.8)\"}}>{material_icons[1]}→{material_icons[0]}{material_icons[2]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n      G.materials[0] += 1;\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}+1费</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}+1费</span>),\n    // desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}+1费</span>),\n    // desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2费</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.costs += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2费</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.costs += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2费</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.costs += 2;\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]}→+3/+3</span>),\n    cost: [0,0,1,0],\n    effect: add_atk_hp,\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]}→+3/+3</span>),\n    cost: [1,0,0,0],\n    effect: add_atk_hp,\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]}→+3/+3</span>),\n    cost: [0,1,0,0],\n    effect: add_atk_hp,\n  },\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 4伤害</span>),\n    cost: [0,0,1,0],\n    effect: deal4dmg,\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 4伤害</span>),\n    cost: [1,0,0,0],\n    effect: deal4dmg,\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 4伤害</span>),\n    cost: [0,1,0,0],\n    effect: deal4dmg,\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>重置1订单</span>),\n    effect: ready_order,\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>重置1订单</span>),\n    effect: ready_order,\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>重置1订单</span>),\n    effect: ready_order,\n  },\n\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy\n} from './Game';\nimport { material_icons } from './orders';\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:5, \n    hp:5, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 6,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:15,\n    hp:15,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n\n  \n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      self.block -= 1;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘/战斗: 摸1张牌\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx) {\n      draw(G, ctx);\n    },\n    onFight(G, ctx) {\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 6) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少6点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      if (card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:4, \n    atk:3, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+2>\", \n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      self.atk += 3 + 2 * self.power;\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc: <span>部署: 获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"行动: 获得+4生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 4 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n  {\n    name:\"年\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:12, \n    mine:2, \n    block:2, \n    desc:\"采掘/战斗: 横置1个敌人\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:1, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 使1个干员获得+5生命值\", \n    illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 5 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+5生命值\",\n  },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 部署1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      if (new_card) {\n        G.field.push(init_card_state(G, ctx, {...new_card}));\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"部署的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n\n  },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  // {\n  //   name:\"闪灵\",\n  //   cost:4,\n  //   atk:4,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"采掘/战斗: 使1个干员获得+3/+3\",\n  //   illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     // TODO: reconstruct this part, of course buffing an card needs a function\n  //     let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n  //     if (card) {\n  //       card.atk += 3 + 2 * self.power;\n  //       card.hp += 3 + 2 * self.power;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //     // It's okay to do this because \"onFight\"s are not on G.effects\n  //   },\n  //   reinforce_desc: \"再获得+2/+2\",\n  // },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  {\n    name:\"莫斯提马\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n    illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+1 <+1>\",\n  },\n  \n  {\n    name:\"皇帝\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得2分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += 2 * num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗4点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 4 + 2 * self.power)) {\n        let delta = 6 + 3 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+2，得分+3\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    onPlay(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce: 3,\n    reinforce_desc: \"触发1次\\\"部署\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得2个已完成的订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个已完成的订单\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，获得1个已完成的订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:5,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置所有已完成的订单\",\n    illust:\"http://prts.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    onMine(G, ctx, self) {\n      let count = G.finished.filter(x => x.exhausted).length;\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n\n      if (count >= 10) {\n        achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n      }\n\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let order = {};\n      let material = ctx.random.Die(3) - 1;\n      let requirements = [0,0,0,0];\n      requirements[material] = 1;\n      order.desc = <span>{material_icons[material]}→5伤害</span>;\n      order.effect = (G,ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          deal_random_damage(G, ctx, 5);\n        }\n      };\n      order.is_rhine = true;\n      G.finished.unshift(order);\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署/采掘: 使1个敌人攻击力-3\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield)[0];\n  //     if (enemy) {\n  //       enemy.atk -= 3;\n  //     }\n  //   },\n  //   onPlay(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"稀音\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let order = {}; // EH: Reconstruct this as this code is the same as Meier\n      let requirements = [1,1,1,0];\n      order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n      order.effect = (G, ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          G.score += 4;\n        }\n      };\n      G.finished.unshift(order);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 2;\n      self.atk += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  \n  {\n    name:\"塞雷娅\",\n    cost:7,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:5, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:4,\n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"采掘: 横置场上的1个干员，然后该干员每有2点攻击力，就获得1分\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      if (card) {\n        card.exhausted = true;\n        G.score += Math.floor(card.atk / 2);\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n\n  },\n  \n  {\n    name:\"灰喉\", \n    cost:4,\n    atk:3, \n    hp:1, \n    mine:1, \n    block:0, \n    desc:\"部署: 获得+12攻击力直到回合结束\", \n    illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += 12;\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 12;\n          self.played = false;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 8) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少8分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  {\n    name:\"黑\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"超杀: 对其对位敌人造成5点伤害\",\n    illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let idx = G.field.indexOf(self);\n        if (~idx) {\n          let enemy = G.efield[idx];\n          if (enemy) {\n            enemy.dmg += 5 + 4 * self.power;\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+4\",\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onFight(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的部署效果 \\\"${card.desc}\\\"`);}\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的采掘效果 \\\"${card.desc}\\\"`);}\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的战斗效果 \\\"${card.desc}\\\"`);}\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的行动效果 \\\"${card.desc}\\\"`);}\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 部署5个随机干员的1/1复制\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        G.field.push(init_card_state(G, ctx, card));\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  {\n    name:\"暴行\",\n    cost:2,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n      G.hand = cards.map(x => ({...x}));\n    },\n    onMine(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n    reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n\n  {\n    name:\"银灰\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 5) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰5次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得5分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 5 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 每有1组{material_icons.slice(0,3)}，就获得1个{material_icons[3]}</span>,\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:3,\n    hp:5,\n    mine:1,\n    block:2,\n    desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  {\n    name:\"苏苏洛\",\n    cost:4,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用，如果费用不够则获得-5/-5\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        let paid = payCost(G, ctx, 2);\n        if (!paid) {\n          self.atk -= 5;\n          self.hp -= 5;\n        }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc: \"部署: 强化所有手牌1次\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = [...G.hand];\n      for (let card of cards) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n  {\n    name:\"守林人\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"休整: 造成7点伤害\",\n    illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      deal_random_damage(G, ctx, 7 + 3 * self.power);\n    },\n    reinforce_desc: \"伤害+3\",\n  },\n  {\n    name:\"霜叶\",\n    cost:4,\n    atk:2,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"休整: 每有1个休整中的干员，就获得+1/+1\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      self.atk += num_rest_cards;\n      self.hp += num_rest_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"锡兰\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 每有1个休整中的干员，就获得1分\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n    reinforce: 2,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      G.score += num_rest_cards;\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  // {\n  //   name:\"诗怀雅\",\n  //   cost:4,\n  //   atk:4,\n  //   hp:5,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  //     if (player) {\n  //       player.onPlay(G, ctx, player);\n  //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  {\n    name:\"夜莺\",\n    cost:6,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n    onRest(G, ctx, self) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.onRest && (card.onRest != self.onRest)) {\n            card.onRest(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let resters = G.deck.filter(x => x.onRest);\n      if (resters.length > 0) {\n        let card = ctx.random.Shuffle(resters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个干员造成4点伤害，并使其获得\\\"采掘/战斗: 获得4分\\\"\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self)))[0];\n      if (card) {\n        card.dmg += 4;\n        if (card.dmg >= card.hp) {\n          let card_idx = G.field.indexOf(card);\n          G.field.splice(card_idx, 1);\n          G.discard.push(card);\n        }\n        else {\n          card.onMine = (G, ctx) => {G.score += 4};\n          card.onFight = card.onMine;\n          card.desc = \"采掘/战斗: 获得4分\";\n        }\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n        if (self.use_count >= 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:2,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 3,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸5张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<5; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:8,\n    atk:6,\n    hp:7,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得6分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 6;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+5/+5直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 5;\n      self.dmg -= 5;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 5;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"白金\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"采掘/战斗: 使1个干员获得+3攻击力\", \n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%87%91_1.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => x != self))[0];\n      if (card) {\n        card.atk += 3;\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+3/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    }\n  },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  {\n    name:\"红\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1分\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n  \n  \n  // {\n  //   name:\"巫恋\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"采掘: 使其对位敌人攻防减半\",\n  //   illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n  //   reinforce: 2,\n  //   onMine(G, ctx, self) {\n  //     // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n  //     // if (actor) {\n  //     //   actor.action(G, ctx, actor);\n  //     //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n  //     // }\n  //     let idx = G.field.indexOf(self);\n  //     if (~idx) {\n  //       let enemy = G.efield[idx];\n  //       if (enemy) {\n  //         enemy.atk /= 2;\n  //         enemy.hp /= 2;\n  //       }\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  //   reinforce_desc: \"获得2点费用\",\n  // },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0)))[0];\n      if (damaged_enemy) {\n        let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        G.efield.splice(enemy_idx, 1);\n        logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  {\n    name:\"星熊\",\n    cost:6,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:2,\n    desc: \"部署: 每有1张手牌，就获得+6生命值\",\n    illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let num_cards = G.hand.length;\n      self.hp += 6 * num_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n      self.block += 1;\n    },\n    reinforce_desc: \"+0/+6，阻挡数+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得5点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  {\n    name:\"白雪\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果\",\n    illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\", \"艾雅法拉\", \"雷蛇\"].includes(x.name))))[0];\n      if (miner) {\n        miner.onMine(G, ctx, self);\n        logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onFight(G, ctx, self) {\n      let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\", \"能天使\", \"雷蛇\"].includes(x.name))))[0];\n      if (fighter) {\n        fighter.onFight(G, ctx, self);\n        logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  {\n    name:\"W\",\n    cost:1,\n    atk:6,\n    hp:6,\n    mine:3,\n    block:1,\n    desc: \"部署: 翻开1张敌人牌\",\n    illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n    onPlay(G, ctx) {\n      drawEnemy(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n    },\n    reinforce_desc: \"+2/+0\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"部署\\\"德克萨斯\\\"\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n\n  \n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n\n\n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"部署: 获得1个随机能力\",\n    onPlay(G, ctx, self) {\n      let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      let time_point = ctx.random.Shuffle(time_points)[0];\n      let effects = ctx.random.Shuffle(G.EFFECTS);\n      let effect = effects[0];\n      self.desc = time_point[0] + effect[0];\n      self[time_point[1]] = effect[1];\n      self.reinforce_desc = effects[1][0];\n      self.onReinforce = effects[1][1];\n      logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  {\n    name:\"陆逊\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n    action(G, ctx, self) {\n      if (G.hand.length == 0) {\n        draw(G, ctx);\n        self.exhausted = false;\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"凯露\",\n    cost:10,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n    action(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n      if (enemy) {\n        G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:8,\n    mine:2,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  {\n    name:\"尤格萨隆\",\n    cost:10,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 随机施放10个法术\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<10; i++) {\n        let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n        effect[1](G, ctx, self);\n        logMsg(G, ctx, \"施放 \"+effect[0]);\n      }\n    },\n    reinforce_desc: \"随机施放1个法术\",\n    onReinforce(G, ctx, self) {\n      let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n      effect[1](G, ctx, self);\n      logMsg(G, ctx, \"施放 \"+effect[0]);\n    }\n  },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: -1,\n    hp: 4,\n    desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onOut(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state } from './Game';\n\nexport const UPGRADES = [\n  {\n    name: \"+2/+0\",\n    desc: \"+2攻击力\", // Write \"获得\"always\n    effect(G, ctx, card) {\n      card.atk += 2;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+1/+3\",\n    desc: \"+1/+3\", // Write \"获得\"always\n    effect(G, ctx, card) {\n      card.atk += 1;\n      card.hp += 3;\n    }\n  },\n\n  {\n    name: \"-2费\",\n    desc: \"部署费用-2\", // Write \"获得\"always\n    effect(G, ctx, card) {\n      card.cost -= 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(G, ctx, card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \"\\n起始\\n\";\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"3分\",\n    desc: \"部署奖励:\\\"获得3分\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 3;\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2材料\",\n    desc: \"部署奖励:\\\"获得2个材料\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 2);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2张牌\",\n    desc: \"部署奖励:\\\"摸2张牌\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          draw(G, ctx);\n          draw(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"4伤害\",\n    desc: \"部署奖励:\\\"造成4点伤害\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"手牌强化2\",\n    desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_hand(G, ctx);\n          reinforce_hand(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"部署1个费用为2的干员并使其生命值降为1\\\"\",\n    effect(G, ctx, card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            new_card = init_card_state(G, ctx, {...new_card});\n            new_card.hp = 1;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"订单1\",\n    desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          get_rhine_order(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"化解\",\n    desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n    effect(G, ctx, card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.danger = 0;\n        }\n      });\n    }\n  },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制\",\n    effect(G, ctx, card) {\n      card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n    }\n  },\n  \n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2\n惊蛰 0 1`;\n\nconst draw_vanguard = `芬 1 2\n清道夫 1 2\n调香师 0 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 2\n崖心 0 2\n阿消 0 1\n食铁兽 0 2\n铃兰 0 1\n苏苏洛 0 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n黑 2 3\n陨星 1 2\n阿消 0 2\n食铁兽 0 2\n克洛丝 2 3\n杰西卡 1 2\n蓝毒 2 3\n白金 2 3\n末药 1 2\n宴 2 3\n巡林者 2 3\n陈 1 2\n红豆 2 3\n炎熔 2 3\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 0 2\n伊桑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 3 4\n空 3 4\n莫斯提马 3 3\n皇帝 2 2\n波登可 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n艾雅法拉 1 2\n调香师 1 2\n可颂 0 2\n白面鸮 1 2\n阿米娅 0 2\n拉普兰德 1 2\n梓兰 1 2\n坚雷 0 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n巫恋 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 1 2\n稀音 2 3\n伊芙利特 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n巡林者 1 2\n银灰 1 2\n苏苏洛 1 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n阿消 1 2\n讯使 1 2\n梅尔 1 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n梅尔 1 2\n伊芙利特 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n波登可 2 3\n芬 2 3\n推进之王 1 2\n陈 2 3\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n古米 2 3\n早露 0 2\n慕斯 1 2\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 0 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n天火 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, angelina, karlan, ursus, rest, fullmoon];\n\nconst mini_sets = [' 风笛  白面鸮  温蒂  夜刀 ',\n ' 风笛  雷蛇  食铁兽  夜刀 ',\n ' 赫默  12F  白面鸮  陈  惊蛰  惊蛰  坚雷 ',\n ' 德克萨斯 德克萨斯 艾雅法拉 坚雷 空  空  温蒂 德克萨斯 坚雷 ',\n ' 空  空  温蒂  波登可 皇帝 空  空  温蒂 德克萨斯 坚雷',\n ' 刻刀  刻刀  刻俄柏  红  波登可 ',\n ' 孑  孑  宴  翎羽  白面鸮 ',\n ' 拉普兰德  白雪  白雪 ',\n ' 拉普兰德  能天使  刻俄柏 ',\n ' 白金  末药 煌 ',\n ' 守林人  守林人  夜莺 ',\n ' 霜叶  凯尔希  杜宾 ',\n ' 能天使 陨星 陨星 ',\n ' 能天使 炎熔 炎熔 ',\n ' 能天使  蓝毒  蓝毒  刻俄柏 陨星 ',\n ' 柏喙  翎羽 ',\n ' 白金  银灰  初雪 ',\n ' 末药  银灰  初雪 ',\n ' 凯尔希  杜宾  天火 ',\n ' 年  米格鲁  米格鲁  蛇屠箱  芙蓉 末药',\n ' 梓兰  梓兰  能天使 ',\n ' 赫默  白面鸮  伊芙利特  艾雅法拉 ',\n ' 史都华德  赫默  稀音  梅尔  伊芙利特  塞雷娅 ',\n ' 艾雅法拉  能天使  雷蛇  雷蛇 ',\n ' 温蒂  白面鸮  白面鸮  桃金娘 ',\n ' 温蒂  白面鸮  食铁兽 ',\n ' 初雪  史都华德  赫默  白面鸮  崖心 ',\n ' 调香师  调香师  艾雅法拉  暴行   清流   断罪者 ',\n ' 清道夫  清道夫  能天使   清流   断罪者 ',\n ' 铃兰  推进之王  红  红  红 ',\n ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n ' 真理   阿米娅  雷蛇  艾雅法拉 ',\n ' 普罗旺斯  灰喉  巡林者  白金  波登可 ',\n ' 苏苏洛  波登可 ',\n ' 锡兰  锡兰  夜莺 ',\n ' 拉普兰德  真理 ',\n ' 陈  真理 ',\n ' 食铁兽  真理 ',\n ' 伊桑  真理 ',\n ' 斯卡蒂  斯卡蒂 ',\n ' 凯尔希  凯尔希 ',\n ' 安赛尔  安赛尔 ',\n ' 伊桑  狮蝎  狮蝎 '].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle(mini_sets);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 6, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 6, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  deck = [...deck, ...deck_from_mini_sets(16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2 } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    card.dmg = card.dmg || 0;\n    card.dmg += dmg;\n    logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.limit_hand_field && (G.hand.length >= 6)) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (G.limit_hand_field && (G.field.length >= 6)) {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return;\n  }\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    for (let f of G.onPlayCard) {\n      f(G, ctx, card);\n    }\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n    if (card.onPlayBonus) {\n      for (let bonus of card.onPlayBonus) {\n        bonus.effect(G, ctx, card);\n      }\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  G.orders = ctx.random.Shuffle(G.odeck).slice(0, 6);\n  sort_orders(G);\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>(x.requirements.indexOf(3)-y.requirements.indexOf(3)));\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      let surge = switchEnemy(G, ctx);\n      if (enemy.onPlay && !surge) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    else {\n      if (enemy.onPlay) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  if (G.not_switch) {\n    return false;\n  }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n\n  return surge;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.harder_reinforce) {\n    let paid = payCost(G, ctx, 2);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"巫恋\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  });\n  let card = ranked_field_by_dmg[0];\n  card.cured = card.dmg;\n  card.dmg = 0;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  });\n  let card = ranked_field_by_dmg[0];\n  if (card) {\n    card.dmg -= amount;\n    if (card.dmg < 0) {\n      card.hp -= card.dmg;\n      card.dmg = 0;\n    }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.ORDERS)[0])};\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  // for (let i=0; i<G.shuffle_times; i++) {\n  //   ctx.random.D4(); \n  // }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx}));\n\n  let rng = new PRNG(seed);\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [default_order];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n\n    G.onPlayCard = [];\n    G.onCardMine = [];\n    G.onCardFight = [];\n    G.onCardAct = [];\n    G.onCardReinforced = [];\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"砾\", \"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nfunction refresh_picks(G, ctx) {\n  G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = Math.floor(idx / 2) + 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = ctx.random.Shuffle([generate_deck, generate_deck, generate_deck_s2, generate_deck_s2]);\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(G, ctx, card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n\n        G.onPlayCard = [];\n        G.onCardMine = [];\n        G.onCardFight = [];\n        G.onCardAct = [];\n        G.onCardReinforced = [];\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: springConfig.default,\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.color = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      let borderColor = \"black\";\n      if (tag.selected) {\n        borderColor = \"red\";\n      }\n      if (tag.locked) {\n        borderColor = \"#1E90FF\";\n      }\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: borderColor,\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        请组出一套强力或欢乐的卡组\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 砾, 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"40%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">欢迎来到竞技模式！<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={introduce_competition_mode}>竞技模式介绍</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"card-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick}/>\n    <div className=\"card-desc\">{props.selectedCard && props.selectedCard.desc}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>强化</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0, G.edeck.length-4);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"2回合后，所有敌人获得+4生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/c/cd/Global_tokencnt_2.png\",\n    desc: \"强化干员需要的材料数+1\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.reinforce += 1;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/6/6d/Enemy_eagent_1.png\",\n    desc: \"敌人无法被横置\",\n    level: 2,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.unyielding = true;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 5,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用\"史都华德\"进行采掘，史都华德的采掘能力为3，因此获得3个随机材料，博士因此获得了{material_icons[0]}、{material_icons[0]}和{material_icons[2]}；然后使用\"阿米娅\"进行采掘，阿米娅的采掘能力为2，因此获得{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士首先使用完成区的第一个订单，能力描述为\"{material_icons[0]}→？+？\"，也就是可以用1个{material_icons[0]}换2个随机材料，博士因此消耗1个{material_icons[0]}，获得了2个随机材料，分别为{material_icons[1]}和{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b>以下内容都是对更多规则细节的解释；<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级20  <br/>\n  * 点\"所有敌人获得+2生命值\"3级并完成危机等级20  <br/>\n  * 点\"2回合后，所有敌人获得冲锋\"并完成危机等级20 <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  <span>* 无敌的小火龙</span><br/>\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\nimport 'react-tabs/style/react-tabs.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_competition_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      finished_mode: \"finished\",\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    if (this.state.competition_mode) {\n      for (let tag of new_tags) {\n        if (tag.selected) {\n          tag.locked = true;\n        }\n      }\n    }\n\n    return new_tags;\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          <span style={{\n            display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n          }}>\n            <i>\n            部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n            </i>\n            <br/>\n          </span>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      this.setState({\n        pick_selected: idx,\n        checking: this.process_card_details(this.props.G.picks[idx]),\n      });\n      this.set_branch(\"pick\");\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (!this.state.competition_mode){\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n    else {\n      deck = this.state.Deck;\n      seed += this.state.results.length;\n    }\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n      seed: get_seed_name(),\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else{\n      this.change_board(\"tag\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 16 && risk_level < 22) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 22 && risk_level < 30) {\n          grade = \"SSSS\";\n        }\n        else if (risk_level >= 30 && risk_level < 50) {\n          grade = \"SSSSS\";\n        }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid blue\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: this.choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} />\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n\n            display: (this.state.competition_mode)?\"none\":\"\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs>\n      {(this.state.finished_mode==\"finished\")?finished_cardrow:pick_cardrow}\n      \n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => {this.change_board(\"deck\");},\n      快速设置: () => this.setState({\n        tags: this.choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      \"竞技模式(推荐)\": this.enter_competition_mode, \n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}