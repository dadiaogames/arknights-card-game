{"version":3,"sources":["icons.js","orders.js","cards.js","Game.js","enemies.js","upgrades.js","utils.js","DeckGenerator.js","alters.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","assets.js","relics.js","Roguelike.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","style","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","food_icons","color","smaller_icons","order_illust","material_icons","ready_order","G","ctx","from_card","random","Shuffle","finished","filter","x","exhausted","ready_other_orders","advanced_orders","requirements","score","reward","advanced","desc","effect","field_selected","card","field","logMsg","name","length","atk","hp","costs","slice","colors","reduce","acc","val","times","_","min","ORDERS","payCost","materials","cost","harvest","init_card","dmg","power","onPlayBonus","CARDS","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","achieve","queen","find","Object","assign","onPlay","deal_random_damage","white","draw","onTurnBegin","onFight","eliminate_field","exhaust_random_enemy","num_exhausted","efield","Math","enemy","new_card","deck","idx","indexOf","splice","init_card_state","hand","gainMaterials","drop","ready_random_card","summon","choice","cure","sort","y","cured","fully_restore","onPlayCard","push","this","floor","was_enemy","extra_cards","generator","num_finished","miners","unshift","fighters","map","actors","battlecries","onPayCost","amount","i","score_gained","onCardFight","includes","onEnemyOut","discard","cards","extracted_attrs","skill_power","reinforce_skill","j","onCardMine","undefined","payMaterials","use_count","danger","reinforce_hand","num_reinforced","reinforce_field","num_cards","played","has_discarded","onOut","gravel","join","excess","max","player","add_vulnerable","damaged_enemy","onRest","silent","cost_remained","meteorite","fever","mcard","enemy2card","enemy_idx","e","texas","wind","reinforce_card","BORROWS","generate_combined_card","blank_enemy","heijiao_in_dream","material","Die","ENEMIES","self_copy","is_elite","high","deal_damage","unyielding","enraged","drawEnemy","goal","UPGRADES","is_init","map_object","fn","obj","new_obj","k","PRNG","seed","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","cost_vanguard","scorer","strategies","mini_sets","mini_set","get_random_card","rng","banned_cards","card_pool","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","keys","c","deck_from_strategy","strategy","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","select_one_card","generate_deck_s2","deck_dict","sets","deck_from_mini_sets","generate_roguelike_deck","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","ALTER_ARTS","安洁莉娜","阿米娅","森蚺","陨星","安赛尔","史尔特尔","凛冬","孑","玫兰莎","陈","安比尔","move","d1","d2","f","gained","use","stage","onUseCard","get_blocker","blocked_enemies","out","total_dmg","vulnerable","exhausted_enter","pop","onDropCard","refreshOrder","orders","odeck","price_y","price_x","price_up","edeck","enemy_exhausted_enter","switcher","switchEnemy","replace","reversed","time_points","effects","EFFECTS","title","reverse","alist","unexhausted","exhausted_cards","prepared_cards","ready_times","clearField","str2deck","card_dict","item","arr2obj","alter_art","console","log","card_data","target_card","altered","old_illust","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardAct","onCardReinforced","onUseOrder","setup_scenario","ediscard","picks","max_danger","num_enemies_out","field_limit","relics","extra_gain","playing","round_num","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","get_desc","fontSize","display","quote","AC","setup","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","bonus","play_card","act","reinforce_need_cost","rest","rest_cards","num_rest_cards","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","setupRoguelikeBattle","onBattleBegin","turn","onBegin","concat","refresh","refresh_picks","setup_turn_states","enemy_grow","enemy_hp_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","limit_hand","reduce_goal","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","EnterGame","divAlign","Panel","content","ScoreBoard","useState","MaterialDisplay","Tag","bg_color","locked","backgroundColor","TagSelection","tag","TagList","marginLeft","marginTop","selected_tags","just_selected","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","process_selected_desc","margin","Competition","results","finalResult","TAGS","tag_list","t","level","process_tags","challenge","standard_level","rhodes_training_mode","relic_images","relic_names","RELICS","onSkipPick","S","random_upgrade","onPickCards","onBattleEnd","level_achieved","level_required","relic","onBuyRelic","used","gas","diff","onBought","get_relic_img","introduce_roguelike_mode","reset_tags","move_on","game_count","remained_tags","reduce_basic_tags","t1","t2","setup_daily_tags","date","locked_tags","other_tags","setup_normal_challenge","final_tag","basic_tags","another_challenge_tag","advanced_tags","setup_exhausted_challenge","preprocess_roguelike_card","get_pick","selection","get_roguelike_pick","reset_card_picks","card_picks","get_shop_item","item_type","shop_item","bought","get_relic","indexes","get_upgrade","delete_card","payGold","reset_shop","shop_items","get_gold_gained","gold_gained","level_diff","RoguelikeDeckSelection","RoguelikeDeckRepr","Pick","check_cards","pick_cards","GoldAmount","PickCards","skip_picks","ShopItem","buy","Shop","refresh_shop","Roguelike","enter_dream","enter_battle","check_deck","check_relics","FinishPick","RoguelikeTabs","onSelect","RoguelikeEntry","difficulties","ShowMeTheMoney","ResultWin","slam","grand_slam","gold_amount","continue","ResultLose","FinalResult","difficulty","roguelike","setup_roguelike_mode","roguelike_mode","Date","init_tags","central_idx","dream_count","set_difficulty","levels","skip_pick","current_item","item_idx","current_item_idx","continue_run","won","end_roguelike_mode","enter_daily_mode","daily_mode","end_daily_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_relic_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_relic_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_shop_board","render_roguelike_result_board","render_roguelike_final_result_board","render_roguelike_entry_board","enter_competition_mode","upgrade_card","start_competition","enter_roguelike_mode","buy_item","change_board","reset_preview_deck","choose_tag","choose_standard_tags","get_risk_level","enter_game","args","setState","produce","state","hand_selected","efield_selected","order_selected","finished_selected","selection_selected","upgrade_selected","pick_selected","shop_selected","hand_choices","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","show_finished","checking","scenario_finished","branches","log_select","new_tags","current_standard_level","competition_mode","cardrow","illust_variants","icon","order_data","rhine","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","order_id","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","failed","overflow","enter_difficulty","shop","centrals","selected_card","overflowY","lose","easy","medium","hard","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","快速设置","每日挑战","肉鸽模式","返回标题","返回","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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,GAJD,iCASjB,CACEnE,IAAK,uDACL2D,KAAM,sEACN6f,MAAO,EACPE,WAAW,EACX9f,OALF,SAKShB,EAAGC,GACRD,EAAE8S,iBAAmB,IAMzB,CACE1V,IAAK,+CACL2D,KAAM,gFACN6f,MAAO,EACPG,eAAgB,EAChB/f,OALF,SAKShB,EAAGC,GACRD,EAAEuX,YAAa,IAInB,CACEna,IAAK,iDACL2D,KAAM,8FACN6f,MAAO,EACPG,eAAgB,EAChB/f,OALF,SAKShB,EAAGC,GACRD,EAAE6X,KAAM,IAMZ,CACEza,IAAK,wDACL2D,KAAM,0CACN6f,MAAO,EACPG,eAAgB,EAChB/f,OALF,SAKShB,EAAGC,GACRD,EAAE6J,MAAQ,KAId,CACEzM,IAAK,kDACL2D,KAAM,qEACN6f,MAAO,EACPG,eAAgB,EAChB/f,OALF,SAKShB,EAAGC,GACRD,EAAE2X,eAAgB,IAKtB,CACEva,IAAK,iDACL2D,KAAM,yDACN6f,MAAO,GACP5f,OAJF,SAIShB,EAAGC,GACRD,EAAE2P,iBAAkB,MCzQbsR,I,MAAe,CAC1B,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,qEAGYC,GAAc,CAAC,iCAC5B,uCACA,iCACA,2BACA,uCACA,uCACA,2BACA,iCACA,uCACA,2BACA,2BACA,6CACA,2BACA,2BACA,2BACA,uCACA,iCACA,2BACA,iCACA,uCACA,iCACA,2BACA,2BACA,eACA,iCACA,uCACA,uCACA,2BACA,2BACA,uCACA,uCACA,iCACA,iCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,iCACA,iCACA,2BACA,uCACA,iCACA,iCACA,qCACA,6CACA,iCACA,kCACA,2BACA,uCACA,uCACA,uCACA,2BACA,iCACA,eACA,2BACA,iCACA,iCACA,2BACA,2BACA,uCACA,iCACA,6CACA,2BACA,6CACA,6CACA,uCACA,uCACA,uCACA,2BACA,2BACA,6CACA,6CACA,2BACA,uCACA,uCACA,2BACA,uCACA,iCACA,uCACA,2BACA,iCACA,2BACA,2BACA,6CACA,uCACA,6CACA,2BACA,mCACA,6CACA,iCACA,uCACA,uCACA,2BACA,2BACA,iCACA,uCACA,2BACA,iCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,wCACA,4BACA,4BACA,4BACA,kCACA,4BACA,4BAC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","file":"static/js/main.11e0ad28.chunk.js","sourcesContent":["import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"http://prts.wiki/images/b/b1/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E5%90%88%E7%BA%A6%E8%B5%8F%E9%87%91.png\" style={{height: \"1.1em\"}} className=\"steel\" />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 9l-6 6 6 6\"/><path d=\"M20 4v7a4 4 0 0 1-4 4H5\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];\n\nconst smaller_height = '1.1em';\nexport const smaller_icons = [\n  (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" style={{height:smaller_height}} className=\"material steel\" />),\n]","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[G.field.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得11/+1`);\n  }\n  card.atk += 1;\n  card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nfunction set_collection_order(G, ctx) {\n  let colors = G.finished.reduce((acc,val)=>{\n    if(val.color >= 0) acc[val.color]+=1;\n    return acc;\n  }, [0,0,0]);\n  // console.log(colors);\n  let times = _.min(colors);\n  G.score += 2 * times;\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+1/+1</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    desc: (<span>获得: 1费</span>),\n    advanced: true,\n    effect(G, ctx) {\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [1,1,1,0],\n    score: 1, \n    // reward: 2,\n    advanced: true,\n    desc: (<span>2分/每组{food_icons.slice(0,3)}订单</span>),\n    effect: set_collection_order,\n  },\n  \n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   desc: (<span>重置1订单</span>),\n  //   advanced: true,\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n    \n];\n  \nexport const ORDERS = [\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 4,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 4,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 4,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>{material_icons[2]} → 2费</span>),\n  //   cost: [0,0,1,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 2费</span>),\n  //   cost: [1,0,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 2费</span>),\n  //   cost: [0,1,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n\n  // // {\n  //   requirements: [3,0,0,0],\n  //   score: 2, \n  //   reward: 2,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2, \n  //   reward: 0,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // }, \n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  \n  \n\n  ...advanced_orders,\n  // ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, reduce_enemy_atk, silent, summon, eliminate_field, reinforce_field, choice, add_vulnerable, play_card\n} from './Game';\nimport { material_icons, ready_order } from './orders';\n\nexport function init_card(card) {\n  return {\n    name: \"card\",\n    block: 0,\n    dmg: 0,\n    power: 0,\n    // material: rng.randRange(3),\n\n    onPlayBonus: [],\n\n    ...card,\n  };\n}\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    action(G, ctx, self) {\n      if (self.power == 1) {\n        let queen = G.CARDS.find(x => x.name == \"阿米娅-近卫\");\n        Object.assign(self, queen);\n        self.onPlay(G, ctx, self);\n      }\n      else {\n        logMsg(G, ctx, \"只需要强化1次即可\");\n      }\n      self.exhausted = false;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得1分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:6, \n    hp:6, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 6;\n    },\n    reinforce_desc: \"+6/+6\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 9,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let white = G.CARDS.find(x => x.name == \"白面鸮\");\n      Object.assign(self, white);\n      self.exhausted = false;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:16,\n    hp:16,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 摧毁场上1个(重置状态的)干员，并获得4点费用\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx, self) {\n      if (eliminate_field(G, ctx)) {\n        G.costs += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用(最多4点)\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += Math.min(num_exhausted, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 6) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少6点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+1>\", \n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 1;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+2/+2\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      self.atk += 2 + 2 * self.power;\n      self.hp += 2 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc: <span>采掘: 弃2张牌，获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.materials[3] += 2;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不够\");\n        // self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:2, \n    desc:\"行动: 获得+6生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n  {\n    name:\"年\", \n    cost:4, \n    atk:3, \n    hp:9, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n  // {\n  //   name:\"斑点\", \n  //   cost:5, \n  //   atk:3, \n  //   hp:15, \n  //   mine:1, \n  //   block:2, \n  //   desc:\"行动: 使自己和左右两侧干员获得+4生命值\", \n  //   illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n  //   action(G, ctx, self) {\n  //     let self_idx = G.field.indexOf(self);\n  //     G.field.map((card, idx) => {\n  //       if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n  //         card.hp += 4;\n  //       }\n  //     });\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"完全治疗自己并获得+2生命值\",\n  //   onReinforce(G, ctx, self) {\n  //     self.dmg = 0;\n  //     self.hp += 2;\n  //   }\n  // },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  // {\n  //   name:\"芙蓉\", \n  //   cost:1, \n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 完全治疗1个干员\", \n  //   illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     fully_restore(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        // G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n        summon(G, ctx, new_card, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个(重置状态的)干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      let card = choice(ctx, G.field.filter(x => x!=self).filter(x => !x.exhausted));\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n  },\n  \n  // {\n  //   name:\"Lancet-2\", \n  //   cost:3,\n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 本回合下一次部署干员时，会额外部署1次\", \n  //   was_enemy: true,\n  //   illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let play_again = () => {\n  //       let played = false;\n  //       return (G, ctx, card_played, card) => {\n  //         if (!played) {\n  //           play_card(G, ctx, card);\n  //           played = true;\n  //         }\n  //       }};\n  //     G.onPlayCard.push(\n  //       play_again(),\n  //     );\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let cured = fully_restore(G, ctx);\n      if (cured >= 4) {\n        G.score += 2 + 2 * self.power;\n      }\n    },\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"皇帝\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得1分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + self.power, true)) {\n        let delta = 6 + 2 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+1，得分+2\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    action(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce: 3,\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"特米米\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"超杀: 每造成2点额外伤害，就获得1个材料\",\n    illust:\"http://prts.wiki/images/0/0a/%E7%AB%8B%E7%BB%98_%E7%89%B9%E7%B1%B3%E7%B1%B3_1.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let times = Math.floor(delta / 2);\n        // for (let i=0; i<times; i++) {\n        //   let order = choice(ctx, G.finished.filter(x => !x.exhausted));\n        //   if (order) {\n        //     order.effect(G, ctx);\n        //     logMsg(G, ctx, [\"触发订单 \", order.desc]);\n        //   }\n        // }\n        gainMaterials(G, ctx, times);\n      }\n    },\n    // action(G, ctx) {\n    //   G.onUseOrder.push(\n    //     (G, ctx) => {\n    //       deal_random_damage(G, ctx, 3);\n    //     }\n    //   );\n    // },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3攻击力\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  // {\n  //   name:\"梅尔\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n  //   reinforce: 1,\n\n  //   onPlay(G, ctx) {\n  //     let order = {};\n  //     let material = ctx.random.Die(3) - 1;\n  //     let requirements = [0,0,0,0];\n  //     requirements[material] = 1;\n  //     order.desc = <span>{material_icons[material]}→5伤害</span>;\n  //     order.effect = (G,ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         deal_random_damage(G, ctx, 5);\n  //       }\n  //     };\n  //     order.is_rhine = true;\n  //     G.finished.unshift(order);\n  //   },\n    \n  //   onReinforce(G, ctx) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"摄影车\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个\\\"稀音\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/d/d5/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E7%A7%BB%E5%8A%A8%E6%91%84%E5%BD%B1%E5%99%A8.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, card, ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"稀音\\\"\",\n  },\n  \n  {\n    name:\"机械水獭\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个\\\"梅尔\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E6%9C%BA%E6%A2%B0%E6%B0%B4%E7%8D%AD.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), card.generator(ctx), ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"梅尔\\\"\",\n  },\n\n\n\n  \n  {\n    name:\"斑点\",\n    cost:6,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:5, \n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:3,\n    atk:4, \n    hp:3, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每使用干员消耗1点费用，就造成3点伤害\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    action(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      // if (card) {\n      //   card.exhausted = true;\n      //   let delta = Math.floor(card.atk / 2);\n      //   G.score += delta;\n      //   logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n      // }\n      let power = self.power;\n      G.onPayCost.push(\n        (G, ctx, amount) => {\n          for (let i=0; i<amount; i++) {\n            deal_random_damage(G, ctx, 3 + power);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    reinforce_desc: \"伤害+1\",\n\n  },\n  \n  // {\n  //   name:\"灰喉\", \n  //   cost:4,\n  //   atk:2, \n  //   hp:1, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 获得+15攻击力直到回合结束\", \n  //   illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let delta = 15;\n  //     self.atk += delta;\n  //     self.played = true;\n  //     self.onTurnBegin = (G, ctx, self) => {\n  //       if (self.played) {\n  //         self.atk -= delta;\n  //         self.played = false;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n\n  // },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 7) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少7分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name:\"断崖\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成1点额外伤害，就摸1张牌\",\n    illust:\"http://prts.wiki/images/1/1b/%E7%AB%8B%E7%BB%98_%E6%96%AD%E5%B4%96_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        for (let i=0; i<delta; i++) {\n          draw(G, ctx);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"迷迭香\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:\"超杀: 召唤2个随机干员的2/2复制\",\n    illust:\"https://s3.ax1x.com/2020/11/26/Ddxxbt.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        for (let i=0; i<2; i++) {\n          let card = ctx.random.Shuffle(G.CARDS)[0];\n          card = {...card};\n          card.atk = 2;\n          card.hp = 2;\n          card.mine = 1;\n          card.cost = 2;\n          summon(G, ctx, card, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"安比尔\",\n    cost:2,\n    atk:4,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，干员的\\\"超杀:\\\"效果将额外触发1次\",\n    illust:\"http://prts.wiki/images/3/3e/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%AF%94%E5%B0%94_1.png\",\n    action(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, self, enemy) => {\n          if (enemy.dmg > enemy.hp && ((typeof self.desc) == \"string\") && self.desc.includes(\"超杀\")) {\n            self.onFight && self.onFight(G, ctx, self, enemy);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n  // {\n  //   name:\"黑\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"超杀: 对其对位敌人造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let idx = G.field.indexOf(self);\n  //       if (~idx) {\n  //         let enemy = G.efield[idx];\n  //         if (enemy) {\n  //           enemy.dmg += 5 + 4 * self.power;\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"伤害+4\",\n  // },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E9%85%B8%E7%B3%96_1.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:1, \n    hp:1, \n    mine:1, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 立即获得目标生命+2，费用+1，然后弃牌堆里每有1个热水壶，就获得2分\", \n    illust:\"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\",\n    onPlay(G, ctx, self) {\n      self.hp += 2;\n      G.costs += 1;\n      G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3+3*self.power); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的部署效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的采掘效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的战斗效果`, '\"', card.desc, '\"']);\n      }\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的行动效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);\n      }\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制(无视场面上限)\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        // G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  // {\n  //   name:\"暴行\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:4,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n  //   illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n  //   onPlay(G, ctx) {\n  //     let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n  //     G.hand = cards.map(x => ({...x}));\n  //   },\n  //   onMine(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  // },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n  \n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://s3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    desc: `行动: 造成3点伤害，重复4次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成3点伤害，重复${4+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/3)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      self.action = (G, ctx, self) => {\n        for (let i=0; i<(4+self.skill_power); i++) {\n          deal_random_damage(G, ctx, 3);\n        }\n        for (let j=0; j<(self.skill_power/3 + 1); j++) {\n          G.onCardMine.push((G, ctx) => {\n            G.score += 1;\n          });\n        }\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      };\n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n      self.desc = this.desc;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:5,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 6) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰6次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 2 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n  // {\n  //   name:\"雪雉\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"部署/采掘/战斗: 清除弃牌堆中的2张牌，获得3分\",\n  //   illust:\"http://prts.wiki/images/8/89/%E7%AB%8B%E7%BB%98_%E9%9B%AA%E9%9B%89_1.png\",\n  //   (G, ctx, self) {\n  //     // if (G.discard.length >= 4) {\n  //     //   G.discard = G.discard.slice(4);\n  //     //   G.score += 6 + 2 * self.power;\n  //     // }\n  //     // else {\n  //     //   logMsg(G, ctx, `弃牌堆中的牌数量不够(${G.discard.length}/4)`);\n  //     //   self.exhausted = false;\n  //     // }\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"再获得2分\",\n  // },\n\n  // {\n  //   name:\"初雪\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n  //   illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n  //   action(G, ctx, self) {\n  //     G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"获得2点费用\",\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  // },\n  // {\n  //   name:\"角峰\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:1,\n  //   block:2,\n  //   desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n  //   illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     self.atk += G.materials[3];\n  //     self.hp += G.materials[3];\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n  {\n    name:\"棘刺\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己(每回合限6次)\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%A3%98%E5%88%BA_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0 && self.use_count > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n        self.use_count -= 1;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足 或 使用次数已达到上限\");\n      }\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 6;\n    },\n    reinforce: 2,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"夜烟\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:3,\n    block:0,\n    desc:\"采掘: 消耗2点费用，再获得3个材料\",\n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E7%83%9F_1.png\",\n    onMine(G, ctx) {\n      if (payCost(G, ctx, 2, true)) {\n        gainMaterials(G, ctx, 3);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+2>\",\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    }\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:5,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"行动: 强化1张手牌，然后每有1张强化过的手牌，就获得1点费用\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    // onMine(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    // },\n    action(G, ctx, self) {\n      reinforce_hand(G, ctx);\n      let num_reinforced = G.hand.filter(x => (x.power > 0)).length;\n      G.costs += num_reinforced;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"真理\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:3,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:2,\n    desc: \"采掘/战斗: 强化场上1个(重置状态的)干员\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name:\"诗怀雅\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"部署: 强化场上1个(重置状态的)干员，重复3次\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  //休整一家暂时退休\n  // {\n  //   name:\"守林人\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n  //   illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n  //   },\n  //   reinforce_desc: \"伤害+3\",\n  // },\n  {\n    name:\"霜叶\",\n    cost:2,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"采掘: 将场上1个(重置状态的)干员返回手牌\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    // onRest(G, ctx, self) {\n    //   let num_rest_cards = get_num_rest_cards(G, ctx);\n    //   self.atk += num_rest_cards;\n    //   self.hp += num_rest_cards;\n    // },\n    onMine(G, ctx, self) {\n      let card = choice(ctx, G.field.filter(x => !x.exhausted));\n      if (card) {\n        G.field = G.field.filter(x => x != card);\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  // {\n  //   name:\"锡兰\",\n  //   cost:3,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 每有1个休整中的干员，就获得1分\",\n  //   illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n  //   reinforce: 2,\n  //   onRest(G, ctx, self) {\n  //     let num_rest_cards = get_num_rest_cards(G, ctx);\n  //     G.score += num_rest_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  //   reinforce_desc: \"获得2点费用\",\n  // },\n  // // {\n  // //   name:\"诗怀雅\",\n  // //   cost:4,\n  // //   atk:4,\n  // //   hp:5,\n  // //   mine:1,\n  // //   block:1,\n  // //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  // //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  // //   reinforce: 1,\n  // //   onRest(G, ctx, self) {\n  // //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  // //     if (player) {\n  // //       player.onPlay(G, ctx, player);\n  // //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  // //     }\n  // //   },\n  // //   onReinforce(G, ctx, self) {\n  // //     self.atk += 2;\n  // //     self.hp += 2;\n  // //   },\n  // //   reinforce_desc: \"+2/+2\",\n  // // },\n  // {\n  //   name:\"夜莺\",\n  //   cost:5,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n  //   onRest(G, ctx, self) {\n  //     if (~G.field.indexOf(self)) {\n  //       for (let card of G.field.map(x=>x)) {\n  //         if (card.onRest && (card.onRest != self.onRest)) {\n  //           card.onRest(G, ctx, card);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     let resters = G.deck.filter(x => x.onRest);\n  //     if (resters.length > 0) {\n  //       let card = ctx.random.Shuffle(resters)[0];\n  //       G.hand.unshift(Object.assign({}, card));\n  //     }\n  //   },\n  //   reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  // },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个(重置状态的)干员造成3点伤害，并获得3分\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      if (card) {\n        card.dmg += 3;\n        G.score += 3;\n        if (card.dmg >= card.hp) {\n          // let card_idx = G.field.indexOf(card);\n          // G.field.splice(card_idx, 1);\n          // G.discard.push(card);\n          G.field = G.field.filter(x => x != card);\n          G.discard = [card, ...G.discard];\n        }\n        // else {\n          // card.onMine = (G, ctx) => {G.score += 4};\n          // card.onFight = card.onMine;\n          // card.desc = \"采掘/战斗: 获得4分\";\n          // G.score += 3;\n        // }\n\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n\n      // G.onDropCard.push(\n      //   (G, ctx) => {\n      //     G.score += 1;\n      //   }\n      // );\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸3张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<3; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:6,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得5分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 5;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  // {\n  //   name:\"格拉尼\",\n  //   cost:4,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n  //   illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%A0%BC%E6%8B%89%E5%B0%BC_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n  //     G.field.push(init_card_state(G, ctx, {...new_card}));\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"月见夜\", \n    cost:3, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘/战斗: 如果你在本回合弃过手牌，则获得+3/+3\", \n    illust:\"http://prts.wiki/images/0/02/%E7%AB%8B%E7%BB%98_%E6%9C%88%E8%A7%81%E5%A4%9C_1.png\",\n    onMine(G, ctx, self) {\n      if (G.has_discarded) {\n        self.atk += 3;\n        self.hp += 3;\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n      // self.mine += 3;\n      // self.played = true;\n      // self.onTurnBegin = (G, ctx, self) => {\n      //   if (self.played) {\n      //     self.mine -= 3;\n      //     self.played = false;\n      //   }\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  \n  // {\n  //   name:\"杰克\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n  //   illust:\"http://prts.wiki/images/1/1d/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E5%85%8B_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n  //     G.hand.unshift(card);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E6%A3%AE%E8%9A%BA_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    // onReinforce(G, ctx, self) {\n    //   self.atk += 2;\n    //   self.hp += 2;\n    // },\n    // reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:5,\n    hp:8,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得+1攻击力并治疗2点伤害\",\n    illust:\"http://prts.wiki/images/4/48/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E6%8B%89%E6%A0%BC_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let excess = enemy.dmg - enemy.hp;\n        self.atk += excess;\n        self.dmg = Math.max(self.dmg - excess * 2, 0);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 使1个敌人获得易伤2，重复2次\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      // reduce_enemy_atk(G, ctx, 4);\n      // reduce_enemy_atk(G, ctx, 4);\n      for (let i=0; i<2+self.power; i++) {\n        add_vulnerable(G, ctx, 2);\n      }\n    },\n    // onReinforce(G, ctx, self) {\n    //   G.costs += 2;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  {\n    name:\"四月\",\n    cost:3,\n    atk:2,\n    hp:1,\n    mine:0,\n    block:0,\n    desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n    illust:\"http://prts.wiki/images/2/2c/%E7%AB%8B%E7%BB%98_%E5%9B%9B%E6%9C%88_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.field.map(card => {\n        if (card.exhausted) {\n          card.exhausted = false;\n          card.mine = 0;\n          silent(card);\n        }\n      })\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"贾维\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"采掘: 弃2张牌，获得4点费用\",\n    illust:\"http://prts.wiki/images/2/2d/%E7%AB%8B%E7%BB%98_%E8%B4%BE%E7%BB%B4_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.costs += 4;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },{\n    name:\"泥岩\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:3,\n    block:2,\n    desc:\"部署: 消耗所有剩余费用，然后每消耗1点，就获得+3/+3\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E6%B3%A5%E5%B2%A9_1.png\",\n    onPlay(G, ctx, self) {\n      let cost_remained = G.costs;\n      self.atk += 3 * cost_remained;\n      self.hp += 3 * cost_remained;\n      G.costs = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"阻挡数+1\",\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n  },\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:5,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"行动: 弃2张牌，获得+2/+2，然后重置自己\",\n  //   illust:\"\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       self.atk += 2 + self.power;\n  //       self.hp += 2 + self.power;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"再获得+1/+1\",\n  // },\n  {\n    name:\"微风\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 弃3张牌，召唤1个费用为4的干员\",\n    illust:\"http://prts.wiki/images/e/e7/%E7%AB%8B%E7%BB%98_%E5%BE%AE%E9%A3%8E_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length >= 3) {\n        drop(G, ctx);\n        drop(G, ctx);\n        drop(G, ctx);\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n        summon(G, ctx, new_card, self);\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤1个费用为2的干员\",\n    onReinforce(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      summon(G, ctx, new_card, self);\n    },\n  },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的1/1复制\",\n  //   illust:\"\",\n  //   onPlay(G, ctx, self) {\n  //   },\n  //   onMine(G, ctx, self) {\n  //   },\n  //   onFight(G, ctx, self, enemy) {\n  //   },\n  //   action(G, ctx, self) {\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  // },\n  {\n    name:\"亚叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤1个随机干员的6/6复制</span>,\n    illust:\"http://prts.wiki/images/5/5f/%E7%AB%8B%E7%BB%98_%E4%BA%9A%E5%8F%B6_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let card = ctx.random.Shuffle(G.CARDS)[0];\n        card = {...card};\n        card.atk = 6;\n        card.hp = 6;\n        card.mine = 3;\n        card.cost = 5;\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },{\n    name:\"史尔特尔\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"超杀: 消耗1点费用，重置自己\",\n    illust:\"http://prts.wiki/images/0/0c/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94_1.png\",\n    onFight(G, ctx, self, enemy) {\n      // if (G.field.indexOf(self) == G.efield.indexOf(enemy) && payCost(G, ctx, 1)) {\n      //   self.exhausted = false;\n      // }\n      if (enemy.dmg > enemy.hp && payCost(G, ctx, 1, true)) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },{\n    name:\"流星\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:0,\n    desc:\"部署: 造成5点伤害\",\n    illust:\"http://prts.wiki/images/b/be/%E7%AB%8B%E7%BB%98_%E6%B5%81%E6%98%9F_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 5);\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  {\n      name:\"空爆\",\n      cost:2,\n      atk:3,\n      hp:2,\n      mine:1,\n      block:0,\n      desc:\"采掘: 摧毁场上1个(重置状态的)干员，并造成6点伤害\",\n      illust:\"http://prts.wiki/images/8/87/%E7%AB%8B%E7%BB%98_%E7%A9%BA%E7%88%86_1.png\",\n      onMine(G, ctx, self) {\n        if (eliminate_field(G, ctx)) {\n          deal_random_damage(G, ctx, 6 + 4 * self.power);\n        }\n      },\n      action(G, ctx, self) {\n        if (self.power == 1) {\n          let meteorite = G.CARDS.find(x => x.name == \"陨星\");\n          Object.assign(self, meteorite);\n          self.action = undefined;\n        }\n        else {\n          logMsg(G, ctx, \"只需要强化1次即可\");\n          self.exhausted = false;\n        }\n      },\n      reinforce: 1,\n      reinforce_desc: \"伤害+4\",\n      // onReinforce(G, ctx, self) {\n      //   deal_random_damage(G, ctx, 3);\n      // },\n    },\n\n  {\n    name:\"卡达\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，使用其他干员采掘时，重置自己\",\n    illust:\"http://prts.wiki/images/1/1a/%E7%AB%8B%E7%BB%98_%E5%8D%A1%E8%BE%BE_1.png\",\n    action(G, ctx, self) {\n      self.fever = true;\n      G.onCardMine.push(\n        (G, ctx, mcard) => {\n          for (let card of G.field) {\n            if (card.fever && (!mcard.fever)) {\n              card.exhausted = false;\n            }\n          }\n        }\n      );\n    },\n    onTurnBegin(G, ctx, self) {\n      self.fever = false;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },\n\n  // {\n  //   name:\"白雪\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果(视为自己触发)\",\n  //   illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n  //     if (miner) {\n  //       miner.onMine(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n  //     if (fighter) {\n  //       fighter.onFight(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     draw(G, ctx);\n  //   },\n  //   reinforce_desc: \"摸1张牌\",\n  // },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 变成手牌中1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 3,\n    action(G, ctx, self) {\n      // if (G.field.length > 1){\n      //   G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      // }\n      let card = choice(ctx, G.hand);\n      if (card) {\n        Object.assign(self, card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:1,\n  //   atk:6,\n  //   hp:6,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"部署: 翻开1张敌人牌\",\n  //   illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   onPlay(G, ctx) {\n  //     drawEnemy(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n\n      if (self.power == 3) {\n        let wind = G.CARDS.find(x => x.name == \"风笛\");\n        if (~G.field.indexOf(self)) {\n          Object.assign(self, wind);\n        }\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n].map(init_card);\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:8,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n].map(init_card);\n\nexport const heijiao_in_dream =  {\n    name:\"黑角\",\n    cost:1,\n    atk:8,\n    hp:8,\n    mine:4,\n    block:2,\n    onPlayBonus: [],\n    desc:\"部署: 获得5000分\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    onPlay(G, ctx) {\n      G.score += 5000;\n    },\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n};\n\nexport const extra_cards = [\n  {\n    name:\"稀音\",\n    cost:0,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    material:3,\n    desc:\"\",\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 3;\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name: \"梅尔\",\n    generator(ctx) {\n      let material = ctx.random.Die(3) - 1;\n      return {\n          name:\"梅尔\",\n          cost:1,\n          atk:3,\n          hp:2,\n          mine:1,\n          block:1,\n          material:3,\n          desc: <span>行动: 消耗1个{material_icons[material]}，造成6点伤害</span>,\n          illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n          reinforce: 1,\n      \n          action(G, ctx) {\n            let requirements = [0,0,0,0];\n            requirements[material] = 1;\n            if (payMaterials(G, ctx, requirements)) {\n                deal_random_damage(G, ctx, 6);\n            }\n          },\n          \n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n    \n].map(init_card);\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1 } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\nimport { ICONS } from \"./icons\";\nimport { ALTER_ARTS } from \"./alters\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost, from_card) {\n  if (G.costs >= cost) {\n    G.costs -= cost;\n\n    if (from_card) {\n      for (let f of G.onPayCost) {\n        f(G, ctx, cost);\n      }\n    }\n\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n\n    if (G.stage == \"player\") {\n      for (let f of G.onUseCard) {\n        f(G, ctx, card);\n      }\n    }\n\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    let total_dmg = dmg + (card.vulnerable || 0);\n    card.dmg = (card.dmg || 0) + total_dmg;\n    logMsg(G, ctx, `${card.name} 受到${total_dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function eliminate_field(G, ctx) {\n  let card = ctx.random.Shuffle(G.field.filter(x => !x.exhausted))[0];\n  if (card) {\n    G.field = G.field.filter(x => x != card);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.hand.length >= 10) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n\n    G.has_discarded = true;\n\n    for (let f of G.onDropCard) {\n      f(G, ctx);\n    }\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = [...G.hand.slice(0,5).filter((x, idx) => !choices[idx]), ...G.hand.slice(5)];\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function play_card(G, ctx, card) {\n  if (G.field.length < G.field_limit) {\n    let inserted = init_card_state(G, ctx, {...card});\n    G.field = [...G.field, inserted];\n    if (inserted.onPlay) {\n      inserted.onPlay(G, ctx, inserted);\n    }\n    for (let bonus of (inserted.onPlayBonus || [])) {\n      bonus && bonus.effect(G, ctx, inserted);\n    }\n    return inserted;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    let inserted = play_card(G, ctx, card); // EH: What a strange abstraction, this should be changed\n    if (inserted) {\n      for (let f of G.onPlayCard) {\n        f(G, ctx, inserted, card);\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.push(card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  G.orders = ctx.random.Shuffle(G.odeck).slice(0, 8);\n  G.orders = sort_orders(G.orders);\n}\n\nfunction sort_orders(orders) {\n  return orders.sort((x,y) => {\n    let price_y = _.sum(y.requirements);\n    let price_x = _.sum(x.requirements);\n    if (price_y != price_x) return price_x - price_y;\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\n// function sort_orders(G) {\n//   G.orders = G.orders.sort((x,y)=>{\n//     if (y.advanced && !x.advanced) return -1;\n//     if (!y.advanced && x.advanced) return 1;\n//     return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n//   });\n// }\n\n// function sort_finished(G) {\n//   G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n// }\n\nfunction price_up(order) {\n  // let new_requirements = order.requirements;\n  // if (order.advanced) {\n  //   new_requirements[3] += 1;\n  // }\n  // else {\n  //   new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  // }\n  // return {...order, requirements: new_requirements};\n  if (order.advanced) {\n    order.requirements[3] += 1;\n  }\n  else {\n    order.requirements = order.requirements.map(x => (x==0)?0:x+1);\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    // sort_orders(G);\n\n    if ([4,7].includes(G.finished.length)) {\n      G.orders.map(price_up);\n      G.odeck.map(price_up);\n    }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n      // if (enemy.onPlay && !surge) {\n      //   enemy.onPlay(G, ctx, enemy);\n      // }\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  // if (G.not_switch) {\n  //   return false;\n  // }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher && (!switcher.is_elite)) {\n    G.efield.splice(len-2, 1);\n  }\n  else {\n    enemy.atk = Math.max(enemy.atk - 2, 1);\n    enemy.hp = Math.max(enemy.hp - 2, 1);\n  }\n\n  // return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.reinforce_need_cost) {\n    let paid = payCost(G, ctx, 1);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function choice(ctx, alist) {\n  return ctx.random.Shuffle(alist)[0];\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_field(G, ctx) {\n  let card = choice(ctx, G.field.filter(x => (!(x.exhausted||[\"诗怀雅\"].includes(x.name)))));\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function add_vulnerable(G, ctx, amount) {\n  let enemy = choice(ctx, G.efield);\n  if (enemy) {\n    enemy.vulnerable = (enemy.vulnerable || 0) + amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\", \"霜叶\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  let cured = card.dmg;\n  card.dmg = 0;\n\n  return cured;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg = Math.max(card.dmg - amount, 0);\n    // if (card.dmg < 0) {\n      // card.hp -= card.dmg;\n      // card.dmg = 0;\n    // }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  // sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk < 0) { // Not <= because some is 0\n      enemy.atk = 1;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n  let rng = new PRNG(deck_data);\n  let alter_art = (rng.random() <= 0.33);\n  if (alter_art) {\n    console.log(\"Got some alter!\");\n  }\n  else {\n    console.log(\"No alter here.\");\n  }\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        for (let j=0; j<amount; j++) {\n            let new_card = {\n              ...target_card,\n              material: i % 3,\n            };\n\n            if (alter_art) {\n              let altered = ALTER_ARTS[new_card.name];\n              if (altered) {\n                new_card.old_illust = new_card.illust;\n                new_card.illust = altered;\n                new_card.was_enemy = true;\n                new_card.name += \"(异画)\";\n              }\n            }\n\n            deck.push(new_card);\n        }\n      }\n    }\n  }\n\n  // Limit alter art\n  if (alter_art) {\n    for (let card of deck) {\n      if (card.old_illust && rng.random() <= 0.33) {\n        card.illust = card.old_illust;\n        card.was_enemy = false;\n        card.name = card.name.slice(0, card.name.length-4);\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onUseCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n\n  G.onPayCost = [];\n  G.onDropCard = [];\n\n  G.onUseOrder = [];\n\n  G.onEnemyOut = [];\n}\n\nfunction setup_turn_states(G, ctx) {\n  G.has_discarded = false;\n}\n\nfunction setupRoguelikeBattle(G, ctx, relics) {\n  G.relics = relics.map(x => ({...x}));\n\n  for (let r of G.relics) {\n    r.onBattleBegin && r.onBattleBegin(G, ctx, r);\n  }\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    // G.finished = [default_order];\n    G.finished = [];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n\n    G.relics = [];\n    G.extra_gain = 0;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = Math.floor(idx / 2) + 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nexport function summon(G, ctx, card, self) {\n  let idx = G.field.indexOf(self) + 1;\n  if (card) {\n    G.field.splice(idx, 0, init_card_state(G, ctx, {...card}));\n  }\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\n\nexport function get_desc(card) {\n  return  <span>\n    <span style={{fontSize:\"120%\"}}>\n      {card.atk}/{card.hp} &nbsp;\n      {ICONS.mine}{card.mine} &nbsp;\n      {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n    </span>\n    <br/>\n    {card.desc||\"\"}\n    <br/>\n    <span style={{\n      display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n    }}>\n      <i>\n      部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      </i>\n      <br/>\n    </span>\n    ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n    <br />\n    <i>{card.quote||\"\"}</i>\n  </span>;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n    setupRoguelikeBattle,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n\n        setup_events(G, ctx);\n        setup_turn_states(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield, ...G.relics]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n        \n        if (G.enemy_hp_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 2;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: -1,\n    hp: 4,\n    desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onOut(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks, summon } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+0/+6\",\n    desc: \"+6生命值\", // Write \"获得\"always\n    effect(card) {\n      card.hp += 6;\n    }\n  },\n\n  {\n    name: \"-2费\",\n    desc: \"部署费用-2\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 2;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"3分\",\n    desc: \"部署奖励:\\\"获得3分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 3;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2材料\",\n    desc: \"部署奖励:\\\"获得2个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 2);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2张牌\",\n    desc: \"部署奖励:\\\"摸2张牌\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          draw(G, ctx);\n          draw(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"4伤害\",\n    desc: \"部署奖励:\\\"造成4点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"手牌强化2\",\n  //   desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         reinforce_hand(G, ctx);\n  //         reinforce_hand(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"召唤1个费用为2的干员并使其生命值降为1\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            new_card = init_card_state(G, ctx, {...new_card});\n            new_card.hp = 1;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n{\n  name: \"迷迭香之力\",\n  desc: \"部署奖励:\\\"召唤1个随机干员的2/2复制\\\"\",\n  effect(card) {\n    card.onPlayBonus.push(\n      {\n        name: this.name,\n        effect (G, ctx, self) {\n        let card = ctx.random.Shuffle(G.CARDS)[0];\n        card = {...card};\n        card.atk = 2;\n        card.hp = 2;\n        card.mine = 1;\n        card.cost = 2;\n        summon(G, ctx, card, self);\n    }});\n  }\n},\n\n// {\n//     name: \"凯尔希之力\",\n//     desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n//     effect(card) {\n//       // Maybe reconstruct this to call the skill of Ansel is better?\n//       card.onPlayBonus.push({\n//         name: this.name,\n//         effect(G, ctx, card) {\n//           if (card) {\n//             let new_card = G.CARDS.find(x => x.name == card.name);\n//             new_card = init_card_state(G, ctx, {...new_card});\n//             new_card.atk = 1;\n//             new_card.hp = 1;\n//             new_card.mine = 1;\n//             new_card.cost = 1;\n//             new_card.power = 0;\n//             G.field.push(new_card);\n//           }\n//         }\n//     });\n//   }\n// },\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let new_card = G.CARDS.find(x => x.name == card.name);\n        if (new_card) {\n          G.hand.unshift(new_card);\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"订单1\",\n  //   desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制\",\n    effect(card) {\n      if (card.onPlayBonus) {\n        card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n      }\n    }\n  },\n  \n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed || 0;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2\n贾维 1 1\n惊蛰 1 1`;\n\nconst draw_vanguard = `芬 1 2\n调香师 0 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 1\n崖心 0 1\n食铁兽 0 1\n酸糖 0 1\n阿消 0 1\n阿米娅-近卫 0 1\n赫默 0 1\n阿 0 1`;\n\nconst miner =  `史都华德 1 1\n夜烟 0 1\n远山 1 1\n炎熔 1 1`;\n\nconst shooter = `棘刺 0 1\n机械水獭 0 1\n陈 0 1\n拉普兰德 0 1\n史尔特尔 0 1`;\n\nconst defender = `米格鲁 1 1\n蛇屠箱 0 1\n年 0 1\n摄影车 1 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n皇帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n特米米 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n特米米 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n天火 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\nconst mini_sets = [\n  //风笛套\n  ' 风笛 伊桑 白面鸮  温蒂  黑角 夜刀 ',\n  ' 风笛 伊桑 雷蛇  能天使|艾雅法拉  黑角 夜刀 ',\n\n  //莱茵订单流\n  ' 赫默 赫默|白面鸮 赫默|白面鸮 12F|远山|炎熔|特米米|天火 艾雅法拉 ',\n\n  //企鹅物流 有德狗爆费核心 有空皇帝刷分核心 还有空德可颂的清场\n  ' 德克萨斯 德克萨斯 艾雅法拉 坚雷|泥岩 阿消 ',\n  ' 空 空 温蒂 波登可 皇帝 ',\n  ' 德克萨斯 可颂 可颂 ',\n\n  //能天使核心各种 能陨速清场 能炎熔刷材料\n  ' 能天使 陨星 蓝毒 炎熔 ',\n  ' 能天使 陨星 拉普兰德 炎熔 ',\n\n  //空爆\n  ' 空爆 摄影车 砾 流星 ',\n\n  //艾雅法拉核心各种\n  ' 艾雅法拉 杰西卡 柏喙 柏喙 ',\n  ' 艾雅法拉 巫恋 巫恋 刻俄柏 刻俄柏 ', // 易伤流\n\n  //安洁莉娜强力全套\n  ' 安洁莉娜 陈|翎羽 陈|翎羽 刻刀|极境 ',\n  ' 安洁莉娜 推进之王 推进之王 森蚺 ',\n\n  //送盾流\n  ' 年 米格鲁 米格鲁 ',\n\n  //梅尔清场流\n  ' 机械水獭 机械水獭 惊蛰 史都华德|远山|天火 ',\n\n  //雷蛇引擎流\n  ' 艾雅法拉  能天使  雷蛇  雷蛇 ',\n\n  //温蒂引擎流\n  ' 温蒂 白面鸮 白面鸮 食铁兽 ',\n\n  //崖心刷钢流\n  ' 星极  史都华德|远山  赫默|白面鸮  崖心 ',\n\n  //经典断罪者套\n  ' 调香师  调香师 艾雅法拉 棘刺 微风|棘刺 清流 断罪者 ',\n\n  //召唤回手套\n  ' 凯尔希 安赛尔 安赛尔 清流 ',\n\n  //调香师单核\n  ' 微风 微风 星极|棘刺|微风 星极|棘刺|微风 调香师 断崖 月见夜 ',\n  ' 棘刺 棘刺 星极|棘刺|微风 星极|棘刺|微风 调香师 断崖 月见夜 ',\n\n  //铃兰小家族\n  ' 铃兰 阿 空爆|清道夫 摄影车 摄影车 推进之王 ',\n\n  //波登可经典引擎战吼套\n  ' 波登可 白面鸮 温蒂 ',\n  //波登可全员增强\n  ' 波登可 凯尔希 杜宾 杜宾 ',\n\n  //阿米娅经典套\n  ' 阿米娅  雷蛇  艾雅法拉 ',\n  //苏苏洛经典套\n  ' 苏苏洛 天火 卡达 波登可 ',\n\n  //阿消与消费狙\n  ' 阿消 夜烟 史尔特尔 普罗旺斯 ',\n\n  //真理单核套路集合\n  ' 凛冬 凛冬 真理 ',\n  ' 拉普兰德 陈 食铁兽 真理 ',\n  ' 伊桑 刻俄柏 芙兰卡 真理 ',\n\n  //经典强化\n  ' 古米 诗怀雅 ',\n\n  //超杀\n  ' 安比尔 特米米|煌|迷迭香 特米米|煌|迷迭香 赫拉格 ',\n\n  //绝对解场\n  ' 酸糖 拉普兰德 刻刀 ',\n\n  //整活套路\n  ' 斯卡蒂 斯卡蒂 森蚺 ',\n  ' 凯尔希 亚叶 ',\n  ' 安赛尔 安赛尔 微风 ',\n  ' 伊桑  狮蝎  狮蝎 ',\n  ' 热水壶 热水壶 热水壶 ',\n\n  //养巨怪套路\n  ' 波登可 斑点 森蚺 ',\n  \n  //刻刀单核小套路\n  ' 刻刀 刻刀 刻俄柏 波登可 ',\n  //前期猛打小套路\n  ' 孑 宴 孑|宴  翎羽 ',\n  //前期直接打爆 稳住直接持续\n  ' 孑 孑 孑 史都华德 惊蛰 ',\n  //拉狗单核小套路\n  ' 拉普兰德  能天使  刻俄柏 ',\n  //柏喙小套路\n  ' 柏喙  翎羽 ',\n  //银灰小配合\n  ' 银灰 赫默 星极 ',\n  //清道夫小配合\n  ' 清道夫 空爆 砾 摄影车 流星 ',\n  //闪灵小配合\n  ' 闪灵 蛇屠箱 ',\n  //史尔特尔小配合\n  ' 史尔特尔 米格鲁 空 ',\n  //阿米娅近卫小配合\n  ' 阿米娅-近卫 卡达 ',\n\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n  // ' 阿 蛇屠箱 闪灵 ',\n  // ' 棘刺 棘刺 调香师 芬 ',\n  // ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n  // ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n  // ' 锡兰  锡兰  夜莺 ',\n  // ' 普罗旺斯  灰喉  巡林者 波登可 ',\n  // ' 安洁莉娜 陈 陈  波登可 ',\n  // ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n  // ' 梅尔 赫默 白面鸮 特米米  艾雅法拉 ',\n  // ' 能天使 蓝毒 陨星 酸糖 ',\n  // ' 霜叶  凯尔希  杜宾 ',\n  // ' 守林人  守林人  夜莺 ',\n  //  ' 末药  银灰  初雪 ',\n  //  ' 梓兰  梓兰  能天使 ',\n  //  ' 赫默  稀音  梅尔 梅尔 史都华德  特米米  塞雷娅 ',\n  //  ' 温蒂  白面鸮  桃金娘 ',\n  //  ' 白金  末药  煌 ',\n  //' 拉普兰德  白雪  白雪 ',\n  //  ' 酸糖 米格鲁 米格鲁 红 ',\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n\n  selection = selection.map(select_one_card(rng));\n\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport const select_one_card = rng => x => x.includes(\"|\")? rng.choice(x.split(\"|\")):x;\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 8, rng)];\n  // deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  deck = [...deck, ...deck_from_mini_sets(16, rng)];\n\n  // Let diff goes\n  // console.log(\"deck before\", deck);\n  deck = deck.map(select_one_card(rng));\n  // console.log(\"deck after\", deck);\n\n  // No more than 3\n  let deck_dict = deck.reduce((acc, val) => ({...acc, [val]: (acc[val]+1)||1}), {})\n  for (let card in deck_dict) {\n    if (deck_dict[card] > 3) {\n      deck_dict[card] = 3;\n    }\n  }\n  deck = Object.keys(deck_dict).reduce((acc, val) => [...acc, ..._.times(deck_dict[val], ()=>val)], [])\n\n  // Random cards\n  let amount_add = 36 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_roguelike_deck(deck_name) {\n  let deck = [\"黑角\", \"极境\"];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 2, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(defender, 1, rng)];\n\n  // Random cards\n  let amount_add = 12 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  // let generator = (rng.random() > 0.05)? generate_deck_s2 : generate_deck_s1;\n  let generator = generate_deck_s2;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","export const ALTER_ARTS = {\n  安洁莉娜: \"https://s3.ax1x.com/2020/11/28/D61oIH.png\",\n  阿米娅: \"https://s3.ax1x.com/2020/11/28/D61jL8.png\",\n  森蚺: \"https://s3.ax1x.com/2020/11/28/D615ZD.jpg\",\n  陨星: \"https://s3.ax1x.com/2020/11/28/D61Ide.jpg\",\n  安赛尔: \"https://s3.ax1x.com/2020/11/28/D61hqO.jpg\",\n  史尔特尔: \"https://s3.ax1x.com/2020/11/28/D617id.jpg\",\n  凛冬: \"https://s3.ax1x.com/2020/11/28/D61HJA.jpg\",\n  孑: \"https://s3.ax1x.com/2020/11/28/D61bRI.jpg\",\n  玫兰莎: \"https://s3.ax1x.com/2020/11/28/D61OQP.jpg\",\n  陈: \"https://s3.ax1x.com/2020/11/28/D61Xsf.jpg\",\n  安比尔: \"https://s3.ax1x.com/2020/11/28/D61qzt.jpg\",\n};","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 290},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS, smaller_icons } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>{smaller_icons[parseInt(action[2])]}强化</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\n\nfunction Tag(props) {\n  // let bg_color = \"#c5c5c5\";\n  let bg_color = \"#434343\";\n  if (props.selected) {\n    bg_color = \"#0098dc\";\n  }\n  if (props.locked) {\n    bg_color = \"#096dd9\";\n  }\n\n  return <div className=\"tag\" style={{backgroundColor: bg_color}} onClick={props.handleClick} >\n    <img className=\"tag-img\" src={props.src} >\n    </img>\n  </div>\n}\n\nexport const TagSelection = (props) => {\n  // let tbody = [];\n\n  // for (let i=0; i<props.tags.length; i+=3) {\n  //   let row = [];\n  //   let row_tags = props.tags.slice(i, i+3);\n  //   for (let tag of row_tags) {\n  //     let borderColor = \"black\";\n  //     if (tag.selected) {\n  //       borderColor = \"red\";\n  //     }\n  //     if (tag.locked) {\n  //       borderColor = \"#1E90FF\";\n  //     }\n  //     row.push(\n  //       <td \n  //         onClick={props.handleClick(props.tags.indexOf(tag))}\n  //       >\n  //         <div className=\"tag\">\n  //         <img \n  //           className=\"tag-img\" \n  //           src={tag.src}\n  //           style={{\n  //           borderColor: borderColor,\n  //         }} \n  //         ></img>\n  //         </div>\n  //       </td>\n  //     );\n  //   }\n  //   tbody.push(<tr>{row}</tr>);\n  // }\n\n  return (\n    <div className=\"tag-selection\" >\n      {/* <table>\n        <tbody>{tbody}</tbody>\n      </table> */}\n      {props.tags.map((tag, idx) => <Tag {...tag} handleClick={props.handleClick(idx)} />)}\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (\n          <li \n            className=\"tag-desc\"\n            style={{\n              color: (props.just_selected == tag)? \"#096dd9\" : \"black\",\n            }}\n          >\n            {tag.desc}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  let desc = [card.desc];\n\n  if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n    desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  }\n\n  return desc;\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"card-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(4);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"回合开始时，所有敌人获得+2生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.enemy_hp_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/c/c7/Global_costrecovery_1.png\",\n    desc: \"强化干员需要消耗1点费用\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx) {\n      // for (let card of G.deck) {\n      //   card.reinforce += 1;\n      // }\n      G.reinforce_need_cost = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n    desc: \"可同时部署的干员数-3\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx){\n      G.field_limit -= 3;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/c/c5/Global_skillrecovery_1.png\",\n    desc: \"所有干员采掘力-1\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        card.mine -= 1;\n        card.mine = Math.max(0, card.mine);\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/e/ee/Char_atkatkspeed_1.png\",\n    desc: \"所有干员攻击力-2\",\n    level: 3,\n    challenge: true,\n    effect(G, ctx) {\n      // G.goal += 28; // Because first turn gonna -4 too\n      // G.reduce_goal = true;\n      for (let card of G.deck) {\n        card.atk -= 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    challenge: true,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/6/6c/Enemy_attackradius_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 10,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","export const relic_images = [\n  'http://prts.wiki/images/c/cf/%E6%94%B6%E8%97%8F%E5%93%81_1.png',\n  'http://prts.wiki/images/7/72/%E6%94%B6%E8%97%8F%E5%93%81_2.png',\n  'http://prts.wiki/images/9/99/%E6%94%B6%E8%97%8F%E5%93%81_3.png',\n  'http://prts.wiki/images/f/ff/%E6%94%B6%E8%97%8F%E5%93%81_4.png',\n  'http://prts.wiki/images/6/63/%E6%94%B6%E8%97%8F%E5%93%81_5.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_6.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_7.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_8.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_9.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_10.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_11.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_12.png',\n  'http://prts.wiki/images/2/2b/%E6%94%B6%E8%97%8F%E5%93%81_13.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_14.png',\n  'http://prts.wiki/images/5/5e/%E6%94%B6%E8%97%8F%E5%93%81_15.png',\n  'http://prts.wiki/images/e/ef/%E6%94%B6%E8%97%8F%E5%93%81_16.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_17.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_18.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_19.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_20.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_21.png',\n  'http://prts.wiki/images/a/aa/%E6%94%B6%E8%97%8F%E5%93%81_22.png',\n  'http://prts.wiki/images/0/05/%E6%94%B6%E8%97%8F%E5%93%81_23.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_24.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_25.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_26.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_27.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_28.png',\n  'http://prts.wiki/images/9/91/%E6%94%B6%E8%97%8F%E5%93%81_29.png',\n  'http://prts.wiki/images/0/0c/%E6%94%B6%E8%97%8F%E5%93%81_30.png',\n  'http://prts.wiki/images/7/70/%E6%94%B6%E8%97%8F%E5%93%81_31.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_32.png',\n  'http://prts.wiki/images/e/ec/%E6%94%B6%E8%97%8F%E5%93%81_33.png',\n  'http://prts.wiki/images/7/75/%E6%94%B6%E8%97%8F%E5%93%81_34.png',\n  'http://prts.wiki/images/9/9e/%E6%94%B6%E8%97%8F%E5%93%81_35.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_36.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_37.png',\n  'http://prts.wiki/images/a/ad/%E6%94%B6%E8%97%8F%E5%93%81_38.png',\n  'http://prts.wiki/images/3/3f/%E6%94%B6%E8%97%8F%E5%93%81_39.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_40.png',\n  'http://prts.wiki/images/f/fc/%E6%94%B6%E8%97%8F%E5%93%81_41.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_42.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_43.png',\n  'http://prts.wiki/images/f/fd/%E6%94%B6%E8%97%8F%E5%93%81_44.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_45.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_46.png',\n  'http://prts.wiki/images/4/4d/%E6%94%B6%E8%97%8F%E5%93%81_47.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_48.png',\n  'http://prts.wiki/images/f/f0/%E6%94%B6%E8%97%8F%E5%93%81_49.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_50.png',\n  'http://prts.wiki/images/5/5a/%E6%94%B6%E8%97%8F%E5%93%81_51.png',\n  'http://prts.wiki/images/0/0f/%E6%94%B6%E8%97%8F%E5%93%81_52.png',\n  'http://prts.wiki/images/f/fa/%E6%94%B6%E8%97%8F%E5%93%81_53.png',\n  'http://prts.wiki/images/7/74/%E6%94%B6%E8%97%8F%E5%93%81_54.png',\n  'http://prts.wiki/images/6/67/%E6%94%B6%E8%97%8F%E5%93%81_55.png',\n  'http://prts.wiki/images/d/de/%E6%94%B6%E8%97%8F%E5%93%81_56.png',\n  'http://prts.wiki/images/7/76/%E6%94%B6%E8%97%8F%E5%93%81_57.png',\n  'http://prts.wiki/images/0/03/%E6%94%B6%E8%97%8F%E5%93%81_58.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_59.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_60.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_61.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_62.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_63.png',\n  'http://prts.wiki/images/a/a4/%E6%94%B6%E8%97%8F%E5%93%81_64.png',\n  'http://prts.wiki/images/4/46/%E6%94%B6%E8%97%8F%E5%93%81_65.png',\n  'http://prts.wiki/images/2/27/%E6%94%B6%E8%97%8F%E5%93%81_66.png',\n  'http://prts.wiki/images/b/b5/%E6%94%B6%E8%97%8F%E5%93%81_67.png',\n  'http://prts.wiki/images/f/f7/%E6%94%B6%E8%97%8F%E5%93%81_68.png',\n  'http://prts.wiki/images/2/2f/%E6%94%B6%E8%97%8F%E5%93%81_69.png',\n  'http://prts.wiki/images/7/7b/%E6%94%B6%E8%97%8F%E5%93%81_70.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_71.png',\n  'http://prts.wiki/images/6/6b/%E6%94%B6%E8%97%8F%E5%93%81_72.png',\n  'http://prts.wiki/images/c/c1/%E6%94%B6%E8%97%8F%E5%93%81_73.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_74.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_75.png',\n  'http://prts.wiki/images/6/6f/%E6%94%B6%E8%97%8F%E5%93%81_76.png',\n  'http://prts.wiki/images/a/a1/%E6%94%B6%E8%97%8F%E5%93%81_77.png',\n  'http://prts.wiki/images/2/28/%E6%94%B6%E8%97%8F%E5%93%81_78.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_79.png',\n  'http://prts.wiki/images/c/c7/%E6%94%B6%E8%97%8F%E5%93%81_80.png',\n  'http://prts.wiki/images/9/9c/%E6%94%B6%E8%97%8F%E5%93%81_81.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_82.png',\n  'http://prts.wiki/images/3/38/%E6%94%B6%E8%97%8F%E5%93%81_83.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_84.png',\n  'http://prts.wiki/images/d/d5/%E6%94%B6%E8%97%8F%E5%93%81_85.png',\n  'http://prts.wiki/images/0/06/%E6%94%B6%E8%97%8F%E5%93%81_86.png',\n  'http://prts.wiki/images/5/50/%E6%94%B6%E8%97%8F%E5%93%81_87.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_88.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_89.png',\n  'http://prts.wiki/images/a/a3/%E6%94%B6%E8%97%8F%E5%93%81_90.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_91.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_92.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_93.png',\n  'http://prts.wiki/images/2/29/%E6%94%B6%E8%97%8F%E5%93%81_94.png',\n  'http://prts.wiki/images/a/a8/%E6%94%B6%E8%97%8F%E5%93%81_95.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_96.png',\n  'http://prts.wiki/images/0/0a/%E6%94%B6%E8%97%8F%E5%93%81_97.png',\n  'http://prts.wiki/images/f/f8/%E6%94%B6%E8%97%8F%E5%93%81_98.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_99.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_100.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_101.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_102.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_103.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_104.png',\n  'http://prts.wiki/images/2/23/%E6%94%B6%E8%97%8F%E5%93%81_105.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_106.png',\n  'http://prts.wiki/images/4/4a/%E6%94%B6%E8%97%8F%E5%93%81_107.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_108.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_109.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_110.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_111.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_112.png',\n  'http://prts.wiki/images/9/90/%E6%94%B6%E8%97%8F%E5%93%81_113.png',\n  'http://prts.wiki/images/c/ca/%E6%94%B6%E8%97%8F%E5%93%81_114.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_115.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_116.png',\n  'http://prts.wiki/images/5/58/%E6%94%B6%E8%97%8F%E5%93%81_117.png',\n  'http://prts.wiki/images/9/95/%E6%94%B6%E8%97%8F%E5%93%81_118.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_119.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_120.png',\n  'http://prts.wiki/images/b/bf/%E6%94%B6%E8%97%8F%E5%93%81_121.png',\n  'http://prts.wiki/images/c/cb/%E6%94%B6%E8%97%8F%E5%93%81_122.png',\n  'http://prts.wiki/images/a/a5/%E6%94%B6%E8%97%8F%E5%93%81_123.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_124.png',\n  'http://prts.wiki/images/f/f2/%E6%94%B6%E8%97%8F%E5%93%81_125.png',\n  'http://prts.wiki/images/1/15/%E6%94%B6%E8%97%8F%E5%93%81_126.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_127.png',\n  'http://prts.wiki/images/d/d6/%E6%94%B6%E8%97%8F%E5%93%81_128.png',\n  'http://prts.wiki/images/d/d4/%E6%94%B6%E8%97%8F%E5%93%81_129.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_130.png',\n  'http://prts.wiki/images/3/36/%E6%94%B6%E8%97%8F%E5%93%81_131.png',\n  'http://prts.wiki/images/9/9b/%E6%94%B6%E8%97%8F%E5%93%81_132.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_133.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_134.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_135.png',\n  'http://prts.wiki/images/4/48/%E6%94%B6%E8%97%8F%E5%93%81_136.png',\n  'http://prts.wiki/images/d/d1/%E6%94%B6%E8%97%8F%E5%93%81_137.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_138.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_139.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_140.png',\n  'http://prts.wiki/images/c/c6/%E6%94%B6%E8%97%8F%E5%93%81_141.png',\n  'http://prts.wiki/images/a/a7/%E6%94%B6%E8%97%8F%E5%93%81_142.png',\n  'http://prts.wiki/images/7/7c/%E6%94%B6%E8%97%8F%E5%93%81_143.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_144.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_145.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_146.png',\n  'http://prts.wiki/images/7/77/%E6%94%B6%E8%97%8F%E5%93%81_147.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_148.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_149.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_150.png',\n  'http://prts.wiki/images/5/56/%E6%94%B6%E8%97%8F%E5%93%81_151.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_152.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_153.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_154.png',\n  'http://prts.wiki/images/8/89/%E6%94%B6%E8%97%8F%E5%93%81_155.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_156.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_157.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_158.png',\n  'http://prts.wiki/images/5/51/%E6%94%B6%E8%97%8F%E5%93%81_159.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_160.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_161.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_162.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_163.png',\n  'http://prts.wiki/images/a/a9/%E6%94%B6%E8%97%8F%E5%93%81_164.png',\n  'http://prts.wiki/images/8/87/%E6%94%B6%E8%97%8F%E5%93%81_165.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_166.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_167.png',\n  'http://prts.wiki/images/1/14/%E6%94%B6%E8%97%8F%E5%93%81_168.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_169.png',\n  'http://prts.wiki/images/5/54/%E6%94%B6%E8%97%8F%E5%93%81_170.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_171.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_172.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_173.png',\n  'http://prts.wiki/images/7/79/%E6%94%B6%E8%97%8F%E5%93%81_174.png',\n  'http://prts.wiki/images/1/1f/%E6%94%B6%E8%97%8F%E5%93%81_175.png',\n  'http://prts.wiki/images/8/81/%E6%94%B6%E8%97%8F%E5%93%81_176.png',\n  'http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png',\n  'http://prts.wiki/images/b/b6/%E6%94%B6%E8%97%8F%E5%93%81_178.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_179.png',\n  'http://prts.wiki/images/e/e5/%E6%94%B6%E8%97%8F%E5%93%81_180.png',\n  'http://prts.wiki/images/2/22/%E6%94%B6%E8%97%8F%E5%93%81_181.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_182.png',\n  'http://prts.wiki/images/c/cf/%E6%94%B6%E8%97%8F%E5%93%81_1.png',\n  'http://prts.wiki/images/7/72/%E6%94%B6%E8%97%8F%E5%93%81_2.png',\n  'http://prts.wiki/images/9/99/%E6%94%B6%E8%97%8F%E5%93%81_3.png',\n  'http://prts.wiki/images/f/ff/%E6%94%B6%E8%97%8F%E5%93%81_4.png',\n  'http://prts.wiki/images/6/63/%E6%94%B6%E8%97%8F%E5%93%81_5.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_6.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_7.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_8.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_9.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_10.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_11.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_12.png',\n  'http://prts.wiki/images/2/2b/%E6%94%B6%E8%97%8F%E5%93%81_13.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_14.png',\n  'http://prts.wiki/images/5/5e/%E6%94%B6%E8%97%8F%E5%93%81_15.png',\n  'http://prts.wiki/images/e/ef/%E6%94%B6%E8%97%8F%E5%93%81_16.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_17.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_18.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_19.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_20.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_21.png',\n  'http://prts.wiki/images/a/aa/%E6%94%B6%E8%97%8F%E5%93%81_22.png',\n  'http://prts.wiki/images/0/05/%E6%94%B6%E8%97%8F%E5%93%81_23.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_24.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_25.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_26.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_27.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_28.png',\n  'http://prts.wiki/images/9/91/%E6%94%B6%E8%97%8F%E5%93%81_29.png',\n  'http://prts.wiki/images/0/0c/%E6%94%B6%E8%97%8F%E5%93%81_30.png',\n  'http://prts.wiki/images/7/70/%E6%94%B6%E8%97%8F%E5%93%81_31.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_32.png',\n  'http://prts.wiki/images/e/ec/%E6%94%B6%E8%97%8F%E5%93%81_33.png',\n  'http://prts.wiki/images/7/75/%E6%94%B6%E8%97%8F%E5%93%81_34.png',\n  'http://prts.wiki/images/9/9e/%E6%94%B6%E8%97%8F%E5%93%81_35.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_36.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_37.png',\n  'http://prts.wiki/images/a/ad/%E6%94%B6%E8%97%8F%E5%93%81_38.png',\n  'http://prts.wiki/images/3/3f/%E6%94%B6%E8%97%8F%E5%93%81_39.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_40.png',\n  'http://prts.wiki/images/f/fc/%E6%94%B6%E8%97%8F%E5%93%81_41.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_42.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_43.png',\n  'http://prts.wiki/images/f/fd/%E6%94%B6%E8%97%8F%E5%93%81_44.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_45.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_46.png',\n  'http://prts.wiki/images/4/4d/%E6%94%B6%E8%97%8F%E5%93%81_47.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_48.png',\n  'http://prts.wiki/images/f/f0/%E6%94%B6%E8%97%8F%E5%93%81_49.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_50.png',\n  'http://prts.wiki/images/5/5a/%E6%94%B6%E8%97%8F%E5%93%81_51.png',\n  'http://prts.wiki/images/0/0f/%E6%94%B6%E8%97%8F%E5%93%81_52.png',\n  'http://prts.wiki/images/f/fa/%E6%94%B6%E8%97%8F%E5%93%81_53.png',\n  'http://prts.wiki/images/7/74/%E6%94%B6%E8%97%8F%E5%93%81_54.png',\n  'http://prts.wiki/images/6/67/%E6%94%B6%E8%97%8F%E5%93%81_55.png',\n  'http://prts.wiki/images/d/de/%E6%94%B6%E8%97%8F%E5%93%81_56.png',\n  'http://prts.wiki/images/7/76/%E6%94%B6%E8%97%8F%E5%93%81_57.png',\n  'http://prts.wiki/images/0/03/%E6%94%B6%E8%97%8F%E5%93%81_58.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_59.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_60.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_61.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_62.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_63.png',\n  'http://prts.wiki/images/a/a4/%E6%94%B6%E8%97%8F%E5%93%81_64.png',\n  'http://prts.wiki/images/4/46/%E6%94%B6%E8%97%8F%E5%93%81_65.png',\n  'http://prts.wiki/images/2/27/%E6%94%B6%E8%97%8F%E5%93%81_66.png',\n  'http://prts.wiki/images/b/b5/%E6%94%B6%E8%97%8F%E5%93%81_67.png',\n  'http://prts.wiki/images/f/f7/%E6%94%B6%E8%97%8F%E5%93%81_68.png',\n  'http://prts.wiki/images/2/2f/%E6%94%B6%E8%97%8F%E5%93%81_69.png',\n  'http://prts.wiki/images/7/7b/%E6%94%B6%E8%97%8F%E5%93%81_70.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_71.png',\n  'http://prts.wiki/images/6/6b/%E6%94%B6%E8%97%8F%E5%93%81_72.png',\n  'http://prts.wiki/images/c/c1/%E6%94%B6%E8%97%8F%E5%93%81_73.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_74.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_75.png',\n  'http://prts.wiki/images/6/6f/%E6%94%B6%E8%97%8F%E5%93%81_76.png',\n  'http://prts.wiki/images/a/a1/%E6%94%B6%E8%97%8F%E5%93%81_77.png',\n  'http://prts.wiki/images/2/28/%E6%94%B6%E8%97%8F%E5%93%81_78.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_79.png',\n  'http://prts.wiki/images/c/c7/%E6%94%B6%E8%97%8F%E5%93%81_80.png',\n  'http://prts.wiki/images/9/9c/%E6%94%B6%E8%97%8F%E5%93%81_81.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_82.png',\n  'http://prts.wiki/images/3/38/%E6%94%B6%E8%97%8F%E5%93%81_83.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_84.png',\n  'http://prts.wiki/images/d/d5/%E6%94%B6%E8%97%8F%E5%93%81_85.png',\n  'http://prts.wiki/images/0/06/%E6%94%B6%E8%97%8F%E5%93%81_86.png',\n  'http://prts.wiki/images/5/50/%E6%94%B6%E8%97%8F%E5%93%81_87.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_88.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_89.png',\n  'http://prts.wiki/images/a/a3/%E6%94%B6%E8%97%8F%E5%93%81_90.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_91.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_92.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_93.png',\n  'http://prts.wiki/images/2/29/%E6%94%B6%E8%97%8F%E5%93%81_94.png',\n  'http://prts.wiki/images/a/a8/%E6%94%B6%E8%97%8F%E5%93%81_95.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_96.png',\n  'http://prts.wiki/images/0/0a/%E6%94%B6%E8%97%8F%E5%93%81_97.png',\n  'http://prts.wiki/images/f/f8/%E6%94%B6%E8%97%8F%E5%93%81_98.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_99.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_100.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_101.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_102.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_103.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_104.png',\n  'http://prts.wiki/images/2/23/%E6%94%B6%E8%97%8F%E5%93%81_105.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_106.png',\n  'http://prts.wiki/images/4/4a/%E6%94%B6%E8%97%8F%E5%93%81_107.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_108.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_109.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_110.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_111.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_112.png',\n  'http://prts.wiki/images/9/90/%E6%94%B6%E8%97%8F%E5%93%81_113.png',\n  'http://prts.wiki/images/c/ca/%E6%94%B6%E8%97%8F%E5%93%81_114.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_115.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_116.png',\n  'http://prts.wiki/images/5/58/%E6%94%B6%E8%97%8F%E5%93%81_117.png',\n  'http://prts.wiki/images/9/95/%E6%94%B6%E8%97%8F%E5%93%81_118.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_119.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_120.png',\n  'http://prts.wiki/images/b/bf/%E6%94%B6%E8%97%8F%E5%93%81_121.png',\n  'http://prts.wiki/images/c/cb/%E6%94%B6%E8%97%8F%E5%93%81_122.png',\n  'http://prts.wiki/images/a/a5/%E6%94%B6%E8%97%8F%E5%93%81_123.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_124.png',\n  'http://prts.wiki/images/f/f2/%E6%94%B6%E8%97%8F%E5%93%81_125.png',\n  'http://prts.wiki/images/1/15/%E6%94%B6%E8%97%8F%E5%93%81_126.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_127.png',\n  'http://prts.wiki/images/d/d6/%E6%94%B6%E8%97%8F%E5%93%81_128.png',\n  'http://prts.wiki/images/d/d4/%E6%94%B6%E8%97%8F%E5%93%81_129.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_130.png',\n  'http://prts.wiki/images/3/36/%E6%94%B6%E8%97%8F%E5%93%81_131.png',\n  'http://prts.wiki/images/9/9b/%E6%94%B6%E8%97%8F%E5%93%81_132.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_133.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_134.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_135.png',\n  'http://prts.wiki/images/4/48/%E6%94%B6%E8%97%8F%E5%93%81_136.png',\n  'http://prts.wiki/images/d/d1/%E6%94%B6%E8%97%8F%E5%93%81_137.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_138.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_139.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_140.png',\n  'http://prts.wiki/images/c/c6/%E6%94%B6%E8%97%8F%E5%93%81_141.png',\n  'http://prts.wiki/images/a/a7/%E6%94%B6%E8%97%8F%E5%93%81_142.png',\n  'http://prts.wiki/images/7/7c/%E6%94%B6%E8%97%8F%E5%93%81_143.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_144.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_145.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_146.png',\n  'http://prts.wiki/images/7/77/%E6%94%B6%E8%97%8F%E5%93%81_147.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_148.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_149.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_150.png',\n  'http://prts.wiki/images/5/56/%E6%94%B6%E8%97%8F%E5%93%81_151.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_152.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_153.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_154.png',\n  'http://prts.wiki/images/8/89/%E6%94%B6%E8%97%8F%E5%93%81_155.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_156.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_157.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_158.png',\n  'http://prts.wiki/images/5/51/%E6%94%B6%E8%97%8F%E5%93%81_159.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_160.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_161.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_162.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_163.png',\n  'http://prts.wiki/images/a/a9/%E6%94%B6%E8%97%8F%E5%93%81_164.png',\n  'http://prts.wiki/images/8/87/%E6%94%B6%E8%97%8F%E5%93%81_165.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_166.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_167.png',\n  'http://prts.wiki/images/1/14/%E6%94%B6%E8%97%8F%E5%93%81_168.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_169.png',\n  'http://prts.wiki/images/5/54/%E6%94%B6%E8%97%8F%E5%93%81_170.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_171.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_172.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_173.png',\n  'http://prts.wiki/images/7/79/%E6%94%B6%E8%97%8F%E5%93%81_174.png',\n  'http://prts.wiki/images/1/1f/%E6%94%B6%E8%97%8F%E5%93%81_175.png',\n  'http://prts.wiki/images/8/81/%E6%94%B6%E8%97%8F%E5%93%81_176.png',\n  'http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png',\n  'http://prts.wiki/images/b/b6/%E6%94%B6%E8%97%8F%E5%93%81_178.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_179.png',\n  'http://prts.wiki/images/e/e5/%E6%94%B6%E8%97%8F%E5%93%81_180.png',\n  'http://prts.wiki/images/2/22/%E6%94%B6%E8%97%8F%E5%93%81_181.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_182.png'\n ];\n \n export const relic_names = ['乌萨斯列巴',\n '脱水仙人掌干',\n '风干大蕉果',\n '商队盒饭',\n '半盒沙虫罐头',\n '维多利亚军粮',\n '废旧地图',\n '单筒望远镜',\n '全息粉粉沙盒',\n '单人睡袋',\n '破烂帐篷',\n '萨米大“蜡烛”',\n '兔子棚屋',\n '噪音引擎',\n '豌豆花盆',\n '综合园艺成果',\n '炭化烤肉棒',\n '压缩糖砖',\n '易爆建材箱',\n '珠宝水果拼盘',\n '赤金的远征',\n '古旧钱币',\n '恐魔金像',\n '血钻',\n '小财神雕像',\n '“嘎呜”挂饰',\n '米格鲁的饼干',\n '一杯红茶',\n '古旧铸物',\n '地区行动方案',\n '全局作战文件',\n '人事部密信',\n '一份演讲稿',\n '突击协议扩充',\n '突击协议增援',\n '堡垒协议扩充',\n '堡垒协议增援',\n '远程协议扩充',\n '远程协议增援',\n '破坏协议扩充',\n '破坏协议增援',\n '熏黑的信号灯',\n '老式电报机',\n '无线通讯器',\n '幸运硬币',\n '手绘雪雉传单',\n '真理的书单',\n '教官的爱鞭',\n '咪波·运输型',\n '萨卡兹监工哨子',\n '忧伤的驮兽',\n '奇怪的$墨镜',\n '破片地雷',\n '《防身手册》',\n '芙蓉的健康餐',\n '牧兽的排泄物',\n '奇渊面具',\n '教母的信物',\n '锉刀',\n '废铁陷阱',\n '酸液源石虫',\n '迷迭香之拥',\n '无名诗集',\n '劣化组织',\n '“黑夜呢喃”',\n '《大静谧》',\n '小号黄色安全帽',\n '战壕沙袋',\n '防割断纤维背心',\n '古旧的蒸汽甲胄',\n '《打架手册》',\n '《独臂电锯》',\n '齿轮式外骨骼',\n '锈蚀银枪',\n '液压气瓶',\n '超弹力合金弹簧',\n '损坏的左轮弹巢',\n '显圣吊坠',\n '难闻的治疗粉',\n '难闻的止血剂',\n '急救药箱',\n '白垩色治疗针',\n '便宜食用盐',\n '辅助麻痹工具',\n '血腥链锯',\n '另一颗铆钉',\n '活性粉尘',\n '源石射灯',\n '源石环境发生器',\n '无主的萨克斯',\n '“文明的存续”',\n '手工小包',\n '*一点*加班费',\n '可露希尔的怜悯',\n '“日光灯”',\n '香草沙士汽水',\n '丰蹄能量饮料',\n '辣椒老妈',\n '脑力药片',\n '荒地龙舌兰',\n '摩根队长佳酿',\n '生命之水',\n '皇家利口酒',\n '钝爪-突破',\n '钝爪-典训',\n '钝爪-爆发',\n '钝爪-熟稔',\n '钝爪-振奋',\n '钝爪-百战',\n '折戟-突破',\n '折戟-典训',\n '折戟-锋刃',\n '折戟-浴血',\n '折戟-一夫当关',\n '折戟-破釜沉舟',\n '铁卫-突破',\n '铁卫-典训',\n '铁卫-侵掠',\n '铁卫-不动',\n '铁卫-推进',\n '铁卫-无锋',\n '残弩-突破',\n '残弩-百步穿杨',\n '残弩-典训',\n '残弩-战场依存',\n '残弩-交叉火力',\n '残弩-神速',\n '断杖-突破',\n '断杖-典训',\n '断杖-织法者',\n '断杖-咏唱',\n '断杖-凝神',\n '断杖-苦难巫咒',\n '支柱-突破',\n '支柱-典训',\n '支柱-次要战场',\n '支柱-勤奋',\n '支柱-破兵',\n '支柱-枯法',\n '医者-突破',\n '医者-典训',\n '医者-自医',\n '医者-强效试剂',\n '医者-妙手',\n '医者-理智固剂',\n '锈刃-突破',\n '锈刃-典训',\n '锈刃-处决',\n '锈刃-单兵',\n '锈刃-无人之境',\n '锈刃-神力',\n '突击协议-利刃',\n '突击协议-散兵',\n '堡垒协议-方阵',\n '堡垒协议-固守',\n '远程协议-遥击',\n '远程协议-克敌',\n '破坏协议-消除',\n '破坏协议-压制',\n '迷幻的藏宝图',\n '染血的传单',\n '辉煌工匠包',\n 'Logos的骨笔',\n '无限续杯瓶',\n '左半边椰子壳',\n '右半边椰子壳',\n '倒转的怀表',\n '“手铳”',\n '沉重的铁皮箱',\n '漆黑的钥匙',\n '鸟卜探索仪',\n '超高级沙发',\n '立体投影仪',\n '一台旧冰箱',\n '个人避难所',\n '虚空发生器',\n '热水壶',\n '“坏家伙”来了！',\n '鬼血',\n '冰封的异爪',\n '巫王旋角',\n '浅海轻唱'];","import React from 'react';\nimport _ from 'lodash';\nimport { choice, deal_random_damage, gainMaterials } from './Game';\nimport { random_upgrade } from './Roguelike';\nimport { UPGRADES } from './upgrades';\nimport { relic_images, relic_names } from './assets';\n\nexport const RELICS = [\n  {\n    name: \"可露希尔的怜悯\",\n    desc: \"跳过选牌时,额外获得10赏金\",\n    onSkipPick(S) {\n      S.gold += 10;\n    }\n  },\n  {\n    name: \"乌萨斯列巴\",\n    desc: \"跳过选牌时,随机强化2个干员\",\n    onSkipPick(S) {\n      random_upgrade(S);\n      random_upgrade(S);\n    }\n  },\n  {\n    name: \"综合园艺成果\",\n    desc: \"对战开始时,牌组里每有4张牌,就获得1分\",\n    onBattleBegin(G, ctx) {\n      G.score += Math.floor(G.deck.length / 4);\n    }\n  },\n  {\n    name:\"风干大蕉果\", \n    desc:\"选牌时,里面的1个干员获得强化2\",\n    onPickCards(S) {\n      let card = S.rng.choice(S.Deck.slice(0,3));\n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      reinforce.effect(card);\n      reinforce.effect(card);\n    }\n  },\n  {\n    name:\"古旧钱币\", \n    desc:\"每次对战结束时,额外获得8赏金\",\n    onBattleEnd(S) {\n      S.gold += 8;\n    }\n  },\n  {\n    name:\"“嘎呜”挂饰\", \n    desc:\"达成满贯以上时,额外获得30赏金\",\n    onBattleEnd(S) {\n      if ((S.level_achieved - S.level_required) >= 4) {\n        S.gold += 30;\n      }\n    }\n  },\n  {\n    name:\"真理的书单\", \n    desc:\"战斗结束时,随机升级2个干员\",\n    onBattleEnd(S) {\n      random_upgrade(S);\n      random_upgrade(S);\n    }\n  },\n  {\n    name: \"手工小包\",\n    desc: \"达成满贯以上时，随机获得1个藏品\",\n    onBattleEnd(S){\n      if ((S.level_achieved - S.level_required) >= 4) {\n        let relic = S.rng.choice(S.RELICS);\n        console.log(relic.name);\n        S.relics.unshift({...relic});\n        alert(\"通过 手工小包 获得 \"+relic.name);\n      }\n    }\n  },\n  {\n    name:\"奇怪的$墨镜\", \n    desc:\"购买藏品后,获得5赏金\",\n    onBuyRelic(S, relic) {\n      S.gold += 5;\n    }\n  },\n  // {\n  //   name:\"一份演讲稿\", \n  //   desc:\"购买藏品时,有概率随机升级1个干员\",\n  //   onBuyRelic(S, relic) {\n  //     if (S.rng.random() <= 0.5) {\n  //       random_upgrade(S);\n  //     }\n  //   }\n  // },\n  {\n    name:\"迷迭香之拥\", \n    desc:\"购买藏品时,有小概率获得1个其复制\",\n    onBuyRelic(S, relic) {\n      if (S.rng.random() <= 0.2) {\n        S.relics.unshift({...relic});\n        alert(`获得${relic.name}的复制`);\n      }\n    }\n  },\n  {\n    name:\"咪波·运输型\", \n    desc:\"对局开始时费用+1\",\n    onBattleBegin(G, ctx) {\n      G.costs += 1;\n    }\n  },\n  {\n    name:\"芙蓉的健康餐\", \n    desc:\"所有敌人获得-1/-0\",\n    onBattleBegin(G, ctx) {\n      G.edeck.map(enemy => {enemy.atk = Math.max(enemy.atk-1, 0);});\n    }\n  },\n  {\n    name:\"压缩糖砖\", \n    desc:\"胜利所需分数-2(最低是10)\",\n    onBattleBegin(G, ctx) {\n      G.goal = Math.max(G.goal - 2, 10);\n    }\n  },\n  {\n    name:\"香草沙士汽水\", \n    desc:\"每局首次使用干员时不会横置(可叠加)\",\n    onBattleBegin(G, ctx, self) {\n      self.used = false;\n    },\n    onTurnBegin(G, ctx, self) {\n      G.onUseCard.push(\n        (G, ctx, card) => {\n          console.log(G.relics.map(x=>({...x})));\n          let gas = G.relics.find(x => x.name == \"香草沙士汽水\" && (!x.used));\n          console.log({...gas});\n          if (gas && ~G.field.indexOf(card) && card.exhausted) {\n            card.exhausted = false;\n            gas.used = true;\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"倒转的怀表\", \n    desc:\"回合开始时,每有1点动乱就获得3分\",\n    onTurnBegin(G, ctx) {\n      G.score += 3 * G.danger;\n    }\n  },\n  {\n    name:\"断杖-织法者\", \n    desc:\"回合开始时,敌人数量每多我方1个,就获得1个钢\",\n    onTurnBegin(G, ctx) {\n      let diff = G.efield.length - G.field.length;\n      if (diff > 0) {\n        G.materials[3] += diff;\n      }\n    }\n  },\n  {\n    name:\"米格鲁的饼干\", \n    desc:\"所有阻挡数至少为2的,阻挡数+2\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.block >= 2) {\n          x.block += 2;\n        }\n      });\n    }\n  },\n  {\n    name:\"断杖-咏唱\", \n    desc:\"所有采掘力至少为3的,<+2>\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.mine >= 3) {\n          x.mine += 2;\n        }\n      });\n    }\n  },\n  {\n    name:\"铁卫-推进\", \n    desc:\" 阻挡数多于2的,阻挡数-1,但是+3/+3\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.block >= 2) {\n          x.block -= 1;\n          x.atk += 3;\n          x.hp += 3;\n        }\n      });\n    }\n  },\n  {\n    name:\"辉煌工匠包\", \n    desc:\" 所有干员 +3攻 <-1>\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.atk += 3;\n        x.mine = Math.max(x.mine - 1, 0);\n      });\n    }\n  },\n  {\n    name:\"左半边椰子壳\", \n    desc:\" 所有干员+1费,+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost += 1;\n        x.atk += 4;\n        x.hp += 4;\n      });\n    }\n  },\n  {\n    name:\"右半边椰子壳\", \n    desc:\" 所有干员-1费,胜利所需分数+8\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost -= 1;\n      });\n      G.goal += 8;\n    }\n  },\n  {\n    name:\"摩根队长佳酿\", \n    desc:\"起始获得2个钢\",\n    onBattleBegin(G, ctx) {\n      G.materials[3] += 2;\n    }\n  },\n  {\n    name:\"“坏家伙”来了！\", \n    desc:\"起始获得1个随机的强化3干员加入手牌\",\n    onBattleBegin(G, ctx) { \n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      let card = choice(ctx, G.CARDS);\n      reinforce.effect(card);\n      reinforce.effect(card);\n      reinforce.effect(card);\n      G.hand.unshift(card);\n    }\n  },\n  {\n    name:\"残弩-战场依存\", \n    desc:\"所有干员获得 采掘:造成2点伤害\",\n    onTurnBegin(G, ctx) {\n      G.onCardMine.push(\n        (G, ctx) => {\n          deal_random_damage(G, ctx, 2);\n        }\n      );\n    }\n  },\n  {\n    name:\"断杖-突破\", \n    desc:\"所有干员获得 超杀:获得1个材料\",\n    onTurnBegin(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, card, enemy) => {\n          if (enemy.dmg > enemy.hp) {\n            gainMaterials(G, ctx, 1);\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"锈刃-无人之境\", \n    desc:\"所有干员获得 部署:获得1分\",\n    onTurnBegin(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 1;\n        }\n      );\n    }\n  },\n  {\n    name:\"热水壶\", \n    desc:\"购买时变成手里一个藏品的复制\",\n    onBought(S) {\n      let self = S.relics[0];\n      let relic = S.rng.choice(S.relics.slice(1));\n      if (relic) {\n        Object.assign(self, relic);\n      }\n    }\n  },\n  {\n    name:\"全息粉粉沙盒\", \n    desc:\"变成2个随机藏品\",\n    onBought(S) {\n      let self = S.relics[0];\n      S.relics = S.relics.slice(1);\n      for (let i=0; i<2; i++) {\n        let relic = S.rng.choice(S.RELICS);\n        S.relics.unshift({...relic});      \n      }\n      alert(`获得 ${S.relics[0].name} ${S.relics[1].name}`);\n    }\n  },\n].map(init_relic);\n\nexport function init_relic(relic) {\n  return {\n    ...relic,\n    illust: get_relic_img(relic),\n  };\n}\n\nexport function get_relic_img(relic) {\n  return relic_images[relic_names.indexOf(relic.name)];\n}","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick, generate_roguelike_deck } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\nimport { TAGS } from './tags';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Card.css';\nimport './Roguelike.css';\nimport './Competition.css';\nimport { ICONS } from './icons';\nimport { CARDS, heijiao_in_dream } from './cards';\nimport { UPGRADES } from './upgrades';\nimport { RELICS } from './relics';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到Roguelike模式“黑角的金针菇迷境”！\\n通关要求：完成9局对战；\\n每一局对战，都有要求的危机等级，成功完成该局对战，即可获得赏金，并进入下一局对战；\\n如果其中一次对局失败，则本次Roguelike旅程即宣告失败，胜败乃兵家常事，大侠请重头再来；\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！每高1级，就会额外获得10赏金；\\n如果比要求等级高4级，则会达成“满贯”，额外获得50赏金；\\n如果比要求等级高8级，则会达成“大满贯”，额外获得120赏金！`);\n}\n\nfunction reset_tags() {\n  return TAGS.map(x => ({...x}));\n}\n\nfunction setup_roguelike_mode(S) {\n  console.log(\"Roguelike mode reset\");\n  S.roguelike_mode = true;\n\n  S.rng = new PRNG(S.seed || Date());\n\n  init_tags(S);\n  S.RELICS = RELICS.map(x => ({...x}));\n\n  S.Deck = [];\n  S.relics = [];\n  S.gold = 100;\n\n\n  S.game_count = 1;\n  S.level_required = 0;\n\n  S.central_idx = 0;\n\n  S.dream_count = 0;\n\n  reset_card_picks(S);\n  // reset_shop(S);\n}\n\nfunction select_deck(S, deck) {\n  S.Deck = deck;\n  reset_shop(S);\n}\n\nfunction end_roguelike_mode(S) {\n  S.roguelike_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction move_on(S) {\n  S.game_count += 1;\n  S.tags.splice(S.tags.length-1, 0, ...S.remained_tags.slice(0,2));\n  S.remained_tags = S.remained_tags.slice(2);\n}\n\nfunction init_tags(S) {\n  let tags = reset_tags();\n  let final_tag = tags[tags.length - 1];\n  let init_tags = [...tags.slice(0,6), ...tags.filter((x,idx) => [6,7,9,10,12,13].includes(idx)), final_tag];\n  let remained_tags = S.rng.shuffle(tags.filter(t => !init_tags.includes(t)));\n  S.tags = [...init_tags.slice(0,init_tags.length-1), ...remained_tags.slice(0,2), final_tag];\n  S.remained_tags = remained_tags.slice(2);\n}\n\nfunction reduce_basic_tags(tags, rng) {\n  // return tags.filter((x,idx) => !rng.choice([[6,7,8],[9,10,11],[12,13,14]]).includes(idx));\n  return [...tags.slice(0,6), ...rng.shuffle(tags.slice(6)).slice(0,6).sort((t1,t2) => tags.indexOf(t1)-tags.indexOf(t2))];\n}\n\nfunction setup_normal_challenge(tags, rng) {\n  for (let t of tags) {\n    if (t.standard_level <= 2 || [0,3,4,6,12].includes(tags.indexOf(t))) {\n      t.locked = true;\n    }\n  }\n  let challenge_tag = rng.choice(tags.filter(x => x.challenge));\n  challenge_tag.locked = true;\n  let locked_tags = tags.filter(x => x.locked && [2,3].includes(x.level));\n  let other_tags = tags.filter(x => !x.locked && [2,3].includes(x.level));\n  other_tags = rng.shuffle(other_tags).slice(0,3);\n  return [...reduce_basic_tags(tags.slice(0,15), rng), ...locked_tags, ...other_tags];\n}\n\nfunction setup_exhausted_challenge(tags, rng) {\n  tags[0].locked = true;\n  tags[1].locked = true;\n  let final_tag = tags[tags.length-1];\n  final_tag.locked = true;\n  let basic_tags = tags.filter(x => x.level == 1);\n  let another_challenge_tag = rng.choice(tags.filter(x => x.level == 3));\n  another_challenge_tag.locked = true;\n  let advanced_tags = rng.shuffle(tags.filter(x => [2,3].includes(x.level) && x != another_challenge_tag)).slice(0,5);\n  return [...reduce_basic_tags(basic_tags, rng), another_challenge_tag, ...advanced_tags, final_tag];\n}\n\nfunction setup_daily_tags(S) {\n  let rng = new PRNG(S.date);\n  let tags = reset_tags();\n\n  if (rng.random() <= 0.6) {\n    S.tags = setup_normal_challenge(tags, rng);\n    S.level_required = 24;\n  }\n  else {\n    S.tags = setup_exhausted_challenge(tags, rng);\n    S.level_required = 18;\n  }\n}\n\nfunction enter_daily_mode(S) {\n  S.daily_mode = true;\n  S.date = Date().slice(0,15);\n  // S.date = Math.random();\n  setup_daily_tags(S);\n}\n\nfunction end_daily_mode(S) {\n  S.daily_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction set_difficulty(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [12, 14, 16, 18, 22, 26, 30, 34, 45];\n\n  if (difficulty == \"hard\") {\n    S.levels = [15, 18, 21, 24, 30, 36, 42, 48, 60];\n  }\n\n  if ([\"medium\", \"hard\"].includes(difficulty)) {\n    S.tags[S.tags.length-1].locked = true;\n  }\n\n  if ([\"hard\"].includes(difficulty)) {\n    S.tags[0].locked = true;\n    S.tags[1].locked = true;\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction preprocess_roguelike_card(card) {\n  card.onPlayBonus = [];\n}\n\nfunction setup_deck_selection(S) {\n  let rng = S.rng;\n  S.deck_names = _.times(3, ()=>rng.choice(CARDS.map(x=>x.name))).map(x => x + \"·黑角\");\n  S.deck_list = S.deck_names.map(generate_roguelike_deck).map(str2deck); // TODO: change the generator\n  S.deck_list.map(deck => deck.map(preprocess_roguelike_card))\n}\n\nfunction get_pick(S) {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card)).filter(card => card != undefined).map(card => ({...card, material:S.rng.randRange(3)})); // EH: Let material not be local solution, but global solution\n}\n\nfunction reset_card_picks(S) {\n  S.card_picks = _.times(3, ()=>get_pick(S));\n}\n\nfunction get_shop_item(S) {\n  // let rng = new PRNG(Math.random());\n  // let rng = S.rng;\n\n  let item_type = S.rng.randRange(100);\n  // console.log(item_type, \"item type\");\n\n  if (item_type <= 60) {\n    // TODO: change this to relic\n    return get_relic(S);\n  }\n  else if (item_type <= 95) {\n    // TODO: change this to upgrade\n    return get_upgrade(S);\n  }\n  else{\n    return delete_card(S);\n  }\n\n}\n\nfunction get_upgrade(S) {\n  let shop_item = {};\n\n  // Get upgrade\n  let upgrade = S.rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = S.rng.randRange(10) + 15;\n  // console.log(\"This deck\", S.Deck);\n  shop_item.indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"获得 \" + upgrade.desc;\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/up-arrow_2b06.png\";\n  shop_item.onBought = (S, idx) => {\n    let card = S.Deck[idx];\n    // console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n    if (card) {\n      upgrade.effect(card);\n    }\n    card.upgraded = true;\n  };\n\n  return shop_item;\n}\n\n// function get_reinforceupgrade(S, rng) {\n//   let shop_item = {};\n\n//   // Get upgrade\n//   let upgrade = rng.choice(UPGRADES);\n//   shop_item.name = \"升级: \" + upgrade.name;\n//   shop_item.price = rng.randRange(20) + 20;\n//   console.log(\"This deck\", S.Deck);\n//   shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n//   shop_item.desc = \"获得 \" + upgrade.desc;\n//   shop_item.onBought = (S, idx) => {\n//     let card = S.Deck[idx];\n//     console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n//     if (card) {\n//       upgrade.effect(card);\n//     }\n//     card.upgraded = true;\n//   };\n\n//   return shop_item;\n// }\n\nfunction get_reinforced_card(S, rng) {\n  let shop_item = {};\n\n  // Get card\n  let card = {\n    ...rng.choice(CARDS),\n    material: rng.randRange(3),\n    upgraded: true,\n    onPlayBonus: [], // EH: this should be abstracted instead of write here again\n  };\n  let reinforce_time = rng.randRange(2) + 1;\n\n  shop_item.name = card.name + \"(强化\" + reinforce_time + \")\";\n  shop_item.price = rng.randRange(20) + 20 + (30+rng.randRange(20)) * (reinforce_time - 1);\n  shop_item.desc = card.desc;\n\n  let reinforce_once = UPGRADES.find(x => x.name == \"强化1\");\n  for (let i=0; i<reinforce_time; i++) {\n    reinforce_once.effect(card);\n  }\n\n  shop_item.onBought = (S) => {\n    S.Deck.unshift(card);\n  };\n\n  return shop_item;\n}\n\nfunction get_relic(S) {\n  let shop_item = {};\n  let relic = S.rng.choice(RELICS);\n\n  shop_item.name = relic.name;\n  shop_item.desc = relic.desc;\n  shop_item.price = 30 + S.rng.randRange(20);\n  shop_item.src = relic.illust;\n\n  shop_item.onBought = (S) => {\n    let bought = {...relic};\n    console.log(\"Bought relic \", bought.name);\n\n    for (let r of S.relics) {\n      r.onBuyRelic && r.onBuyRelic(S, bought, r);\n    }\n\n    S.relics.unshift(bought);\n    if (bought.onBought) {\n      bought.onBought(S);\n    }\n  }\n\n  return shop_item;\n}\n\nfunction delete_card(S) {\n  let shop_item = {};\n\n  shop_item.name = \"删1张牌\";\n  shop_item.price = 10 + S.rng.randRange(10);\n  shop_item.indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"\";\n  shop_item.onBought = (S, card_idx) => {\n    console.log(\"The index:\", card_idx);\n    console.log(\"Before delete\", S.Deck.length, S.Deck);\n    S.Deck = S.Deck.filter((x,idx) => (idx != card_idx));\n    console.log(\"After delete\", S.Deck.length, S.Deck);\n  }\n\n  return shop_item;\n}\n\n\nfunction payGold(S, amount) {\n  if (S.gold >= amount) {\n    S.gold -= amount;\n    return true;\n  }\n  else {\n    alert(\"剩余赏金不够\");\n    return false;\n  }\n}\n\nfunction buy(S, idx) {\n  let item = S.current_item;\n  let item_idx = S.current_item_idx;\n  if (payGold(S, item.price)) {\n    S.shop_items = S.shop_items.filter((x,idx) => idx != item_idx);\n    if (idx != undefined) {\n      console.log(\"The indexes are:\", S.current_item.indexes.map(x=>x));\n      console.log(\"The selected index is:\", idx);\n      console.log(\"The chosen index is:\", S.current_item.indexes[idx]);\n      let card_idx = S.current_item.indexes[idx];\n      item.onBought(S, card_idx);\n    }\n    else {\n      item.onBought(S);\n    }\n  }\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(6, ()=>get_shop_item(S));\n}\n\nfunction refresh_shop(S) {\n  if (payGold(S, 10)) {\n    reset_shop(S);\n  }\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.card_picks[idx], ...S.Deck];\n  S.card_picks = undefined;\n\n  for (let r of S.relics) {\n    r.onPickCards && r.onPickCards(S);\n  }\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n\n  for (let r of S.relics) {\n    r.onSkipPick && r.onSkipPick(S);\n  }\n}\n\nfunction enter_dream(S) {\n  S.dream_count += 1;\n  if (S.dream_count == 9) {\n    alert(\"已进入黑角梦境\");\n    S.Deck = _.times(10, () => heijiao_in_dream);\n    S.relics = [...S.RELICS];\n  }\n  S.gold = 5000;\n}\n\nexport function get_gold_gained(risk_level, level_required) {\n   let gold_gained = 20;\n\n    let level_diff = risk_level - level_required;\n    gold_gained += level_diff * 10;\n\n    // For slam, don't store them in variables, instead, calculate it on time\n    // So do plenty of other things\n    if (level_diff >= 4) {\n      gold_gained += 50;\n    }\n    if (level_diff >= 8) {\n      gold_gained += 70;\n    }\n\n    return gold_gained;\n\n}\n\nfunction continue_run(S) {\n  // Resets go here\n  S.central_idx = 1;\n  reset_shop(S);\n  reset_card_picks(S);\n\n  if (S.won) {\n    S.gold += get_gold_gained(S.level_achieved, S.level_required);\n  }\n\n  for (let r of [...S.relics]) {\n    r.onBattleEnd && r.onBattleEnd(S, r);\n  }\n\n  // TODO: Reconstruct this part, into moveOn()\n  // S.game_count += 1;\n  move_on(S)\n\n  if ((S.level_achieved - S.level_required) >= 4) {\n    // S.game_count += 1;\n    move_on(S)\n  }\n  if ((S.level_achieved - S.level_required) >= 8) {\n    // S.game_count += 1;\n    move_on(S)\n  }\n  S.game_count = Math.min(S.game_count, 9);\n\n  S.level_required = S.levels[S.game_count - 1];\n}\n\nexport function random_upgrade(S) {\n  let card = S.rng.choice(S.Deck);\n  let upgrade = S.rng.choice(UPGRADES);\n  upgrade.effect(card);\n  alert(`${card.name} is upgraded with ${upgrade.name}`);\n}\n\n\nexport function RoguelikeDeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">选择你的卡组</div>\n    {props.decks.map(deck => <RoguelikeDeckRepr {...deck} />)}\n    <br/>\n    {/* <button className=\"deck-selection-button\" onClick={props.back}>返回</button> */}\n  </div>\n}\n\nfunction RoguelikeDeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper desc\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.refresh_picks}><span>刷新选牌({ICONS.gold}10)</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得{ICONS.gold}10</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\" align=\"center\">\n    <div className=\"shop-item-img-container\"><img src={props.src} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <span className=\"shop-item-price\">{ICONS.gold}{props.price}</span>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    <button className=\"buy\" onClick={props.buy}>购买</button>\n  </div>\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"shop-items\">    \n      {props.shop_items.map((item, idx) => <ShopItem {...item} buy={props.buy(idx)} />)}\n    </div>\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店({ICONS.gold}10)</button>\n  </div>\n\n}\n\nexport function Roguelike(props) {\n  return <div className=\"central\">\n    <div className=\"heijiao-container-2\">\n      <img src=\"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\" className=\"heijiao-img-2\" />\n    </div>\n    <div className=\"counter-container\" align=\"center\">\n      <div className=\"battle-count-title\" >第<span className=\"battle-count\">{props.game_count || 1}</span>/<span onClick={props.enter_dream}>9</span>战</div>\n    </div>\n    <div className=\"roguelike-operations\">\n      <button onClick={props.enter_battle} className=\"roguelike-operation primary\">进入对战</button>\n      <button onClick={props.check_deck} className=\"roguelike-operation\">查看卡组</button>\n      <button onClick={props.check_relics} className=\"roguelike-operation\">查看藏品</button>\n    </div>\n  </div>\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"finish-pick\">你已经完成了选择</div>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport function RoguelikeEntry(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"entry\">欢迎来到集成战略模式<br/>“黑角的金针菇迷境”<br/>请选择难度</div>\n    <div className=\"difficulty-selection\">\n      {props.difficulties.map(selection => <button className=\"difficulty-button\" onClick={selection.handleClick}>{selection.name}</button>)}\n    </div>\n    <button className=\"introduce-button\" onClick={props.back}>返回</button>\n    <button className=\"introduce-button\" onClick={introduce_roguelike_mode}>集成战略模式介绍</button>\n  </div>\n}\n\nexport function ShowMeTheMoney(props) {\n  return <div className=\"gold-gained\">\n    {ICONS.gold}+{props.amount}\n  </div>\n\n}\n\nexport function ResultWin(props) {\n  let slam = \"\";\n  if (props.slam) {\n    slam = \"满贯！\";\n  }\n  if (props.grand_slam) {\n    slam = \"大满贯！\";\n  }\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务完成<br/>\n      第{props.game_count}/9战<br/>\n      要求等级: {props.level_required}<br/>\n      实际等级: {props.level_achieved}<br/>\n    </div>\n    <ShowMeTheMoney \n      amount = {props.gold_amount}\n    />\n    <div className=\"slam\">{slam}</div>\n    <button className=\"continue-btn primary\" onClick={props.continue} >继续</button>\n  </div>\n\n}\n\nexport function ResultLose(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务失败<br/>\n      第{props.game_count}/9战<br/>\n    </div>\n    <div className=\"result-quote\">\n      胜败乃兵家常事<br/>\n      大侠请重新来过\n    </div>\n    <button className=\"endrun-btn\" onClick={props.continue}>结束游戏</button>\n  </div>\n}\n\nexport function FinalResult(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      <div className=\"ascension\">通关！</div>\n      完成难度: {props.difficulty}\n    </div>\n    {/* TODO: Add show deck and show relics */}\n  <button className=\"endrun-btn\" onClick={props.continue}>{props.endgame}</button>\n  </div>\n\n\n}\n\nexport const roguelike = {\n  setup_roguelike_mode,\n  set_difficulty,\n  setup_deck_selection,\n  select_deck,\n\n  pick_cards,\n  skip_pick,\n  enter_dream,\n  buy,\n  reset_shop,\n  refresh_shop,\n\n  continue_run,\n  end_roguelike_mode,\n\n  enter_daily_mode,\n  end_daily_mode,\n};","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h2>明日方舟: 采掘行动 游戏规则</h2>\n  <br/><br/>\n  <a href=\"https://www.bilibili.com/video/BV1554y167ax\n\">2分钟视频教学(B站)</a>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘能力为3，博士因此获得了{material_icons[0]}{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 点击干员，然后点击敌人，对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单能力:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得4分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级20  <br/>\n  * 点\"所有敌人获得+2生命值\"3级并完成危机等级20  <br/>\n  * 点\"2回合后，所有敌人获得冲锋\"并完成危机等级20 <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks, get_desc, get_blocker } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop, RoguelikeEntry, RoguelikeDeckSelection, Roguelike, ResultWin, ResultLose, FinalResult, get_gold_gained } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n    this.process_relic_details = this.process_relic_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_relic_board = this.render_relic_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_shop_board = this.render_roguelike_shop_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n    this.render_roguelike_final_result_board = this.render_roguelike_final_result_board.bind(this);\n    this.render_roguelike_entry_board = this.render_roguelike_entry_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n    this.end_roguelike_mode = this.end_roguelike_mode.bind(this);\n    this.buy_item = this.buy_item.bind(this);\n\n    this.enter_daily_mode = this.enter_daily_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.reset_preview_deck = this.reset_preview_deck.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(produce((S) => action(S, ...args))), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      shop_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_roguelike_final_result_board,\n      // DEFAULT\n      last_board: this.render_title_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n\n      dream_count: 0,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags, just_selected: new_tags[idx]});\n    };\n  }\n\n  choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    if (this.state.competition_mode) {\n      for (let tag of new_tags) {\n        if (tag.selected) {\n          tag.locked = true;\n        }\n      }\n    }\n\n    return new_tags;\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n\n  reset_preview_deck() {\n    this.setState({\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n    });\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    // EH: Reconstruct this, this is too procedure\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      vulnerable: card.vulnerable? (\"↓\" + card.vulnerable) : undefined,\n      //cost: card.cost,\n      blocked: get_blocker(this.props.G, this.props.ctx, card)? ICONS.block : undefined,\n    }; \n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_relic_details(relic) {\n    return {\n      eo_illust_detailed: relic.illust,\n      desc: relic.desc,\n    };\n  }\n\n  render_relic_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.relics.map(this.process_relic_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: get_desc(card),\n      // desc: (\n      //   <span>\n      //     <span style={{fontSize:\"120%\"}}>\n      //       {card.atk}/{card.hp} &nbsp;\n      //       {ICONS.mine}{card.mine} &nbsp;\n      //       {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n      //     </span>\n      //     <br/>\n      //     {card.desc||\"\"}\n      //     <br/>\n      //     <span style={{\n      //       display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n      //     }}>\n      //       <i>\n      //       部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      //       </i>\n      //       <br/>\n      //     </span>\n      //     ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n      //     <br />\n      //     <i>{card.quote||\"\"}</i>\n      //   </span>\n      // ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      // if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n      //   this.play_card();\n      // }\n      // else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      // }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  //CHANGE\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"mode_selection\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"relic\": this.render_relic_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_entry\": this.render_roguelike_entry_board,\n      \"roguelike_shop\": this.render_roguelike_shop_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n      \"roguelike_final_result\": this.render_roguelike_final_result_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.competition_mode || this.state.roguelike_mode){\n      deck = this.state.Deck;\n      seed += this.state.roguelike_mode? this.state.game_count : this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    if (this.state.roguelike_mode) {\n      // Setup other roguelike stuffs here\n      this.props.moves.setupRoguelikeBattle(this.state.relics);\n    }\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else if (this.state.roguelike_mode) {\n      // Let results stuffs go to winning \n      // Set finishing stuffs here\n\n      this.change_board(\"roguelike_result\");\n      // this.roguelike.end_battle();\n    }\n    else{\n      this.change_board(\"tag\");\n      this.setState({seed: get_seed_name()});\n    }\n  }\n\n  end_roguelike_mode() {\n    this.roguelike.end_roguelike_mode();\n    this.enter_roguelike_mode();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"updated\");\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      console.log(\"Get the result\");\n      this.setState({\n        scenario_finished: true,\n        won: result.win,\n        level_achieved: this.get_risk_level(),\n        extra_gain: this.props.G.extra_gain,\n      });\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        // else if (risk_level >= 22 && risk_level < 30) {\n        //   grade = \"SSSS\";\n        // }\n        // else if (risk_level >= 30 && risk_level < 50) {\n        //   grade = \"SSSSS\";\n        // }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // console.log(\"Time to alert finish\");\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n${this.state.daily_mode?`完成每日挑战: ${this.state.date}\\n`:\"\"}地图种子: ${this.state.seed}`);\n\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n\n\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n        \n      \n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={() => {this.reset_preview_deck();this.check_deck();}} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      \"每日挑战\": this.enter_daily_mode,\n           // \"Roguelike模式\": this.enter_roguelike_mode,\n      \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.slice(0,5).map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.roguelike.select_deck(deck);this.change_board(\"roguelike\");},\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: this.choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_entry\");\n  }\n  \n  enter_daily_mode() {\n    this.roguelike.enter_daily_mode();\n    this.change_board(\"tag\");\n  }\n\n  enter_difficulty(difficulty) {\n    this.roguelike.set_difficulty(difficulty);\n    this.change_board(\"roguelike_deck_selection\");\n  }\n\n  buy_item(idx) {\n    return () => {\n      let item = this.state.shop_items[idx];\n      this.setState({\n        current_item: item,\n        current_item_idx: idx,\n      });\n\n      if (item.indexes) {\n        this.change_board(\"roguelike_shop\");\n      }\n      else {\n        this.roguelike.buy();\n      }\n    };\n  }\n\n  render_roguelike_entry_board() {\n    let difficulties = [\n      {\n        name: \"欢乐云游\",\n        handleClick: () => this.enter_difficulty(\"easy\"),\n      },\n      {\n        name: \"整装待发\",\n        handleClick: () => this.enter_difficulty(\"medium\"),\n      },\n      {\n        name: \"苦难之路\",\n        handleClick: () => this.enter_difficulty(\"hard\"),\n      },\n    ];\n    return <RoguelikeEntry \n      difficulties = {difficulties}\n      back = {() => {this.roguelike.end_roguelike_mode();this.change_board(\"tag\");}}\n    />;\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <RoguelikeDeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} />\n// introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} \n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} buy={this.buy_item} refresh_shop={this.roguelike.refresh_shop} />\n\n    const roguelike_main = <Roguelike \n      enter_battle = {() => this.change_board(\"tag\")}\n      enter_dream = {this.roguelike.enter_dream}\n      game_count = {this.state.game_count}\n      check_deck = {() => {this.setState({preview_deck:this.state.Deck});this.change_board(\"preview\");}}\n      check_relics = {() => {this.change_board(\"relic\");}}\n    />;\n\n    const centrals = [roguelike_main, card_picks, shop];\n\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"选牌区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_shop_board() {\n    // let cards = this.state.Deck.filter((x,idx) => this.state.current_item.indexes.includes(idx) && (idx < this.state.Deck.length));\n    let cards = this.state.current_item.indexes.map(idx => this.state.Deck[idx]).filter(x => x != undefined);\n    let selected_card = cards[this.state.shop_selected];\n    // console.log(cards);\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <div style={{marginTop: \"38.2%\", marginLeft: \"2%\"}}>{this.state.current_item.desc}</div>\n      <CardRow \n        cards = {cards.map(this.process_hand_data)}\n        handleClick = {(idx)=>()=>this.setState({shop_selected: idx})}\n        states = {this.state.current_item.indexes.map((x,idx) => ({selected: (idx==this.state.shop_selected)}))}\n        additionalStyle = {{marginTop: \"5%\"}}\n      />\n      <div style={{margin:\"5% 2% 5% 2%\", width:\"95%\", height:\"30%\", overflowY:\"hidden\"}}>\n        {selected_card && get_desc(selected_card)}\n      </div>\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.roguelike.buy(this.state.shop_selected);\n          this.back();\n        }}\n      >\n        确认购买({ICONS.gold}{this.state.current_item.price})\n      </button>\n      <button className=\"preview-button\" onClick={this.back}>返回</button>\n    </div>);\n  }\n\n  render_roguelike_result_board() {\n    let level_diff = this.state.level_achieved - this.state.level_required;\n    let win = <ResultWin \n      game_count = {this.state.game_count}\n      level_required = {this.state.level_required}\n      level_achieved = {this.state.level_achieved}\n      gold_amount = {get_gold_gained(this.state.level_achieved, this.state.level_required)}\n      slam = {level_diff >= 4}\n      grand_slam = {level_diff >= 8}\n      continue = {() => {\n        let game_count = this.state.game_count;\n        this.roguelike.continue_run();\n        if (game_count < 9) {\n          this.change_board(\"roguelike\");\n        }\n        else {\n          this.change_board(\"roguelike_final_result\");\n        }\n      }}\n    />\n    let lose = <ResultLose\n      game_count = {this.state.game_count}\n      continue = {this.end_roguelike_mode}\n    />\n    return this.state.won? win : lose;\n  }\n  \n  render_roguelike_final_result_board() {\n    let difficulty = {\n      easy: \"欢乐云游\",\n      medium: \"整装待发\",\n      hard: \"苦难之路\",\n    }[this.state.difficulty];\n    return <FinalResult \n      difficulty = {difficulty}\n      endgame = \"结束游戏\"\n      continue = {this.end_roguelike_mode}\n    />;\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          {this.props.ctx.gameover? <span>{ICONS.endgame}结束游戏</span>:<span>{ICONS.endturn}结束回合</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n\n            display: (this.state.competition_mode || this.state.roguelike_mode)?\"none\":\"\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      快速设置: () => this.setState({\n        tags: this.choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      // 其他模式: () => this.change_board('mode_selection'),\n      每日挑战: this.enter_daily_mode,\n      肉鸽模式: this.enter_roguelike_mode,\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n    if (this.state.roguelike_mode) {\n      actions = {};\n\n      if (risk_level >= this.state.level_required) {\n        actions.进入游戏 = () => this.enter_game();\n      }\n    }\n\n    if (this.state.daily_mode) {\n      let end_daily_mode = () => {\n          this.roguelike.end_daily_mode();\n          this.change_board(\"tag\");\n        };\n      actions = {\n        返回: end_daily_mode ,\n      };\n\n      if (risk_level >= this.state.level_required) {\n        actions = {\n          进入游戏: () => this.change_board(\"deck\"),\n          返回: end_daily_mode,\n        };\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n          just_selected = {this.state.just_selected}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"#cf1322\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16 && (!(this.state.roguelike_mode || this.state.daily_mode)))? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 1% 2%\",\n            display:(this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          今天是: {this.state.date}\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 3% 2%\",\n            display:(this.state.roguelike_mode || this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          要求危机等级: {this.state.level_required}\n        </div>\n\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        // this.setState({\n          // preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.reset_preview_deck();\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}