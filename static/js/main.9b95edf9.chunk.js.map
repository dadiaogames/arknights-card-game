{"version":3,"sources":["icons.js","orders.js","cards.js","enemies.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckGenerator.js","DeckConstruction.js","TitleScreen.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","rma","rock","d32","mine","block","order_illust","material_icons","ORDERS","requirements","score","reward","desc","effect","G","ctx","payMaterials","gainMaterials","materials","costs","harvest","CARDS","name","cost","atk","hp","illust","reinforce","onReinforce","self","reinforce_desc","onMine","power","deal_random_damage","onPlay","draw","onFight","onTurnBegin","action","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","init_card_state","move","onOut","hand","idx","random","Die","card","splice","field","push","ready_random_card","cure","Shuffle","payCost","get_rhine_order","finished","order","num_finished","indexOf","miners","deck","unshift","Object","assign","enemy","fighters","actors","map","battlecries","dmg","delta","score_gained","Math","floor","logMsg","slice","sort","danger","reinforce_hand","i","reinforce_card","enemy2card","warriors","orders","material","enraged","discard","find","dragon","new_card","j","time_point","effects","EFFECTS","generate_combined_card","ENEMIES","join","drawEnemy","is_elite","high","deal_damage","unyielding","enemyMove","map_object","fn","obj","new_obj","k","PRNG","seed","this","val","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","d1","d2","cd_idx","count","gained","use","out","amount","exhausted_enter","pop","drawOrder","odeck","y","sort_orders","sort_finished","order_id","edeck","switcher","surge","switchEnemy","was_enemy","reversed","time_points","title","split","reverse","unexhausted","exhausted_cards","includes","ready_times","rhine","card_idx","blocker","blocked_enemies","c","get_blocker","blocker_idx","onEnemyStageEnd","str2deck","deck_data","card_dict","item","arr2obj","cards","card_data","parseInt","target_card","msg","messages","AC","setup","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","console","log","playing","events","endTurn","mulligan","choices","discarded","num_draw","play","act","harder_reinforce","setValue","attr","finishOrder","useOrder","harvest_orders","fight","idx1","idx2","enemyInit","stage","changeMsg","turn","onBegin","concat","refresh","fog","onEnd","endIf","win","reason","max_danger","goal","undefined","Card","props","additional_styles","e_illust","o_illust","r_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","style","cardStyle","keys","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","Controller","actions","process_action","checkCard","display","EnterGame","switchScene","advancedSettings","Panel","content","TagSelection","tbody","row","row_tags","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","_","require","PREFIXES","SEEDS","strategies","get_random_card","rng","banned_cards","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","generate_deck","deck_name","strategy","amount_add","shuffle","arr2deck","output","deck2str","is_standard","numbers","names","isNaN","unique_names","Set","sum","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","alert","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","TAGS","tag_list","t","process_tags","rhodes_training_mode","more_enemies","RULES","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","change_board","choose_tag","get_risk_level","enter_game","check_deck","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","hand_choices","branch","show_field","show_tag_selection","board","last_board","deck_mode","preview_deck","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","一键收货","log_select","new_tags","setState","reduce","acc","icon","order_effect","finished_effect","fontSize","times","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","boards","get_enemies","init_decks","reset","gameover","grade","finish","failed","width","margin","overflow","position","top","left","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","deck_generation","deck_construction","onSelect","selectedIndex","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b95edf9.chunk.js","sourcesContent":["import React from 'react';\nconst icon_height = \"25em\";\nconst attr_icon_height = \"20em\";\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) { // TODO: reconstruct this, \"if pay materials\" should not be at here\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n\n    {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  generate_combined_card,\n} from './Game';\nimport { material_icons } from './orders';\n\nexport var CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      G.score += 1 + 2 * self.power;\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+2*self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 3,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 4;\n    },\n    reinforce_desc: \"+0/+4\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 6,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 7,\n    hp: 4,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 1,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://ak.mooncell.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://ak.mooncell.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://ak.mooncell.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 3 * self.power;\n      self.block -= 1;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得3点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得4点费用\", \n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 4 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://ak.mooncell.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://ak.mooncell.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      //EH: add \"init field card state\" function\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"红豆\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"亡语: 将手牌中的1个干员部署到场上\", \n    illust:\"http://ak.mooncell.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    onOut(G, ctx, self) {\n      if (G.hand.length > 0) {\n        let idx = ctx.random.Die(G.hand.length) - 1;\n        let card = G.hand.splice(idx, 1)[0];\n        G.field.push(card);\n        init_card_state(G, ctx, card);\n      }\n      G.costs += 3 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"并返还3点费用\",\n  },\n  \n  {\n    name:\"推进之王\", \n    cost:4, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"天火\", \n    cost:5, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+2>\", \n    illust:\"http://ak.mooncell.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 对1个敌人造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+self.power*2);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:2, \n    hp:2, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上每有1个干员，就获得+1/+1和<+1>\", \n    illust:\"http://ak.mooncell.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        self.atk += 1;\n        self.hp += 1;\n        self.mine += 1;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://ak.mooncell.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:4, \n    hp:5, \n    mine:2, \n    block:1, \n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:5, \n    atk:3, \n    hp:4, \n    mine:2, \n    block:1, \n    desc: <span>部署: 获得3个{material_icons[3]}</span>, \n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 3;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.materials[3] += 1;\n    },\n    reinforce_desc: <span>获得1个{material_icons[3]}</span>,\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:5, \n    mine:1, \n    block:2, \n    desc:\"行动: 获得+3生命值\", \n    illust:\"http://ak.mooncell.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2生命值\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 横置1个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 8;\n    },\n    reinforce_desc: \"+0/+8\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://ak.mooncell.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 8;\n    },\n    reinforce_desc: \"+0/+8\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:2, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 使1个干员获得+5生命值\", \n    illust:\"http://ak.mooncell.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 5 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+3生命值\",\n  },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 使1个干员获得+2/+2\", \n    illust:\"http://ak.mooncell.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field)[0];\n      if (card) {\n        card.atk += 2 + self.power;\n        card.hp += 2 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+1/+1\",\n  },\n  \n  {\n    name:\"清流\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 使1个干员获得+9生命值\", \n    illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 9);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 5);\n    },\n    reinforce_desc: \"使1个干员获得+5生命值\",\n  },\n\n  {\n    name:\"嘉维尔\", \n    cost:3, \n    atk:0, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"行动: 使1个干员获得+3攻击力\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let field = G.field.filter(x => (x != self));\n      let card = ctx.random.Shuffle(field)[0];\n      if (card) {\n        card.atk += 3;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      // TODO: reconstruct this, find a way that only calling a function is enough and it can be used in all creatures, like static method?\n      let field = G.field.filter(x => (x != self));\n      let card = ctx.random.Shuffle(field)[0];\n      if (card) {\n        card.atk += 2;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"使1个干员获得+2攻击力\",\n  },\n  \n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"阿消\", \n    cost:4, \n    atk:3, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得4分\", \n    illust:\"http://ak.mooncell.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3-2*self.power)) {\n        G.score += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用-2\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个\\\"莱茵生命订单\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个\\\"莱茵生命订单\\\"\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，获得1个\\\"莱茵生命订单\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc:\"行动: 重置所有已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    action(G, ctx, self) {\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"采掘: 重置1个已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    onMine(G, ctx, self) {\n      for (let order of ctx.random.Shuffle(G.finished)) {\n        if (order.exhausted) {\n          order.exhausted = false;\n          break;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+4/+2\",\n  },\n  \n  {\n    name:\"塞雷娅\",\n    cost:7,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://ak.mooncell.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.name != self.name)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗\\\"效果\", \n    illust:\"http://ak.mooncell.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.name != self.name)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:5, \n    atk:5, \n    hp:6, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动\\\"效果\", \n    illust:\"http://ak.mooncell.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.action && (card.name != self.name)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:3,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://ak.mooncell.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.name != self.name)) {\n          card.onPlay(G, ctx, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:2,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://ak.mooncell.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 煌 获得${score_gained}分`);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  \n  {\n    name:\"莫斯提马\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 每有1个被横置的敌人，就再获得1个材料\",\n    illust:\"http://ak.mooncell.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name:\"银灰\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，并重置自己</span>,\n    illust:\"http://ak.mooncell.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n      }\n    },\n    onFight(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"+3/+1 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:3,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:<span>行动: 消耗1个{material_icons[3]}，获得3分</span>,\n    illust:\"http://ak.mooncell.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        G.score += 3 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n    illust:\"http://ak.mooncell.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 1,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:5,\n    mine:1,\n    block:2,\n    desc: \"部署: 在手牌中每被强化过1次，就强化场上的1个干员\",\n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let power = self.power || 0;\n      for (let i=0; i<power; i++) {\n        let card = ctx.random.Shuffle(G.field)[0];\n        if (card){\n          reinforce_card(G, ctx, card);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"早露\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"部署: 在手牌中每被强化过1次，就对1个敌人造成3点伤害\",\n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let power = self.power || 0;\n      for (let i=0; i<power; i++) {\n        deal_random_damage(G, ctx, 3);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://ak.mooncell.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 使1个有阻挡能力的干员获得+4生命值，重复2次\",\n    illust:\"http://ak.mooncell.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let warriors = G.field.filter(x => (x.block > 0));\n\n      if (warriors.length > 0){\n        for (let i=0; i<2; i++) {\n          let warrior = ctx.random.Shuffle(warriors)[0];\n          warrior.hp += 4 + self.power;\n        }\n      }\n    },\n    reinforce_desc: \"生命值加成+1\",\n  },\n\n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 使2个订单的能力改为\\\"→造成5点伤害\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let orders = ctx.random.Shuffle(G.finished);\n      if (orders.length > 2) {\n        orders = orders.slice(0,2);\n      }\n      for (let order of orders) {\n        let material = ctx.random.Die(3) - 1;\n        let requirements = [0,0,0,0];\n        requirements[material] = 1;\n        order.desc = <span>{material_icons[material]}→5伤害</span>;\n        order.effect = (G,ctx) => {\n          if (payMaterials(G, ctx, requirements)) {\n            deal_random_damage(G, ctx, 5);\n          }\n        };\n      }\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"猎蜂\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"战斗: 激怒目标\",\n    illust:\"http://ak.mooncell.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n    reinforce: 1,\n\n    onFight(G, ctx, self, enemy) {\n      enemy.enraged = true;\n    },\n\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://ak.mooncell.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 1,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      self.hp += 3;\n    },\n    reinforce_desc: \"+0/+3\",\n  },\n\n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://ak.mooncell.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:12,\n    hp:12,\n    mine:6,\n    block:4,\n    illust:\"http://ak.mooncell.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      G.atk += 4;\n      G.hp += 4;\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"杜林\",\n    cost:5,\n    atk:4,\n    hp:7,\n    mine:2,\n    block:2,\n    illust: \"http://ak.mooncell.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n    reinforce: 1,\n    desc: \"亡语: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n    onOut(G, ctx, self) {\n      let target = G.discard.find(x => x.name==\"巡林者\");\n      if (target) {\n        let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n        if (dragon) {\n          G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n        }\n      }\n\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:5,\n    hp:2,\n    mine:2,\n    block:0,\n    illust: \"http://ak.mooncell.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 1,\n    desc: \"行动: 将场上所有干员变成{费用+1}的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"年\",\n    cost:8,\n    atk:4,\n    hp:12,\n    mine:2,\n    block:3,\n    illust: \"http://ak.mooncell.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n\n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      logMsg(G, ctx, `触发 ${card.name} 的部署效果`);\n      card.onPlay(G, ctx, self);\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      logMsg(G, ctx, `触发 ${card.name} 的采掘效果`);\n      card.onMine(G, ctx, self);\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      logMsg(G, ctx, `触发 ${card.name} 的战斗效果`);\n      card.onFight(G, ctx, self, enemy);\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      logMsg(G, ctx, `触发 ${card.name} 的行动效果`);\n      card.action(G, ctx, self);\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      logMsg(G, ctx, `触发 ${card.name} 的强化效果`);\n      card.onReinforce(G, ctx, self);\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"部署: 获得1个随机能力\",\n    onPlay(G, ctx, self) {\n      let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"亡语: \", \"onOut\"]];\n      let time_point = ctx.random.Shuffle(time_points)[0];\n      let effects = ctx.random.Shuffle(G.EFFECTS);\n      let effect = effects[0];\n      self.desc = time_point[0] + effect[0];\n      self[time_point[1]] = effect[1];\n      self.reinforce_desc = effects[1][0];\n      self.onReinforce = effects[1][1];\n      logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://img.moegirl.org/common/thumb/4/43/Ak_char_007_closre_1.png/800px-Ak_char_007_closre_1.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 3,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"涌动\",\n    onPlay(G, ctx) {\n      drawEnemy(G, ctx);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力单位，造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场：使1个敌人获得+3攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 3;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换，行动：对所有干员造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"亡语：对1个随机干员造成{攻击力+2}点伤害\",\n    onOut(G, ctx, self) {\n      if (G.field.length > 0) {\n        let idx = ctx.random.Die(G.field.length) - 1;\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n      }\n    }\n    \n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 3,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀：再次攻击\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      let idx = G.efield.indexOf(self);\n      if (card.dmg > card.hp) {\n        self.exhausted = false;\n        if (~idx) {\n          enemyMove(G, ctx, idx);\n        }\n      }\n    },\n    },\n  \n  {\n      name: \"碎岩者\",\n      illust: \"http://ak.mooncell.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n      atk: -2,\n      hp: 8,\n  },\n\n//   {\n//     name: \"碎岩者组长\",\n//     illust: \"http://ak.mooncell.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n//     atk: -2,\n//     hp: 12,\n//     desc: \"替换\",\n//     is_elite: true,\n\n// },\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import React from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nfunction get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  for (let c of G.field) {\n    blocked_enemies += c.block || 0;\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  //cards with no damage may not have the damage attr\n  card.dmg = card.dmg || 0;\n  card.dmg += dmg;\n  logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n  if (card.dmg >= card.hp) {\n    if (~G.efield.indexOf(card)) {\n      out(G, ctx, deck, idx);\n    }\n    else {\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  if (G.efield.length > 0){\n    let idx = ctx.random.Die(G.efield.length) - 1\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  card.material = card.material || ctx.random.Die(3) - 1;\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } //TODO: else, lose the game\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n    sort_orders(G);\n  }\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>(x.requirements.indexOf(3)-y.requirements.indexOf(3)));\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = true;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 4,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+4/+4\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 4;\n      self.hp += 4;\n    },\n  };\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"亡语: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name.length == 1) {\n    card.name += card.name;\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0;\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.harder_reinforce) {\n    let paid = payCost(G, ctx, 2);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"温蒂\"].includes(x.name))));\n  if (exhausted_cards.length > 0) {\n    let card = ctx.random.Shuffle(exhausted_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.filter(x=>(x.block>0)).sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    // else if (x.block != y.block) {\n    //   return y.block - x.block;\n    // }\n    else {\n      return x.hp-y.hp;\n    }\n  });\n  let card = ranked_field_by_dmg[0];\n  if (card) {\n    card.dmg -= amount;\n    if (card.dmg < 0) {\n      card.hp -= card.dmg;\n      card.dmg = 0;\n    }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = Object.assign({}, ctx.random.Shuffle(G.odeck)[0]);\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n    if (enemy.enraged) {\n      if (G.field.length > 0) {\n        let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n        let card_idx = G.field.indexOf(card);\n        if (card){\n          deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n          if (enemy.onFight) {\n            enemy.onFight(G, ctx, enemy, card);\n          }\n        }\n        logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n      }\n    }\n\n    else if (enemy.action) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        G.danger += 1;\n        logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n        if (enemy.onMine) {\n          enemy.onMine(G, ctx, enemy);\n        }\n      }\n    }\n  }\n}\n\nfunction onEnemyStageEnd(G, ctx) {\n  for (let i=G.field.length-1; i>=0; i--) {\n    let card = G.field[i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, \"field\", i);\n    }\n    // refresh the card states here\n    card.ready_times = 0;\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<4; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck_data, seed) {\n  let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx}));\n\n  let rng = new PRNG(seed);\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n\n    G.exhausted_enter = false;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n\n    G.CARDS = CARDS.slice(0);\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n\n    return G;\n  }\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        refresh(G, ctx);\n        draw(G, ctx);\n        drawOrder(G, ctx);\n        G.costs += 3;\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          onEnemyStageEnd(G, ctx); // EH: Maybe this can be reconstructed?\n        }\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      onEnemyStageEnd(G, ctx);\n    },\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    additional_styles.r_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n      additional_styles.r_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n      additional_styles.r_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.action}\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.action==\"进入游戏\"?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\nvar _ = require(\"lodash\");\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst dubin_score = `杜宾 2 3\n推进之王 2 3\n天火 1 2\n讯使 2 3\n芬 2 3\n米格鲁 2 3\n玫兰莎 2 3\n克洛丝 2 3\n史都华德 2 3\n芙蓉 1 2\n安赛尔 1 2\n阿米娅 2 3\n杰西卡 2 3\n蛇屠箱 0 2\n炎熔 0 2\n梓兰 0 1\n凛冬 0 2\n真理 0 2\n调香师 0 1\n嘉维尔 1 2\n极境 0 1\n狮蝎 0 1\n斯卡蒂 1 2`;\n\nconst solve = `天火 1 2\n能天使 1 2\n克洛丝 2 3\n杰西卡 2 3\n蓝毒 2 3\n巡林者 2 3\n陈 2 3\n香草 2 3\n极境 1 2\n炎熔 2 3\n煌 2 3\n嘉维尔 1 2\n银灰 1 2\n凛冬 1 2\n白面鸮 1 2\n拉普兰德 1 2\n梓兰 0 1\n伊桑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 3 4\n空 2 3\n可颂 0 2\n能天使 0 1\n莫斯提马 1 2\n白面鸮 1 2\n阿消 2 3\n芬 1 2\n梓兰 1 2\n伊桑 0 2\n桃金娘 1 2\n狮蝎 0 1\n12F 1 2\n年 1 2\n黑角 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 2 3\n红豆 0 2\n桃金娘 1 2\n极境 1 2\n温蒂 1 2\n蛇屠箱 1 2\n清流 1 2\n巡林者 1 3\n12F 1 3\n黑角 1 3\n杜林 1 3\n芙兰卡 0 2\n煌 0 2\n雷蛇 0 1\n可颂 0 1\n陈 0 2\n蓝毒 0 2\n银灰 0 2\n白面鸮 1 2\n伊桑 1 2\n年 0 2\n夜刀 0 2`;\n\nconst rhine = `赫默 1 3\n白面鸮 1 3\n梅尔 2 3\n蓝毒 1 2\n史都华德 1 3\n真理 0 2\n远山 1 2\n伊芙利特 1 2\n塞雷娅 1 2\n芙蓉 0 1\n清流 0 1\n煌 0 1\n嘉维尔 0 1\n安赛尔 0 1\n桃金娘 1 2\n讯使 2 3\n伊桑 0 1\n米格鲁 0 2\n芬 1 2\n狮蝎 0 1\n斯卡蒂 0 1`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 2 3\n杰西卡 2 3\n讯使 2 3\n极境 1 2\n凛冬 2 3\n斯卡蒂 2 3\n德克萨斯 1 2\n蓝毒 1 2\n梅尔 1 2\n白面鸮 1 2\n煌 0 1\n真理 0 2\n陈 0 2\n克洛丝 0 2\n芬 1 2\n伊桑 0 1`;\n\nconst angelina = `安洁莉娜 1 2\n芬 2 3\n推进之王 2 3\n陈 2 3\n翎羽 2 3\n极境 2 3\n桃金娘 1 2\n杜宾 1 2\n塞雷娅 1 2\n天火 1 2\n星极 0 2\n角峰 0 2\n蛇屠箱 1 2\n米格鲁 1 2\n芙蓉 1 2\n清流 0 1\n伊桑 0 1\n狮蝎 1 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 1 3\n崖心 1 3\n角峰 1 3\n初雪 3 4\n星极 1 3\n赫默 1 2\n白面鸮 1 2\n讯使 2 3\n极境 2 3\n克洛丝 1 2\n煌 1 2\n嘉维尔 1 2\n安赛尔 1 2\n芬 1 2\n真理 0 2\n伊桑 0 2`;\n\nconst ursus = `凛冬 2 3\n真理 3 4\n古米 2 3\n早露 2 3\n史都华德 1 3\n安赛尔 1 3\n阿米娅 1 2\n杰西卡 0 2\n蓝毒 0 2\n黑角 0 2\n桃金娘 1 2\n讯使 2 3\n芬 1 2\n推进之王 1 2\n陈 1 2\n芙兰卡 0 2\n白面鸮 0 2\n伊桑 0 1\n梅尔 0 2\n猎蜂 0 1\n年 0 1\n斯卡蒂 1 2`;\n\nconst strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus];\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n  let strategy = rng.choice(strategies).split(\"\\n\");\n  for (let s of strategy) {\n    let strategy = s.split(\" \");\n    deck.push(get_single_card(rng, strategy[0], parseInt(strategy[1]), parseInt(strategy[2])));\n  }\n\n  deck = rng.shuffle(arr2deck(deck)).slice(0, 25);\n  let amount_add = 35 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  // if (deck.length > 30) {\n  //   let amount_remove = deck.length - 30;\n  //   for (let i=0; i<(amount_remove); i++) {\n  //     deck.splice(rng.randRange(deck.length), 1);\n  //   }\n  // }\n\n\n  return deck2str(deck);\n\n  //TODO: let deck be the summarized version, this is an advanced feature\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        请组出一套强力或欢乐的卡组\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式禁卡: 砾, 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"40%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>查看规则</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+2\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+1生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0, G.edeck.length-4);\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n    desc: \"所有高台干员部署费用+1\",\n    level: 1,\n    effect(G, ctx) {\n      for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n        card.cost += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Char_atk_2.png\",\n    desc: \"所有干员获得-2攻击力\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.atk -= 2;\n        if (card.atk < 0) {\n          card.atk = 0;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/3/3f/Char_blockminus_2.png\",\n    desc: \"所有干员阻挡数-1\",\n    level: 2,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        if (card.block > 0) {\n          card.block -= 1;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+3/+3\",\n    level: 2,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 3;\n          enemy.hp += 3;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/c/c7/Global_costrecovery_1.png\",\n    desc: \"强化干员需要消耗2点费用\",\n    level: 2,\n    effect(G, ctx) {\n      G.harder_reinforce = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/c/cd/Global_tokencnt_2.png\",\n    desc: \"强化干员需要的材料数+1\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.reinforce += 1;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://ak.mooncell.wiki/images/6/6d/Enemy_eagent_1.png\",\n    desc: \"敌人无法被横置\",\n    level: 2,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.unyielding = true;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -2,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.more_enemies = true;\n    }\n  },\n\n  \n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"所有敌人获得+2/+2\",\n    level: 3,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.atk += 2;\n        enemy.hp += 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://ak.mooncell.wiki/images/0/09/Enemy_hp_3.png\",\n    desc: \"胜利所需分数+5\",\n    level: 3,\n    effect(G, ctx){\n      G.goal += 5;\n    }\n  },\n\n  \n  {\n    src: \"http://ak.mooncell.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 5,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS } from './orders';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>消耗费用(写在卡牌左上角)，将干员从手牌中部署到场上；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用“星极”进行采掘，星极的采掘能力为3，因此获得3个随机材料，博士因此获得了“扭转醇”、“扭转醇”和“研磨石”；然后使用“阿米娅”进行采掘，阿米娅的采掘能力为2，因此获得“扭转醇”和“RMA12”，而阿米娅的效果为“采掘: 获得1分”，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 选定场上的一名干员，和一名敌人，该干员对敌人造成等同于自己攻击力的伤害；<br/>\n  <i>举例: 博士使用“克洛丝”对“破阵者”发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果场上的一名干员有“行动”效果，则可以横置该干员，然后触发其“行动”效果；<br/>\n  <i>举例: 博士“桃金娘”行动，桃金娘的效果为“行动: 获得3点费用”，因此博士横置桃金娘后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在订单右上角，一般是一些分数和一个材料)，完成订单是得分的主要手段；\"D32钢\"是百搭资源，可作为任意资源交付订单；<br/><br/>\n  <b>* 使用订单:</b> 完成的订单，拥有自己的订单能力，每回合可以使用一次；<br/>\n  <i>举例: 博士首先使用完成的第一个订单，能力描述为“扭转醇→？+？”，也就是可以用1个扭转醇换2个随机材料，博士因此消耗1个扭转醇，获得了2个随机材料，分别为“研磨石”和“研磨石”，此时博士刚好凑够了3个研磨石，立刻完成了一个需要3个研磨石的订单，获得了2分和1个“RMA12”，该订单的能力描述为“扭转醇→2分”，也就是可以用1个扭转醇换2分，博士使用了该订单，消耗了1个扭转醇，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次，在你的回合结束后，进入整合运动阶段；<br/><br/>\n  首先，翻开2张敌人牌，以横置状态入场；<br/><br/>\n  然后，场上处于重置状态的敌人，从左到右行动一次，被阻挡的敌人，会向阻挡者发起攻击，未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，“阻挡X”表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有“行动”能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其“行动”能力；\n  <br/>\n  被激怒的敌人，无论被阻挡与否，都会攻击场上的一名随机干员，而不会动乱或行动；\n</div>;","import React from 'react';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { Card, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\nimport 'react-tabs/style/react-tabs.css';\n\nvar _ = require(\"lodash\");\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_title_board, \n      // board: this.render_mulligan_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { // TODO: set all \"check\" aside to the right, this is not done using Controller, first set the width of controller, then add a new button on render_board\n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        一键收货: this.harvest_orders,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      enraged: card.enraged,\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const boards = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: boards[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n    this.props.moves.setDecks(init_decks(deck_data, this.state.seed));\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n      seed: get_seed_name(),\n    });\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else {\n          grade = \"SSS\";\n        }\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n地图种子: ${this.state.seed}`);\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n        }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        */}\n      {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid blue\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.enemyInit();\n            this.enemy_move(this.props.G.more_enemies?-3:-2);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n          </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n        additionalStyle = {{height: \"25%\", marginTop:\"16%\"}}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=5)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\")}}\n          action = \"查看卡组\"\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          switchScene = {() => {this.enter_game()}}\n          action = \"进入游戏\"\n          advancedSettings = {() => {this.change_board(\"settings\")}}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}