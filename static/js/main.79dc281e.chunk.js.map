{"version":3,"sources":["icons.js","orders.js","cards.js","enemies.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckGenerator.js","DeckConstruction.js","TitleScreen.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","rma","rock","d32","mine","block","order_illust","material_icons","ORDERS","requirements","score","reward","desc","effect","G","ctx","payMaterials","gainMaterials","materials","costs","harvest","CARDS","name","cost","atk","hp","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","power","achieve","deal_random_damage","onPlay","draw","onTurnBegin","action","onFight","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","enemy","dmg","logMsg","limit_hand_field","field","card","move","init_card_state","hand","indexOf","ready_random_card","cure","random","Shuffle","this","payCost","get_rhine_order","count","finished","order","material","Die","is_rhine","unshift","i","orders","num_finished","miners","deck","Object","assign","fighters","map","actors","battlecries","score_gained","Math","floor","diff","cards","slice","push","use_count","sort","danger","reinforce_hand","reinforce_card","onRest","num_rest_cards","get_num_rest_cards","player","includes","resters","card_idx","splice","discard","num_cards","played","actor","damaged_enemy","enemy_idx","miner","fighter","enemy2card","enraged","idx","texas","find","new_card","j","BORROWS","time_point","effects","EFFECTS","generate_combined_card","was_enemy","blank_enemy","ENEMIES","join","self_copy","is_elite","high","onOut","deal_damage","unyielding","map_object","fn","obj","new_obj","k","PRNG","seed","val","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","d1","d2","cd_idx","gained","use","out","amount","exhausted_enter","pop","drawOrder","odeck","y","sort_orders","sort_finished","order_id","drawEnemy","edeck","enemy_exhausted_enter","surge","not_switch","switcher","switchEnemy","replace","reversed","time_points","title","split","reverse","unexhausted","exhausted_cards","prepared_cards","ready_times","rhine","onEnemyStageEnd","str2deck","deck_data","card_dict","item","arr2obj","card_data","parseInt","target_card","msg","messages","achievement_name","achievement_desc","achievements","alert","AC","setup","banned_cards","c","console","log","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","playing","events","endTurn","mulligan","choices","discarded","num_draw","play","stage","act","harder_reinforce","rest","rest_cards","D6","setValue","attr","finishOrder","useOrder","harvest_orders","fight","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","max","get_blocker","blocker_idx","changeMsg","turn","onBegin","concat","refresh","round_num","enemy_grow","reinforceOnR3","dashOnR3","reinforceOnR4","more_enemies","num_enemies_out","fog","onEnd","endIf","win","reason","max_danger","goal","undefined","Card","props","additional_styles","e_illust","o_illust","r_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","style","cardStyle","keys","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","Controller","actions","process_action","checkCard","display","EnterGame","switchScene","advancedSettings","back","Panel","content","TagSelection","tbody","row","row_tags","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","PREFIXES","SEEDS","strategies","get_random_card","rng","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","deck_from_strategy","strategy","shuffle","arr2deck","generate_deck","deck_name","amount_add","output","deck2str","is_standard","numbers","names","isNaN","unique_names","Set","_","sum","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","padding","TitleScreen","textAlign","href","enterGame","checkRule","TAGS","tag_list","t","process_tags","rhodes_training_mode","RULES","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","change_board","choose_tag","get_risk_level","enter_game","check_deck","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","hand_choices","branch","show_field","show_tag_selection","board","last_board","deck_mode","preview_deck","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","一键收货","log_select","new_tags","setState","reduce","acc","icon","order_effect","finished_effect","fontSize","times","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","init_decks","reset","gameover","good_grade","grade","finish","failed","width","margin","overflow","position","top","left","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","deck_generation","deck_construction","onSelect","selectedIndex","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79dc281e.chunk.js","sourcesContent":["import React from 'react';\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) { // TODO: reconstruct this, \"if pay materials\" should not be at here\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]} + 1费</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]} + 1费</span>),\n    // desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]} + 1费</span>),\n    // desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n\n    {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve\n} from './Game';\nimport { material_icons } from './orders';\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:5, \n    hp:5, \n    mine:3, \n    block:1, \n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 6,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:15,\n    hp:15,\n    mine:8,\n    block:2,\n    illust:\"http://ak.mooncell.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://ak.mooncell.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n\n  \n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://ak.mooncell.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      self.block -= 1;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得3点费用\", \n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 3 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://ak.mooncell.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘/战斗: 摸1张牌\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx) {\n      draw(G, ctx);\n    },\n    onFight(G, ctx) {\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://ak.mooncell.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 8) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少8点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://ak.mooncell.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      if (G.limit_hand_field && G.field.length >= 6) {\n        logMsg(G, ctx, \"场上干员数已达到上限\");\n        return;\n      }\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      if (card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://ak.mooncell.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://ak.mooncell.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:3, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://ak.mooncell.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:4, \n    atk:3, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+2>\", \n    illust:\"http://ak.mooncell.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://ak.mooncell.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      self.atk += 3 + 2 * self.power;\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc: <span>部署: 获得2个{material_icons[3]}</span>, \n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"行动: 获得+4生命值\", \n    illust:\"http://ak.mooncell.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 4 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:9, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 横置1个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:3, \n    hp:9, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://ak.mooncell.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:1, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 使1个干员获得+5生命值\", \n    illust:\"http://ak.mooncell.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 5 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+5生命值\",\n  },\n\n  {\n    name:\"安赛尔\", \n    cost:1,\n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 使1个干员获得+2/+2\", \n    illust:\"http://ak.mooncell.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 2 + 2 * self.power;\n        card.hp += 2 + 2 * self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2/+2\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n\n  },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  // {\n  //   name:\"闪灵\",\n  //   cost:4,\n  //   atk:4,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"采掘/战斗: 使1个干员获得+3/+3\",\n  //   illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     // TODO: reconstruct this part, of course buffing an card needs a function\n  //     let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n  //     if (card) {\n  //       card.atk += 3 + 2 * self.power;\n  //       card.hp += 3 + 2 * self.power;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //     // It's okay to do this because \"onFight\"s are not on G.effects\n  //   },\n  //   reinforce_desc: \"再获得+2/+2\",\n  // },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  {\n    name:\"莫斯提马\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n    illust:\"http://ak.mooncell.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+1 <+1>\",\n  },\n  \n  {\n    name:\"皇帝\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得2分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += 2 * num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"行动: 消耗4点费用，获得6分\", \n    illust:\"http://ak.mooncell.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 4 + 2 * self.power)) {\n        let delta = 6 + 3 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+2，得分+3\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得2个\\\"莱茵生命订单\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个\\\"莱茵生命订单\\\"\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，获得1个\\\"莱茵生命订单\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置所有已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    onMine(G, ctx, self) {\n      let count = G.finished.filter(x => x.exhausted).length;\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n\n      if (count >= 6) {\n        achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少6个订单\", self);\n      }\n\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://ak.mooncell.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1个\\\"莱茵生命订单\\\"，其能力为\\\"?→造成5点伤害\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let order = {};\n      let material = ctx.random.Die(3) - 1;\n      let requirements = [0,0,0,0];\n      requirements[material] = 1;\n      order.desc = <span>{material_icons[material]}→5伤害</span>;\n      order.effect = (G,ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          deal_random_damage(G, ctx, 5);\n        }\n      };\n      order.is_rhine = true;\n      G.finished.unshift(order);\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n\n  {\n    name:\"麦哲伦\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 获得2个未完成的订单\",\n    illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      for (let i=0; i<2; i++){\n        let order = {...(ctx.random.Shuffle(G.ORDERS)[0])};\n        G.orders.unshift(order);\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onPlay(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onReinforce(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce_desc: \"获得2个未完成的订单\",\n  },\n  \n  {\n    name:\"稀音\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 获得1个订单，其能力为\\\"?→获得1分\\\"\",\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let order = {}; // EH: Reconstruct this as this code is the same as Meier\n      let material = ctx.random.Die(3) - 1;\n      let requirements = [0,0,0,0];\n      requirements[material] = 1;\n      order.desc = <span>{material_icons[material]}→1分</span>;\n      order.effect = (G, ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          G.score += 1;\n        }\n      };\n      G.finished.unshift(order);\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onPlay(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 2;\n      self.atk += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  \n  {\n    name:\"塞雷娅\",\n    cost:8,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://ak.mooncell.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://ak.mooncell.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:5, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://ak.mooncell.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://ak.mooncell.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://ak.mooncell.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 6) {\n          achieve(G, ctx, \"热血沸腾\", \"使用煌获得至少6分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  {\n    name:\"黑\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"超杀: 如果场上没有敌人，则获得5分\",\n    illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp && G.efield.length == 0) {\n        let diff = 5 + 3 * self.power;\n        G.score += diff;\n        logMsg(G, ctx, `使用 黑 获得${diff}分`);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得3分\",\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onFight(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 2,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的部署效果 \\\"${card.desc}\\\"`);}\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的采掘效果 \\\"${card.desc}\\\"`);}\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的战斗效果 \\\"${card.desc}\\\"`);}\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的行动效果 \\\"${card.desc}\\\"`);}\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 部署5个随机干员的1/1复制\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        G.field.push(init_card_state(G, ctx, card));\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  {\n    name:\"银灰\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://ak.mooncell.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 5) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰5次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得5分</span>,\n    illust:\"http://ak.mooncell.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 5 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n    illust:\"http://ak.mooncell.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 1,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  {\n    name:\"铃兰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得5分</span>,\n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.score += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc: \"部署: 强化所有手牌1次\",\n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = [...G.hand];\n      for (let card of cards) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n  {\n    name:\"守林人\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"休整: 造成7点伤害\",\n    illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      deal_random_damage(G, ctx, 7 + 4 * self.power);\n    },\n    reinforce_desc: \"伤害+4\",\n  },\n  {\n    name:\"霜叶\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:1,\n    desc: \"休整: 每有1个休整中的干员，就获得+1/+1\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      self.atk += num_rest_cards;\n      self.hp += num_rest_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"锡兰\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 如果至少有5个休整中的干员，则获得5分\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      if (num_rest_cards >= 5) {\n        G.score += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  {\n    name:\"诗怀雅\",\n    cost:4,\n    atk:4,\n    hp:5,\n    mine:1,\n    block:1,\n    desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"夜莺\",\n    cost:6,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n    onRest(G, ctx, self) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.onRest && (card.onRest != self.onRest)) {\n            card.onRest(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let resters = G.deck.filter(x => x.onRest);\n      if (resters.length > 0) {\n        let card = ctx.random.Shuffle(resters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个干员造成4点伤害，并获得2分，如果该干员未被摧毁，则重置自己\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self)))[0];\n      if (card) {\n        card.dmg += 4;\n        G.score += 2;\n        if (card.dmg >= card.hp) {\n          let card_idx = G.field.indexOf(card);\n          G.field.splice(card_idx, 1);\n          G.discard.push(card);\n        }\n        else {\n          self.exhausted = false;\n        }\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n        if (self.use_count >= 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:5,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:2,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      if (G.limit_hand_field && G.hand.length >= 6) {\n        logMsg(G, ctx, \"手牌数已达到上限\");\n        G.hand = G.hand.slice(G.hand.length-6);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸5张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<5; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:8,\n    atk:6,\n    hp:7,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得6分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 6;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+5/+5直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 5;\n      self.dmg -= 5;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 5;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"白金\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"战斗: 使1个干员获得+3攻击力\", \n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%87%91_1.png\",\n    onFight(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => x != self))[0];\n      if (card) {\n        card.atk += 3;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+3/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    }\n  },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  {\n    name:\"红\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1分\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  {\n    name:\"波登可\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 触发场上1个干员的\\\"行动:\\\"效果\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      if (actor) {\n        actor.action(G, ctx, actor);\n        logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0)))[0];\n      if (damaged_enemy) {\n        let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        G.efield.splice(enemy_idx, 1);\n        logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  {\n    name:\"星熊\",\n    cost:6,\n    atk:1,\n    hp:2,\n    mine:3,\n    block:2,\n    desc: \"部署: 每有1张手牌，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let num_cards = G.hand.length;\n      self.atk += num_cards;\n      self.hp += 2 * num_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 4;\n    },\n    reinforce_desc: \"获得4点费用\",\n  },\n  {\n    name:\"白雪\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果\",\n    illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\", \"艾雅法拉\"].includes(x.name))))[0];\n      if (miner) {\n        miner.onMine(G, ctx, self);\n        logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onFight(G, ctx, self) {\n      let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\", \"能天使\"].includes(x.name))))[0];\n      if (fighter) {\n        fighter.onFight(G, ctx, self);\n        logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://ak.mooncell.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:6,\n  //   atk:6,\n  //   hp:7,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"行动: 将1张敌人牌加入手牌\",\n  //   illust:\"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   action(G, ctx, self) {\n  //     let card = enemy2card(G, ctx);\n  //     for (let i=0; i<self.power; i++) {\n  //       reinforce_card(G, ctx, card);\n  //     }\n  //     G.hand.unshift(card);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+2/+3\",\n  // },\n\n \n   {\n    name:\"猎蜂\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"战斗: 激怒目标\",\n    illust:\"http://ak.mooncell.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n    reinforce: 1,\n\n    onFight(G, ctx, self, enemy) {\n      enemy.enraged = true;\n    },\n\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://ak.mooncell.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"部署\\\"德克萨斯\\\"\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://ak.mooncell.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://ak.mooncell.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 1,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"年\",\n    cost:8,\n    atk:4,\n    hp:12,\n    mine:2,\n    block:2,\n    illust: \"http://ak.mooncell.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n\n  \n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n\n\n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"部署: 获得1个随机能力\",\n    onPlay(G, ctx, self) {\n      let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      let time_point = ctx.random.Shuffle(time_points)[0];\n      let effects = ctx.random.Shuffle(G.EFFECTS);\n      let effect = effects[0];\n      self.desc = time_point[0] + effect[0];\n      self[time_point[1]] = effect[1];\n      self.reinforce_desc = effects[1][0];\n      self.onReinforce = effects[1][1];\n      logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  {\n    name:\"陆逊\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n    action(G, ctx, self) {\n      if (G.hand.length == 0) {\n        draw(G, ctx);\n        self.exhausted = false;\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"凯露\",\n    cost:10,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n    action(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n      if (enemy) {\n        G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:8,\n    mine:2,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  {\n    name:\"尤格萨隆\",\n    cost:10,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 随机施放10个法术\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<10; i++) {\n        let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n        effect[1](G, ctx, self);\n        logMsg(G, ctx, \"施放 \"+effect[0]);\n      }\n    },\n    reinforce_desc: \"随机施放1个法术\",\n    onReinforce(G, ctx, self) {\n      let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n      effect[1](G, ctx, self);\n      logMsg(G, ctx, \"施放 \"+effect[0]);\n    }\n  },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的单位，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对1个随机干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      if (G.field.length > 0) {\n        let idx = ctx.random.Die(G.field.length) - 1;\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://ak.mooncell.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://ak.mooncell.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://ak.mooncell.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: 1,\n    hp: 2,\n    desc: \"替换, 入场/摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n    onOut(G, ctx, self) {\n      self.onPlay(G, ctx, self);\n    }\n  },\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import React from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    card.dmg = card.dmg || 0;\n    card.dmg += dmg;\n    logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      if (~G.efield.indexOf(card)) {\n        out(G, ctx, deck, idx);\n      }\n      else {\n        card.exhausted = true;\n      }\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  if (G.efield.length > 0){\n    let idx = ctx.random.Die(G.efield.length) - 1;\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  card.material = card.material || (ctx.random.Die(3) - 1);\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.limit_hand_field && (G.hand.length >= 6)) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (G.limit_hand_field && (G.field.length >= 6)) {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return;\n  }\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n    sort_orders(G);\n  }\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>(x.requirements.indexOf(3)-y.requirements.indexOf(3)));\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      let surge = switchEnemy(G, ctx);\n      if (enemy.onPlay && !surge) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    else {\n      if (enemy.onPlay) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  if (G.not_switch) {\n    return false;\n  }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n\n  return surge;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name.length == 1) {\n    card.name += card.name;\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n    if (ctx.random.D6() <= 3) {\n      draw(G, ctx);\n    }\n    else{\n      G.costs += 1;\n    }\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.harder_reinforce) {\n    let paid = payCost(G, ctx, 2);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"巫恋\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.filter(x=>(x.block>0)).sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    // else if (x.block != y.block) {\n    //   return y.block - x.block;\n    // }\n    else {\n      return x.hp-y.hp;\n    }\n  });\n  let card = ranked_field_by_dmg[0];\n  if (card) {\n    card.dmg -= amount;\n    if (card.dmg < 0) {\n      card.hp -= card.dmg;\n      card.dmg = 0;\n    }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.ORDERS)[0])};\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction onEnemyStageEnd(G, ctx) {\n  for (let i=G.field.length-1; i>=0; i--) {\n    let card = G.field[i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, \"field\", i);\n    }\n    // refresh the card states here\n    card.ready_times = 0;\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<5; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck_data, seed) {\n  let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx}));\n\n  let rng = new PRNG(seed);\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"砾\", \"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    G.ORDERS = [...ORDERS];\n\n    console.log(\"Setup finished.\");\n\n    return G;\n  }\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        refresh(G, ctx);\n        draw(G, ctx);\n        drawOrder(G, ctx);\n        G.costs += 3;\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        G.round_num += 1;\n\n        if (G.enemy_grow) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 6;\n            enemy.hp += 6;\n          }\n        }\n\n        if (G.round_num % 2 == 1 && G.round_num > 2 && G.more_enemies) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          onEnemyStageEnd(G, ctx); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      onEnemyStageEnd(G, ctx);\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    additional_styles.r_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n      additional_styles.r_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n      additional_styles.r_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.action}\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2`;\n\nconst draw_vanguard = `芬 1 2\n清道夫 1 2\n调香师 1 1\n清流 0 1`;\n\nconst scorer = `阿米娅 0 2\n崖心 0 2\n阿消 0 1\n食铁兽 0 2\n铃兰 0 1\n麦哲伦 0 1\n断罪者 0 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 麦哲伦 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n黑 2 3\n阿消 0 2\n食铁兽 0 2\n克洛丝 2 3\n杰西卡 1 2\n蓝毒 2 3\n白金 2 3\n末药 1 2\n宴 2 3\n巡林者 2 3\n陈 1 2\n红豆 2 3\n炎熔 2 3\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 0 2\n伊桑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 3 4\n空 3 4\n莫斯提马 3 3\n皇帝 2 2\n波登可 1 2\n阿消 1 2\n麦哲伦 0 2\n温蒂 1 2\n艾雅法拉 1 2\n调香师 1 2\n可颂 0 2\n白面鸮 1 2\n阿米娅 0 2\n拉普兰德 1 2\n梓兰 1 2\n年 0 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n巫恋 1 2\n年 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n麦哲伦 1 2\n梅尔 1 2\n稀音 2 3\n伊芙利特 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n巡林者 1 2\n银灰 1 2\n麦哲伦 1 2\n阿米娅 1 2\n艾雅法拉 1 2\n惊蛰 1 2\n阿消 1 2\n讯使 1 2\n梅尔 1 2\n陈 1 2\n斯卡蒂 1 2`;\n\n// const eyja = `艾雅法拉 2 3\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 凛冬 2 3\n// 斯卡蒂 2 3\n// 讯使 3 4\n// 惊蛰 1 2\n// 德克萨斯 0 2\n// 调香师 1 2\n// 清道夫 1 2\n// 刻俄柏 1 2\n// 克洛丝 1 2\n// 米格鲁 1 2\n// 蓝毒 1 2\n// 慕斯 1 2\n// 真理 1 2\n// 赫默 1 2\n// 梅尔 1 2\n// 伊芙利特 1 2\n// 梓兰 1 2`;\n\nconst angelina = `安洁莉娜 3 3\n波登可 2 3\n芬 2 3\n推进之王 1 2\n陈 2 3\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n古米 2 3\n早露 0 2\n慕斯 1 2\n桃金娘 1 2\n惊蛰 1 2\n调香师 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 0 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 麦哲伦 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 2 3\n芬 0 2\n能天使 2 3\n拉普兰德 2 3\n清道夫 1 2\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 2 3\n断罪者 2 3\n清流 0 2`;\n\nconst rest = `夜莺 2 2\n守林人 1 3\n霜叶 1 2\n锡兰 2 3\n诗怀雅 2 3\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, angelina, karlan, ursus, champion, rest];\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 3, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 18, rng)];\n\n  // Random cards\n  let amount_add = 40 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        请组出一套强力或欢乐的卡组\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式禁卡: 砾, 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"40%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0, G.edeck.length-4);\n    }\n  },\n  // {\n  //   src: \"http://ak.mooncell.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://ak.mooncell.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"2回合后，所有敌人获得+4生命值\",\n    level: 2,\n    effect(G, ctx){\n      G.reinforceOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/4/46/Global_forbidloc_2.png\",\n    desc: \"手牌上限和场上干员数量上限调整为6\",\n    level: 2,\n    effect(G, ctx) {\n      G.limit_hand_field = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/c/cd/Global_tokencnt_2.png\",\n    desc: \"强化干员需要的材料数+1\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.reinforce += 1;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://ak.mooncell.wiki/images/6/6d/Enemy_eagent_1.png\",\n    desc: \"敌人无法被横置\",\n    level: 2,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.unyielding = true;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"每过2回合，每回合就额外翻开1张敌人牌\",\n    level: 2,\n    effect(G, ctx){\n      G.more_enemies = true;\n    }\n  },\n\n\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/7/7f/Global_costrecovery_3.png\",\n    desc: \"所有干员的部署费用提升至1.5倍\",\n    level: 3,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.cost *= 1.5;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+6/+6\",\n    level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://ak.mooncell.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 5,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用\"史都华德\"进行采掘，史都华德的采掘能力为3，因此获得3个随机材料，博士因此获得了{material_icons[0]}、{material_icons[0]}和{material_icons[2]}；然后使用\"阿米娅\"进行采掘，阿米娅的采掘能力为2，因此获得{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则可以触发其\"行动:\"效果；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在订单右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源交付订单；<br/><br/>\n  <b>* 使用订单:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士首先使用完成区的第一个订单，能力描述为\"{material_icons[0]}→？+？\"，也就是可以用1个{material_icons[0]}换2个随机材料，博士因此消耗1个{material_icons[0]}，获得了2个随机材料，分别为{material_icons[1]}和{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌或获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  在你的回合结束后，进入整合运动阶段；<br/><br/>\n  首先，翻开2张敌人牌，以横置状态入场；<br/><br/>\n  然后，场上处于重置状态的敌人，从左到右行动一次，被阻挡的敌人，会向阻挡者发起攻击，未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级8  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级18  <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  <span>* 无敌的小火龙</span><br/>\n  <span>* 热血沸腾</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\nimport 'react-tabs/style/react-tabs.css';\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_title_board, \n      // board: this.render_mulligan_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        一键收货: this.harvest_orders,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      enraged: card.enraged,\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n    // EH: it's better to setup each scenario in one function\n    this.props.moves.setDecks(init_decks(deck_data, this.state.seed));\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n      seed: get_seed_name(),\n    });\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 16 && risk_level < 22) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 22 && risk_level < 30) {\n          grade = \"SSSS\";\n        }\n        else if (risk_level >= 30 && risk_level < 50) {\n          grade = \"SSSSS\";\n        }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid blue\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n        additionalStyle = {{height: \"25%\", marginTop:\"16%\"}}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\");}}\n          action = \"查看卡组\"\n          back = {() => {this.change_board(\"title\");}}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          switchScene = {() => {this.enter_game()}}\n          action = \"进入游戏\"\n          advancedSettings = {() => {this.change_board(\"settings\")}}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}