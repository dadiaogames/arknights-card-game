{"version":3,"sources":["cards.js","enemies.js","icons.js","orders.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","tags.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["CARDS","name","cost","atk","hp","mine","block","illust","desc","ENEMIES","ICONS","alcohol","src","height","rma","rock","d32","order_illust","material_icons","ORDERS","requirements","score","reward","effect","G","ctx","payMaterials","gainMaterials","materials","onTurnBegin","map_object","fn","obj","new_obj","k","move","d1","d2","idx","cd_idx","card","splice","push","count","cnt","gained","i","material","random","Die","delta","logMsg","use","exhausted","deal_damage","deck","dmg","draw","length","drawOrder","odeck","drawEnemy","edeck","enemy","onPlay","msg","messages","unshift","AC","setup","get_enemies","map","x","Object","assign","Shuffle","concat","efield","discard","ediscard","orders","finished","costs","danger","goal","max_danger","exhausted_enter","playing","moves","setDeck","deck_data","card_dict","arr","item","arr2obj","cards","split","card_data","amount","parseInt","target_card","addTags","tags","onScenarioBegin","console","log","events","endTurn","play","hand","payCost","field","setValue","attr","val","finishOrder","order","useOrder","fight","idx1","idx2","enemyMove","blocker","blocked_enemies","c","get_blocker","blocker_idx","indexOf","changeMsg","turn","onBegin","refresh","endIf","win","reason","Card","props","additional_styles","e_illust","o_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","keys","data","variant","value","additionalStyle","Data","is_img","includes","img_tag","style","CardRow","states","CardDetailed","align","Controller","actions","action","EnterGame","switchScene","switchText","enterGame","Panel","content","TagSelection","tbody","row","row_tags","slice","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","columns","TAGS","tag_list","t","level","process_tags","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","play_card","use_mine","use_fight","finish_order","use_order","render_game_board","render_tag_board","render_deck_board","render_card_board","change_board","choose_tag","get_risk_level","enter_game","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","branch","show_field","show_tag_selection","stage","board","checking","scenario_finished","branches","部署","查看","采掘","战斗","完成","行动","log_select","new_tags","setState","this","filter","reduce","acc","icon","j","order_effect","illust_detailed","cost_detailed","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","event","target","new_board","boards","reset","result","gameover","grade","alert","player_panel","display","end_game","game_panel","join","field_cardrow","hand_cardrow","orders_cardrow","finished_cardrow","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9ca1096.chunk.js","sourcesContent":["export var CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 2,\n    hp: 3,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 5,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 6,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n  },\n\n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n  },\n\n];\n\nexport const default_deck = \"2 克洛丝\\n2 玫兰莎\\n2 米格鲁\\n2 史都华德\\n2 12F\\n2 巡林者\\n2 黑角\\n\";","export var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n  },\n\n];","import React from 'react';\nconst icon_height = \"25em\";\nconst attr_icon_height = \"20em\";\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]}</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]}</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]}</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>收入: {material_icons[1]}</span>),\n    onTurnBegin(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>收入: {material_icons[2]}</span>),\n    onTurnBegin(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>收入: {material_icons[0]}</span>),\n    onTurnBegin(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}","import { React } from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj } from \"./utils\";\n\nfunction move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nfunction payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nfunction gainMaterials(G, ctx, count) {\n  let cnt = count || 1;\n  let gained = [];\n\n  for (let i=0; i<cnt; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nfunction payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nfunction get_blocker(G, ctx, idx) {\n  //Return who blocks this enemy\n  let blocked_enemies = 0;\n\n  for (let c of G.field) {\n    blocked_enemies += c.block || 0;\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  //cards with no damage may not have the damage attr\n  card.dmg = card.dmg || 0;\n  card.dmg += dmg;\n  logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n  if (card.dmg >= card.hp) {\n    let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n    move(G, ctx, deck, discard, idx);\n    logMsg(G, ctx, `${card.name} 被摧毁`);\n  }\n}\n\nfunction addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nfunction draw(G, ctx) {\n  if (G.deck.length > 0) {\n    move(G, ctx, \"deck\", \"hand\");\n  } //TODO: else, lose the game\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    card.dmg = 0;\n    card.exhausted = G.exhausted_enter;\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = true;\n    enemy.dmg = 0;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  }\n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n  }\n}\n\nfunction enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n    let blocker = get_blocker(G, ctx, idx);\n    let blocker_idx = G.field.indexOf(blocker);\n\n    if (blocker) {\n      deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n      logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n    }\n\n    else {\n      G.danger += 1;\n      logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n      card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<3; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nfunction setDeck(G, ctx, deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let card of cards) {\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n      if (target_card) {\n        for (let i=0; i<amount; i++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n  G.deck = ctx.random.Shuffle(deck);\n}\n\nfunction logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport const AC = {\n  setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies()));\n    G.odeck = ctx.random.Shuffle(ORDERS.map(x=>Object.assign({},x)));\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n\n    G.exhausted_enter = false;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n\n    G.playing = false;\n    G.gained = [];\n\n    return G;\n  },\n\n  moves: {\n    setDeck,\n    addTags,\n    onScenarioBegin,\n    draw,\n    play,\n    mine,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    drawEnemy,\n    fight,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n        if (G.playing) {\n          console.log(\"On turn begin\");\n          logMsg(G, ctx, \"回合开始\");\n          refresh(G, ctx);\n          draw(G, ctx);\n          drawOrder(G, ctx);\n          G.costs += 3;\n      }\n    },\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  }\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};\n\nexport { gainMaterials, payMaterials };","import React from 'react';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    hp: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  }\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n}\n\nexport const CardRow = (props) => {\n  return (\n    <div className=\"card-row\">\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n        />\n      ))}\n    </div>\n  );\n}\n\nexport const CardDetailed = (props) => {\n  return (\n    <div className=\"card-board\" align=\"center\">\n      <div className=\"card-detailed\">\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n      </div>\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n}","import React from 'react';\nimport './Controller.css';\n\n//TODO: reconstruct the controller\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{action}</button>\n        )\n      )}\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.switchText}\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.enterGame}\n      >\n        进入游戏\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          className=\"tag\" \n          \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <img \n            className=\"tag\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\">{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\" >\n      <form>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction\" \n          rows={25}\n          columns={20}\n        />\n      </form>\n    </div>\n  );\n};","const tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+2\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+2攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 2;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f7/Enemy_movespeed_1.png\",\n    desc: \"干员以横置状态入场\",\n    level: 2,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { Card, CardRow, CardDetailed } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction } from './DeckConstruction';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\n\nimport './Board.css';\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_tag_board, //function or string here?\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n      deck_data: default_deck,\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { // TODO: set all \"check\" aside to the right, this is not done using Controller, first set the width of controller, then add a new button on render_board\n      hand: {\n        部署: this.play_card,\n        查看: this.check_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n        查看: this.check_card,\n      },\n      efield: {\n        战斗: this.use_fight,\n        查看: this.check_card,\n      },\n      orders: {\n        完成: this.finish_order,\n        查看: this.check_card,\n      },\n      finished: {\n        行动: this.use_order,\n        查看: this.check_card,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n  \n  process_hand_data(card) {\n    return {\n      illust: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let data = {\n      illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    return {\n      e_illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: order_illust,\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\",\n      order_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    return {\n      illust_detailed: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          {card.atk}/{card.hp} &nbsp;\n          {ICONS.mine}{card.mine} &nbsp;\n          {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      this.setState({stage: \"enemy\"});\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n      this.setState({stage:\"player\"});\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"field\");\n      this.log_select()(\"选定 \"+card.name);\n      //TODO: add \"action\" and \"reinfoce\" in current branch at here\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_deck_change(event) {\n    this.setState(\n      {deck_data: event.target.value}\n    );\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const boards = {\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n    };\n    this.setState({board: boards[new_board]});\n  }\n\n  enter_game() {\n    this.props.moves.setDeck(this.state.deck_data);\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.change_board(\"game\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({scenario_finished: false});\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 6) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 6 && risk_level < 8) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 8 && risk_level < 10) {\n          grade = \"SS\";\n        }\n        else {\n          grade = \"SSS\";\n        }\n        alert(`任务完成\\n完成危机等级: ${risk_level}\\n评级: ${grade}`);\n      }\n\n      else {\n        alert(`任务失败\\n原因: ${result.reason}`);\n\n      }\n\n    }\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.state.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{this.enemy_move(-2);}}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CardDetailed \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=5)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\")}}\n          switchText = \"查看卡组\"\n          enterGame = {() => {this.enter_game()}}\n        />\n\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    return (\n      <div className=\"board\" >\n        <DeckConstruction\n          value = {this.state.deck_data}\n          handleChange = {this.handle_deck_change}\n        />\n        <EnterGame \n          switchScene = {() => {this.change_board(\"tag\")}}\n          switchText = \"查看词条\"\n          enterGame = {() => {this.enter_game()}}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}