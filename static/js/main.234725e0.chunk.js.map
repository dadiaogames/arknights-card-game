{"version":3,"sources":["icons.js","orders.js","cards.js","enemies.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckGenerator.js","DeckConstruction.js","TitleScreen.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","rma","rock","d32","mine","block","order_illust","material_icons","ORDERS","requirements","score","reward","desc","effect","G","ctx","payMaterials","gainMaterials","materials","costs","harvest","CARDS","name","cost","atk","hp","illust","reinforce","onReinforce","self","reinforce_desc","onMine","power","deal_random_damage","onPlay","draw","onTurnBegin","action","onFight","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","enemy","dmg","delta","init_card_state","move","hand","field","card","ready_random_card","cure","random","Shuffle","payCost","get_rhine_order","finished","orders","slice","order","material","Die","num_finished","indexOf","miners","deck","unshift","Object","assign","fighters","actors","map","battlecries","score_gained","Math","floor","logMsg","i","sort","danger","reinforce_hand","card_idx","splice","discard","push","num_cards","num_reds","player","damaged_enemy","enemy_idx","enemy2card","enraged","idx","texas","find","new_card","j","reinforce_card","BORROWS","time_point","effects","EFFECTS","generate_combined_card","was_enemy","blank_enemy","ENEMIES","join","self_copy","is_elite","high","onOut","deal_damage","unyielding","amount_dmg","map_object","fn","obj","new_obj","k","PRNG","seed","this","val","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","d1","d2","cd_idx","count","gained","use","out","amount","exhausted_enter","pop","drawOrder","odeck","y","sort_orders","sort_finished","order_id","drawEnemy","edeck","surge","not_switch","switcher","switchEnemy","replace","reversed","time_points","title","split","reverse","unexhausted","exhausted_cards","includes","ready_times","rhine","onEnemyStageEnd","str2deck","deck_data","card_dict","item","arr2obj","cards","card_data","parseInt","target_card","msg","messages","AC","setup","banned_cards","c","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","console","log","playing","events","endTurn","mulligan","choices","discarded","num_draw","play","act","harder_reinforce","setValue","attr","finishOrder","useOrder","harvest_orders","fight","idx1","idx2","enemyInit","stage","enemyMove","blocker","blocked_enemies","max","get_blocker","blocker_idx","changeMsg","turn","onBegin","concat","refresh","round_num","reinforceOnR3","reinforceOnR4","fog","onEnd","endIf","win","reason","max_danger","goal","undefined","Card","props","additional_styles","e_illust","o_illust","r_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","style","cardStyle","keys","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","Controller","actions","process_action","checkCard","display","EnterGame","switchScene","advancedSettings","Panel","content","TagSelection","tbody","row","row_tags","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","_","require","PREFIXES","SEEDS","strategies","get_random_card","rng","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","generate_deck","deck_name","strategy","amount_add","shuffle","arr2deck","output","deck2str","is_standard","numbers","names","isNaN","unique_names","Set","sum","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","alert","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","TAGS","tag_list","t","process_tags","rhodes_training_mode","more_enemies","RULES","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","change_board","choose_tag","get_risk_level","enter_game","check_deck","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","hand_choices","branch","show_field","show_tag_selection","board","last_board","deck_mode","preview_deck","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","一键收货","log_select","new_tags","setState","reduce","acc","icon","order_effect","finished_effect","fontSize","times","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","boards","get_enemies","init_decks","reset","gameover","good_grade","grade","finish","failed","width","margin","overflow","position","top","left","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","deck_generation","deck_construction","onSelect","selectedIndex","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.234725e0.chunk.js","sourcesContent":["import React from 'react';\nconst icon_height = \"25em\";\nconst attr_icon_height = \"20em\";\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) { // TODO: reconstruct this, \"if pay materials\" should not be at here\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n\n    {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  generate_combined_card,\n} from './Game';\nimport { material_icons } from './orders';\n\nexport var CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      G.score += 1 + 2 * self.power;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+3*self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 3,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 6,\n    atk: 6,\n    hp: 4,\n    mine: 6,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 5;\n    },\n    reinforce_desc: \"<+5>\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n\n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 7,\n    hp: 4,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:15,\n    hp:15,\n    mine:8,\n    block:2,\n    illust:\"http://ak.mooncell.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      G.atk += 4;\n      G.hp += 4;\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://ak.mooncell.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n\n  \n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://ak.mooncell.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      self.block -= 1;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:2, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:3, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得3点费用\", \n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://ak.mooncell.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘/战斗: 摸1张牌\", \n    illust:\"https://img.moegirl.org/common/1/1d/%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx) {\n      draw(G, ctx);\n    },\n    onFight(G, ctx) {\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://ak.mooncell.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        G.costs += delta;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://ak.mooncell.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      //EH: add \"init field card state\" function\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"亡语: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://ak.mooncell.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://ak.mooncell.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+self.power*2);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:2, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 使场上所有其他干员获得+2/+2\", \n    illust:\"http://ak.mooncell.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 1;\n          card.hp += 1;\n        }\n      }\n    },\n    reinforce_desc: \"使场上所有其他干员获得+1/+1\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:4, \n    atk:3, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+2>\", \n    illust:\"http://ak.mooncell.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://ak.mooncell.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:4, \n    hp:5, \n    mine:2, \n    block:1, \n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc: <span>部署: 获得2个{material_icons[3]}</span>, \n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"行动: 获得+3生命值\", \n    illust:\"http://ak.mooncell.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 3 + 3 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+3生命值\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 横置1个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://ak.mooncell.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:1, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 使1个干员获得+5生命值\", \n    illust:\"http://ak.mooncell.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 5 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+3生命值\",\n  },\n\n  {\n    name:\"安赛尔\", \n    cost:1,\n    atk:0, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"行动: 使1个干员获得+2/+2\", \n    illust:\"http://ak.mooncell.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 2 + 2 * self.power;\n        card.hp += 2 + 2 * self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2/+2\",\n  },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:4,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘/战斗: 使1个干员获得+3/+3\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      // TODO: reconstruct this part, of course buffing an card needs a function\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 3 + 2 * self.power;\n        card.hp += 3 + 2 * self.power;\n      }\n    },\n    onFight(G, ctx, self) {\n      self.onMine(G, ctx, self);\n      // It's okay to do this because \"onFight\"s are not on G.effects\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 2,\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"阿消\", \n    cost:4, \n    atk:4, \n    hp:5, \n    mine:1, \n    block:1, \n    desc:\"行动: 消耗4点费用，获得5分\", \n    illust:\"http://ak.mooncell.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3-2*self.power)) {\n        G.score += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用-2\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得2个\\\"莱茵生命订单\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个\\\"莱茵生命订单\\\"\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，获得1个\\\"莱茵生命订单\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 重置所有已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    onMine(G, ctx, self) {\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 5;\n    },\n    reinforce_desc: \"<+5>\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://ak.mooncell.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 使2个订单的能力改为\\\"→造成5点伤害\\\"\",\n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let orders = ctx.random.Shuffle(G.finished);\n      if (orders.length > 2) {\n        orders = orders.slice(0,2);\n      }\n      for (let order of orders) {\n        let material = ctx.random.Die(3) - 1;\n        let requirements = [0,0,0,0];\n        requirements[material] = 1;\n        order.desc = <span>{material_icons[material]}→5伤害</span>;\n        order.effect = (G,ctx) => {\n          if (payMaterials(G, ctx, requirements)) {\n            deal_random_damage(G, ctx, 5);\n          }\n        };\n      }\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce_desc: \"造成4点伤害\",\n  },\n\n\n  \n  {\n    name:\"塞雷娅\",\n    cost:8,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+3\",\n    illust:\"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 3 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://ak.mooncell.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.name != self.name)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://ak.mooncell.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.name != self.name)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:4, \n    atk:3, \n    hp:6, \n    mine:1, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://ak.mooncell.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.action && (card.name != self.name)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://ak.mooncell.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.name != self.name)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://ak.mooncell.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 煌 获得${score_gained}分`);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onFight(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n  \n  {\n    name:\"莫斯提马\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘/战斗: 每有1个被横置的敌人，就再获得1个材料\",\n    illust:\"http://ak.mooncell.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n    },\n    onFight(G, ctx, self) {\n      self.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+1 <+1>\",\n  },\n\n  {\n    name:\"银灰\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，并重置自己</span>,\n    illust:\"http://ak.mooncell.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n      }\n    },\n    onFight(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得5分</span>,\n    illust:\"http://ak.mooncell.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 5 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n    illust:\"http://ak.mooncell.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 1,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  {\n    name:\"铃兰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得5分</span>,\n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.score += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:1,\n    block:2,\n    desc: \"部署: 每被强化过1次，就获得1分\",\n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let power = self.power || 0;\n      for (let i=0; i<power; i++) {\n        G.score += 1; // EH: Reconstruct this\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"早露\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"部署: 每被强化过1次，就对1个敌人造成4点伤害\",\n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let power = self.power || 0;\n      for (let i=0; i<power; i++) {\n        deal_random_damage(G, ctx, 4);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"阿\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 对1个干员造成4点伤害，并获得2分，如果该伤害摧毁了干员，则重置自己\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self)))[0];\n      if (card) {\n        card.dmg += 4;\n        G.score += 2;\n        if (card.dmg >= card.hp) {\n          let card_idx = G.field.indexOf(card);\n          G.field.splice(card_idx, 1);\n          G.discard.push(card);\n          self.exhausted = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      for (let i=0; i<5; i++) {\n        draw(G, ctx);\n      }\n    },\n    reinforce_desc: \"摸5张牌\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n  {\n    name:\"远山\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1分，然后在弃牌堆中每有1张\\\"红\\\"，就再获得1分\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 1;\n      let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      G.score += num_reds;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  {\n    name:\"波登可\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署\\\"效果\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => x.onPlay))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0)))[0];\n      if (damaged_enemy) {\n        let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        G.efield.splice(enemy_idx, 1);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  {\n    name:\"星熊\",\n    cost:6,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:2,\n    desc: \"部署: 每有1张手牌，就获得+1/+3\",\n    illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let num_cards = G.hand.length;\n      self.atk += num_cards;\n      self.hp += 3 * num_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得9点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 9;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 5;\n    },\n    reinforce_desc: \"获得5点费用\",\n  },\n  \n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://ak.mooncell.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:6,\n  //   atk:6,\n  //   hp:7,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"行动: 将1张敌人牌加入手牌\",\n  //   illust:\"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   action(G, ctx, self) {\n  //     let card = enemy2card(G, ctx);\n  //     for (let i=0; i<self.power; i++) {\n  //       reinforce_card(G, ctx, card);\n  //     }\n  //     G.hand.unshift(card);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+2/+3\",\n  // },\n\n \n   {\n    name:\"猎蜂\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"战斗: 激怒目标\",\n    illust:\"http://ak.mooncell.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n    reinforce: 1,\n\n    onFight(G, ctx, self, enemy) {\n      enemy.enraged = true;\n    },\n\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://ak.mooncell.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      G.field.push(init_card_state(G, ctx, {...texas}));\n    },\n    reinforce_desc: \"部署\\\"德克萨斯\\\"\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://ak.mooncell.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"亡语: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://ak.mooncell.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 1,\n    desc: \"行动: 将场上所有干员变成{费用+1}的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"年\",\n    cost:8,\n    atk:4,\n    hp:12,\n    mine:2,\n    block:2,\n    illust: \"http://ak.mooncell.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n\n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 2,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的部署效果`);}\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的采掘效果`);}\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的战斗效果`);}\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的行动效果`);}\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n\n\n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://ak.mooncell.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"部署: 获得1个随机能力\",\n    onPlay(G, ctx, self) {\n      let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"亡语: \", \"onOut\"]];\n      let time_point = ctx.random.Shuffle(time_points)[0];\n      let effects = ctx.random.Shuffle(G.EFFECTS);\n      let effect = effects[0];\n      self.desc = time_point[0] + effect[0];\n      self[time_point[1]] = effect[1];\n      self.reinforce_desc = effects[1][0];\n      self.onReinforce = effects[1][1];\n      logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://img.moegirl.org/common/thumb/4/43/Ak_char_007_closre_1.png/800px-Ak_char_007_closre_1.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  {\n    name:\"陆逊\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n    action(G, ctx, self) {\n      if (G.hand.length == 0) {\n        draw(G, ctx);\n        self.exhausted = false;\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"凯露\",\n    cost:10,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n    action(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n      if (enemy) {\n        G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:8,\n    mine:2,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  {\n    name:\"尤格萨隆\",\n    cost:10,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 随机施放10个法术\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<10; i++) {\n        let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n        effect[1](G, ctx, self);\n        logMsg(G, ctx, \"施放 \"+effect[0]);\n      }\n    },\n    reinforce_desc: \"随机施放1个法术\",\n    onReinforce(G, ctx, self) {\n      let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n      effect[1](G, ctx, self);\n      logMsg(G, ctx, \"施放 \"+effect[0]);\n    }\n  },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 3,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的单位，造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 3,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡力单位，造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+3攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 3;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡力干员, 造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"亡语: 对1个随机干员造成{攻击力+2}点伤害\",\n    onOut(G, ctx, self) {\n      if (G.field.length > 0) {\n        let idx = ctx.random.Die(G.field.length) - 1;\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 3,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://ak.mooncell.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://ak.mooncell.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://ak.mooncell.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: 2,\n    hp: 3,\n    desc: \"替换, 入场/亡语: 场上的干员数每多于敌人数1个, 以及自己每有2点攻击力, 就对1个随机干员造成1点伤害\",\n    is_elite: true,\n    onPlay(G, ctx, self) {\n      let amount_dmg = G.field.length - G.efield.length;\n      amount_dmg += Math.floor(self.atk / 2);\n      for (let i=0; i<amount_dmg; i++) {\n        let card = ctx.random.Shuffle(G.field)[0];\n        if (card) {\n          card.dmg += 1;\n        }\n      }\n    },\n    onOut(G, ctx, self) {\n      self.onPlay(G, ctx, self);\n    }\n  },\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import React from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  //cards with no damage may not have the damage attr\n  card.dmg = card.dmg || 0;\n  card.dmg += dmg;\n  logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n  if (card.dmg >= card.hp) {\n    if (~G.efield.indexOf(card)) {\n      out(G, ctx, deck, idx);\n    }\n    else {\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  if (G.efield.length > 0){\n    let idx = ctx.random.Die(G.efield.length) - 1\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  card.material = card.material || (ctx.random.Die(3) - 1);\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } //TODO: else, lose the game\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n    sort_orders(G);\n  }\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>(x.requirements.indexOf(3)-y.requirements.indexOf(3)));\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = true;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      let surge = switchEnemy(G, ctx);\n      if (enemy.onPlay && !surge) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    else {\n      if (enemy.onPlay) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  if (G.not_switch) {\n    return false;\n  }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n\n  return surge;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"亡语: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name.length == 1) {\n    card.name += card.name;\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.harder_reinforce) {\n    let paid = payCost(G, ctx, 2);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\"].includes(x.name))));\n  if (exhausted_cards.length > 0) {\n    let card = ctx.random.Shuffle(exhausted_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.filter(x=>(x.block>0)).sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    // else if (x.block != y.block) {\n    //   return y.block - x.block;\n    // }\n    else {\n      return x.hp-y.hp;\n    }\n  });\n  let card = ranked_field_by_dmg[0];\n  if (card) {\n    card.dmg -= amount;\n    if (card.dmg < 0) {\n      card.hp -= card.dmg;\n      card.dmg = 0;\n    }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = Object.assign({}, ctx.random.Shuffle(G.odeck)[0]);\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction onEnemyStageEnd(G, ctx) {\n  for (let i=G.field.length-1; i>=0; i--) {\n    let card = G.field[i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, \"field\", i);\n    }\n    // refresh the card states here\n    card.ready_times = 0;\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<5; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck_data, seed) {\n  let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx}));\n\n  let rng = new PRNG(seed);\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n\n    G.exhausted_enter = false;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"砾\", \"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n\n    return G;\n  }\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        refresh(G, ctx);\n        draw(G, ctx);\n        drawOrder(G, ctx);\n        G.costs += 3;\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        G.round_num += 1;\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 4;\n            enemy.hp += 4;\n          }\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          onEnemyStageEnd(G, ctx); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      onEnemyStageEnd(G, ctx);\n    },\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    additional_styles.r_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n      additional_styles.r_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n      additional_styles.r_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.action}\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.action==\"进入游戏\"?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\nvar _ = require(\"lodash\");\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst dubin_score = `杜宾 2 3\n推进之王 2 3\n天火 1 2\n讯使 1 2\n香草 1 2\n芬 2 3\n清道夫 1 2\n米格鲁 2 3\n玫兰莎 2 3\n克洛丝 2 3\n史都华德 2 3\n安赛尔 1 2\n阿米娅 2 3\n杰西卡 2 3\n慕斯 0 2\n蛇屠箱 0 2\n炎熔 0 2\n蓝毒 0 2\n梓兰 0 1\n凛冬 0 2\n真理 0 2\n极境 0 1\n狮蝎 1 2\n斯卡蒂 1 2\n阿 1 2\n铃兰 1 2\n清流 0 2`;\n\nconst solve = `天火 1 2\n能天使 1 2\n克洛丝 2 3\n杰西卡 2 3\n蓝毒 2 3\n巡林者 2 3\n陈 2 3\n香草 2 3\n红豆 2 3\n炎熔 2 3\n煌 2 3\n刻俄柏 2 3\n刻刀 1 2\n银灰 1 2\n白面鸮 1 2\n拉普兰德 1 2\n伊桑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 3 4\n空 2 3\n莫斯提马 1 2\n阿消 2 3\n温蒂 1 2\n可颂 0 2\n白面鸮 1 2\n阿米娅 0 2\n崖心 0 2\n惊蛰 1 2\n芬 1 2\n阿 0 2\n梓兰 1 2\n12F 1 2\n年 1 2\n黑角 1 2\n夜刀 1 2\n铃兰 0 2`;\n\nconst highcost = `风笛 2 3\n红豆 1 2\n桃金娘 1 2\n极境 1 2\n温蒂 1 2\n巡林者 1 3\n12F 1 3\n黑角 1 3\n刻俄柏 1 2\n煌 1 3\n芙兰卡 0 2\n雷蛇 0 1\n可颂 0 1\n陈 0 2\n蓝毒 0 2\n银灰 1 2\n白面鸮 1 2\n伊桑 1 2\n年 1 2\n夜刀 1 2`;\n\nconst rhine = `赫默 1 3\n白面鸮 1 3\n伊芙利特 1 2\n塞雷娅 1 2\n梅尔 2 3\n史都华德 1 3\n克洛丝 1 2\n刻俄柏 1 2\n讯使 2 3\n惊蛰 1 2\n陈 1 2\n芬 2 3\n铃兰 1 2\n阿米娅 0 2\n煌 0 2\n崖心 0 2\n米格鲁 2 3\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 2 3\n阿米娅 2 3\n杰西卡 2 3\n凛冬 2 3\n讯使 2 3\n德克萨斯 0 2\n清道夫 2 3\n斯卡蒂 2 3\n刻俄柏 1 2\n克洛丝 1 2\n米格鲁 1 2\n蓝毒 1 2\n慕斯 1 2\n真理 1 2\n惊蛰 1 2\n赫默 1 2\n梅尔 1 2\n伊芙利特 1 2\n梓兰 1 2`;\n\nconst angelina = `安洁莉娜 2 3\n波登可 2 3\n芬 2 3\n推进之王 2 3\n陈 2 3\n翎羽 2 3\n极境 2 3\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n刻刀 1 2\n克洛丝 1 2\n蓝毒 1 2\n狮蝎 1 2\n清流 1 2\n真理 2 3\n梓兰 1 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 1 3\n崖心 1 3\n角峰 1 3\n初雪 3 4\n星极 1 3\n赫默 1 2\n白面鸮 1 2\n讯使 2 3\n极境 2 3\n慕斯 1 2\n克洛丝 1 2\n煌 1 2\n芬 2 3\n翎羽 1 2\n伊桑 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 3 4\n古米 2 3\n早露 2 3\n史都华德 1 3\n慕斯 1 2\n极境 1 2\n惊蛰 1 2\n芬 1 2\n阿 1 2\n推进之王 1 2\n陈 1 2\n斯卡蒂 1 2\n杰西卡 0 2\n蓝毒 0 2\n伊桑 1 2\n梅尔 1 2\n猎蜂 0 1\n阿米娅 0 2\n崖心 0 2\n红 1 2\n炎熔 0 2`;\n\nconst arise = `阿 2 3\n断罪者 2 3\n清流 2 3\n芬 3 4\n清道夫 1 2\n推进之王 2 3\n波登可 1 2\n米格鲁 2 3\n蛇屠箱 2 3\n红 2 3\n翎羽 1 2\n斯卡蒂 0 2\n克洛丝 1 2\n玫兰莎 1 2\n史都华德 1 2\n极境 2 3\n惊蛰 2 3\n讯使 1 2\n慕斯 1 2\n刻刀 1 2\n梓兰 1 2\n铃兰 1 2`;\n\nconst strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus];\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n  let strategy = rng.choice(strategies).split(\"\\n\");\n  for (let s of strategy) {\n    let strategy = s.split(\" \");\n    deck.push(get_single_card(rng, strategy[0], parseInt(strategy[1]), parseInt(strategy[2])));\n  }\n\n  deck = rng.shuffle(arr2deck(deck)).slice(0, 25);\n  let amount_add = 35 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  // if (deck.length > 30) {\n  //   let amount_remove = deck.length - 30;\n  //   for (let i=0; i<(amount_remove); i++) {\n  //     deck.splice(rng.randRange(deck.length), 1);\n  //   }\n  // }\n\n\n  return deck2str(deck);\n\n  //TODO: let deck be the summarized version, this is an advanced feature\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        请组出一套强力或欢乐的卡组\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式禁卡: 砾, 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"40%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>查看规则</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+2\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+1生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0, G.edeck.length-4);\n    }\n  },\n  // {\n  //   src: \"http://ak.mooncell.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Char_atk_2.png\",\n    desc: \"所有干员获得-2攻击力\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.atk -= 2;\n        if (card.atk < 0) {\n          card.atk = 0;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/09/Enemy_hp_3.png\",\n    desc: \"所有敌人在2回合后获得+4生命值\",\n    level: 2,\n    effect(G, ctx){\n      G.reinforceOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+3/+3\",\n    level: 2,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 3;\n          enemy.hp += 3;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/c/c7/Global_costrecovery_1.png\",\n    desc: \"强化干员需要消耗2点费用\",\n    level: 2,\n    effect(G, ctx) {\n      G.harder_reinforce = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/c/cd/Global_tokencnt_2.png\",\n    desc: \"强化干员需要的材料数+1\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.reinforce += 1;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://ak.mooncell.wiki/images/6/6d/Enemy_eagent_1.png\",\n    desc: \"敌人无法被横置\",\n    level: 2,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.unyielding = true;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -2,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.more_enemies = true;\n    }\n  },\n\n  \n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"所有敌人获得+2/+2\",\n    level: 3,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.atk += 2;\n        enemy.hp += 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+8\",\n    level: 3,\n    effect(G, ctx){\n      G.goal += 8;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"所有敌人在3回合后获得+4/+4\",\n    level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://ak.mooncell.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 5,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用“史都华德”进行采掘，史都华德的采掘能力为3，因此获得3个随机材料，博士因此获得了{material_icons[0]}、{material_icons[0]}和{material_icons[2]}；然后使用“阿米娅”进行采掘，阿米娅的采掘能力为2，因此获得{material_icons[0]}和{material_icons[1]}，而阿米娅的效果为“采掘: 获得1分”，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用“克洛丝”对“破阵者”发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则可以触发其\"行动:\"效果；<br/>\n  <i>举例: 博士使用“桃金娘”行动，桃金娘的能力为“行动: 获得3点费用”，因此博士使用桃金娘行动后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在订单右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源交付订单；<br/><br/>\n  <b>* 使用订单:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n<i>举例: 博士首先使用完成区的第一个订单，能力描述为“{material_icons[0]}→？+？”，也就是可以用1个{material_icons[0]}换2个随机材料，博士因此消耗1个{material_icons[0]}，获得了2个随机材料，分别为{material_icons[1]}和{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为“{material_icons[0]}→2分”，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次，在你的回合结束后，进入整合运动阶段；<br/><br/>\n  首先，翻开2张敌人牌，以横置状态入场；<br/><br/>\n  然后，场上处于重置状态的敌人，从左到右行动一次，被阻挡的敌人，会向阻挡者发起攻击，未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，“阻挡X”表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有“行动”能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其“行动”能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n</div>;","import React from 'react';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\nimport 'react-tabs/style/react-tabs.css';\n\nvar _ = require(\"lodash\");\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_title_board, \n      // board: this.render_mulligan_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { // TODO: set all \"check\" aside to the right, this is not done using Controller, first set the width of controller, then add a new button on render_board\n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        一键收货: this.harvest_orders,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      enraged: card.enraged,\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const boards = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: boards[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n    // EH: it's better to setup each scenario in one function\n    this.props.moves.setDecks(init_decks(deck_data, this.state.seed));\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n      seed: get_seed_name(),\n    });\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 16 && risk_level < 22) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 22 && risk_level < 30) {\n          grade = \"SSSS\";\n        }\n        else {\n          grade = \"SSSSS\";\n        }\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n        }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n      {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid blue\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.enemyInit();\n            this.enemy_move(this.props.G.more_enemies?-3:-2);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n        additionalStyle = {{height: \"25%\", marginTop:\"16%\"}}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\")}}\n          action = \"查看卡组\"\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          switchScene = {() => {this.enter_game()}}\n          action = \"进入游戏\"\n          advancedSettings = {() => {this.change_board(\"settings\")}}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}