{"version":3,"sources":["icons.js","orders.js","cards.js","enemies.js","utils.js","DeckGenerator.js","Game.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","rma","rock","d32","mine","block","order_illust","material_icons","ORDERS","requirements","score","reward","desc","cost","effect","G","ctx","gainMaterials","materials","costs","harvest","CARDS","name","atk","hp","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","power","achieve","deal_random_damage","onPlay","draw","onTurnBegin","action","onFight","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","enemy","dmg","logMsg","card","move","init_card_state","hand","field","indexOf","ready_random_card","cure","new_card","random","Shuffle","push","this","payCost","onPlayCard","get_rhine_order","count","finished","order","material","Die","payMaterials","is_rhine","unshift","num_finished","miners","deck","Object","assign","fighters","map","actors","battlecries","Math","floor","played","score_gained","idx","i","cards","slice","extracted_attrs","use_count","sort","danger","reinforce_hand","reinforce_card","onRest","num_rest_cards","get_num_rest_cards","player","includes","resters","card_idx","splice","discard","num_cards","damaged_enemy","enemy_idx","miner","fighter","enemy2card","enraged","texas","find","j","BORROWS","time_point","effects","EFFECTS","generate_combined_card","was_enemy","blank_enemy","ENEMIES","join","self_copy","is_elite","high","onOut","deal_damage","unyielding","drawEnemy","goal","map_object","fn","obj","new_obj","k","PRNG","seed","val","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","strategies","get_random_card","rng","banned_cards","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","deck_from_strategy","strategy","amount","parseInt","shuffle","arr2deck","generate_deck","deck_name","amount_add","output","keys","c","deck2str","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","_","sum","d1","d2","cd_idx","gained","use","out","undefined","exhausted_enter","limit_hand_field","pop","drawOrder","odeck","orders","y","sort_orders","sort_finished","order_id","edeck","enemy_exhausted_enter","surge","not_switch","switcher","switchEnemy","replace","reversed","time_points","title","reverse","unexhausted","exhausted_cards","prepared_cards","ready_times","rhine","clearField","str2deck","card_dict","item","arr2obj","card_data","target_card","msg","messages","achievement_name","achievement_desc","achievements","alert","refresh_selections","selections","Deck","upgrades","AC","setup","console","log","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","playing","events","endTurn","mulligan","choices","discarded","num_draw","play","f","stage","act","harder_reinforce","rest","rest_cards","setValue","attr","finishOrder","useOrder","harvest_orders","fight","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","max","get_blocker","blocker_idx","changeMsg","setup_competition_mode","competition_mode","deck_list","finish_competition_mode","select_deck","turn","onBegin","round_num","concat","refresh","onCardMine","onCardFight","onCardAct","onCardReinforced","enemy_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","num_enemies_out","fog","onEnd","endIf","win","reason","max_danger","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","transform","interpolate","ripple_style","position","borderRadius","width","background","Ripple","props","variants","opacity","anim","springConfig","default","div","className","style","Card","additional_styles","e_illust","o_illust","r_illust","cardState","border","selected","damaged","color","shaker","shaking","setShaking","duration","useEffect","onClick","handleClick","cardStyle","top","left","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","Controller","actions","process_action","checkCard","display","EnterGame","Panel","content","ScoreBoard","useState","MaterialDisplay","TagSelection","tbody","row","row_tags","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","DeckRepr","deckName","selectDeck","DeckSelection","DeckUpgrade","selectedCard","margin","TAGS","tag_list","t","process_tags","standard_level","rhodes_training_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","process_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","enter_competition_mode","change_board","choose_tag","choose_standard_tags","get_risk_level","enter_game","check_deck","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","selections_selected","upgrades_selected","hand_choices","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","一键收货","log_select","new_tags","setState","current_standard_level","reduce","acc","cardrow","selection_selected","icon","order_effect","finished_effect","fontSize","times","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","finish","failed","overflow","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","进入游戏","快速设置","返回标题","deck_generation","deck_construction","onSelect","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a63dcf49.chunk.js","sourcesContent":["import React from 'react';\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        gainMaterials(G, ctx, 2);\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        gainMaterials(G, ctx, 2);\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        gainMaterials(G, ctx, 2);\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]} + 1费</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]} + 1费</span>),\n    // desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]} + 1费</span>),\n    // desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField,\n} from './Game';\nimport { material_icons } from './orders';\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:5, \n    hp:5, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 6,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:15,\n    hp:15,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n\n  \n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      self.block -= 1;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘/战斗: 摸1张牌\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx) {\n      draw(G, ctx);\n    },\n    onFight(G, ctx) {\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 8) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少8点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n    },\n    reinforce_desc: \"+2攻击力\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      if (card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:3, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:4, \n    atk:3, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+2>\", \n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      self.atk += 3 + 2 * self.power;\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc: <span>部署: 获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"行动: 获得+4生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 4 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n  {\n    name:\"年\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:12, \n    mine:2, \n    block:2, \n    desc:\"采掘/战斗: 横置1个敌人\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:1, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 使1个干员获得+5生命值\", \n    illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 5 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+5生命值\",\n  },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 部署1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      if (new_card) {\n        G.field.push(init_card_state(G, ctx, {...new_card}));\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"部署的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n\n  },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  // {\n  //   name:\"闪灵\",\n  //   cost:4,\n  //   atk:4,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"采掘/战斗: 使1个干员获得+3/+3\",\n  //   illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     // TODO: reconstruct this part, of course buffing an card needs a function\n  //     let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n  //     if (card) {\n  //       card.atk += 3 + 2 * self.power;\n  //       card.hp += 3 + 2 * self.power;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //     // It's okay to do this because \"onFight\"s are not on G.effects\n  //   },\n  //   reinforce_desc: \"再获得+2/+2\",\n  // },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  {\n    name:\"莫斯提马\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n    illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+1 <+1>\",\n  },\n  \n  {\n    name:\"皇帝\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得2分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += 2 * num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗4点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 4 + 2 * self.power)) {\n        let delta = 6 + 3 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+2，得分+3\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    onPlay(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce: 3,\n    reinforce_desc: \"触发1次\\\"部署\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得2个已完成的订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个已完成的订单\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，获得1个已完成的订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:5,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置所有已完成的订单\",\n    illust:\"http://prts.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    onMine(G, ctx, self) {\n      let count = G.finished.filter(x => x.exhausted).length;\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n\n      if (count >= 10) {\n        achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n      }\n\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let order = {};\n      let material = ctx.random.Die(3) - 1;\n      let requirements = [0,0,0,0];\n      requirements[material] = 1;\n      order.desc = <span>{material_icons[material]}→5伤害</span>;\n      order.effect = (G,ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          deal_random_damage(G, ctx, 5);\n        }\n      };\n      order.is_rhine = true;\n      G.finished.unshift(order);\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n\n  {\n    name:\"麦哲伦\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘: 使1个敌人攻击力-3\",\n    illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      if (enemy) {\n        enemy.atk -= 3;\n      }\n    },\n    onPlay(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"稀音\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let order = {}; // EH: Reconstruct this as this code is the same as Meier\n      let requirements = [1,1,1,0];\n      order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n      order.effect = (G, ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          G.score += 4;\n        }\n      };\n      G.finished.unshift(order);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 2;\n      self.atk += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  \n  {\n    name:\"塞雷娅\",\n    cost:8,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:5, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:4,\n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"采掘: 横置场上的1个干员，然后该干员每有2点攻击力，就获得1分\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      if (card) {\n        card.exhausted = true;\n        G.score += Math.floor(card.atk / 2);\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n\n  },\n  \n  {\n    name:\"灰喉\", \n    cost:4,\n    atk:3, \n    hp:1, \n    mine:1, \n    block:0, \n    desc:\"部署: 获得+12攻击力直到回合结束\", \n    illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += 12;\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 12;\n          self.played = false;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 8) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少8分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  {\n    name:\"黑\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"超杀: 对其对位敌人造成5点伤害\",\n    illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let idx = G.field.indexOf(self);\n        if (~idx) {\n          let enemy = G.efield[idx];\n          if (enemy) {\n            enemy.dmg += 5 + 4 * self.power;\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+4\",\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onFight(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 2,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的部署效果 \\\"${card.desc}\\\"`);}\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的采掘效果 \\\"${card.desc}\\\"`);}\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的战斗效果 \\\"${card.desc}\\\"`);}\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的行动效果 \\\"${card.desc}\\\"`);}\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 部署5个随机干员的1/1复制\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        G.field.push(init_card_state(G, ctx, card));\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  {\n    name:\"暴行\",\n    cost:2,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n      G.hand = cards.map(x => ({...x}));\n    },\n    onMine(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n    reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 改变场上所有干员的能力\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"改变场上所有干员的能力\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n\n  {\n    name:\"银灰\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 5) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰5次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得5分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 5 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 每有1组{material_icons.slice(0,3)}，就获得1个{material_icons[3]}</span>,\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:3,\n    hp:5,\n    mine:1,\n    block:2,\n    desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  {\n    name:\"苏苏洛\",\n    cost:5,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 8);\n    },\n    reinforce_desc: \"使1个干员获得+8生命值\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用，如果费用不够则获得-5/-5\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        let paid = payCost(G, ctx, 2);\n        if (!paid) {\n          self.atk -= 5;\n          self.hp -= 5;\n        }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc: \"部署: 强化所有手牌1次\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = [...G.hand];\n      for (let card of cards) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n  {\n    name:\"守林人\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"休整: 造成7点伤害\",\n    illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      deal_random_damage(G, ctx, 7 + 3 * self.power);\n    },\n    reinforce_desc: \"伤害+3\",\n  },\n  {\n    name:\"霜叶\",\n    cost:4,\n    atk:2,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"休整: 每有1个休整中的干员，就获得+1/+1\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      self.atk += num_rest_cards;\n      self.hp += num_rest_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"锡兰\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 如果至少有5个休整中的干员，则获得5分\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n    reinforce: 2,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      if (num_rest_cards >= 5) {\n        G.score += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  {\n    name:\"诗怀雅\",\n    cost:4,\n    atk:4,\n    hp:5,\n    mine:1,\n    block:1,\n    desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"夜莺\",\n    cost:6,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n    onRest(G, ctx, self) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.onRest && (card.onRest != self.onRest)) {\n            card.onRest(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let resters = G.deck.filter(x => x.onRest);\n      if (resters.length > 0) {\n        let card = ctx.random.Shuffle(resters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个干员造成4点伤害，并使其获得\\\"采掘/战斗: 获得4分\\\"\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self)))[0];\n      if (card) {\n        card.dmg += 4;\n        if (card.dmg >= card.hp) {\n          let card_idx = G.field.indexOf(card);\n          G.field.splice(card_idx, 1);\n          G.discard.push(card);\n        }\n        else {\n          card.onMine = (G, ctx) => {G.score += 4};\n          card.onFight = card.onMine;\n          card.desc = \"采掘/战斗: 获得4分\";\n        }\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n        if (self.use_count >= 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:3,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:2,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 3,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸5张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<5; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:8,\n    atk:6,\n    hp:7,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得6分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 6;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+5/+5直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 5;\n      self.dmg -= 5;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 5;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"白金\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"采掘/战斗: 使1个干员获得+3攻击力\", \n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%87%91_1.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => x != self))[0];\n      if (card) {\n        card.atk += 3;\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"+3/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    }\n  },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  {\n    name:\"红\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1分\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 使其对位敌人攻防减半\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      let idx = G.field.indexOf(self);\n      if (~idx) {\n        let enemy = G.efield[idx];\n        if (enemy) {\n          enemy.atk /= 2;\n          enemy.hp /= 2;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0)))[0];\n      if (damaged_enemy) {\n        let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        G.efield.splice(enemy_idx, 1);\n        logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  {\n    name:\"星熊\",\n    cost:6,\n    atk:1,\n    hp:2,\n    mine:3,\n    block:2,\n    desc: \"部署: 每有1张手牌，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let num_cards = G.hand.length;\n      self.atk += num_cards;\n      self.hp += 2 * num_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得4点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 4;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  {\n    name:\"白雪\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果\",\n    illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\", \"艾雅法拉\", \"雷蛇\"].includes(x.name))))[0];\n      if (miner) {\n        miner.onMine(G, ctx, self);\n        logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onFight(G, ctx, self) {\n      let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\", \"能天使\", \"雷蛇\"].includes(x.name))))[0];\n      if (fighter) {\n        fighter.onFight(G, ctx, self);\n        logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:6,\n  //   atk:6,\n  //   hp:7,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"行动: 将1张敌人牌加入手牌\",\n  //   illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   action(G, ctx, self) {\n  //     let card = enemy2card(G, ctx);\n  //     for (let i=0; i<self.power; i++) {\n  //       reinforce_card(G, ctx, card);\n  //     }\n  //     G.hand.unshift(card);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+2/+3\",\n  // },\n\n \n   {\n    name:\"猎蜂\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"战斗: 激怒目标\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n    reinforce: 1,\n\n    onFight(G, ctx, self, enemy) {\n      enemy.enraged = true;\n    },\n\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"部署\\\"德克萨斯\\\"\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n\n  \n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n\n\n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"部署: 获得1个随机能力\",\n    onPlay(G, ctx, self) {\n      let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      let time_point = ctx.random.Shuffle(time_points)[0];\n      let effects = ctx.random.Shuffle(G.EFFECTS);\n      let effect = effects[0];\n      self.desc = time_point[0] + effect[0];\n      self[time_point[1]] = effect[1];\n      self.reinforce_desc = effects[1][0];\n      self.onReinforce = effects[1][1];\n      logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  {\n    name:\"陆逊\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n    action(G, ctx, self) {\n      if (G.hand.length == 0) {\n        draw(G, ctx);\n        self.exhausted = false;\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"凯露\",\n    cost:10,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n    action(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n      if (enemy) {\n        G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:8,\n    mine:2,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  {\n    name:\"尤格萨隆\",\n    cost:10,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 随机施放10个法术\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<10; i++) {\n        let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n        effect[1](G, ctx, self);\n        logMsg(G, ctx, \"施放 \"+effect[0]);\n      }\n    },\n    reinforce_desc: \"随机施放1个法术\",\n    onReinforce(G, ctx, self) {\n      let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n      effect[1](G, ctx, self);\n      logMsg(G, ctx, \"施放 \"+effect[0]);\n    }\n  },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: 1,\n    hp: 2,\n    desc: \"替换, 入场/摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n    onOut(G, ctx, self) {\n      self.onPlay(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk <= 0) {\n        self.atk = 1;\n      }\n    }\n  },\n\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2`;\n\nconst draw_vanguard = `芬 1 2\n清道夫 1 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 2\n崖心 0 2\n阿消 0 1\n食铁兽 0 2\n铃兰 0 1\n苏苏洛 0 1\n断罪者 0 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n黑 2 3\n阿消 0 2\n食铁兽 0 2\n克洛丝 2 3\n杰西卡 1 2\n蓝毒 2 3\n白金 2 3\n末药 1 2\n宴 2 3\n巡林者 2 3\n陈 1 2\n红豆 2 3\n炎熔 2 3\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 0 2\n伊桑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 3 4\n空 3 4\n莫斯提马 3 3\n皇帝 2 2\n波登可 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n艾雅法拉 1 2\n调香师 1 2\n可颂 0 2\n白面鸮 1 2\n阿米娅 0 2\n拉普兰德 1 2\n梓兰 1 2\n坚雷 0 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n巫恋 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 1 2\n稀音 2 3\n伊芙利特 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n巡林者 1 2\n银灰 1 2\n苏苏洛 1 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n阿消 1 2\n讯使 1 2\n梅尔 1 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n梅尔 1 2\n伊芙利特 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n波登可 2 3\n芬 2 3\n推进之王 1 2\n陈 2 3\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n古米 2 3\n早露 0 2\n慕斯 1 2\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 0 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n天火 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, angelina, karlan, ursus, rest, fullmoon];\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 4, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 2, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 15, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { get_deck_name, generate_deck } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    card.dmg = card.dmg || 0;\n    card.dmg += dmg;\n    logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.limit_hand_field && (G.hand.length >= 6)) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (G.limit_hand_field && (G.field.length >= 6)) {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return;\n  }\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    for (let f of G.onPlayCard) {\n      f(G, ctx, card);\n    }\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n    sort_orders(G);\n  }\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>(x.requirements.indexOf(3)-y.requirements.indexOf(3)));\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      let surge = switchEnemy(G, ctx);\n      if (enemy.onPlay && !surge) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    else {\n      if (enemy.onPlay) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  if (G.not_switch) {\n    return false;\n  }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n\n  return surge;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name.length == 1) {\n    card.name += card.name;\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.harder_reinforce) {\n    let paid = payCost(G, ctx, 2);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"巫恋\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.filter(x=>(x.block>0)).sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    // else if (x.block != y.block) {\n    //   return y.block - x.block;\n    // }\n    else {\n      return x.hp-y.hp;\n    }\n  });\n  let card = ranked_field_by_dmg[0];\n  if (card) {\n    card.dmg -= amount;\n    if (card.dmg < 0) {\n      card.hp -= card.dmg;\n      card.dmg = 0;\n    }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.ORDERS)[0])};\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<5; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck_data, seed) {\n  let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx}));\n\n  let rng = new PRNG(seed);\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n\n    G.onPlayCard = [];\n    G.onCardMine = [];\n    G.onCardFight = [];\n    G.onCardAct = [];\n    G.onCardReinforced = [];\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"砾\", \"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    G.ORDERS = [...ORDERS];\n\n    console.log(\"Setup finished.\");\n\n    return G;\n}\n\nfunction setup_competition_mode(G, ctx) {\n  G.competition_mode = true;\n\n  G.deck_list = [];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(get_deck_name());\n  }\n}\n\nfunction finish_competition_mode(G, ctx) {\n  G.competition_mode = false;\n}\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = str2deck(generate_deck(G.deck_list[idx]));\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  G.selections = ctx.random.Shuffle(G.Deck).slice(0, 3);\n  G.upgrades = [];\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_mode,\n    finish_competition_mode,\n    select_deck,\n    refresh_selections,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        drawOrder(G, ctx);\n        G.costs += 3;\n\n        G.onPlayCard = [];\n        G.onCardMine = [];\n        G.onCardFight = [];\n        G.onCardAct = [];\n        G.onCardReinforced = [];\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 6;\n            enemy.hp += 6;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: springConfig.default,\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_border;\n        }\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        请组出一套强力或欢乐的卡组\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 砾, 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"40%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">欢迎来到竞技模式！<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\">竞技模式介绍</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  console.log(props.cards);\n  return <div className=\"board\">\n    <CardRow cards={[]} additionalStyle={{marginTop: \"35%\"}}/>\n    <div className=\"card-desc\">Some desc</div>\n    <CardRow cards={props.cards || []}/>\n    <div className=\"card-desc\">{props.selectedCard && props.selectedCard.desc}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\"}}>完成选择</button>\n  </div>\n}","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0, G.edeck.length-4);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"2回合后，所有敌人获得+4生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/c/cd/Global_tokencnt_2.png\",\n    desc: \"强化干员需要的材料数+1\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.reinforce += 1;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/6/6d/Enemy_eagent_1.png\",\n    desc: \"敌人无法被横置\",\n    level: 2,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.unyielding = true;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+6/+6\",\n    level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 5,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用\"史都华德\"进行采掘，史都华德的采掘能力为3，因此获得3个随机材料，博士因此获得了{material_icons[0]}、{material_icons[0]}和{material_icons[2]}；然后使用\"阿米娅\"进行采掘，阿米娅的采掘能力为2，因此获得{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士首先使用完成区的第一个订单，能力描述为\"{material_icons[0]}→？+？\"，也就是可以用1个{material_icons[0]}换2个随机材料，博士因此消耗1个{material_icons[0]}，获得了2个随机材料，分别为{material_icons[1]}和{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级20  <br/>\n  * 点\"所有敌人获得+2生命值\"3级并完成危机等级20  <br/>\n  * 点\"2回合后，所有敌人获得冲锋\"并完成危机等级20 <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  <span>* 无敌的小火龙</span><br/>\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\nimport 'react-tabs/style/react-tabs.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selections_selected: -1,\n      upgrades_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_deck_upgrade_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        一键收货: this.harvest_orders,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  choose_standard_tags(idx) {\n    let new_tags = this.state.tags;\n    let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 3) && [1,9,13].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n    this.setState({tags: new_tags});\n    this.setState({standard_level: current_standard_level})\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_selection_state(card) {\n    return {\n      selected: (this.state.selection_selected == this.props.G.selections.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n    // EH: it's better to setup each scenario in one function\n    this.props.moves.setDecks(init_decks(deck_data, this.state.seed));\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n      seed: get_seed_name(),\n    });\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 16 && risk_level < 22) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 22 && risk_level < 30) {\n          grade = \"SSSS\";\n        }\n        else if (risk_level >= 30 && risk_level < 50) {\n          grade = \"SSSSS\";\n        }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid blue\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck_name, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: str2deck(generate_deck(deck_name))});\n      this.check_deck();\n    };\n    return {\n      deckName: deck_name,\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n\n  enter_competition_mode() {\n    this.props.moves.setup_competition_mode();\n    this.change_board(\"deck_selection\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.props.moves.finish_competition_mode();\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} />\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade cards={this.props.G.selections.map(this.process_hand_data)} />\n  }\n\n  render_competition_board() {\n\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n        additionalStyle = {{height: \"25%\", marginTop:\"16%\"}}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          actions = {{\n            进入游戏: () => {this.change_board(\"deck\");},\n            快速设置: this.choose_standard_tags,\n            // \"竞技模式(推荐)\": this.enter_competition_mode, \n            返回标题: () => this.change_board(\"title\"),\n          }}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}