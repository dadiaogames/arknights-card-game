{"version":3,"sources":["icons.js","orders.js","cards.js","Game.js","enemies.js","upgrades.js","utils.js","DeckGenerator.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","Roguelike.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","style","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","food_icons","color","smaller_icons","order_illust","material_icons","ready_order","G","ctx","from_card","random","Shuffle","finished","filter","x","exhausted","ready_other_orders","advanced_orders","requirements","score","reward","advanced","desc","effect","field_selected","card","field","logMsg","name","length","atk","hp","costs","slice","colors","reduce","acc","val","console","log","times","_","min","ORDERS","payCost","materials","cost","harvest","CARDS","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","power","achieve","queen","find","Object","assign","onPlay","deal_random_damage","white","draw","onTurnBegin","onFight","eliminate_field","exhaust_random_enemy","num_exhausted","efield","Math","enemy","dmg","new_card","deck","idx","indexOf","splice","init_card_state","hand","gainMaterials","drop","ready_random_card","cure","sort","y","cured","fully_restore","onPlayCard","push","floor","material","Die","payMaterials","is_rhine","unshift","num_finished","miners","fighters","map","actors","battlecries","score_gained","onCardFight","includes","this","onEnemyOut","was_enemy","discard","i","cards","extracted_attrs","skill_power","reinforce_skill","j","onCardMine","undefined","use_count","danger","reinforce_hand","num_reinforced","reinforce_field","num_cards","played","onOut","gravel","join","excess","max","player","reduce_enemy_atk","damaged_enemy","onRest","silent","cost_remained","summon","meteorite","fever","mcard","enemy2card","enemy_idx","e","texas","wind","reinforce_card","BORROWS","generate_combined_card","blank_enemy","heijiao_in_dream","ENEMIES","self_copy","is_elite","high","deal_damage","unyielding","enraged","drawEnemy","goal","UPGRADES","is_init","onPlayBonus","odeck","map_object","fn","obj","new_obj","k","PRNG","seed","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","cost_vanguard","scorer","strategies","mini_sets","mini_set","get_random_card","rng","banned_cards","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","keys","c","deck_from_strategy","strategy","amount","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","generate_deck_s2","sets","deck_from_mini_sets","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","move","d1","d2","gained","use","out","exhausted_enter","limit_hand","pop","refreshOrder","orders","price_y","price_x","price_up","edeck","enemy_exhausted_enter","switcher","switchEnemy","replace","reversed","time_points","effects","EFFECTS","title","reverse","alist","unexhausted","reduced","exhausted_cards","prepared_cards","ready_times","clearField","f","str2deck","card_dict","item","arr2obj","card_data","target_card","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardAct","onCardReinforced","onUseOrder","setup_scenario","ediscard","picks","max_danger","num_enemies_out","field_limit","playing","stage","round_num","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","AC","setup","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","played_card","insert_field","act","reinforce_need_cost","rest","rest_cards","num_rest_cards","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","get_blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","turn","onBegin","concat","refresh","refresh_picks","enemy_grow","enemy_hp_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","reduce_goal","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","display","EnterGame","divAlign","Panel","content","ScoreBoard","useState","MaterialDisplay","Tag","bg_color","locked","backgroundColor","TagSelection","tag","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","process_selected_desc","margin","Competition","results","finalResult","fontSize","TAGS","tag_list","t","process_tags","standard_level","rhodes_training_mode","introduce_roguelike_mode","get_pick","selection","get_roguelike_pick","reset_card_picks","S","card_picks","get_shop_item","shop_item","reset_shop","shop_items","get_gold_gained","level_required","gold_gained","level_diff","RoguelikeDeckSelection","RoguelikeDeckRepr","Pick","check_cards","pick_cards","GoldAmount","PickCards","skip_picks","ShopItem","buy","Shop","refresh_shop","Roguelike","game_count","enter_dream","enter_battle","check_deck","check_relics","FinishPick","RoguelikeTabs","onSelect","RoguelikeEntry","difficulties","ShowMeTheMoney","ResultWin","slam","grand_slam","level_achieved","gold_amount","continue","ResultLose","FinalResult","difficulty","roguelike","setup_roguelike_mode","roguelike_mode","central_idx","dream_count","set_difficulty","levels","skip_pick","continue_run","won","end_roguelike_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_result_board","render_roguelike_final_result_board","render_roguelike_entry_board","enter_competition_mode","upgrade_card","start_competition","enter_roguelike_mode","change_board","choose_tag","choose_standard_tags","get_risk_level","enter_game","args","setState","produce","state","hand_selected","efield_selected","order_selected","finished_selected","selection_selected","upgrade_selected","pick_selected","hand_choices","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","show_finished","checking","scenario_finished","branches","log_select","new_tags","current_standard_level","competition_mode","cardrow","illust_variants","icon","order_data","rhine","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","order_id","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","failed","overflow","enter_difficulty","shop","centrals","lose","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","快速设置","Roguelike模式","返回标题","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c6f43ea.chunk.js","sourcesContent":["import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"http://prts.wiki/images/b/b1/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E5%90%88%E7%BA%A6%E8%B5%8F%E9%87%91.png\" style={{height: \"1.1em\"}} className=\"steel\" />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 9l-6 6 6 6\"/><path d=\"M20 4v7a4 4 0 0 1-4 4H5\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];\n\nconst smaller_height = '1.1em';\nexport const smaller_icons = [\n  (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" style={{height:smaller_height}} className=\"material steel\" />),\n]","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[G.field.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得11/+1`);\n  }\n  card.atk += 1;\n  card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nfunction set_collection_order(G, ctx) {\n  let colors = G.finished.reduce((acc,val)=>{\n    if(val.color >= 0) acc[val.color]+=1;\n    return acc;\n  }, [0,0,0]);\n  console.log(colors);\n  let times = _.min(colors);\n  G.score += 2 * times;\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+1/+1</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    desc: (<span>获得: 1费</span>),\n    advanced: true,\n    effect(G, ctx) {\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [1,1,1,0],\n    score: 1, \n    // reward: 2,\n    advanced: true,\n    desc: (<span>2分/每组{food_icons.slice(0,3)}订单</span>),\n    effect: set_collection_order,\n  },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    desc: (<span>重置1订单</span>),\n    advanced: true,\n    ready_other_orders: true,\n    effect: ready_order,\n  },\n    \n];\n  \nexport const ORDERS = [\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 4,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 4,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 4,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>{material_icons[2]} → 2费</span>),\n  //   cost: [0,0,1,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 2费</span>),\n  //   cost: [1,0,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 2费</span>),\n  //   cost: [0,1,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n\n  // // {\n  //   requirements: [3,0,0,0],\n  //   score: 2, \n  //   reward: 2,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2, \n  //   reward: 0,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // }, \n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  \n  \n\n  ...advanced_orders,\n  // ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, insert_field, reduce_enemy_atk, silent, summon, eliminate_field, reinforce_field, choice\n} from './Game';\nimport { material_icons, ready_order } from './orders';\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    action(G, ctx, self) {\n      if (self.power == 1) {\n        let queen = G.CARDS.find(x => x.name == \"阿米娅-近卫\");\n        Object.assign(self, queen);\n        self.onPlay(G, ctx, self);\n      }\n      else {\n        logMsg(G, ctx, \"只需要强化1次即可\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得1分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:6, \n    hp:6, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 6;\n    },\n    reinforce_desc: \"+6/+6\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 9,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let white = G.CARDS.find(x => x.name == \"白面鸮\");\n      Object.assign(self, white);\n      self.exhausted = false;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:16,\n    hp:16,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:2, \n    block:1, \n    desc:\"采掘: 摧毁场上1个重置状态的干员，并获得3点费用\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx, self) {\n      let card = eliminate_field(G, ctx);\n      if (card) {\n        G.costs += 3;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用(最多4点)\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += Math.min(num_exhausted, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 6) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少6点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+1>\", \n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 1;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+2/+2\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      self.atk += 2 + 2 * self.power;\n      self.hp += 2 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc: <span>采掘: 弃2张牌，获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.materials[3] += 2;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不够\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:2, \n    desc:\"行动: 获得+6生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n  {\n    name:\"年\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n  // {\n  //   name:\"斑点\", \n  //   cost:5, \n  //   atk:3, \n  //   hp:15, \n  //   mine:1, \n  //   block:2, \n  //   desc:\"行动: 使自己和左右两侧干员获得+4生命值\", \n  //   illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n  //   action(G, ctx, self) {\n  //     let self_idx = G.field.indexOf(self);\n  //     G.field.map((card, idx) => {\n  //       if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n  //         card.hp += 4;\n  //       }\n  //     });\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"完全治疗自己并获得+2生命值\",\n  //   onReinforce(G, ctx, self) {\n  //     self.dmg = 0;\n  //     self.hp += 2;\n  //   }\n  // },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  // {\n  //   name:\"芙蓉\", \n  //   cost:1, \n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 完全治疗1个干员\", \n  //   illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     fully_restore(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n  },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let cured = fully_restore(G, ctx);\n      if (cured >= 4) {\n        G.score += 2 + 2 * self.power;\n      }\n    },\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"皇帝\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得2分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += 2 * num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + self.power)) {\n        let delta = 6 + 2 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+1，得分+2\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:0, \n    desc:\"部署: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    onPlay(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce: 2,\n    reinforce_desc: \"触发1次\\\"部署\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"特米米\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"超杀: 每造成2点额外伤害，就获得1个材料\",\n    illust:\"http://prts.wiki/images/0/0a/%E7%AB%8B%E7%BB%98_%E7%89%B9%E7%B1%B3%E7%B1%B3_1.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let times = Math.floor(delta / 2);\n        // for (let i=0; i<times; i++) {\n        //   let order = choice(ctx, G.finished.filter(x => !x.exhausted));\n        //   if (order) {\n        //     order.effect(G, ctx);\n        //     logMsg(G, ctx, [\"触发订单 \", order.desc]);\n        //   }\n        // }\n        gainMaterials(G, ctx, times);\n      }\n    },\n    // action(G, ctx) {\n    //   G.onUseOrder.push(\n    //     (G, ctx) => {\n    //       deal_random_damage(G, ctx, 3);\n    //     }\n    //   );\n    // },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3攻击力\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let order = {};\n      let material = ctx.random.Die(3) - 1;\n      let requirements = [0,0,0,0];\n      requirements[material] = 1;\n      order.desc = <span>{material_icons[material]}→5伤害</span>;\n      order.effect = (G,ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          deal_random_damage(G, ctx, 5);\n        }\n      };\n      order.is_rhine = true;\n      G.finished.unshift(order);\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n\n\n\n  \n  {\n    name:\"斑点\",\n    cost:6,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  // {\n  //   name:\"普罗旺斯\", \n  //   cost:2,\n  //   atk:4, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"采掘/战斗: 横置场上的1个干员，然后该干员每有2点攻击力，就获得1分\", \n  //   illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n  //   onMine(G, ctx) {\n  //     let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n  //     if (card) {\n  //       card.exhausted = true;\n  //       let delta = Math.floor(card.atk / 2);\n  //       G.score += delta;\n  //       logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n  //     }\n  //   },\n  //   onFight(G, ctx) {\n  //     this.onMine(G, ctx);\n  //   },\n  //   reinforce: 2,\n  //   onReinforce(G, ctx) {\n  //     G.score += 2;\n  //   },\n  //   reinforce_desc: \"获得2分\",\n\n  // },\n  \n  // {\n  //   name:\"灰喉\", \n  //   cost:4,\n  //   atk:2, \n  //   hp:1, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 获得+15攻击力直到回合结束\", \n  //   illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let delta = 15;\n  //     self.atk += delta;\n  //     self.played = true;\n  //     self.onTurnBegin = (G, ctx, self) => {\n  //       if (self.played) {\n  //         self.atk -= delta;\n  //         self.played = false;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n\n  // },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 7) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少7分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"安比尔\",\n    cost:2,\n    atk:4,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，干员的\\\"超杀:\\\"效果将额外触发1次\",\n    illust:\"http://prts.wiki/images/3/3e/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%AF%94%E5%B0%94_1.png\",\n    action(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, self, enemy) => {\n          if (enemy.dmg > enemy.hp && ((typeof self.desc) == \"string\") && self.desc.includes(\"超杀\")) {\n            self.onFight && self.onFight(G, ctx, self, enemy);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n  // {\n  //   name:\"黑\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"超杀: 对其对位敌人造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let idx = G.field.indexOf(self);\n  //       if (~idx) {\n  //         let enemy = G.efield[idx];\n  //         if (enemy) {\n  //           enemy.dmg += 5 + 4 * self.power;\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"伤害+4\",\n  // },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E9%85%B8%E7%B3%96_1.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:1, \n    hp:1, \n    mine:1, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 立即获得目标生命+2，费用+1，然后弃牌堆里每有1个热水壶，就获得2分\", \n    illust:\"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\",\n    onPlay(G, ctx, self) {\n      self.hp += 2;\n      G.costs += 1;\n      G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3+3*self.power); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的部署效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的采掘效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的战斗效果`, '\"', card.desc, '\"']);\n      }\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的行动效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);\n      }\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制(无视场面上限)\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  // {\n  //   name:\"暴行\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:4,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n  //   illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n  //   onPlay(G, ctx) {\n  //     let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n  //     G.hand = cards.map(x => ({...x}));\n  //   },\n  //   onMine(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  // },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n\n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://s3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    desc: `行动: 造成6点伤害，重复2次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成6点伤害，重复${2+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/2)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      self.action = (G, ctx, self) => {\n        for (let i=0; i<(2+self.skill_power); i++) {\n          deal_random_damage(G, ctx, 6);\n        }\n        for (let j=0; j<(self.skill_power/2 + 1); j++) {\n          G.onCardMine.push((G, ctx) => {\n            G.score += 1;\n          });\n        }\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      };\n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n      self.desc = this.desc;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 6) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰6次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 2 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  // {\n  //   name:\"角峰\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:1,\n  //   block:2,\n  //   desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n  //   illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     self.atk += G.materials[3];\n  //     self.hp += G.materials[3];\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n  {\n    name:\"棘刺\",\n    cost:4,\n    atk:4,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%A3%98%E5%88%BA_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  // {\n  //   name:\"夜烟\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:2,\n  //   mine:5,\n  //   block:0,\n  //   desc:\"采掘: 弃2张牌\",\n  //   illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E7%83%9F_1.png\",\n  //   onMine(G, ctx) {\n  //     drop(G, ctx);\n  //     drop(G, ctx);\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"<+3>\",\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 3;\n  //   }\n  // },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:5,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"战斗: 强化1张手牌，然后每有1张强化过的手牌，就获得1点费用\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    // onMine(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    // },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n      let num_reinforced = G.hand.filter(x => (x.power > 0)).length;\n      G.costs += num_reinforced;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"真理\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:2,\n    desc: \"采掘/战斗: 强化场上1个重置状态的干员\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"诗怀雅\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"部署: 强化场上3个重置状态的干员\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  //休整一家暂时退休\n  // {\n  //   name:\"守林人\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n  //   illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n  //   },\n  //   reinforce_desc: \"伤害+3\",\n  // },\n  // {\n  //   name:\"霜叶\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:3,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"休整: 每有1个休整中的干员，就获得+1/+1\",\n  //   illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     let num_rest_cards = get_num_rest_cards(G, ctx);\n  //     self.atk += num_rest_cards;\n  //     self.hp += num_rest_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"阻挡数+1\",\n  // },\n  // {\n  //   name:\"锡兰\",\n  //   cost:3,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 每有1个休整中的干员，就获得1分\",\n  //   illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n  //   reinforce: 2,\n  //   onRest(G, ctx, self) {\n  //     let num_rest_cards = get_num_rest_cards(G, ctx);\n  //     G.score += num_rest_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  //   reinforce_desc: \"获得2点费用\",\n  // },\n  // // {\n  // //   name:\"诗怀雅\",\n  // //   cost:4,\n  // //   atk:4,\n  // //   hp:5,\n  // //   mine:1,\n  // //   block:1,\n  // //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  // //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  // //   reinforce: 1,\n  // //   onRest(G, ctx, self) {\n  // //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  // //     if (player) {\n  // //       player.onPlay(G, ctx, player);\n  // //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  // //     }\n  // //   },\n  // //   onReinforce(G, ctx, self) {\n  // //     self.atk += 2;\n  // //     self.hp += 2;\n  // //   },\n  // //   reinforce_desc: \"+2/+2\",\n  // // },\n  // {\n  //   name:\"夜莺\",\n  //   cost:5,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n  //   onRest(G, ctx, self) {\n  //     if (~G.field.indexOf(self)) {\n  //       for (let card of G.field.map(x=>x)) {\n  //         if (card.onRest && (card.onRest != self.onRest)) {\n  //           card.onRest(G, ctx, card);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     let resters = G.deck.filter(x => x.onRest);\n  //     if (resters.length > 0) {\n  //       let card = ctx.random.Shuffle(resters)[0];\n  //       G.hand.unshift(Object.assign({}, card));\n  //     }\n  //   },\n  //   reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  // },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个重置状态的干员造成3点伤害，并获得3分\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      if (card) {\n        card.dmg += 3;\n        G.score += 3;\n        if (card.dmg >= card.hp) {\n          // let card_idx = G.field.indexOf(card);\n          // G.field.splice(card_idx, 1);\n          // G.discard.push(card);\n          G.field = G.field.filter(x => x != card);\n          G.discard = [card, ...G.discard];\n        }\n        // else {\n          // card.onMine = (G, ctx) => {G.score += 4};\n          // card.onFight = card.onMine;\n          // card.desc = \"采掘/战斗: 获得4分\";\n          // G.score += 3;\n        // }\n\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:6,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸3张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<3; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:6,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得5分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 5;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  // {\n  //   name:\"格拉尼\",\n  //   cost:4,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n  //   illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%A0%BC%E6%8B%89%E5%B0%BC_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n  //     G.field.push(init_card_state(G, ctx, {...new_card}));\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"白金\", \n  //   cost:3, \n  //   atk:4, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"采掘/战斗: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%87%91_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let card = ctx.random.Shuffle(G.field.filter(x => x != self))[0];\n  //     if (card) {\n  //       card.atk += 3;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   }\n  // },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n      // self.mine += 3;\n      // self.played = true;\n      // self.onTurnBegin = (G, ctx, self) => {\n      //   if (self.played) {\n      //     self.mine -= 3;\n      //     self.played = false;\n      //   }\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  \n  {\n    name:\"杰克\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"摧毁: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n    illust:\"http://prts.wiki/images/1/1d/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E5%85%8B_1.png\",\n    reinforce: 1,\n    onOut(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n      G.hand.unshift(card);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E6%A3%AE%E8%9A%BA_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    // onReinforce(G, ctx, self) {\n    //   self.atk += 2;\n    //   self.hp += 2;\n    // },\n    // reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:6,\n    hp:9,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得+1攻击力并治疗2点伤害\",\n    illust:\"http://prts.wiki/images/4/48/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E6%8B%89%E6%A0%BC_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let excess = enemy.dmg - enemy.hp;\n        self.atk += excess;\n        self.dmg = Math.max(self.dmg - excess * 2, 0);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 使2个敌人获得-4攻击力\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      reduce_enemy_atk(G, ctx, 4);\n      reduce_enemy_atk(G, ctx, 4);\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  {\n    name:\"四月\",\n    cost:3,\n    atk:2,\n    hp:1,\n    mine:0,\n    block:0,\n    desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n    illust:\"http://prts.wiki/images/2/2c/%E7%AB%8B%E7%BB%98_%E5%9B%9B%E6%9C%88_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.field.map(card => {\n        if (card.exhausted) {\n          card.exhausted = false;\n          card.mine = 0;\n          silent(card);\n        }\n      })\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"贾维\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"采掘: 弃2张牌，获得4点费用\",\n    illust:\"http://prts.wiki/images/2/2d/%E7%AB%8B%E7%BB%98_%E8%B4%BE%E7%BB%B4_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.costs += 4;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },{\n    name:\"泥岩\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:3,\n    block:2,\n    desc:\"部署: 消耗所有剩余费用，然后每消耗1点，就获得+3/+3\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E6%B3%A5%E5%B2%A9_1.png\",\n    onPlay(G, ctx, self) {\n      let cost_remained = G.costs;\n      self.atk += 3 * cost_remained;\n      self.hp += 3 * cost_remained;\n      G.costs = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  },\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:5,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"行动: 弃2张牌，获得+2/+2，然后重置自己\",\n  //   illust:\"\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       self.atk += 2 + self.power;\n  //       self.hp += 2 + self.power;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"再获得+1/+1\",\n  // },\n  {\n    name:\"微风\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 弃3张牌，召唤1个费用为4的干员\",\n    illust:\"http://prts.wiki/images/e/e7/%E7%AB%8B%E7%BB%98_%E5%BE%AE%E9%A3%8E_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length >= 3) {\n        drop(G, ctx);\n        drop(G, ctx);\n        drop(G, ctx);\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n        summon(G, ctx, new_card, self);\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤1个费用为2的干员\",\n    onReinforce(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      summon(G, ctx, new_card, self);\n    },\n  },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的1/1复制\",\n  //   illust:\"\",\n  //   onPlay(G, ctx, self) {\n  //   },\n  //   onMine(G, ctx, self) {\n  //   },\n  //   onFight(G, ctx, self, enemy) {\n  //   },\n  //   action(G, ctx, self) {\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  // },\n  {\n    name:\"亚叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤1个随机干员的6/6复制</span>,\n    illust:\"http://prts.wiki/images/5/5f/%E7%AB%8B%E7%BB%98_%E4%BA%9A%E5%8F%B6_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let card = ctx.random.Shuffle(G.CARDS)[0];\n        card = {...card};\n        card.atk = 6;\n        card.hp = 6;\n        card.mine = 3;\n        card.cost = 5;\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },{\n    name:\"史尔特尔\",\n    cost:4,\n    atk:7,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"战斗: 攻击其对位敌人时，消耗1点费用，重置自己\",\n    illust:\"http://prts.wiki/images/0/0c/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (G.field.indexOf(self) == G.efield.indexOf(enemy) && payCost(G, ctx, 1)) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },{\n    name:\"流星\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:0,\n    desc:\"部署: 造成5点伤害\",\n    illust:\"http://prts.wiki/images/b/be/%E7%AB%8B%E7%BB%98_%E6%B5%81%E6%98%9F_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 5);\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  {\n      name:\"空爆\",\n      cost:2,\n      atk:3,\n      hp:2,\n      mine:1,\n      block:0,\n      desc:\"采掘: 摧毁场上1个重置状态的干员，并造成6点伤害\",\n      illust:\"http://prts.wiki/images/8/87/%E7%AB%8B%E7%BB%98_%E7%A9%BA%E7%88%86_1.png\",\n      onMine(G, ctx, self) {\n        let card = eliminate_field(G, ctx);\n        if (card) {\n          deal_random_damage(G, ctx, 6);\n        }\n      },\n      action(G, ctx, self) {\n        if (self.power == 1) {\n          let meteorite = G.CARDS.find(x => x.name == \"陨星\");\n          Object.assign(self, meteorite);\n          self.action = undefined;\n        }\n        else {\n          logMsg(G, ctx, \"只需要强化1次即可\");\n          self.exhausted = false;\n        }\n      },\n      reinforce: 1,\n      reinforce_desc: \"造成3点伤害\",\n      onReinforce(G, ctx, self) {\n        deal_random_damage(G, ctx, 3);\n      },\n    },\n\n  {\n    name:\"卡达\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，使用其他干员采掘时，重置自己\",\n    illust:\"http://prts.wiki/images/1/1a/%E7%AB%8B%E7%BB%98_%E5%8D%A1%E8%BE%BE_1.png\",\n    action(G, ctx, self) {\n      self.fever = true;\n      G.onCardMine.push(\n        (G, ctx, mcard) => {\n          for (let card of G.field) {\n            if (card.fever && (!mcard.fever)) {\n              card.exhausted = false;\n            }\n          }\n        }\n      );\n    },\n    onTurnBegin(G, ctx, self) {\n      self.fever = false;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },\n\n  // {\n  //   name:\"白雪\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果(视为自己触发)\",\n  //   illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n  //     if (miner) {\n  //       miner.onMine(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n  //     if (fighter) {\n  //       fighter.onFight(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     draw(G, ctx);\n  //   },\n  //   reinforce_desc: \"摸1张牌\",\n  // },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:1,\n  //   atk:6,\n  //   hp:6,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"部署: 翻开1张敌人牌\",\n  //   illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   onPlay(G, ctx) {\n  //     drawEnemy(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n\n      if (self.power == 3) {\n        let wind = G.CARDS.find(x => x.name == \"风笛\");\n        if (~G.field.indexOf(self)) {\n          Object.assign(self, wind);\n        }\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:8,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const heijiao_in_dream =  {\n    name:\"黑角\",\n    cost:1,\n    atk:8,\n    hp:8,\n    mine:4,\n    block:2,\n    desc:\"部署: 获得5000分\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    onPlay(G, ctx) {\n      G.score += 5000;\n    },\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  };\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1 } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    card.dmg = card.dmg || 0;\n    card.dmg += dmg;\n    logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function eliminate_field(G, ctx) {\n  let card = ctx.random.Shuffle(G.field.filter(x => !x.exhausted))[0];\n  if (card) {\n    G.field = G.field.filter(x => x != card);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.limit_hand && (G.hand.length >= 5)) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function insert_field(G, ctx, card, idx) {\n  if (G.field.length < G.field_limit) {\n    let played_card = init_card_state(G, ctx, {...card});\n    G.field.splice(idx || G.field.length, 0, played_card);\n    return played_card;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    let inserted = insert_field(G, ctx, card);\n    if (inserted) {\n      logMsg(G, ctx, `部署 ${card.name}`);\n      for (let f of G.onPlayCard) {\n        f(G, ctx, card);\n      }\n      if (inserted.onPlay) {\n        inserted.onPlay(G, ctx, inserted);\n      }\n      if (inserted.onPlayBonus) {\n        for (let bonus of inserted.onPlayBonus) {\n          bonus.effect(G, ctx, inserted);\n        }\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.push(card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  G.orders = ctx.random.Shuffle(G.odeck).slice(0, 8);\n  G.orders = sort_orders(G.orders);\n}\n\nfunction sort_orders(orders) {\n  return orders.sort((x,y) => {\n    let price_y = _.sum(y.requirements);\n    let price_x = _.sum(x.requirements);\n    if (price_y != price_x) return price_x - price_y;\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\n// function sort_orders(G) {\n//   G.orders = G.orders.sort((x,y)=>{\n//     if (y.advanced && !x.advanced) return -1;\n//     if (!y.advanced && x.advanced) return 1;\n//     return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n//   });\n// }\n\n// function sort_finished(G) {\n//   G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n// }\n\nfunction price_up(order) {\n  // let new_requirements = order.requirements;\n  // if (order.advanced) {\n  //   new_requirements[3] += 1;\n  // }\n  // else {\n  //   new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  // }\n  // return {...order, requirements: new_requirements};\n  if (order.advanced) {\n    order.requirements[3] += 1;\n  }\n  else {\n    order.requirements = order.requirements.map(x => (x==0)?0:x+1);\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    // sort_orders(G);\n\n    if ([4,7].includes(G.finished.length)) {\n      G.orders.map(price_up);\n      G.odeck.map(price_up);\n    }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n      // if (enemy.onPlay && !surge) {\n      //   enemy.onPlay(G, ctx, enemy);\n      // }\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  // if (G.not_switch) {\n  //   return false;\n  // }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher && (!switcher.is_elite)) {\n    G.efield.splice(len-2, 1);\n  }\n  else {\n    enemy.atk = Math.max(enemy.atk - 2, 1);\n    enemy.hp = Math.max(enemy.hp - 2, 1);\n  }\n\n  // return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.reinforce_need_cost) {\n    let paid = payCost(G, ctx, 1);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function choice(ctx, alist) {\n  return ctx.random.Shuffle(alist)[0];\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_field(G, ctx) {\n  let card = choice(ctx, G.field.filter(x => (!(x.exhausted||[\"诗怀雅\"].includes(x.name)))));\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  let cured = card.dmg;\n  card.dmg = 0;\n\n  return cured;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg = Math.max(card.dmg - amount, 0);\n    // if (card.dmg < 0) {\n      // card.hp -= card.dmg;\n      // card.dmg = 0;\n    // }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  // sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk < 0) { // Not <= because some is 0\n      enemy.atk = 1;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n  G.onUseOrder = [];\n  G.onEnemyOut = [];\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    // G.finished = [default_order];\n    G.finished = [];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = Math.floor(idx / 2) + 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nexport function summon(G, ctx, card, self) {\n  let idx = G.field.indexOf(self) + 1;\n  if (card) {\n    G.field.splice(idx, 0, init_card_state(G, ctx, {...card}));\n  }\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n\n        setup_events(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n        \n        if (G.enemy_hp_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 2;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: -1,\n    hp: 4,\n    desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onOut(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+0/+6\",\n    desc: \"+6生命值\", // Write \"获得\"always\n    effect(card) {\n      card.hp += 6;\n    }\n  },\n\n  {\n    name: \"-2费\",\n    desc: \"部署费用-2\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 2;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"3分\",\n    desc: \"部署奖励:\\\"获得3分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 3;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2材料\",\n    desc: \"部署奖励:\\\"获得2个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 2);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2张牌\",\n    desc: \"部署奖励:\\\"摸2张牌\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          draw(G, ctx);\n          draw(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"4伤害\",\n    desc: \"部署奖励:\\\"造成4点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"手牌强化2\",\n  //   desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         reinforce_hand(G, ctx);\n  //         reinforce_hand(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"召唤1个费用为2的干员并使其生命值降为1\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            new_card = init_card_state(G, ctx, {...new_card});\n            new_card.hp = 1;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n// {\n//     name: \"凯尔希之力\",\n//     desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n//     effect(card) {\n//       // Maybe reconstruct this to call the skill of Ansel is better?\n//       card.onPlayBonus.push({\n//         name: this.name,\n//         effect(G, ctx, card) {\n//           if (card) {\n//             let new_card = G.CARDS.find(x => x.name == card.name);\n//             new_card = init_card_state(G, ctx, {...new_card});\n//             new_card.atk = 1;\n//             new_card.hp = 1;\n//             new_card.mine = 1;\n//             new_card.cost = 1;\n//             new_card.power = 0;\n//             G.field.push(new_card);\n//           }\n//         }\n//     });\n//   }\n// },\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let new_card = G.CARDS.find(x => x.name == card.name);\n        if (new_card) {\n          G.hand.unshift(new_card);\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"订单1\",\n    desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制\",\n    effect(card) {\n      card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n    }\n  },\n  \n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2\n清道夫 0 1\n贾维 0 1\n惊蛰 0 1`;\n\nconst draw_vanguard = `芬 1 2\n调香师 0 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 1\n崖心 0 1\n食铁兽 0 1\n酸糖 0 1\n阿消 0 1\n苏苏洛 0 1\n阿米娅-近卫 0 1\n赫默 0 1\n阿 0 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n皇帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n特米米 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n特米米 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n天火 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\nconst mini_sets = [\n  //风笛套\n  ' 风笛  白面鸮  温蒂  黑角 夜刀 ',\n  ' 风笛  雷蛇  能天使  黑角 夜刀 ',\n\n  //莱茵订单流\n  ' 赫默 远山 梅尔 史都华德 白面鸮 ',\n  ' 赫默 赫默 艾雅法拉 梅尔',\n\n  //企鹅物流 有德狗爆费核心 有空皇帝刷分核心 还有空德可颂的清场\n  ' 德克萨斯 德克萨斯 艾雅法拉 坚雷 阿消 ',\n  ' 空  空  温蒂  波登可 皇帝 德克萨斯 ',\n  ' 德克萨斯 可颂 可颂 空 ',\n\n  //能天使核心各种 能陨速清场 能炎熔刷材料\n  ' 能天使 陨星 蓝毒 炎熔 ',\n  ' 能天使 陨星 拉普兰德 炎熔 ',\n\n  //艾雅法拉核心各种\n  ' 艾雅法拉 杰西卡 刻俄柏 古米 ',\n  ' 艾雅法拉 柏喙 柏喙 杰西卡 ',\n\n  //安洁莉娜强力全套\n  ' 安洁莉娜 陈 陈 翎羽 ',\n  ' 安洁莉娜 翎羽 翎羽 极境 ',\n  ' 安洁莉娜 刻刀 刻刀 刻俄柏 ',\n  ' 安洁莉娜 推进之王 推进之王 森蚺 ',\n  ' 安洁莉娜 杜宾 天火 凯尔希 ',\n  // ' 安洁莉娜 铃兰 铃兰 阿 ',\n\n  //送盾流\n  ' 年 米格鲁 米格鲁 ',\n\n  //梅尔清场流\n  ' 梅尔 梅尔 赫默 ',\n\n  //雷蛇引擎流\n  ' 艾雅法拉  能天使  雷蛇  雷蛇 ',\n\n  //温蒂引擎流\n  ' 温蒂 白面鸮 白面鸮 食铁兽 ',\n\n  //崖心刷钢流\n  ' 初雪  史都华德  赫默  崖心 ',\n  ' 星极 白面鸮 崖心 ',\n\n  //经典断罪者套\n  ' 调香师  调香师  艾雅法拉  清流   断罪者 ',\n  //凯尔希召唤回手断罪者套\n  ' 安洁莉娜 凯尔希 凯尔希 安赛尔 清流 断罪者 ',\n\n  //调香师单核\n  ' 微风 微风 星极 调香师 ',\n  ' 棘刺 棘刺 星极 调香师 ',\n\n  //铃兰小家族\n  ' 铃兰 推进之王 推进之王 安洁莉娜 ',\n  ' 铃兰 推进之王 砾 阿 杰克 远山 ',\n\n  //波登可经典引擎战吼套\n  ' 波登可 白面鸮 温蒂 ',\n  //波登可全员增强\n  ' 波登可 凯尔希 杜宾 天火 ',\n\n  //阿米娅经典套\n  ' 阿米娅  雷蛇  艾雅法拉 ',\n  //苏苏洛经典套\n  ' 苏苏洛 赫默 远山 波登可 ',\n\n  //真理单核套路集合\n  ' 凛冬 真理 ',\n  ' 拉普兰德 陈 食铁兽 真理 ',\n  ' 伊桑 刻俄柏 芙兰卡 真理 ',\n\n  //经典强化\n  ' 古米 诗怀雅 ',\n\n  //超杀\n  ' 安比尔 特米米 特米米 赫拉格 ',\n  ' 安比尔 煌 煌 赫拉格 ',\n\n  //绝对解场\n  ' 酸糖 拉普兰德 刻刀 ',\n\n  //整活套路\n  ' 斯卡蒂 斯卡蒂 森蚺 ',\n  ' 凯尔希 凯尔希 亚叶 ',\n  ' 安赛尔 安赛尔 微风 ',\n  ' 亚叶 史都华德 ',\n  ' 伊桑  狮蝎  狮蝎 ',\n  ' 闪灵 蛇屠箱 ',\n  ' 热水壶 热水壶 热水壶 ',\n\n  //养巨怪套路\n  ' 波登可 斑点 森蚺 ',\n  \n  //刻刀单核小套路\n  ' 刻刀  刻刀  波登可 ',\n  //前期猛打小套路\n  ' 孑  孑  宴  翎羽 ',\n  //前期直接打爆 稳住直接持续\n  ' 孑 孑 孑 史都华德 惊蛰 ',\n  //拉狗单核小套路\n  ' 拉普兰德  能天使  刻俄柏 ',\n  //柏喙小套路\n  ' 柏喙  翎羽 ',\n  //银灰小配合\n  ' 银灰  赫默 初雪 ',\n  //清道夫小配合\n  ' 清道夫 砾 杰克 ',\n  //闪灵小配合\n  ' 闪灵 蛇屠箱 ',\n  //史尔特尔小配合\n  ' 史尔特尔 米格鲁 空 ',\n  //阿米娅近卫小配合\n  ' 阿米娅-近卫 卡达 ',\n\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n  // ' 阿 蛇屠箱 闪灵 ',\n  // ' 棘刺 棘刺 调香师 芬 ',\n  // ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n  // ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n  // ' 锡兰  锡兰  夜莺 ',\n  // ' 普罗旺斯  灰喉  巡林者 波登可 ',\n  // ' 安洁莉娜 陈 陈  波登可 ',\n  // ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n  // ' 梅尔 赫默 白面鸮 特米米  艾雅法拉 ',\n  // ' 能天使 蓝毒 陨星 酸糖 ',\n  // ' 霜叶  凯尔希  杜宾 ',\n  // ' 守林人  守林人  夜莺 ',\n  //  ' 末药  银灰  初雪 ',\n  //  ' 梓兰  梓兰  能天使 ',\n  //  ' 赫默  稀音  梅尔 梅尔 史都华德  特米米  塞雷娅 ',\n  //  ' 温蒂  白面鸮  桃金娘 ',\n  //  ' 白金  末药  煌 ',\n  //' 拉普兰德  白雪  白雪 ',\n  //  ' 酸糖 米格鲁 米格鲁 红 ',\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 6, rng)];\n  // deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  deck = [...deck, ...deck_from_mini_sets(16, rng)];\n\n  // Random cards\n  let amount_add = 36 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  // let generator = (rng.random() > 0.05)? generate_deck_s2 : generate_deck_s1;\n  let generator = generate_deck_s2;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 290},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS, smaller_icons } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>{smaller_icons[parseInt(action[2])]}强化</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\n\nfunction Tag(props) {\n  // let bg_color = \"#c5c5c5\";\n  let bg_color = \"#434343\";\n  if (props.selected) {\n    bg_color = \"#0098dc\";\n  }\n  if (props.locked) {\n    bg_color = \"#096dd9\";\n  }\n\n  return <div className=\"tag\" style={{backgroundColor: bg_color}} onClick={props.handleClick} >\n    <img className=\"tag-img\" src={props.src} >\n    </img>\n  </div>\n}\n\nexport const TagSelection = (props) => {\n  // let tbody = [];\n\n  // for (let i=0; i<props.tags.length; i+=3) {\n  //   let row = [];\n  //   let row_tags = props.tags.slice(i, i+3);\n  //   for (let tag of row_tags) {\n  //     let borderColor = \"black\";\n  //     if (tag.selected) {\n  //       borderColor = \"red\";\n  //     }\n  //     if (tag.locked) {\n  //       borderColor = \"#1E90FF\";\n  //     }\n  //     row.push(\n  //       <td \n  //         onClick={props.handleClick(props.tags.indexOf(tag))}\n  //       >\n  //         <div className=\"tag\">\n  //         <img \n  //           className=\"tag-img\" \n  //           src={tag.src}\n  //           style={{\n  //           borderColor: borderColor,\n  //         }} \n  //         ></img>\n  //         </div>\n  //       </td>\n  //     );\n  //   }\n  //   tbody.push(<tr>{row}</tr>);\n  // }\n\n  return (\n    <div className=\"tag-selection\" >\n      {/* <table>\n        <tbody>{tbody}</tbody>\n      </table> */}\n      {props.tags.map((tag, idx) => <Tag {...tag} handleClick={props.handleClick(idx)} />)}\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"#cf1322\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  let desc = [card.desc];\n\n  if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n    desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  }\n\n  return desc;\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"card-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(4);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"回合开始时，所有敌人获得+2生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.enemy_hp_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/c/c7/Global_costrecovery_1.png\",\n    desc: \"强化干员需要消耗1点费用\",\n    level: 2,\n    effect(G, ctx) {\n      // for (let card of G.deck) {\n      //   card.reinforce += 1;\n      // }\n      G.reinforce_need_cost = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n    desc: \"可同时部署的干员数-3\",\n    level: 2,\n    effect(G, ctx){\n      G.field_limit -= 3;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/c/c5/Global_skillrecovery_1.png\",\n    desc: \"所有干员采掘力-1\",\n    level: 2,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        card.mine -= 1;\n        card.mine = Math.max(0, card.mine);\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/e/ee/Char_atkatkspeed_1.png\",\n    desc: \"所有干员攻击力-2\",\n    level: 3,\n    effect(G, ctx) {\n      // G.goal += 28; // Because first turn gonna -4 too\n      // G.reduce_goal = true;\n      for (let card of G.deck) {\n        card.atk -= 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 10,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\nimport { TAGS } from './tags';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Card.css';\nimport './Roguelike.css';\nimport './Competition.css';\nimport { ICONS } from './icons';\nimport { CARDS, heijiao_in_dream } from './cards';\nimport { UPGRADES } from './upgrades';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到Roguelike模式“黑角的金针菇迷境”！\\n通关要求：完成9局对战；\\n每一局对战，都有要求的危机等级，在要求的危机等级下，完成该局对战，即可获得赏金，并进入下一局对战；\\n如果其中一次对局失败，则本次Roguelike旅程即失败，胜败乃兵家常事，大侠请重头再来；\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！\\n`);\n}\n\nfunction setup_roguelike_mode(S) {\n  console.log(\"Roguelike mode reset\");\n  S.roguelike_mode = true;\n\n  S.Deck = [];\n\n  S.gold = 60;\n\n  S.game_count = 1;\n  S.level_required = 0;\n\n  S.central_idx = 0;\n\n  S.dream_count = 0;\n\n  reset_card_picks(S);\n  reset_shop(S);\n}\n\nfunction end_roguelike_mode(S) {\n  S.roguelike_mode = false;\n  S.tags = TAGS.map(x => ({...x}));\n}\n\nfunction set_difficulty(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [12, 14, 16, 18, 22, 26, 30, 34, 45];\n\n  if (difficulty == \"hard\") {\n    S.levels = [15, 18, 21, 24, 30, 36, 42, 48, 60];\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction setup_deck_selection(S) {\n  S.deck_names = _.times(3, get_deck_name).map(x => x + \"·黑角\");\n  S.deck_list = S.deck_names.map(generate_deck_s2).map(str2deck); // TODO: change the generator\n}\n\nfunction get_pick() {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card)).filter(card => card != undefined);\n}\n\nfunction reset_card_picks(S) {\n  S.card_picks = _.times(3, get_pick);\n}\n\nfunction get_shop_item() {\n  let shop_item = {};\n  let rng = new PRNG(Math.random()); // It seems like set seed in PRNG setup does not work, it is so wired.\n\n  // Get upgrade\n  let upgrade = rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = 20;\n\n  return shop_item;\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(6, get_shop_item);\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.Deck, ...S.card_picks[idx]];\n  S.card_picks = undefined;\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n}\n\nfunction enter_dream(S) {\n  S.dream_count += 1;\n  if (S.dream_count == 9) {\n    alert(\"已进入黑角梦境\");\n    S.Deck = _.times(10, () => heijiao_in_dream);\n  }\n  S.gold = 5000;\n}\n\nexport function get_gold_gained(risk_level, level_required) {\n   let gold_gained = 30;\n\n    let level_diff = risk_level - level_required;\n    gold_gained += Math.min(level_diff * 10, 100);\n\n    // For slam, don't store them in variables, instead, calculate it on time\n    // So do plenty of other things\n    if (level_diff >= 4) {\n      gold_gained += 50;\n    }\n    if (level_diff >= 8) {\n      gold_gained += 50;\n    }\n\n    return gold_gained;\n\n}\n\nfunction continue_run(S) {\n  // Resets go here\n  S.central_idx = 1;\n  reset_shop(S);\n  reset_card_picks(S);\n\n  if (S.won) {\n    S.gold += get_gold_gained(S.level_achieved, S.level_required);\n  }\n\n  S.game_count += 1;\n  if ((S.level_achieved - S.level_required) >= 8) {\n    S.game_count += 1;\n  }\n  S.game_count = Math.min(S.game_count, 9);\n\n  S.level_required = S.levels[S.game_count - 1];\n}\n\nexport function RoguelikeDeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">选择你的卡组</div>\n    {props.decks.map(deck => <RoguelikeDeckRepr {...deck} />)}\n    <br/>\n    {/* <button className=\"deck-selection-button\" onClick={props.back}>返回</button> */}\n  </div>\n}\n\nfunction RoguelikeDeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper desc\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.refresh_picks}><span>刷新选牌({ICONS.gold}10)</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得{ICONS.gold}10</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\" align=\"center\">\n    <div className=\"shop-item-img-container\"><img src={props.src} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <span className=\"shop-item-price\">{ICONS.gold}{props.price}</span>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    <button className=\"buy\" onClick={props.buy}>购买</button>\n  </div>\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"shop-items\">    \n      {props.shop_items.map((item, idx) => <ShopItem {...item} buy={() => props.buy(idx)} />)}\n    </div>\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店(10{ICONS.gold})</button>\n  </div>\n\n}\n\nexport function Roguelike(props) {\n  return <div className=\"central\">\n    <div className=\"heijiao-container-2\"></div>\n    <div className=\"counter-container\" align=\"center\">\n      <div className=\"battle-count-title\" >第<span className=\"battle-count\">{props.game_count || 1}</span>/<span onClick={props.enter_dream}>9</span>战</div>\n    </div>\n    <div className=\"roguelike-operations\">\n      <button onClick={props.enter_battle} className=\"roguelike-operation primary\">进入对战</button>\n      <button onClick={props.check_deck} className=\"roguelike-operation\">查看卡组</button>\n      <button onClick={props.check_relics} className=\"roguelike-operation\">查看藏品</button>\n    </div>\n  </div>\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"finish-pick\">你已经完成了选择</div>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport function RoguelikeEntry(props) {\n  return <div className=\"board\">\n    <div className=\"entry\">欢迎来到集成战略模式“黑角的金针菇迷境”！<br/>请选择难度</div>\n    <div className=\"difficulty-selection\">\n      {props.difficulties.map(selection => <button className=\"difficulty-button\" onClick={selection.handleClick}>{selection.name}</button>)}\n    </div>\n    <button className=\"introduce-button\" onClick={introduce_roguelike_mode}>集成战略模式介绍</button>\n  </div>\n}\n\nexport function ShowMeTheMoney(props) {\n  return <div className=\"gold-gained\">\n    {ICONS.gold}+{props.amount}\n  </div>\n\n}\n\nexport function ResultWin(props) {\n  let slam = \"\";\n  if (props.slam) {\n    slam = \"满贯！\";\n  }\n  if (props.grand_slam) {\n    slam = \"大满贯！\";\n  }\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务完成<br/>\n      第{props.game_count}/9战<br/>\n      要求等级: {props.level_required}<br/>\n      实际等级: {props.level_achieved}<br/>\n    </div>\n    <ShowMeTheMoney \n      amount = {props.gold_amount}\n    />\n    <div className=\"slam\">{slam}</div>\n    <button className=\"continue-btn primary\" onClick={props.continue} >继续</button>\n  </div>\n\n}\n\nexport function ResultLose(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务失败<br/>\n      第{props.game_count}/9战<br/>\n    </div>\n    <div className=\"result-quote\">\n      胜败乃兵家常事<br/>\n      大侠请重新来过\n    </div>\n    <button className=\"endrun-btn\" onClick={props.continue}>结束游戏</button>\n  </div>\n}\n\nexport function FinalResult(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      <div className=\"ascension\">通关！</div>\n      完成难度: {props.difficulty}\n    </div>\n    {/* TODO: Add show deck and show relics */}\n  <button className=\"endrun-btn\" onClick={props.continue}>{props.endgame}</button>\n  </div>\n\n\n}\n\nexport const roguelike = {\n  setup_roguelike_mode,\n  set_difficulty,\n  setup_deck_selection,\n  pick_cards,\n  skip_pick,\n  enter_dream,\n  continue_run,\n  end_roguelike_mode,\n};","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘能力为2，博士因此获得了{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单能力:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得4分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级20  <br/>\n  * 点\"所有敌人获得+2生命值\"3级并完成危机等级20  <br/>\n  * 点\"2回合后，所有敌人获得冲锋\"并完成危机等级20 <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop, RoguelikeEntry, RoguelikeDeckSelection, Roguelike, ResultWin, ResultLose, FinalResult, get_gold_gained } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n    this.render_roguelike_final_result_board = this.render_roguelike_final_result_board.bind(this);\n    this.render_roguelike_entry_board = this.render_roguelike_entry_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n    this.end_roguelike_mode = this.end_roguelike_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(produce((S) => action(S, ...args))), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_roguelike_final_result_board,\n      // DEFAULT\n      last_board: this.render_title_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n\n      dream_count: 0,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    if (this.state.competition_mode) {\n      for (let tag of new_tags) {\n        if (tag.selected) {\n          tag.locked = true;\n        }\n      }\n    }\n\n    return new_tags;\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    // EH: Reconstruct this, this is too procedure\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      // TODO: get this in a seperate function\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          <span style={{\n            display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n          }}>\n            <i>\n            部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n            </i>\n            <br/>\n          </span>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      // if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n      //   this.play_card();\n      // }\n      // else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      // }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  //CHANGE\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"modes\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_entry\": this.render_roguelike_entry_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n      \"roguelike_final_result\": this.render_roguelike_final_result_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.competition_mode || this.state.roguelike_mode){\n      deck = this.state.Deck;\n      seed += this.state.roguelike_mode? this.state.game_count : this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    if (this.state.roguelike_mode) {\n      // Setup other roguelike stuffs here\n    }\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else if (this.state.roguelike_mode) {\n      // Let results stuffs go to winning \n      // Set finishing stuffs here\n\n      this.change_board(\"roguelike_result\");\n      // this.roguelike.end_battle();\n    }\n    else{\n      this.change_board(\"tag\");\n      this.setState({seed: get_seed_name()});\n    }\n  }\n\n  end_roguelike_mode() {\n    this.roguelike.end_roguelike_mode();\n    this.enter_roguelike_mode();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"updated\");\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      console.log(\"Get the result\");\n      this.setState({\n        scenario_finished: true,\n        won: result.win,\n        level_achieved: this.get_risk_level(),\n      });\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        // else if (risk_level >= 22 && risk_level < 30) {\n        //   grade = \"SSSS\";\n        // }\n        // else if (risk_level >= 30 && risk_level < 50) {\n        //   grade = \"SSSSS\";\n        // }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // console.log(\"Time to alert finish\");\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n\n\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n        \n      \n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      // \"竞技模式\": this.enter_competition_mode,\n      // \"黑角的金针菇迷境\": this.enter_roguelike_mode,\n      // \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.setState({Deck: this.state.deck_list[idx]});this.change_board(\"roguelike\");},\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: this.choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_entry\");\n  }\n\n  enter_difficulty(difficulty) {\n    this.roguelike.set_difficulty(difficulty);\n    this.change_board(\"roguelike_deck_selection\");\n  }\n\n  render_roguelike_entry_board() {\n    let difficulties = [\n      {\n        name: \"欢乐云游\",\n        handleClick: () => this.enter_difficulty(\"easy\"),\n      },\n      {\n        name: \"整装待发\",\n        handleClick: () => this.enter_difficulty(\"medium\"),\n      },\n      {\n        name: \"苦难之路\",\n        handleClick: () => this.enter_difficulty(\"hard\"),\n      },\n    ];\n    return <RoguelikeEntry \n      difficulties = {difficulties}\n    />;\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <RoguelikeDeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} />\n// introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} \n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} />\n\n    const roguelike_main = <Roguelike \n      enter_battle = {() => this.change_board(\"tag\")}\n      enter_dream = {this.roguelike.enter_dream}\n      game_count = {this.state.game_count}\n    />;\n\n    const centrals = [roguelike_main, card_picks, shop];\n\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"选牌区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_result_board() {\n    let level_diff = this.state.level_achieved - this.state.level_required;\n    let win = <ResultWin \n      game_count = {this.state.game_count}\n      level_required = {this.state.level_required}\n      level_achieved = {this.state.level_achieved}\n      gold_amount = {get_gold_gained(this.state.level_achieved, this.state.level_required)}\n      slam = {level_diff >= 4}\n      grand_slam = {level_diff >= 8}\n      continue = {() => {\n        let game_count = this.state.game_count;\n        this.roguelike.continue_run();\n        if (game_count < 9) {\n          this.change_board(\"roguelike\");\n        }\n        else {\n          this.change_board(\"roguelike_final_result\");\n        }\n      }}\n    />\n    let lose = <ResultLose\n      game_count = {this.state.game_count}\n      continue = {this.end_roguelike_mode}\n    />\n    return this.state.won? win : lose;\n  }\n  \n  render_roguelike_final_result_board() {\n    let difficulty = {\n      easy: \"欢乐云游\",\n      medium: \"整装待发\",\n      hard: \"苦难之路\",\n    }[this.state.difficulty];\n    return <FinalResult \n      difficulty = \"整装待发\"\n      endgame = \"结束游戏\"\n      continue = {this.end_roguelike_mode}\n    />;\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          {this.props.ctx.gameover? <span>{ICONS.endgame}结束游戏</span>:<span>{ICONS.endturn}结束回合</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n\n            display: (this.state.competition_mode || this.state.roguelike_mode)?\"none\":\"\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      快速设置: () => this.setState({\n        tags: this.choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      Roguelike模式: () => this.enter_roguelike_mode(),\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n    if (this.state.roguelike_mode) {\n      actions = {};\n\n      if (risk_level >= this.state.level_required) {\n        actions.进入游戏 = () => this.enter_game();\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"#cf1322\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16 && (!this.state.roguelike_mode))? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 3% 2%\",\n            display:(this.state.roguelike_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          要求危机等级: {this.state.level_required}\n        </div>\n\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}