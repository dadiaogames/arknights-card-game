{"version":3,"sources":["utils.js","DeckGenerator.js","icons.js","orders.js","cards.js","Game.js","enemies.js","upgrades.js","alters.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","assets.js","relics.js","Roguelike.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["map_object","fn","obj","new_obj","k","PRNG","seed","this","val","i","length","charCodeAt","x","Math","sin","result","floor","random","arr","len","randRange","deck","clone","slice","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","classes","producers","solvers","miners","standers","defenders","supporters","scorers","randomizers","cost_vanguard","scorer","strategies","mini_sets","map","mini_set","filter","card","get_random_card","rng","banned_cards","card_pool","CARDS","includes","name","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","Object","keys","sort","c","join","deck_from_strategy","strategy","amount","push","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","select_one_card","generate_deck_s2","deck_dict","sets","deck_from_mini_sets","reduce","acc","_","times","generate_roguelike_deck","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","style","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","food_icons","color","smaller_icons","order_illust","material_icons","ready_order","G","ctx","from_card","Shuffle","finished","exhausted","ready_other_orders","advanced_orders","requirements","score","reward","advanced","desc","effect","field_selected","field","logMsg","atk","hp","costs","colors","min","ORDERS","payCost","materials","cost","harvest","init_card","dmg","power","onPlayBonus","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","achieve","queen","find","assign","onPlay","deal_random_damage","white","draw","onTurnBegin","onFight","eliminate_field","exhaust_random_enemy","num_exhausted","efield","enemy","new_card","idx","indexOf","splice","init_card_state","hand","gainMaterials","drop","ready_random_card","summon","cure","y","cured","fully_restore","onPlayCard","colored_orders","was_enemy","extra_cards","generator","payMaterials","generate","unshift","fighters","actors","battlecries","onPayCost","score_gained","onCardFight","onEnemyOut","cards","extracted_attrs","skill_power","reinforce_skill","j","onCardMine","undefined","use_count","danger","reinforce_hand","num_reinforced","reinforce_field","discard","num_cards","has_discarded","played","onOut","gravel","excess","max","player","add_vulnerable","damaged_enemy","onRest","silent","cost_remained","meteorite","fever","mcard","enemy2card","enemy_idx","e","is_boss","texas","wind","reinforce_card","BORROWS","generate_combined_card","blank_enemy","heijiao_in_dream","material","Die","values","default_filter","type_filter","type_","FILTERS","f","ENEMIES","self_copy","is_elite","high","deal_damage","unyielding","enraged","drawEnemy","goal","BOSSES","UPGRADES","is_init","ALTER_ARTS","安洁莉娜","阿米娅","森蚺","陨星","安赛尔","史尔特尔","凛冬","孑","玫兰莎","陈","安比尔","波登可","move","d1","d2","gained","use","stage","onUseCard","get_blocker","blocked_enemies","out","total_dmg","vulnerable","exhausted_enter","pop","onDropCard","refreshOrder","orders","odeck","price_y","price_x","price_up","edeck","enemy_exhausted_enter","switcher","switchEnemy","addBoss","boss_name","boss","replace","reversed","time_points","effects","EFFECTS","title","reverse","alist","unexhausted","exhausted_cards","prepared_cards","ready_times","clearField","str2deck","card_dict","item","arr2obj","alter_art","console","log","card_data","target_card","altered","old_illust","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardAct","onCardReinforced","onUseOrder","setup_scenario","ediscard","picks","max_danger","num_enemies_out","field_limit","relics","extra_gain","playing","round_num","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","get_desc","fontSize","display","quote","AC","setup","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","bonus","play_card","act","reinforce_need_cost","rest","rest_cards","num_rest_cards","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","setupRoguelikeBattle","onBattleBegin","turn","onBegin","concat","refresh","refresh_picks","setup_turn_states","enemy_grow","enemy_hp_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","limit_hand","reduce_goal","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","TypeFilter","TypeFilterContainer","filters","filter_","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","EnterGame","divAlign","Panel","content","ScoreBoard","useState","MaterialDisplay","Tag","bg_color","locked","backgroundColor","TagSelection","tag","TagList","marginLeft","marginTop","selected_tags","just_selected","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","process_selected_desc","margin","Competition","results","finalResult","TAGS","tag_list","t","level","process_tags","unstackable","extra_challenge","standard_level","stackable","challenge","rhodes_training_mode","result_images","relic_images","relic_names","RELICS","played_card","onPickCards","S","onBattleEnd","level_achieved","level_required","random_upgrade","relic","onBuyRelic","used","gas","onBought","get_relic_img","introduce_roguelike_mode","reset_tags","move_on","game_count","remained_tags","setup_daily_tags","date","locked_tags","other_tags","setup_normal_challenge","final_tag","basic_tags","another_challenge_tag","advanced_tags","setup_exhausted_challenge","preprocess_roguelike_card","get_pick","selection","get_roguelike_pick","reset_card_picks","card_picks","get_shop_item","item_type","shop_item","bought","get_relic","indexes","get_upgrade","delete_card","payGold","reset_shop","shop_items","get_gold_gained","gold_gained","level_diff","RoguelikeDeckSelection","RoguelikeDeckRepr","Pick","check_cards","pick_cards","GoldAmount","PickCards","skip_picks","ShopItem","buy","Shop","refresh_shop","Roguelike","enter_dream","enter_battle","check_deck","check_relics","FinishPick","RoguelikeTabs","onSelect","RoguelikeEntry","difficulties","ShowMeTheMoney","ResultWin","slam","grand_slam","gold_amount","continue","ResultLose","FinalResult","p_id","difficulty","roguelike","setup_roguelike_mode","roguelike_mode","Date","init_tags","central_idx","dream_count","set_difficulty","levels","skip_pick","onSkipPick","current_item","item_idx","current_item_idx","continue_run","won","end_roguelike_mode","enter_daily_mode","daily_mode","end_daily_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_relic_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_relic_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_shop_board","render_roguelike_result_board","render_roguelike_final_result_board","render_roguelike_entry_board","enter_competition_mode","upgrade_card","start_competition","enter_roguelike_mode","buy_item","change_board","reset_preview_deck","choose_tag","choose_standard_tags","get_risk_level","enter_game","args","setState","produce","state","hand_selected","efield_selected","order_selected","finished_selected","selection_selected","upgrade_selected","pick_selected","shop_selected","hand_choices","preview_filter","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","show_finished","checking","scenario_finished","branches","log_select","new_tags","current_standard_level","competition_mode","cardrow","illust_variants","icon","order_data","rhine","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","order_id","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","failed","overflow","enter_difficulty","shop","centrals","selected_card","overflowY","lose","easy","medium","hard","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","快速设置","每日挑战","肉鸽模式","返回标题","返回","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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AW/G,EAAGC,MACvCD,EAAEgL,MAAQ/K,EAAInI,OAAOqI,QAAQH,EAAE9H,KAAKwB,KAAI,SAAAjC,GAAC,kCAAOA,GAAP,IAAUoK,MAAM,QACzD7B,EAAE9H,KAAOA,EACT8H,EAAEsc,sBAAuB,EAJZ,oBAMItc,EAAEgL,OANN,IAMb,2BAA0B,CAAC,IAAlBnR,EAAiB,QACA,iBAAbA,EAAK+G,OACd/G,EAAK+G,KAAO/G,EAAK+G,KAAK2K,QAAQ,eAAM,gBACpC1R,EAAK+G,KAAO/G,EAAK+G,KAAK2K,QAAQ,eAAM,kBAT3B,iCAejB,CACEnO,IAAK,iDACLwD,KAAM,yDACNmb,MAAO,GACPE,aAAa,EACbpb,OALF,SAKSb,EAAGC,GACRD,EAAEuK,iBAAkB,MClTbgS,I,MAAgB,CAC3B,CAAC,4CAA6C,YAQnCC,GAAe,CAC1B,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,oEAGYC,GAAc,CAAC,iCAC5B,uCACA,iCACA,2BACA,uCACA,uCACA,2BACA,iCACA,uCACA,2BACA,2BACA,6CACA,2BACA,2BACA,2BACA,uCACA,iCACA,2BACA,iCACA,uCACA,iCACA,2BACA,2BACA,eACA,iCACA,uCACA,uCACA,uCACA,2BACA,uCACA,uCACA,iCACA,iCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,iCACA,iCACA,2BACA,uCACA,iCACA,iCACA,qCACA,6CACA,iCACA,kCACA,2BACA,uCACA,uCACA,uCACA,2BACA,iCACA,eACA,2BACA,iCACA,iCACA,2BACA,2BACA,uCACA,iCACA,6CACA,2BACA,6CACA,6CACA,uCACA,uCACA,uCACA,2BACA,2BACA,6CACA,6CACA,2BACA,uCACA,uCACA,2BACA,uCACA,iCACA,uCACA,2BACA,iCACA,2BACA,2BACA,6CACA,uCACA,6CACA,2BACA,mCACA,6CACA,iCACA,uCACA,uCACA,2BACA,2BACA,iCACA,uCACA,2BACA,iCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,wCACA,4BACA,4BACA,4BACA,kCACA,4BACA,4BACA,wCACA,4BACA,4BACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,wCACA,wCACA,wCACA,w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","file":"static/js/main.468d5ca0.chunk.js","sourcesContent":["export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed || 0;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 金色普通 龙门粗口 蕾丝花边超短裙 泳装 充电宝 抛光 JK 洁哥不要 蕾丝花边超短裙 老婆 泳装\".split(\" \");\n\nconst SEEDS = \"龙门厕所 250区废墟 完整小道 旧街 中转坐 霜烤废墟 废铁峡谷 军械库北 风蚀矮天 荒废受厂 龙门厕所 荒废受厂 风蚀矮天\".split(\" \");\n\nexport const classes = {\n  producers: \"极境 讯使 香草 桃金娘 红豆 清道夫 德克萨斯 凛冬 贾维 惊蛰 推进之王 芬 调香师 断崖 清流\".split(\" \"),\n  solvers: \"克洛丝 巡林者 杰西卡 蓝毒 陨星 普罗旺斯 流星 空爆 能天使 W 陈 棘刺 史尔特尔 拉普兰德 刻刀 刻俄柏 四月\".split(\" \"),\n  miners: \"史都华德 12F 炎熔 夜烟 远山 天火 杜林 星极 艾雅法拉\".split(\" \"),\n  standers: \"玫兰莎 芙兰卡 慕斯 柏喙 赫拉格 孑 宴 银灰 卡达 阿米娅-近卫 机械水獭 末药 杜宾 森蚺 夜刀\".split(\" \"),\n  defenders: \"米格鲁 蛇屠箱 斑点 年 可颂 古米 雷蛇 泥岩 砾 摄影车 龙腾 星熊\".split(\" \"),\n  supporters: \"梓兰 红 诗怀雅 安洁莉娜 霜叶 巫恋 翎羽 白面鸮 空 波登可 真理 安比尔 温蒂 黑角\".split(\" \"),\n  scorers: \"阿米娅 阿消 崖心 食铁兽 铃兰 酸糖 闪灵 煌 阿 断罪者 赫默 伊芙利特 苏苏洛 皇帝\".split(\" \"),\n  randomizers: \"斯卡蒂 凯尔希 热水壶 嘉维尔 迷迭香 风笛 安赛尔 微风 亚叶 伊桑 狮蝎 坚雷 暗索 可露希尔\".split(\" \"),\n};\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 杜林 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2\n贾维 1 1\n惊蛰 1 1`;\n\nconst draw_vanguard = `芬 1 2\n调香师 0 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 1\n崖心 0 1\n食铁兽 0 1\n酸糖 0 1\n阿消 0 1\n阿米娅-近卫 0 1\n赫默 0 1\n阿 0 1`;\n\nconst miner =  `史都华德 1 1\n夜烟 0 1\n远山 1 1\n炎熔 1 1`;\n\nconst shooter = `棘刺 1 1\n机械水獭 0 1\n陈 1 1\n银灰 1 1\n拉普兰德 0 1\n史尔特尔 1 1`;\n\nconst defender = `米格鲁 1 1\n蛇屠箱 0 1\n年 0 1\n摄影车 1 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 杜林 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n皇帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n天火 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n天火 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n杜林 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\nconst mini_sets = [\n  //风笛套\n  ' 风笛 伊桑 白面鸮  温蒂  黑角 夜刀 ',\n  ' 风笛 伊桑 雷蛇  能天使|艾雅法拉  黑角 夜刀 ',\n\n  //莱茵订单流\n  ' 赫默 赫默|白面鸮 赫默|白面鸮 12F|远山|炎熔|天火|杜林 艾雅法拉 ',\n\n  //企鹅物流 有德狗爆费核心 有空皇帝刷分核心 还有空德可颂的清场\n  ' 德克萨斯 德克萨斯 艾雅法拉 坚雷|泥岩 阿消 ',\n  ' 空 空 温蒂 波登可 皇帝 ',\n  ' 德克萨斯 可颂 可颂 ',\n\n  //能天使核心各种 能陨速清场 能炎熔刷材料\n  ' 能天使 陨星 蓝毒 炎熔 ',\n  ' 能天使 陨星 拉普兰德 炎熔 ',\n\n  //空爆\n  ' 空爆 摄影车 砾 流星 ',\n\n  //艾雅法拉核心各种\n  ' 艾雅法拉 杰西卡 柏喙 柏喙 ',\n  ' 艾雅法拉 巫恋 巫恋 刻俄柏 刻俄柏 ', // 易伤流\n\n  //安洁莉娜强力全套\n  ' 安洁莉娜 陈|翎羽 陈|翎羽 刻刀|极境 ',\n  ' 安洁莉娜 推进之王 推进之王 森蚺 ',\n\n  //送盾流\n  ' 年 米格鲁 米格鲁 ',\n\n  //梅尔清场流\n  ' 机械水獭 机械水獭 惊蛰 史都华德|远山|杜林 ',\n\n  //雷蛇引擎流\n  ' 艾雅法拉  能天使  雷蛇  雷蛇 ',\n\n  //温蒂引擎流\n  ' 温蒂 白面鸮 白面鸮 食铁兽 ',\n\n  //崖心刷钢流\n  ' 星极  史都华德|远山  赫默|白面鸮  崖心 ',\n\n  //经典断罪者套\n  ' 调香师  调香师 艾雅法拉 棘刺 微风|棘刺 清流 断罪者 ',\n\n  //召唤回手套\n  ' 凯尔希 安赛尔 安赛尔 清流 ',\n\n  //调香师单核\n  ' 微风 微风 星极|棘刺|微风 星极|棘刺|微风 调香师 断崖 月见夜 ',\n  ' 棘刺 棘刺 星极|棘刺|微风 星极|棘刺|微风 调香师 断崖 月见夜 ',\n\n  //铃兰小家族\n  ' 铃兰 阿 空爆|清道夫 摄影车 摄影车 推进之王 ',\n\n  //波登可经典引擎战吼套\n  ' 波登可 白面鸮 温蒂 ',\n  //波登可全员增强\n  ' 波登可 凯尔希 杜宾 杜宾 ',\n\n  //阿米娅经典套\n  ' 阿米娅  雷蛇  艾雅法拉 ',\n  //苏苏洛经典套\n  ' 苏苏洛 杜林 卡达 波登可 ',\n\n  //阿消与消费狙\n  ' 阿消 夜烟 史尔特尔 普罗旺斯 ',\n\n  //真理单核套路集合\n  ' 凛冬 凛冬 真理 ',\n  ' 拉普兰德 陈 食铁兽 真理 ',\n  ' 伊桑 刻俄柏 芙兰卡 真理 ',\n\n  //经典强化\n  ' 古米 诗怀雅 ',\n\n  //超杀\n  ' 安比尔 天火|煌|迷迭香 天火|煌|迷迭香 赫拉格 ',\n\n  //绝对解场\n  ' 酸糖 拉普兰德 刻刀 ',\n\n  //整活套路\n  ' 斯卡蒂 斯卡蒂 森蚺 ',\n  ' 凯尔希 亚叶 ',\n  ' 安赛尔 安赛尔 微风 ',\n  ' 伊桑  狮蝎  狮蝎 ',\n  ' 热水壶 热水壶 热水壶 ',\n\n  //养巨怪套路\n  ' 波登可 泥岩 森蚺 ',\n  \n  //刻刀单核小套路\n  ' 刻刀 刻刀 刻俄柏 波登可 ',\n  //前期猛打小套路\n  ' 孑 宴 孑|宴  翎羽 ',\n  //前期直接打爆 稳住直接持续\n  ' 孑 孑 孑 史都华德 惊蛰 ',\n  //拉狗单核小套路\n  ' 拉普兰德  能天使  刻俄柏 ',\n  //柏喙小套路\n  ' 柏喙  翎羽 ',\n  //银灰小配合\n  ' 银灰 赫默 星极 ',\n  //清道夫小配合\n  ' 清道夫 空爆 砾 摄影车 流星 ',\n  //闪灵小配合\n  ' 闪灵 蛇屠箱 ',\n  //史尔特尔小配合\n  ' 史尔特尔 米格鲁 空 ',\n  //阿米娅近卫小配合\n  ' 阿米娅-近卫 卡达 ',\n\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n  // ' 阿 蛇屠箱 闪灵 ',\n  // ' 棘刺 棘刺 调香师 芬 ',\n  // ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n  // ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n  // ' 锡兰  锡兰  夜莺 ',\n  // ' 普罗旺斯  灰喉  巡林者 波登可 ',\n  // ' 安洁莉娜 陈 陈  波登可 ',\n  // ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n  // ' 梅尔 赫默 白面鸮 天火  艾雅法拉 ',\n  // ' 能天使 蓝毒 陨星 酸糖 ',\n  // ' 霜叶  凯尔希  杜宾 ',\n  // ' 守林人  守林人  夜莺 ',\n  //  ' 末药  银灰  初雪 ',\n  //  ' 梓兰  梓兰  能天使 ',\n  //  ' 赫默  稀音  梅尔 梅尔 史都华德  天火  塞雷娅 ',\n  //  ' 温蒂  白面鸮  桃金娘 ',\n  //  ' 白金  末药  煌 ',\n  //' 拉普兰德  白雪  白雪 ',\n  //  ' 酸糖 米格鲁 米格鲁 红 ',\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n\n  selection = selection.map(select_one_card(rng));\n\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport const select_one_card = rng => x => x.includes(\"|\")? rng.choice(x.split(\"|\")):x;\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 8, rng)];\n  // deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  deck = [...deck, ...deck_from_mini_sets(16, rng)];\n\n  // Let diff goes\n  // console.log(\"deck before\", deck);\n  deck = deck.map(select_one_card(rng));\n  // console.log(\"deck after\", deck);\n\n  // No more than 3\n  let deck_dict = deck.reduce((acc, val) => ({...acc, [val]: (acc[val]+1)||1}), {})\n  for (let card in deck_dict) {\n    if (deck_dict[card] > 3) {\n      deck_dict[card] = 3;\n    }\n  }\n  deck = Object.keys(deck_dict).reduce((acc, val) => [...acc, ..._.times(deck_dict[val], ()=>val)], [])\n\n  // Random cards\n  let amount_add = 36 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_roguelike_deck(deck_name) {\n  let deck = [\"黑角\", \"极境\"];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 2, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(defender, 1, rng)];\n\n  // Random cards\n  let amount_add = 12 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  // let generator = (rng.random() > 0.05)? generate_deck_s2 : generate_deck_s1;\n  let generator = generate_deck_s2;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 20) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"http://prts.wiki/images/b/b1/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E5%90%88%E7%BA%A6%E8%B5%8F%E9%87%91.png\" style={{height: \"1.1em\"}} className=\"steel\" />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 9l-6 6 6 6\"/><path d=\"M20 4v7a4 4 0 0 1-4 4H5\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];\n\nconst smaller_height = '1.1em';\nexport const smaller_icons = [\n  (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" style={{height:smaller_height}} className=\"material steel\" />),\n]","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[0];\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得+2/+1`);\n  }\n  card.atk += 2;\n  card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nfunction set_collection_order(G, ctx) {\n  let colors = G.finished.reduce((acc,val)=>{\n    if(val.color >= 0) acc[val.color]+=1;\n    return acc;\n  }, [0,0,0]);\n  // console.log(colors);\n  let times = _.min(colors);\n  G.score += 2 * times;\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+2/+1</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    desc: (<span>获得: 1费</span>),\n    advanced: true,\n    effect(G, ctx) {\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [1,1,1,0],\n    score: 1, \n    // reward: 2,\n    advanced: true,\n    desc: (<span>2分/每组{food_icons.slice(0,3)}订单</span>),\n    effect: set_collection_order,\n  },\n  \n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   desc: (<span>重置1订单</span>),\n  //   advanced: true,\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n    \n];\n  \nexport const ORDERS = [\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 4,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 4,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 4,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>{material_icons[2]} → 2费</span>),\n  //   cost: [0,0,1,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 2费</span>),\n  //   cost: [1,0,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 2费</span>),\n  //   cost: [0,1,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n\n  // // {\n  //   requirements: [3,0,0,0],\n  //   score: 2, \n  //   reward: 2,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2, \n  //   reward: 0,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // }, \n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  \n  \n\n  ...advanced_orders,\n  // ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, reduce_enemy_atk, silent, summon, eliminate_field, reinforce_field, choice, add_vulnerable, play_card\n} from './Game';\nimport { classes } from './DeckGenerator';\nimport { material_icons, ready_order } from './orders';\n\nexport function init_card(card) {\n  return {\n    name: \"card\",\n    block: 0,\n    dmg: 0,\n    power: 0,\n    // material: rng.randRange(3),\n\n    onPlayBonus: [],\n\n    ...card,\n  };\n}\n\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    action(G, ctx, self) {\n      if (self.power == 1) {\n        let queen = G.CARDS.find(x => x.name == \"阿米娅-近卫\");\n        Object.assign(self, queen);\n        self.onPlay(G, ctx, self);\n      }\n      else {\n        logMsg(G, ctx, \"只需要强化1次即可\");\n      }\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:6, \n    hp:6, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 6;\n    },\n    reinforce_desc: \"+6/+6\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 9,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let white = G.CARDS.find(x => x.name == \"白面鸮\");\n      Object.assign(self, white);\n      self.exhausted = false;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:18,\n    hp:18,\n    mine:9,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:3, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 摧毁场上1个(重置的)干员，并获得4点费用\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx, self) {\n      if (eliminate_field(G, ctx)) {\n        G.costs += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 8) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少8点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"杜林\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+1>\", \n    illust:\"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 1;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      self.atk += 3 + 2 * self.power;\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc: <span>采掘: 弃2张牌，获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.materials[3] += 2;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不够\");\n        // self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:3, \n    desc:\"行动: 获得+6生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n{\n    name:\"斑点\", \n    cost:4, \n    atk:2, \n    hp:12, \n    mine:2, \n    block:2, \n    desc:\"行动: 完全治疗自己\", \n    illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n    action(G, ctx, self) {\n      // let self_idx = G.field.indexOf(self);\n      // G.field.map((card, idx) => {\n      //   if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n      //     card.hp += 4;\n      //   }\n      // });\n      self.dmg = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+0/+6\",\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    }\n  },\n\n  {\n    name:\"星熊\", \n    cost:4, \n    atk:4, \n    hp:10, \n    mine:2, \n    block:2, \n    desc:\"行动: 消耗1点费用，获得+2/+2和阻挡数+1，然后重置自己\", \n    illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 1, true)) {\n        self.atk += 2;\n        self.hp += 2;\n        self.block += 1;\n      }\n      self.exhausted = false;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n\n\n  {\n    name:\"年\", \n    cost:4, \n    atk:3, \n    hp:9, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n    \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  // {\n  //   name:\"芙蓉\", \n  //   cost:1, \n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 完全治疗1个干员\", \n  //   illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     fully_restore(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        // G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n        summon(G, ctx, new_card, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个(重置的)干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      let card = choice(ctx, G.field.filter(x => x!=self).filter(x => !x.exhausted));\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n  },\n  \n  // {\n  //   name:\"Lancet-2\", \n  //   cost:3,\n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 本回合下一次部署干员时，会额外部署1次\", \n  //   was_enemy: true,\n  //   illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let play_again = () => {\n  //       let played = false;\n  //       return (G, ctx, card_played, card) => {\n  //         if (!played) {\n  //           play_card(G, ctx, card);\n  //           played = true;\n  //         }\n  //       }};\n  //     G.onPlayCard.push(\n  //       play_again(),\n  //     );\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let cured = fully_restore(G, ctx);\n      if (cured >= 4) {\n        G.score += 2 + 2 * self.power;\n      }\n    },\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"皇帝\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得1分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += num_exhausted;\n      if (num_exhausted >= 8) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少8个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + self.power, true)) {\n        let delta = 6 + 2 * self.power;\n        G.score += delta;\n\n        if (delta >= 16) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少16分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+1，得分+2\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    action(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce: 3,\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc: \"行动: 摧毁3个颜色相同的(重置的)订单，获得12分\",\n    illust:\"http://prts.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    action(G, ctx, self) {\n      for (let i=0; i<3; i++) {\n        let colored_orders = G.finished.filter(x => (!x.exhausted) && (x.color == i));\n        if (colored_orders.length >= 3) {\n          G.finished = G.finished.filter(x => !colored_orders.includes(x));\n          G.score += 12;\n          logMsg(G, ctx, \"获得12分\");\n          return;\n        }\n      }\n      self.exhausted = false;\n      logMsg(G, ctx, \"没有3个同色的订单\");\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2分\",\n    onReinforce(G, ctx, self){\n      G.score += 2;\n    },\n\n\n  },\n\n  {\n    name:\"天火\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"超杀: 每造成2点额外伤害，就获得1个材料\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let times = Math.floor(delta / 2);\n        // for (let i=0; i<times; i++) {\n        //   let order = choice(ctx, G.finished.filter(x => !x.exhausted));\n        //   if (order) {\n        //     order.effect(G, ctx);\n        //     logMsg(G, ctx, [\"触发订单 \", order.desc]);\n        //   }\n        // }\n        gainMaterials(G, ctx, times);\n      }\n    },\n    // action(G, ctx) {\n    //   G.onUseOrder.push(\n    //     (G, ctx) => {\n    //       deal_random_damage(G, ctx, 3);\n    //     }\n    //   );\n    // },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3/+0\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  // {\n  //   name:\"梅尔\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n  //   reinforce: 1,\n\n  //   onPlay(G, ctx) {\n  //     let order = {};\n  //     let material = ctx.random.Die(3) - 1;\n  //     let requirements = [0,0,0,0];\n  //     requirements[material] = 1;\n  //     order.desc = <span>{material_icons[material]}→5伤害</span>;\n  //     order.effect = (G,ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         deal_random_damage(G, ctx, 5);\n  //       }\n  //     };\n  //     order.is_rhine = true;\n  //     G.finished.unshift(order);\n  //   },\n    \n  //   onReinforce(G, ctx) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"摄影车\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个召唤物\\\"稀音\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/d/d5/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E7%A7%BB%E5%8A%A8%E6%91%84%E5%BD%B1%E5%99%A8.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, card, ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"稀音\\\"\",\n  },\n  \n  {\n    name:\"机械水獭\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个召唤物\\\"梅尔\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E6%9C%BA%E6%A2%B0%E6%B0%B4%E7%8D%AD.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), card.generator(ctx), ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"梅尔\\\"\",\n  },\n  \n  {\n    name:\"龙腾\",\n    was_enemy: true,\n    cost:2,\n    atk:2,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤3个\"麦哲伦\"</span>,\n    illust:\"http://prts.wiki/images/c/c9/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E9%BE%99%E8%85%BE.F.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let generator = extra_cards.find(x => x.name == \"麦哲伦\");\n        for (let i=0; i<3; i++) {\n          let card = generator.generate(ctx);\n          summon(G, ctx, {...card}, self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  \n  // {\n  //   name:\"斑点\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:6,\n  //   mine:2,\n  //   block:3,\n  //   desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n  //   illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let num_finished = G.finished.length;\n  //     self.atk += num_finished;\n  //     self.hp += 2 * num_finished;\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"阻挡数+1\",\n  // },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:1, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:4, \n    hp:6, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每使用干员消耗1点费用，就造成3点伤害\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    action(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      // if (card) {\n      //   card.exhausted = true;\n      //   let delta = Math.floor(card.atk / 2);\n      //   G.score += delta;\n      //   logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n      // }\n      let power = self.power;\n      G.onPayCost.push(\n        (G, ctx, amount) => {\n          for (let i=0; i<amount; i++) {\n            deal_random_damage(G, ctx, 3 + power);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    reinforce_desc: \"伤害+1\",\n\n  },\n  \n  // {\n  //   name:\"灰喉\", \n  //   cost:4,\n  //   atk:2, \n  //   hp:1, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 获得+15攻击力直到回合结束\", \n  //   illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let delta = 15;\n  //     self.atk += delta;\n  //     self.played = true;\n  //     self.onTurnBegin = (G, ctx, self) => {\n  //       if (self.played) {\n  //         self.atk -= delta;\n  //         self.played = false;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n\n  // },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 12) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name:\"断崖\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成1点额外伤害，就摸1张牌\",\n    illust:\"http://prts.wiki/images/1/1b/%E7%AB%8B%E7%BB%98_%E6%96%AD%E5%B4%96_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        for (let i=0; i<delta; i++) {\n          draw(G, ctx);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"迷迭香\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:\"超杀: 召唤2个随机干员的2/2复制\",\n    illust:\"https://s3.ax1x.com/2020/11/26/Ddxxbt.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        for (let i=0; i<2; i++) {\n          let card = ctx.random.Shuffle(G.CARDS)[0];\n          card = {...card};\n          card.atk = 2;\n          card.hp = 2;\n          card.mine = 1;\n          card.cost = 2;\n          summon(G, ctx, card, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"安比尔\",\n    cost:2,\n    atk:4,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，干员的\\\"超杀:\\\"效果将额外触发1次\",\n    illust:\"http://prts.wiki/images/3/3e/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%AF%94%E5%B0%94_1.png\",\n    action(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, self, enemy) => {\n          if (enemy.dmg > enemy.hp && ((typeof self.desc) == \"string\") && self.desc.includes(\"超杀\")) {\n            self.onFight && self.onFight(G, ctx, self, enemy);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n  // {\n  //   name:\"黑\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"超杀: 对其对位敌人造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let idx = G.field.indexOf(self);\n  //       if (~idx) {\n  //         let enemy = G.efield[idx];\n  //         if (enemy) {\n  //           enemy.dmg += 5 + 4 * self.power;\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"伤害+4\",\n  // },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E9%85%B8%E7%B3%96_1.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:3, \n    hp:3, \n    mine:2, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 变成1个随机干员\", \n    illust:\"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\",\n    onPlay(G, ctx, self) {\n      // self.hp += 2;\n      // G.costs += 1;\n      // G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n      let card = choice(ctx, G.CARDS);\n      Object.assign(self, {...card, atk:self.atk, hp:self.hp, mine:self.mine, block:self.block, was_enemy:false})\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3+3*self.power); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的部署效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的采掘效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的战斗效果`, '\"', card.desc, '\"']);\n      }\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的行动效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);\n      }\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        // G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  // {\n  //   name:\"暴行\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:4,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n  //   illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n  //   onPlay(G, ctx) {\n  //     let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n  //     G.hand = cards.map(x => ({...x}));\n  //   },\n  //   onMine(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  // },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n  \n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://s3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    desc: `行动: 造成3点伤害，重复4次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成3点伤害，重复${4+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/3)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      self.action = (G, ctx, self) => {\n        for (let i=0; i<(4+self.skill_power); i++) {\n          deal_random_damage(G, ctx, 3);\n        }\n        for (let j=0; j<(self.skill_power/3 + 1); j++) {\n          G.onCardMine.push((G, ctx) => {\n            G.score += 1;\n          });\n        }\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      };\n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n      self.desc = this.desc;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:5,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 8) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰8次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 2 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n  // {\n  //   name:\"雪雉\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"部署/采掘/战斗: 清除弃牌堆中的2张牌，获得3分\",\n  //   illust:\"http://prts.wiki/images/8/89/%E7%AB%8B%E7%BB%98_%E9%9B%AA%E9%9B%89_1.png\",\n  //   (G, ctx, self) {\n  //     // if (G.discard.length >= 4) {\n  //     //   G.discard = G.discard.slice(4);\n  //     //   G.score += 6 + 2 * self.power;\n  //     // }\n  //     // else {\n  //     //   logMsg(G, ctx, `弃牌堆中的牌数量不够(${G.discard.length}/4)`);\n  //     //   self.exhausted = false;\n  //     // }\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"再获得2分\",\n  // },\n\n  // {\n  //   name:\"初雪\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n  //   illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n  //   action(G, ctx, self) {\n  //     G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"获得2点费用\",\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  // },\n  // {\n  //   name:\"角峰\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:1,\n  //   block:2,\n  //   desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n  //   illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     self.atk += G.materials[3];\n  //     self.hp += G.materials[3];\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n  {\n    name:\"棘刺\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%A3%98%E5%88%BA_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0 && self.use_count > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n        self.use_count -= 1;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足 或 使用次数已达到上限\");\n      }\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 20;\n    },\n    reinforce: 2,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"夜烟\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:3,\n    block:0,\n    desc:\"采掘: 消耗2点费用，额外获得3个材料\",\n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E7%83%9F_1.png\",\n    onMine(G, ctx) {\n      if (payCost(G, ctx, 2, true)) {\n        gainMaterials(G, ctx, 3);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+2>\",\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    }\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:5,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        G.costs -= 2;\n        // let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: \"战斗: 强化1张手牌，然后每有1张强化过的手牌，就获得1点费用\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    // onMine(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    // },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n      let num_reinforced = G.hand.filter(x => (x.power > 0)).length;\n      G.costs += num_reinforced;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 强化1张手牌，重复2次\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再重复1次\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:2,\n    desc: \"采掘/战斗: 强化场上1个(重置的)干员\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name:\"诗怀雅\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"部署: 强化场上1个(重置的)干员，重复3次\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  //休整一家暂时退休\n  // {\n  //   name:\"守林人\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n  //   illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n  //   },\n  //   reinforce_desc: \"伤害+3\",\n  // },\n  {\n    name:\"霜叶\",\n    cost:2,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"采掘: 将场上1个(重置的)干员返回手牌\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    // onRest(G, ctx, self) {\n    //   let num_rest_cards = get_num_rest_cards(G, ctx);\n    //   self.atk += num_rest_cards;\n    //   self.hp += num_rest_cards;\n    // },\n    onMine(G, ctx, self) {\n      let card = choice(ctx, G.field.filter(x => !x.exhausted));\n      if (card) {\n        G.field = G.field.filter(x => x != card);\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  // {\n  //   name:\"锡兰\",\n  //   cost:3,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 每有1个休整中的干员，就获得1分\",\n  //   illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n  //   reinforce: 2,\n  //   onRest(G, ctx, self) {\n  //     let num_rest_cards = get_num_rest_cards(G, ctx);\n  //     G.score += num_rest_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  //   reinforce_desc: \"获得2点费用\",\n  // },\n  // // {\n  // //   name:\"诗怀雅\",\n  // //   cost:4,\n  // //   atk:4,\n  // //   hp:5,\n  // //   mine:1,\n  // //   block:1,\n  // //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  // //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  // //   reinforce: 1,\n  // //   onRest(G, ctx, self) {\n  // //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  // //     if (player) {\n  // //       player.onPlay(G, ctx, player);\n  // //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  // //     }\n  // //   },\n  // //   onReinforce(G, ctx, self) {\n  // //     self.atk += 2;\n  // //     self.hp += 2;\n  // //   },\n  // //   reinforce_desc: \"+2/+2\",\n  // // },\n  // {\n  //   name:\"夜莺\",\n  //   cost:5,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n  //   onRest(G, ctx, self) {\n  //     if (~G.field.indexOf(self)) {\n  //       for (let card of G.field.map(x=>x)) {\n  //         if (card.onRest && (card.onRest != self.onRest)) {\n  //           card.onRest(G, ctx, card);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     let resters = G.deck.filter(x => x.onRest);\n  //     if (resters.length > 0) {\n  //       let card = ctx.random.Shuffle(resters)[0];\n  //       G.hand.unshift(Object.assign({}, card));\n  //     }\n  //   },\n  //   reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  // },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个(重置的)干员造成3点伤害，并获得3分\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      if (card) {\n        card.dmg += 3;\n        G.score += 3;\n        if (card.dmg >= card.hp) {\n          // let card_idx = G.field.indexOf(card);\n          // G.field.splice(card_idx, 1);\n          // G.discard.push(card);\n          G.field = G.field.filter(x => x != card);\n          G.discard = [card, ...G.discard];\n        }\n        // else {\n          // card.onMine = (G, ctx) => {G.score += 4};\n          // card.onFight = card.onMine;\n          // card.desc = \"采掘/战斗: 获得4分\";\n          // G.score += 3;\n        // }\n\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 8) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿8次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n      G.has_discarded = true;\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n\n      // G.onDropCard.push(\n      //   (G, ctx) => {\n      //     G.score += 1;\n      //   }\n      // );\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:3,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸3张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<3; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:6,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得5分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 5;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  // {\n  //   name:\"格拉尼\",\n  //   cost:4,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n  //   illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%A0%BC%E6%8B%89%E5%B0%BC_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n  //     G.field.push(init_card_state(G, ctx, {...new_card}));\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"月见夜\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:3, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"采掘/战斗: 如果你在本回合弃过手牌，则获得+3/+3\", \n  //   illust:\"http://prts.wiki/images/0/02/%E7%AB%8B%E7%BB%98_%E6%9C%88%E8%A7%81%E5%A4%9C_1.png\",\n  //   onMine(G, ctx, self) {\n  //     if (G.has_discarded) {\n  //       self.atk += 3;\n  //       self.hp += 3;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n      // self.mine += 3;\n      // self.played = true;\n      // self.onTurnBegin = (G, ctx, self) => {\n      //   if (self.played) {\n      //     self.mine -= 3;\n      //     self.played = false;\n      //   }\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  \n  // {\n  //   name:\"杰克\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n  //   illust:\"http://prts.wiki/images/1/1d/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E5%85%8B_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n  //     G.hand.unshift(card);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E6%A3%AE%E8%9A%BA_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    // onReinforce(G, ctx, self) {\n    //   self.atk += 2;\n    //   self.hp += 2;\n    // },\n    // reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:5,\n    hp:8,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得+1攻击力并治疗2点伤害\",\n    illust:\"http://prts.wiki/images/4/48/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E6%8B%89%E6%A0%BC_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let excess = enemy.dmg - enemy.hp;\n        self.atk += excess;\n        self.dmg = Math.max(self.dmg - excess * 2, 0);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 使1个敌人获得易伤2，重复3次\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      // reduce_enemy_atk(G, ctx, 4);\n      // reduce_enemy_atk(G, ctx, 4);\n      for (let i=0; i<3+self.power; i++) {\n        add_vulnerable(G, ctx, 2);\n      }\n    },\n    // onReinforce(G, ctx, self) {\n    //   G.costs += 2;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  {\n    name:\"四月\",\n    cost:3,\n    atk:2,\n    hp:1,\n    mine:0,\n    block:0,\n    desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n    illust:\"http://prts.wiki/images/2/2c/%E7%AB%8B%E7%BB%98_%E5%9B%9B%E6%9C%88_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.field.map(card => {\n        if (card.exhausted) {\n          card.exhausted = false;\n          card.mine = 0;\n          silent(card);\n        }\n      })\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"贾维\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"采掘: 弃2张牌，获得4点费用\",\n    illust:\"http://prts.wiki/images/2/2d/%E7%AB%8B%E7%BB%98_%E8%B4%BE%E7%BB%B4_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.costs += 4;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },{\n    name:\"泥岩\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:3,\n    block:2,\n    desc:\"部署: 消耗所有剩余费用，然后每消耗1点，就获得+3/+3\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E6%B3%A5%E5%B2%A9_1.png\",\n    onPlay(G, ctx, self) {\n      let cost_remained = G.costs;\n      self.atk += 3 * cost_remained;\n      self.hp += 3 * cost_remained;\n      G.costs = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"阻挡数+1\",\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n  },\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:5,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"行动: 弃2张牌，获得+2/+2，然后重置自己\",\n  //   illust:\"\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       self.atk += 2 + self.power;\n  //       self.hp += 2 + self.power;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"再获得+1/+1\",\n  // },\n  {\n    name:\"微风\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 弃3张牌，召唤1个费用为4的干员\",\n    illust:\"http://prts.wiki/images/e/e7/%E7%AB%8B%E7%BB%98_%E5%BE%AE%E9%A3%8E_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length >= 3) {\n        drop(G, ctx);\n        drop(G, ctx);\n        drop(G, ctx);\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n        summon(G, ctx, new_card, self);\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤1个费用为2的干员\",\n    onReinforce(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      summon(G, ctx, new_card, self);\n    },\n  },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的1/1复制\",\n  //   illust:\"\",\n  //   onPlay(G, ctx, self) {\n  //   },\n  //   onMine(G, ctx, self) {\n  //   },\n  //   onFight(G, ctx, self, enemy) {\n  //   },\n  //   action(G, ctx, self) {\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  // },\n  {\n    name:\"亚叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤1个随机干员的6/6复制</span>,\n    illust:\"http://prts.wiki/images/5/5f/%E7%AB%8B%E7%BB%98_%E4%BA%9A%E5%8F%B6_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let card = ctx.random.Shuffle(G.CARDS)[0];\n        card = {...card};\n        card.atk = 6;\n        card.hp = 6;\n        card.mine = 3;\n        card.cost = 5;\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },{\n    name:\"史尔特尔\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"超杀: 消耗1点费用，重置自己\",\n    illust:\"http://prts.wiki/images/0/0c/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94_1.png\",\n    onFight(G, ctx, self, enemy) {\n      // if (G.field.indexOf(self) == G.efield.indexOf(enemy) && payCost(G, ctx, 1)) {\n      //   self.exhausted = false;\n      // }\n      if (enemy.dmg > enemy.hp && payCost(G, ctx, 1, true)) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },{\n    name:\"流星\",\n    cost:2,\n    atk:4,\n    hp:2,\n    mine:0,\n    block:0,\n    desc:\"部署: 造成5点伤害\",\n    illust:\"http://prts.wiki/images/b/be/%E7%AB%8B%E7%BB%98_%E6%B5%81%E6%98%9F_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 5);\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  {\n      name:\"空爆\",\n      cost:2,\n      atk:3,\n      hp:2,\n      mine:1,\n      block:0,\n      desc:\"采掘: 摧毁场上1个(重置的)干员，并造成8点伤害\",\n      illust:\"http://prts.wiki/images/8/87/%E7%AB%8B%E7%BB%98_%E7%A9%BA%E7%88%86_1.png\",\n      onMine(G, ctx, self) {\n        if (eliminate_field(G, ctx)) {\n          deal_random_damage(G, ctx, 8 + 4 * self.power);\n        }\n      },\n      action(G, ctx, self) {\n        if (self.power == 1) {\n          let meteorite = G.CARDS.find(x => x.name == \"陨星\");\n          Object.assign(self, meteorite);\n          self.action = undefined;\n        }\n        else {\n          logMsg(G, ctx, \"只需要强化1次即可\");\n          self.exhausted = false;\n        }\n      },\n      reinforce: 1,\n      reinforce_desc: \"伤害+4\",\n      // onReinforce(G, ctx, self) {\n      //   deal_random_damage(G, ctx, 3);\n      // },\n    },\n\n  {\n    name:\"卡达\",\n    cost:3,\n    atk:3,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:\"行动: 本回合剩余时间内，使用其他干员采掘时，重置自己\",\n    illust:\"http://prts.wiki/images/1/1a/%E7%AB%8B%E7%BB%98_%E5%8D%A1%E8%BE%BE_1.png\",\n    action(G, ctx, self) {\n      self.fever = true;\n      G.onCardMine.push(\n        (G, ctx, mcard) => {\n          for (let card of G.field) {\n            if (card.fever && (!mcard.fever)) {\n              card.exhausted = false;\n            }\n          }\n        }\n      );\n    },\n    onTurnBegin(G, ctx, self) {\n      self.fever = false;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },\n\n  // {\n  //   name:\"白雪\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果(视为自己触发)\",\n  //   illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n  //     if (miner) {\n  //       miner.onMine(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n  //     if (fighter) {\n  //       fighter.onFight(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     draw(G, ctx);\n  //   },\n  //   reinforce_desc: \"摸1张牌\",\n  // },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 变成手牌中1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 3,\n    action(G, ctx, self) {\n      // if (G.field.length > 1){\n      //   G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      // }\n      let card = choice(ctx, G.hand);\n      if (card) {\n        Object.assign(self, card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  {\n    name:\"W\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，造成5点伤害，重复3次</span>,\n\n    illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n    // onPlay(G, ctx) {\n    //   drawEnemy(G, ctx);\n    // },\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        for (let i=0; i<(3+self.power); i++) {\n          deal_random_damage(G, ctx, 5);\n        }\n      }\n    },\n    reinforce: 2,\n    // onReinforce(G, ctx, self) {\n      // self.atk += 3;\n      // self.hp += 3;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      if (!enemy.is_boss) {\n        G.efield[idx] = blank_enemy;\n      }\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      // G.field.push(init_card_state(G, ctx, {...texas}));\n      summon(G, ctx, {...texas}, self);\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n\n      if (self.power == 3) {\n        let wind = G.CARDS.find(x => x.name == \"风笛\");\n        if (~G.field.indexOf(self)) {\n          Object.assign(self, wind);\n        }\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n].map(init_card);\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n].map(init_card);\n\nexport const heijiao_in_dream =  {\n    name:\"黑角\",\n    cost:1,\n    atk:8,\n    hp:8,\n    mine:4,\n    block:2,\n    onPlayBonus: [],\n    desc:\"部署: 获得5000分\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    onPlay(G, ctx) {\n      G.score += 5000;\n    },\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n};\n\nexport const extra_cards = [\n  {\n    name:\"稀音\",\n    cost:0,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    material:3,\n    desc:\"\",\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 3;\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name: \"梅尔\",\n    generator(ctx) {\n      let material = ctx.random.Die(3) - 1;\n      return {\n          name:\"梅尔\",\n          cost:1,\n          atk:3,\n          hp:2,\n          mine:2,\n          block:0,\n          material:3,\n          desc: <span>行动: 消耗1个{material_icons[material]}，造成6点伤害</span>,\n          illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n          reinforce: 1,\n      \n          action(G, ctx) {\n            let requirements = [0,0,0,0];\n            requirements[material] = 1;\n            if (payMaterials(G, ctx, requirements)) {\n                deal_random_damage(G, ctx, 6);\n            }\n          },\n          \n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n  {\n    name: \"麦哲伦\",\n    generate(ctx) {\n      let name = choice(ctx, \"麦迪文 麦当劳 麦当娜 麦克雷 麦旋风 麦克斯韦 张信哲 哥伦布 周杰伦 炎亚纶 拿破仑 达尔文 刘德华\".split(\" \"));\n      let values = choice(ctx, [\n        {\n          atk: 2,\n          hp: 2,\n          mine: 1,\n          block: 1,\n        },\n        {\n          atk: 4,\n          hp: 2,\n          mine: 0,\n          block: 1,\n        },\n        {\n          atk: 0,\n          hp: 2,\n          mine: 2,\n          block: 1,\n        },\n        {\n          atk: 1,\n          hp: 2,\n          mine: 1,\n          block: 2,\n        },\n      ]);\n      return {\n          name,\n          ...values,\n          cost:1,\n          material:3,\n          illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n          reinforce: 1,\n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n    \n].map(init_card);\n\nexport const default_filter = x => x;\n\nconst type_filter = (type_,deck) => classes[type_].map(name => deck.find(card => card.name == name)).filter(card => card);\n\nexport const FILTERS = [\n  \n  {\n    illust: \"http://prts.wiki/images/thumb/8/82/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E5%85%88%E9%94%8B_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E5%85%88%E9%94%8B_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"producers\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/d/d1/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%8B%99%E5%87%BB_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%8B%99%E5%87%BB_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"solvers\", deck);\n    }\n  },\n  {\n    illust: \"http://prts.wiki/images/thumb/4/4d/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E6%9C%AF%E5%B8%88_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E6%9C%AF%E5%B8%88_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"miners\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/a/a9/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BF%91%E5%8D%AB_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BF%91%E5%8D%AB_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"standers\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/6/6f/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E9%87%8D%E8%A3%85_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E9%87%8D%E8%A3%85_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"defenders\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/f/f0/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BE%85%E5%8A%A9_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BE%85%E5%8A%A9_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"supporters\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/2/2a/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%89%B9%E7%A7%8D_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%89%B9%E7%A7%8D_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"scorers\", deck);\n    }\n  },\n\n  {\n    illust: \"https://s3.ax1x.com/2020/12/08/r9iiyq.png\",\n    f(deck) {\n      return type_filter(\"randomizers\", deck);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { BOSSES, ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1 } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\nimport { ICONS } from \"./icons\";\nimport { ALTER_ARTS } from \"./alters\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost, from_card) {\n  if (G.costs >= cost) {\n    G.costs -= cost;\n\n    if (from_card) {\n      for (let f of G.onPayCost) {\n        f(G, ctx, cost);\n      }\n    }\n\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n\n    if (G.stage == \"player\") {\n      for (let f of G.onUseCard) {\n        f(G, ctx, card);\n      }\n    }\n\n    return true;\n  }\n\n  else {\n    if (G.stage == \"player\") {\n      logMsg(G, ctx, \"该卡已被横置(已使用过)，无法使用\");\n    }\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    let total_dmg = dmg + (card.vulnerable || 0);\n    card.dmg = (card.dmg || 0) + total_dmg;\n    logMsg(G, ctx, `${card.name} 受到${total_dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function eliminate_field(G, ctx) {\n  let card = ctx.random.Shuffle(G.field.filter(x => !x.exhausted))[0];\n  if (card) {\n    G.field = G.field.filter(x => x != card);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.hand.length >= 12) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n\n    G.has_discarded = true;\n\n    for (let f of G.onDropCard) {\n      f(G, ctx);\n    }\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = [...G.hand.slice(0,5).filter((x, idx) => !choices[idx]), ...G.hand.slice(5)];\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function play_card(G, ctx, card) {\n  if (G.field.length < G.field_limit) {\n    let inserted = init_card_state(G, ctx, {...card});\n    G.field = [...G.field, inserted];\n    if (inserted.onPlay) {\n      inserted.onPlay(G, ctx, inserted);\n    }\n    for (let bonus of (inserted.onPlayBonus || [])) {\n      bonus && bonus.effect(G, ctx, inserted);\n    }\n    return inserted;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    let inserted = play_card(G, ctx, card); // EH: What a strange abstraction, this should be changed\n    if (inserted) {\n      for (let f of G.onPlayCard) {\n        f(G, ctx, inserted, card);\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.push(card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  G.orders = ctx.random.Shuffle(G.odeck).slice(0, 8);\n  G.orders = sort_orders(G.orders);\n}\n\nfunction sort_orders(orders) {\n  return orders.sort((x,y) => {\n    let price_y = _.sum(y.requirements);\n    let price_x = _.sum(x.requirements);\n    if (price_y != price_x) return price_x - price_y;\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\n// function sort_orders(G) {\n//   G.orders = G.orders.sort((x,y)=>{\n//     if (y.advanced && !x.advanced) return -1;\n//     if (!y.advanced && x.advanced) return 1;\n//     return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n//   });\n// }\n\n// function sort_finished(G) {\n//   G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n// }\n\nfunction price_up(order) {\n  // let new_requirements = order.requirements;\n  // if (order.advanced) {\n  //   new_requirements[3] += 1;\n  // }\n  // else {\n  //   new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  // }\n  // return {...order, requirements: new_requirements};\n  if (order.advanced) {\n    order.requirements[3] += 1;\n  }\n  else {\n    order.requirements = order.requirements.map(x => (x==0)?0:x+1);\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    // sort_orders(G);\n\n    if ([4,7].includes(G.finished.length)) {\n      G.orders.map(price_up);\n      G.odeck.map(price_up);\n    }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场(还剩${G.edeck.length}张)`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n      // if (enemy.onPlay && !surge) {\n      //   enemy.onPlay(G, ctx, enemy);\n      // }\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  \n  }\n}\n\nexport function addBoss(G, ctx, boss_name) {\n  let boss = {...BOSSES.find(x => x.name == boss_name)};\n\n  boss.exhausted = false;\n  boss.dmg = -19;\n  G.efield.push(boss);\n}\n\nexport function switchEnemy(G, ctx) {\n  // if (G.not_switch) {\n  //   return false;\n  // }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher && (!switcher.is_elite)) {\n    G.efield.splice(len-2, 1);\n  }\n  else {\n    enemy.atk = Math.max(enemy.atk - 2, 1);\n    enemy.hp = Math.max(enemy.hp - 2, 1);\n  }\n\n  // return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    logMsg(G, ctx, \"请先选定场上干员后，再点击敌人和\\\"战斗\\\"\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.reinforce_need_cost) {\n    let paid = payCost(G, ctx, 1);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function choice(ctx, alist) {\n  return ctx.random.Shuffle(alist)[0];\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_field(G, ctx) {\n  let card = choice(ctx, G.field.filter(x => (!(x.exhausted||[\"诗怀雅\"].includes(x.name)))));\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function add_vulnerable(G, ctx, amount) {\n  let enemy = choice(ctx, G.efield);\n  if (enemy) {\n    enemy.vulnerable = (enemy.vulnerable || 0) + amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\", \"霜叶\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  let cured = card.dmg;\n  card.dmg = 0;\n\n  return cured;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg = Math.max(card.dmg - amount, 0);\n    // if (card.dmg < 0) {\n      // card.hp -= card.dmg;\n      // card.dmg = 0;\n    // }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  // sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk <= 0) { \n      enemy.atk = 1;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n  let rng = new PRNG(deck_data);\n  let alter_art = (rng.random() <= 0.33);\n  if (alter_art) {\n    console.log(\"Got some alter!\");\n  }\n  else {\n    console.log(\"No alter here.\");\n  }\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        for (let j=0; j<amount; j++) {\n            let new_card = {\n              ...target_card,\n              material: i % 3,\n            };\n\n            if (alter_art) {\n              let altered = ALTER_ARTS[new_card.name];\n              if (altered) {\n                new_card.old_illust = new_card.illust;\n                new_card.illust = altered;\n                new_card.was_enemy = true;\n                new_card.name += \"(异画)\";\n              }\n            }\n\n            deck.push(new_card);\n        }\n      }\n    }\n  }\n\n  // Limit alter art\n  if (alter_art) {\n    for (let card of deck) {\n      if (card.old_illust && rng.random() <= 0.33) {\n        card.illust = card.old_illust;\n        card.was_enemy = false;\n        card.name = card.name.slice(0, card.name.length-4);\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onUseCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n\n  G.onPayCost = [];\n  G.onDropCard = [];\n\n  G.onUseOrder = [];\n\n  G.onEnemyOut = [];\n}\n\nfunction setup_turn_states(G, ctx) {\n  G.has_discarded = false;\n}\n\nfunction setupRoguelikeBattle(G, ctx, relics) {\n  G.relics = relics.map(x => ({...x}));\n\n  for (let r of G.relics) {\n    r.onBattleBegin && r.onBattleBegin(G, ctx, r);\n  }\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    // G.finished = [default_order];\n    G.finished = [];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n\n    G.relics = [];\n    G.extra_gain = 0;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = Math.floor(idx / 2) + 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nexport function summon(G, ctx, card, self) {\n  let idx = G.field.indexOf(self) + 1;\n  if (card) {\n    let new_card = init_card_state(G, ctx, {...card});\n    G.field.splice(idx, 0, new_card);\n    new_card.exhausted = false;\n  }\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\n\nexport function get_desc(card) {\n  return  <span>\n    <span style={{fontSize:\"120%\"}}>\n      {card.atk}/{card.hp} &nbsp;\n      {ICONS.mine}{card.mine} &nbsp;\n      {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n    </span>\n    <br/>\n    {card.desc||\"\"}\n    <br/>\n    <span style={{\n      display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n    }}>\n      <i>\n      部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      </i>\n      <br/>\n    </span>\n    ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n    <br />\n    <i>{card.quote||\"\"}</i>\n  </span>;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n    setupRoguelikeBattle,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n\n        setup_events(G, ctx);\n        setup_turn_states(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield, ...G.relics]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n        \n        if (G.enemy_hp_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 2;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport const ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"敌方能天使\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A5%9E%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n\n  {\n    name: \"乌萨斯刁民\",\n    atk: -20,\n    hp: 6,\n    illust: \"http://prts.wiki/images/3/35/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E4%B9%8C%E8%90%A8%E6%96%AF%E5%B9%B3%E6%B0%91.png\",\n    desc: \"无法攻击，摧毁: 获得3点费用\",\n    action(G, ctx) {\n      return;\n    },\n    onOut(G, ctx) {\n      G.costs += 3;\n    }\n  },\n  {\n    name: \"冰爆源石虫\",\n    atk: -2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/2/26/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%86%B0%E7%88%86%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 失去2点费用\",\n    onOut(G, ctx) {\n      G.costs -= 2;\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: -1,\n    hp: 4,\n    desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onOut(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n\n];\n\nexport const BOSSES = [\n  {\n    name: \"大泡普\",\n    atk: 4,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    illust: \"https://s3.ax1x.com/2020/12/13/rZ4mTJ.png\",\n    desc: <span>超杀: 失去1点费用<br/>摧毁: 获得20分</span>,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.costs -= 2;\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 20;\n    }\n  },\n\n  {\n    name: \"锈锤战士\",\n    atk: 5,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%94%88%E9%94%A4%E6%88%98%E5%A3%AB.png\",\n    desc: <span>行动: 对最后部署的干员造成5点伤害<br/>摧毁: 获得20分</span>,\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 20;\n    }\n  },\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks, summon } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+0/+6\",\n    desc: \"+6生命值\", // Write \"获得\"always\n    effect(card) {\n      card.hp += 6;\n    }\n  },\n\n  {\n    name: \"-2费\",\n    desc: \"部署费用-2\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 2;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"3分\",\n    desc: \"部署奖励:\\\"获得3分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 3;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2材料\",\n    desc: \"部署奖励:\\\"获得2个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 2);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"3张牌\",\n    desc: \"部署奖励:\\\"摸3张牌\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          draw(G, ctx);\n          draw(G, ctx);\n          draw(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"4伤害\",\n    desc: \"部署奖励:\\\"造成4点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"手牌强化2\",\n  //   desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         reinforce_hand(G, ctx);\n  //         reinforce_hand(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"召唤1个2费干员\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            new_card = init_card_state(G, ctx, {...new_card});\n            // new_card.hp = 1;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n{\n  name: \"迷迭香之力\",\n  desc: \"部署奖励:\\\"召唤1个随机干员的2/2复制\\\"\",\n  effect(card) {\n    card.onPlayBonus.push(\n      {\n        name: this.name,\n        effect (G, ctx, self) {\n        let card = ctx.random.Shuffle(G.CARDS)[0];\n        card = {...card};\n        card.atk = 2;\n        card.hp = 2;\n        card.mine = 1;\n        card.cost = 2;\n        summon(G, ctx, card, self);\n    }});\n  }\n},\n\n// {\n//     name: \"凯尔希之力\",\n//     desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n//     effect(card) {\n//       // Maybe reconstruct this to call the skill of Ansel is better?\n//       card.onPlayBonus.push({\n//         name: this.name,\n//         effect(G, ctx, card) {\n//           if (card) {\n//             let new_card = G.CARDS.find(x => x.name == card.name);\n//             new_card = init_card_state(G, ctx, {...new_card});\n//             new_card.atk = 1;\n//             new_card.hp = 1;\n//             new_card.mine = 1;\n//             new_card.cost = 1;\n//             new_card.power = 0;\n//             G.field.push(new_card);\n//           }\n//         }\n//     });\n//   }\n// },\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let name = card.name;\n        if (name.includes(\"异画\")) {\n          name = name.slice(0, name.length-4);\n        }\n        let new_card = G.CARDS.find(x => x.name == name);\n        if (new_card) {\n          G.hand.unshift(new_card);\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"订单1\",\n  //   desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制\",\n    effect(card) {\n      if (card.onPlayBonus) {\n        card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n      }\n    }\n  },\n  \n];","export const ALTER_ARTS = {\n  安洁莉娜: \"https://s3.ax1x.com/2020/11/28/D61oIH.png\",\n  阿米娅: \"https://s3.ax1x.com/2020/11/28/D61jL8.png\",\n  森蚺: \"https://s3.ax1x.com/2020/11/28/D615ZD.jpg\",\n  陨星: \"https://s3.ax1x.com/2020/11/28/D61Ide.jpg\",\n  安赛尔: \"https://s3.ax1x.com/2020/11/28/D61hqO.jpg\",\n  史尔特尔: \"https://s3.ax1x.com/2020/11/28/D617id.jpg\",\n  凛冬: \"https://s3.ax1x.com/2020/11/28/D61HJA.jpg\",\n  孑: \"https://s3.ax1x.com/2020/11/30/DWto8K.jpg\",\n  玫兰莎: \"https://s3.ax1x.com/2020/11/28/D61OQP.jpg\",\n  陈: \"https://s3.ax1x.com/2020/11/28/D61Xsf.jpg\",\n  安比尔: \"https://s3.ax1x.com/2020/11/28/D61qzt.jpg\",\n  波登可: \"https://s3.ax1x.com/2020/11/30/DWtbKe.png\",\n};","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 290},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\" style={{border:(props.selected)?\"4px solid #096dd9\":\"4px solid grey\"}} onClick={props.handleClick}>\n    <img className=\"type-filter-img\" src={props.illust} />\n  </div>\n);\n\nexport const TypeFilterContainer = (props) => (\n  <div className=\"type-filter-container\">\n    {props.filters.map(filter_ => <TypeFilter {...filter_} />)}\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS, smaller_icons } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>{smaller_icons[parseInt(action[2])]}强化</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\n\nfunction Tag(props) {\n  // let bg_color = \"#c5c5c5\";\n  let bg_color = \"#434343\";\n  if (props.selected) {\n    bg_color = \"#0098dc\";\n  }\n  if (props.locked) {\n    bg_color = \"#096dd9\";\n  }\n\n  return <div className=\"tag\" style={{backgroundColor: bg_color}} onClick={props.handleClick} >\n    <img className=\"tag-img\" src={props.src} >\n    </img>\n  </div>\n}\n\nexport const TagSelection = (props) => {\n  // let tbody = [];\n\n  // for (let i=0; i<props.tags.length; i+=3) {\n  //   let row = [];\n  //   let row_tags = props.tags.slice(i, i+3);\n  //   for (let tag of row_tags) {\n  //     let borderColor = \"black\";\n  //     if (tag.selected) {\n  //       borderColor = \"red\";\n  //     }\n  //     if (tag.locked) {\n  //       borderColor = \"#1E90FF\";\n  //     }\n  //     row.push(\n  //       <td \n  //         onClick={props.handleClick(props.tags.indexOf(tag))}\n  //       >\n  //         <div className=\"tag\">\n  //         <img \n  //           className=\"tag-img\" \n  //           src={tag.src}\n  //           style={{\n  //           borderColor: borderColor,\n  //         }} \n  //         ></img>\n  //         </div>\n  //       </td>\n  //     );\n  //   }\n  //   tbody.push(<tr>{row}</tr>);\n  // }\n\n  return (\n    <div className=\"tag-selection\" >\n      {/* <table>\n        <tbody>{tbody}</tbody>\n      </table> */}\n      {props.tags.map((tag, idx) => <Tag {...tag} handleClick={props.handleClick(idx)} />)}\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (\n          <li \n            className=\"tag-desc\"\n            style={{\n              color: (props.just_selected == tag)? \"#096dd9\" : \"black\",\n            }}\n          >\n            {tag.desc}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少20张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  let desc = [card.desc];\n\n  if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n    desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  }\n\n  return desc;\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"card-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { addBoss, enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少40%的牌\",\n    level: 2,\n    unstackable: true,\n    extra_challenge: true,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(8);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  \n{\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    stackable: true,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n{\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n{\n    src: \"http://prts.wiki/images/c/c7/Global_costrecovery_1.png\",\n    desc: \"强化干员需要消耗1点费用\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx) {\n      // for (let card of G.deck) {\n      //   card.reinforce += 1;\n      // }\n      G.reinforce_need_cost = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    challenge: true,\n    unstackable: true,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"回合开始时，所有敌人获得+2生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.enemy_hp_grow = true;\n    }\n  },\n\n  \n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  \n\n\n  \n\n  {\n    src: \"http://prts.wiki/images/c/c5/Global_skillrecovery_1.png\",\n    desc: \"所有干员采掘力-1\",\n    level: 2,\n    challenge: true,\n    unstackable: true,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        card.mine -= 1;\n        card.mine = Math.max(0, card.mine);\n      }\n    }\n  },\n\n  \n\n\n  \n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n{\n    src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n    desc: \"可同时部署的干员数-3\",\n    level: 3,\n    challenge: true,\n    unstackable: true,\n    extra_challenge: true,\n    effect(G, ctx){\n      G.field_limit -= 3;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    unstackable: true,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/e/ee/Char_atkatkspeed_1.png\",\n    desc: \"所有干员攻击力-2\",\n    level: 3,\n    challenge: true,\n    unstackable: true,\n    effect(G, ctx) {\n      // G.goal += 28; // Because first turn gonna -4 too\n      // G.reduce_goal = true;\n      for (let card of G.deck) {\n        card.atk -= 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    challenge: true,\n    stackable: true,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/6/6c/Enemy_attackradius_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    stackable: true,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/b/bd/Enemy_ghost_1.png\",\n    desc: \"增加Boss\\\"大泡普\\\"，胜利所需分数+10\",\n    level: 5,\n    challenge: true,\n    stackable: true,\n    effect(G, ctx){\n      addBoss(G, ctx, \"大泡普\");\n      G.goal += 10;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/f/f9/Enemy_faust_trapmod_3.png\",\n    desc: \"增加Boss\\\"锈锤战士\\\"，胜利所需分数+10\",\n    level: 5,\n    challenge: true,\n    stackable: true,\n    effect(G, ctx){\n      addBoss(G, ctx, \"锈锤战士\");\n      G.goal += 10;\n    }\n  },\n{\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    unstackable: true,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 10,\n    unstackable: true,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","export const result_images = [\n  [\"https://s3.ax1x.com/2020/12/01/DWcVIO.jpg\", 75358644],\n  // [\"https://s3.ax1x.com/2020/12/01/DWcVIO.jpg\", 75358644],\n  // [\"https://s3.ax1x.com/2020/12/01/DWceiD.jpg\", 75576391],\n];\n\n// export const lose_image = \"https://s3.ax1x.com/2020/12/01/DWcmJe.png\";\nexport const lose_image = \"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\";\n\nexport const relic_images = [\n  'http://prts.wiki/images/c/cf/%E6%94%B6%E8%97%8F%E5%93%81_1.png',\n  'http://prts.wiki/images/7/72/%E6%94%B6%E8%97%8F%E5%93%81_2.png',\n  'http://prts.wiki/images/9/99/%E6%94%B6%E8%97%8F%E5%93%81_3.png',\n  'http://prts.wiki/images/f/ff/%E6%94%B6%E8%97%8F%E5%93%81_4.png',\n  'http://prts.wiki/images/6/63/%E6%94%B6%E8%97%8F%E5%93%81_5.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_6.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_7.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_8.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_9.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_10.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_11.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_12.png',\n  'http://prts.wiki/images/2/2b/%E6%94%B6%E8%97%8F%E5%93%81_13.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_14.png',\n  'http://prts.wiki/images/5/5e/%E6%94%B6%E8%97%8F%E5%93%81_15.png',\n  'http://prts.wiki/images/e/ef/%E6%94%B6%E8%97%8F%E5%93%81_16.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_17.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_18.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_19.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_20.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_21.png',\n  'http://prts.wiki/images/a/aa/%E6%94%B6%E8%97%8F%E5%93%81_22.png',\n  'http://prts.wiki/images/0/05/%E6%94%B6%E8%97%8F%E5%93%81_23.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_24.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_25.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_26.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_27.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_28.png',\n  'http://prts.wiki/images/9/91/%E6%94%B6%E8%97%8F%E5%93%81_29.png',\n  'http://prts.wiki/images/0/0c/%E6%94%B6%E8%97%8F%E5%93%81_30.png',\n  'http://prts.wiki/images/7/70/%E6%94%B6%E8%97%8F%E5%93%81_31.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_32.png',\n  'http://prts.wiki/images/e/ec/%E6%94%B6%E8%97%8F%E5%93%81_33.png',\n  'http://prts.wiki/images/7/75/%E6%94%B6%E8%97%8F%E5%93%81_34.png',\n  'http://prts.wiki/images/9/9e/%E6%94%B6%E8%97%8F%E5%93%81_35.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_36.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_37.png',\n  'http://prts.wiki/images/a/ad/%E6%94%B6%E8%97%8F%E5%93%81_38.png',\n  'http://prts.wiki/images/3/3f/%E6%94%B6%E8%97%8F%E5%93%81_39.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_40.png',\n  'http://prts.wiki/images/f/fc/%E6%94%B6%E8%97%8F%E5%93%81_41.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_42.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_43.png',\n  'http://prts.wiki/images/f/fd/%E6%94%B6%E8%97%8F%E5%93%81_44.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_45.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_46.png',\n  'http://prts.wiki/images/4/4d/%E6%94%B6%E8%97%8F%E5%93%81_47.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_48.png',\n  'http://prts.wiki/images/f/f0/%E6%94%B6%E8%97%8F%E5%93%81_49.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_50.png',\n  'http://prts.wiki/images/5/5a/%E6%94%B6%E8%97%8F%E5%93%81_51.png',\n  'http://prts.wiki/images/0/0f/%E6%94%B6%E8%97%8F%E5%93%81_52.png',\n  'http://prts.wiki/images/f/fa/%E6%94%B6%E8%97%8F%E5%93%81_53.png',\n  'http://prts.wiki/images/7/74/%E6%94%B6%E8%97%8F%E5%93%81_54.png',\n  'http://prts.wiki/images/6/67/%E6%94%B6%E8%97%8F%E5%93%81_55.png',\n  'http://prts.wiki/images/d/de/%E6%94%B6%E8%97%8F%E5%93%81_56.png',\n  'http://prts.wiki/images/7/76/%E6%94%B6%E8%97%8F%E5%93%81_57.png',\n  'http://prts.wiki/images/0/03/%E6%94%B6%E8%97%8F%E5%93%81_58.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_59.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_60.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_61.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_62.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_63.png',\n  'http://prts.wiki/images/a/a4/%E6%94%B6%E8%97%8F%E5%93%81_64.png',\n  'http://prts.wiki/images/4/46/%E6%94%B6%E8%97%8F%E5%93%81_65.png',\n  'http://prts.wiki/images/2/27/%E6%94%B6%E8%97%8F%E5%93%81_66.png',\n  'http://prts.wiki/images/b/b5/%E6%94%B6%E8%97%8F%E5%93%81_67.png',\n  'http://prts.wiki/images/f/f7/%E6%94%B6%E8%97%8F%E5%93%81_68.png',\n  'http://prts.wiki/images/2/2f/%E6%94%B6%E8%97%8F%E5%93%81_69.png',\n  'http://prts.wiki/images/7/7b/%E6%94%B6%E8%97%8F%E5%93%81_70.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_71.png',\n  'http://prts.wiki/images/6/6b/%E6%94%B6%E8%97%8F%E5%93%81_72.png',\n  'http://prts.wiki/images/c/c1/%E6%94%B6%E8%97%8F%E5%93%81_73.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_74.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_75.png',\n  'http://prts.wiki/images/6/6f/%E6%94%B6%E8%97%8F%E5%93%81_76.png',\n  'http://prts.wiki/images/a/a1/%E6%94%B6%E8%97%8F%E5%93%81_77.png',\n  'http://prts.wiki/images/2/28/%E6%94%B6%E8%97%8F%E5%93%81_78.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_79.png',\n  'http://prts.wiki/images/c/c7/%E6%94%B6%E8%97%8F%E5%93%81_80.png',\n  'http://prts.wiki/images/9/9c/%E6%94%B6%E8%97%8F%E5%93%81_81.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_82.png',\n  'http://prts.wiki/images/3/38/%E6%94%B6%E8%97%8F%E5%93%81_83.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_84.png',\n  'http://prts.wiki/images/d/d5/%E6%94%B6%E8%97%8F%E5%93%81_85.png',\n  'http://prts.wiki/images/0/06/%E6%94%B6%E8%97%8F%E5%93%81_86.png',\n  'http://prts.wiki/images/5/50/%E6%94%B6%E8%97%8F%E5%93%81_87.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_88.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_89.png',\n  'http://prts.wiki/images/a/a3/%E6%94%B6%E8%97%8F%E5%93%81_90.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_91.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_92.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_93.png',\n  'http://prts.wiki/images/2/29/%E6%94%B6%E8%97%8F%E5%93%81_94.png',\n  'http://prts.wiki/images/a/a8/%E6%94%B6%E8%97%8F%E5%93%81_95.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_96.png',\n  'http://prts.wiki/images/0/0a/%E6%94%B6%E8%97%8F%E5%93%81_97.png',\n  'http://prts.wiki/images/f/f8/%E6%94%B6%E8%97%8F%E5%93%81_98.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_99.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_100.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_101.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_102.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_103.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_104.png',\n  'http://prts.wiki/images/2/23/%E6%94%B6%E8%97%8F%E5%93%81_105.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_106.png',\n  'http://prts.wiki/images/4/4a/%E6%94%B6%E8%97%8F%E5%93%81_107.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_108.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_109.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_110.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_111.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_112.png',\n  'http://prts.wiki/images/9/90/%E6%94%B6%E8%97%8F%E5%93%81_113.png',\n  'http://prts.wiki/images/c/ca/%E6%94%B6%E8%97%8F%E5%93%81_114.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_115.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_116.png',\n  'http://prts.wiki/images/5/58/%E6%94%B6%E8%97%8F%E5%93%81_117.png',\n  'http://prts.wiki/images/9/95/%E6%94%B6%E8%97%8F%E5%93%81_118.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_119.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_120.png',\n  'http://prts.wiki/images/b/bf/%E6%94%B6%E8%97%8F%E5%93%81_121.png',\n  'http://prts.wiki/images/c/cb/%E6%94%B6%E8%97%8F%E5%93%81_122.png',\n  'http://prts.wiki/images/a/a5/%E6%94%B6%E8%97%8F%E5%93%81_123.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_124.png',\n  'http://prts.wiki/images/f/f2/%E6%94%B6%E8%97%8F%E5%93%81_125.png',\n  'http://prts.wiki/images/1/15/%E6%94%B6%E8%97%8F%E5%93%81_126.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_127.png',\n  'http://prts.wiki/images/d/d6/%E6%94%B6%E8%97%8F%E5%93%81_128.png',\n  'http://prts.wiki/images/d/d4/%E6%94%B6%E8%97%8F%E5%93%81_129.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_130.png',\n  'http://prts.wiki/images/3/36/%E6%94%B6%E8%97%8F%E5%93%81_131.png',\n  'http://prts.wiki/images/9/9b/%E6%94%B6%E8%97%8F%E5%93%81_132.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_133.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_134.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_135.png',\n  'http://prts.wiki/images/4/48/%E6%94%B6%E8%97%8F%E5%93%81_136.png',\n  'http://prts.wiki/images/d/d1/%E6%94%B6%E8%97%8F%E5%93%81_137.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_138.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_139.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_140.png',\n  'http://prts.wiki/images/c/c6/%E6%94%B6%E8%97%8F%E5%93%81_141.png',\n  'http://prts.wiki/images/a/a7/%E6%94%B6%E8%97%8F%E5%93%81_142.png',\n  'http://prts.wiki/images/7/7c/%E6%94%B6%E8%97%8F%E5%93%81_143.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_144.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_145.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_146.png',\n  'http://prts.wiki/images/7/77/%E6%94%B6%E8%97%8F%E5%93%81_147.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_148.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_149.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_150.png',\n  'http://prts.wiki/images/5/56/%E6%94%B6%E8%97%8F%E5%93%81_151.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_152.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_153.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_154.png',\n  'http://prts.wiki/images/8/89/%E6%94%B6%E8%97%8F%E5%93%81_155.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_156.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_157.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_158.png',\n  'http://prts.wiki/images/5/51/%E6%94%B6%E8%97%8F%E5%93%81_159.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_160.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_161.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_162.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_163.png',\n  'http://prts.wiki/images/a/a9/%E6%94%B6%E8%97%8F%E5%93%81_164.png',\n  'http://prts.wiki/images/8/87/%E6%94%B6%E8%97%8F%E5%93%81_165.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_166.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_167.png',\n  'http://prts.wiki/images/1/14/%E6%94%B6%E8%97%8F%E5%93%81_168.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_169.png',\n  'http://prts.wiki/images/5/54/%E6%94%B6%E8%97%8F%E5%93%81_170.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_171.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_172.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_173.png',\n  'http://prts.wiki/images/7/79/%E6%94%B6%E8%97%8F%E5%93%81_174.png',\n  'http://prts.wiki/images/1/1f/%E6%94%B6%E8%97%8F%E5%93%81_175.png',\n  'http://prts.wiki/images/8/81/%E6%94%B6%E8%97%8F%E5%93%81_176.png',\n  'http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png',\n  'http://prts.wiki/images/b/b6/%E6%94%B6%E8%97%8F%E5%93%81_178.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_179.png',\n  'http://prts.wiki/images/e/e5/%E6%94%B6%E8%97%8F%E5%93%81_180.png',\n  'http://prts.wiki/images/2/22/%E6%94%B6%E8%97%8F%E5%93%81_181.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_182.png',\n  'http://prts.wiki/images/c/cf/%E6%94%B6%E8%97%8F%E5%93%81_1.png',\n  'http://prts.wiki/images/7/72/%E6%94%B6%E8%97%8F%E5%93%81_2.png',\n  'http://prts.wiki/images/9/99/%E6%94%B6%E8%97%8F%E5%93%81_3.png',\n  'http://prts.wiki/images/f/ff/%E6%94%B6%E8%97%8F%E5%93%81_4.png',\n  'http://prts.wiki/images/6/63/%E6%94%B6%E8%97%8F%E5%93%81_5.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_6.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_7.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_8.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_9.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_10.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_11.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_12.png',\n  'http://prts.wiki/images/2/2b/%E6%94%B6%E8%97%8F%E5%93%81_13.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_14.png',\n  'http://prts.wiki/images/5/5e/%E6%94%B6%E8%97%8F%E5%93%81_15.png',\n  'http://prts.wiki/images/e/ef/%E6%94%B6%E8%97%8F%E5%93%81_16.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_17.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_18.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_19.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_20.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_21.png',\n  'http://prts.wiki/images/a/aa/%E6%94%B6%E8%97%8F%E5%93%81_22.png',\n  'http://prts.wiki/images/0/05/%E6%94%B6%E8%97%8F%E5%93%81_23.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_24.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_25.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_26.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_27.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_28.png',\n  'http://prts.wiki/images/9/91/%E6%94%B6%E8%97%8F%E5%93%81_29.png',\n  'http://prts.wiki/images/0/0c/%E6%94%B6%E8%97%8F%E5%93%81_30.png',\n  'http://prts.wiki/images/7/70/%E6%94%B6%E8%97%8F%E5%93%81_31.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_32.png',\n  'http://prts.wiki/images/e/ec/%E6%94%B6%E8%97%8F%E5%93%81_33.png',\n  'http://prts.wiki/images/7/75/%E6%94%B6%E8%97%8F%E5%93%81_34.png',\n  'http://prts.wiki/images/9/9e/%E6%94%B6%E8%97%8F%E5%93%81_35.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_36.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_37.png',\n  'http://prts.wiki/images/a/ad/%E6%94%B6%E8%97%8F%E5%93%81_38.png',\n  'http://prts.wiki/images/3/3f/%E6%94%B6%E8%97%8F%E5%93%81_39.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_40.png',\n  'http://prts.wiki/images/f/fc/%E6%94%B6%E8%97%8F%E5%93%81_41.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_42.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_43.png',\n  'http://prts.wiki/images/f/fd/%E6%94%B6%E8%97%8F%E5%93%81_44.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_45.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_46.png',\n  'http://prts.wiki/images/4/4d/%E6%94%B6%E8%97%8F%E5%93%81_47.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_48.png',\n  'http://prts.wiki/images/f/f0/%E6%94%B6%E8%97%8F%E5%93%81_49.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_50.png',\n  'http://prts.wiki/images/5/5a/%E6%94%B6%E8%97%8F%E5%93%81_51.png',\n  'http://prts.wiki/images/0/0f/%E6%94%B6%E8%97%8F%E5%93%81_52.png',\n  'http://prts.wiki/images/f/fa/%E6%94%B6%E8%97%8F%E5%93%81_53.png',\n  'http://prts.wiki/images/7/74/%E6%94%B6%E8%97%8F%E5%93%81_54.png',\n  'http://prts.wiki/images/6/67/%E6%94%B6%E8%97%8F%E5%93%81_55.png',\n  'http://prts.wiki/images/d/de/%E6%94%B6%E8%97%8F%E5%93%81_56.png',\n  'http://prts.wiki/images/7/76/%E6%94%B6%E8%97%8F%E5%93%81_57.png',\n  'http://prts.wiki/images/0/03/%E6%94%B6%E8%97%8F%E5%93%81_58.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_59.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_60.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_61.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_62.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_63.png',\n  'http://prts.wiki/images/a/a4/%E6%94%B6%E8%97%8F%E5%93%81_64.png',\n  'http://prts.wiki/images/4/46/%E6%94%B6%E8%97%8F%E5%93%81_65.png',\n  'http://prts.wiki/images/2/27/%E6%94%B6%E8%97%8F%E5%93%81_66.png',\n  'http://prts.wiki/images/b/b5/%E6%94%B6%E8%97%8F%E5%93%81_67.png',\n  'http://prts.wiki/images/f/f7/%E6%94%B6%E8%97%8F%E5%93%81_68.png',\n  'http://prts.wiki/images/2/2f/%E6%94%B6%E8%97%8F%E5%93%81_69.png',\n  'http://prts.wiki/images/7/7b/%E6%94%B6%E8%97%8F%E5%93%81_70.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_71.png',\n  'http://prts.wiki/images/6/6b/%E6%94%B6%E8%97%8F%E5%93%81_72.png',\n  'http://prts.wiki/images/c/c1/%E6%94%B6%E8%97%8F%E5%93%81_73.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_74.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_75.png',\n  'http://prts.wiki/images/6/6f/%E6%94%B6%E8%97%8F%E5%93%81_76.png',\n  'http://prts.wiki/images/a/a1/%E6%94%B6%E8%97%8F%E5%93%81_77.png',\n  'http://prts.wiki/images/2/28/%E6%94%B6%E8%97%8F%E5%93%81_78.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_79.png',\n  'http://prts.wiki/images/c/c7/%E6%94%B6%E8%97%8F%E5%93%81_80.png',\n  'http://prts.wiki/images/9/9c/%E6%94%B6%E8%97%8F%E5%93%81_81.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_82.png',\n  'http://prts.wiki/images/3/38/%E6%94%B6%E8%97%8F%E5%93%81_83.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_84.png',\n  'http://prts.wiki/images/d/d5/%E6%94%B6%E8%97%8F%E5%93%81_85.png',\n  'http://prts.wiki/images/0/06/%E6%94%B6%E8%97%8F%E5%93%81_86.png',\n  'http://prts.wiki/images/5/50/%E6%94%B6%E8%97%8F%E5%93%81_87.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_88.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_89.png',\n  'http://prts.wiki/images/a/a3/%E6%94%B6%E8%97%8F%E5%93%81_90.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_91.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_92.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_93.png',\n  'http://prts.wiki/images/2/29/%E6%94%B6%E8%97%8F%E5%93%81_94.png',\n  'http://prts.wiki/images/a/a8/%E6%94%B6%E8%97%8F%E5%93%81_95.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_96.png',\n  'http://prts.wiki/images/0/0a/%E6%94%B6%E8%97%8F%E5%93%81_97.png',\n  'http://prts.wiki/images/f/f8/%E6%94%B6%E8%97%8F%E5%93%81_98.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_99.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_100.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_101.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_102.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_103.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_104.png',\n  'http://prts.wiki/images/2/23/%E6%94%B6%E8%97%8F%E5%93%81_105.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_106.png',\n  'http://prts.wiki/images/4/4a/%E6%94%B6%E8%97%8F%E5%93%81_107.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_108.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_109.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_110.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_111.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_112.png',\n  'http://prts.wiki/images/9/90/%E6%94%B6%E8%97%8F%E5%93%81_113.png',\n  'http://prts.wiki/images/c/ca/%E6%94%B6%E8%97%8F%E5%93%81_114.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_115.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_116.png',\n  'http://prts.wiki/images/5/58/%E6%94%B6%E8%97%8F%E5%93%81_117.png',\n  'http://prts.wiki/images/9/95/%E6%94%B6%E8%97%8F%E5%93%81_118.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_119.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_120.png',\n  'http://prts.wiki/images/b/bf/%E6%94%B6%E8%97%8F%E5%93%81_121.png',\n  'http://prts.wiki/images/c/cb/%E6%94%B6%E8%97%8F%E5%93%81_122.png',\n  'http://prts.wiki/images/a/a5/%E6%94%B6%E8%97%8F%E5%93%81_123.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_124.png',\n  'http://prts.wiki/images/f/f2/%E6%94%B6%E8%97%8F%E5%93%81_125.png',\n  'http://prts.wiki/images/1/15/%E6%94%B6%E8%97%8F%E5%93%81_126.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_127.png',\n  'http://prts.wiki/images/d/d6/%E6%94%B6%E8%97%8F%E5%93%81_128.png',\n  'http://prts.wiki/images/d/d4/%E6%94%B6%E8%97%8F%E5%93%81_129.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_130.png',\n  'http://prts.wiki/images/3/36/%E6%94%B6%E8%97%8F%E5%93%81_131.png',\n  'http://prts.wiki/images/9/9b/%E6%94%B6%E8%97%8F%E5%93%81_132.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_133.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_134.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_135.png',\n  'http://prts.wiki/images/4/48/%E6%94%B6%E8%97%8F%E5%93%81_136.png',\n  'http://prts.wiki/images/d/d1/%E6%94%B6%E8%97%8F%E5%93%81_137.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_138.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_139.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_140.png',\n  'http://prts.wiki/images/c/c6/%E6%94%B6%E8%97%8F%E5%93%81_141.png',\n  'http://prts.wiki/images/a/a7/%E6%94%B6%E8%97%8F%E5%93%81_142.png',\n  'http://prts.wiki/images/7/7c/%E6%94%B6%E8%97%8F%E5%93%81_143.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_144.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_145.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_146.png',\n  'http://prts.wiki/images/7/77/%E6%94%B6%E8%97%8F%E5%93%81_147.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_148.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_149.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_150.png',\n  'http://prts.wiki/images/5/56/%E6%94%B6%E8%97%8F%E5%93%81_151.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_152.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_153.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_154.png',\n  'http://prts.wiki/images/8/89/%E6%94%B6%E8%97%8F%E5%93%81_155.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_156.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_157.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_158.png',\n  'http://prts.wiki/images/5/51/%E6%94%B6%E8%97%8F%E5%93%81_159.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_160.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_161.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_162.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_163.png',\n  'http://prts.wiki/images/a/a9/%E6%94%B6%E8%97%8F%E5%93%81_164.png',\n  'http://prts.wiki/images/8/87/%E6%94%B6%E8%97%8F%E5%93%81_165.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_166.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_167.png',\n  'http://prts.wiki/images/1/14/%E6%94%B6%E8%97%8F%E5%93%81_168.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_169.png',\n  'http://prts.wiki/images/5/54/%E6%94%B6%E8%97%8F%E5%93%81_170.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_171.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_172.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_173.png',\n  'http://prts.wiki/images/7/79/%E6%94%B6%E8%97%8F%E5%93%81_174.png',\n  'http://prts.wiki/images/1/1f/%E6%94%B6%E8%97%8F%E5%93%81_175.png',\n  'http://prts.wiki/images/8/81/%E6%94%B6%E8%97%8F%E5%93%81_176.png',\n  'http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png',\n  'http://prts.wiki/images/b/b6/%E6%94%B6%E8%97%8F%E5%93%81_178.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_179.png',\n  'http://prts.wiki/images/e/e5/%E6%94%B6%E8%97%8F%E5%93%81_180.png',\n  'http://prts.wiki/images/2/22/%E6%94%B6%E8%97%8F%E5%93%81_181.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_182.png'\n ];\n \n export const relic_names = ['乌萨斯列巴',\n '脱水仙人掌干',\n '风干大蕉果',\n '商队盒饭',\n '半盒沙虫罐头',\n '维多利亚军粮',\n '废旧地图',\n '单筒望远镜',\n '全息粉粉沙盒',\n '单人睡袋',\n '破烂帐篷',\n '萨米大“蜡烛”',\n '兔子棚屋',\n '噪音引擎',\n '豌豆花盆',\n '综合园艺成果',\n '炭化烤肉棒',\n '压缩糖砖',\n '易爆建材箱',\n '珠宝水果拼盘',\n '赤金的远征',\n '古旧钱币',\n '恐魔金像',\n '血钻',\n '小财神雕像',\n '“嘎呜”挂饰',\n '米格鲁的饼干',\n '一杯昏睡红茶',\n '古旧铸物',\n '地区行动方案',\n '全局作战文件',\n '人事部密信',\n '一份演讲稿',\n '突击协议扩充',\n '突击协议增援',\n '堡垒协议扩充',\n '堡垒协议增援',\n '远程协议扩充',\n '远程协议增援',\n '破坏协议扩充',\n '破坏协议增援',\n '熏黑的信号灯',\n '老式电报机',\n '无线通讯器',\n '幸运硬币',\n '手绘雪雉传单',\n '真理的书单',\n '教官的爱鞭',\n '咪波·运输型',\n '萨卡兹监工哨子',\n '忧伤的驮兽',\n '奇怪的$墨镜',\n '破片地雷',\n '《防身手册》',\n '芙蓉的健康餐',\n '牧兽的排泄物',\n '奇渊面具',\n '教母的信物',\n '锉刀',\n '废铁陷阱',\n '酸液源石虫',\n '迷迭香之拥',\n '无名诗集',\n '劣化组织',\n '“黑夜呢喃”',\n '《大静谧》',\n '小号黄色安全帽',\n '战壕沙袋',\n '防割断纤维背心',\n '古旧的蒸汽甲胄',\n '《打架手册》',\n '《独臂电锯》',\n '齿轮式外骨骼',\n '锈蚀银枪',\n '液压气瓶',\n '超弹力合金弹簧',\n '损坏的左轮弹巢',\n '显圣吊坠',\n '难闻的治疗粉',\n '难闻的止血剂',\n '急救药箱',\n '白垩色治疗针',\n '便宜食用盐',\n '辅助麻痹工具',\n '血腥链锯',\n '另一颗铆钉',\n '活性粉尘',\n '源石射灯',\n '源石环境发生器',\n '无主的萨克斯',\n '“文明的存续”',\n '手工小包',\n '*一点*加班费',\n '可露希尔的怜悯',\n '“日光灯”',\n '香草沙士汽水',\n '丰蹄能量饮料',\n '辣椒老妈',\n '脑力药片',\n '荒地龙舌兰',\n '摩根队长佳酿',\n '生命之水',\n '皇家利口酒',\n '钝爪-突破',\n '钝爪-典训',\n '钝爪-爆发',\n '钝爪-熟稔',\n '钝爪-振奋',\n '钝爪-百战',\n '折戟-突破',\n '折戟-典训',\n '折戟-锋刃',\n '折戟-浴血',\n '折戟-一夫当关',\n '折戟-破釜沉舟',\n '铁卫-突破',\n '铁卫-典训',\n '铁卫-侵掠',\n '铁卫-不动',\n '铁卫-推进',\n '铁卫-无锋',\n '残弩-突破',\n '残弩-百步穿杨',\n '残弩-典训',\n '残弩-战场依存',\n '残弩-交叉火力',\n '残弩-神速',\n '断杖-突破',\n '断杖-典训',\n '断杖-织法者',\n '断杖-咏唱',\n '断杖-凝神',\n '断杖-苦难巫咒',\n '支柱-突破',\n '支柱-典训',\n '支柱-次要战场',\n '支柱-勤奋',\n '支柱-破兵',\n '支柱-枯法',\n '医者-突破',\n '医者-典训',\n '医者-自医',\n '医者-强效试剂',\n '医者-妙手',\n '医者-理智固剂',\n '锈刃-突破',\n '锈刃-典训',\n '锈刃-处决',\n '锈刃-单兵',\n '锈刃-无人之境',\n '锈刃-神力',\n '突击协议-利刃',\n '突击协议-散兵',\n '堡垒协议-方阵',\n '堡垒协议-固守',\n '远程协议-遥击',\n '远程协议-克敌',\n '破坏协议-消除',\n '破坏协议-压制',\n '迷幻的藏宝图',\n '染血的传单',\n '辉煌工匠包',\n 'Logos的骨笔',\n '无限续杯瓶',\n '左半边椰子壳',\n '右半边椰子壳',\n '倒转的怀表',\n '“手铳”',\n '沉重的铁皮箱',\n '漆黑的钥匙',\n '鸟卜探索仪',\n '超高级沙发',\n '立体投影仪',\n '一台旧冰箱',\n '个人避难所',\n '虚空发生器',\n '热水壶',\n '“坏家伙”来了！',\n '鬼血',\n '冰封的异爪',\n '巫王旋角',\n '浅海轻唱'];","import React from 'react';\nimport _ from 'lodash';\nimport { choice, deal_random_damage, draw, gainMaterials, init_card_state, logMsg, reinforce_hand, summon } from './Game';\nimport { random_upgrade } from './Roguelike';\nimport { UPGRADES } from './upgrades';\nimport { relic_images, relic_names } from './assets';\n\nexport const RELICS = [\n  // {\n  //   name: \"可露希尔的怜悯\",\n  //   desc: \"跳过选牌时,额外获得10赏金\",\n  //   onSkipPick(S) {\n  //     S.gold += 10;\n  //   }\n  // },\n  // {\n  //   name: \"乌萨斯列巴\",\n  //   desc: \"回合开始时，额外摸2张牌\",\n  //   onTurnBegin(G, ctx){\n  //     draw(G, ctx);\n  //     draw(G, ctx);\n  //   }\n  // },\n  {\n    name: \"超高级沙发\",\n    desc: \"可同时部署人数+1\",\n    onBattleBegin(G, ctx){\n      G.field_limit += 1;\n    }\n  },\n  {\n    name: \"锈刃-处决\",\n    desc: \"部署2费及以下的干员时，造成4点伤害\",\n    onTurnBegin(G, ctx){\n      G.onPlayCard.push((G, ctx, card) => {\n        if (card.cost <= 2) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },{\n    name: \"荒地龙舌兰\",\n    desc: \"每回合少获得1点费用，但获得3个材料\",\n    onTurnBegin(G, ctx){\n      G.costs -= 1;\n      gainMaterials(G, ctx, 3);\n    }\n  },{\n    name: \"一份演讲稿\",\n    desc: \"对局开始时，召唤1个2费干员\",\n    onBattleBegin(G, ctx){\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      // summon(G, ctx, new_card, {});\n      G.field.push(init_card_state(G, ctx, {...new_card, hp:new_card.hp+1}));\n    }\n  },\n  {\n    name: \"人事部密信\",\n    desc: \"回合开始时，召唤1个随机干员的1/2复制\",\n    onTurnBegin(G, ctx){\n      let new_card = ctx.random.Shuffle(G.CARDS)[0];\n      // summon(G, ctx, new_card, {});\n      let played_card = init_card_state(G, ctx, {...new_card,\n        atk: 1,\n        hp: 2,\n        mine: 1,\n        cost: 1,\n      });\n      played_card.exhausted = false;\n      G.field.push(played_card);\n    }\n  },\n  {\n    name: \"生命之水\",\n    desc: \"回合开始时，强化1张手牌\",\n    onTurnBegin(G, ctx) {\n      reinforce_hand(G, ctx);\n    }\n  },\n\n  \n  {\n    name: \"地区行动方案\",\n    desc: \"起始获得额外1组材料，胜利所需分数+2\",\n    onBattleBegin(G, ctx){\n      for (let i=0; i<3; i++) {\n        G.materials[i] += 1;\n      }\n      G.goal += 2;\n    }\n  },\n  {\n    name: \"一杯昏睡红茶\",\n    desc: \"部署干员时，有概率额外触发1次“部署:”效果\",\n    onTurnBegin(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx, card) => {\n          if (ctx.random.D4() == 1) {\n            card.onPlay(G, ctx, card);\n            logMsg(G, ctx, `额外触发1次 ${card.name} 的部署效果`);\n          }\n        }\n      );\n    }\n  },\n  // {\n  //   desc: \"回合开始时，如果场上干员数达到了上限，则获得5分\",\n  //   onTurnBegin(G, ctx){\n  //     if (G.field.length == G.field_limit) {\n  //       G.score += 5;\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"综合园艺成果\",\n  //   desc: \"对战开始时,牌组里每有4张牌,就获得1分\",\n  //   onBattleBegin(G, ctx) {\n  //     G.score += Math.floor(G.deck.length / 4);\n  //   }\n  // },\n  {\n    name:\"风干大蕉果\", \n    desc:\"选牌时,里面的1个干员获得强化3\",\n    onPickCards(S) {\n      let card = S.rng.choice(S.Deck.slice(0,3));\n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      reinforce.effect(card);\n      reinforce.effect(card);\n      reinforce.effect(card);\n    }\n  },\n  {\n    name:\"古旧钱币\", \n    desc:\"每次对战结束时,额外获得10赏金\",\n    onBattleEnd(S) {\n      S.gold += 10;\n    }\n  },\n  {\n    name:\"“嘎呜”挂饰\", \n    desc:\"达成满贯以上时,额外获得30赏金\",\n    onBattleEnd(S) {\n      if ((S.level_achieved - S.level_required) >= 4) {\n        S.gold += 30;\n      }\n    }\n  },\n  {\n    name:\"真理的书单\", \n    desc:\"战斗结束时,随机升级2个干员\",\n    onBattleEnd(S) {\n      random_upgrade(S);\n      random_upgrade(S);\n    }\n  },\n  {\n    name: \"手工小包\",\n    desc: \"达成满贯以上时，随机获得1个藏品\",\n    onBattleEnd(S){\n      if ((S.level_achieved - S.level_required) >= 4) {\n        let relic = S.rng.choice(S.RELICS);\n        console.log(relic.name);\n        S.relics.unshift({...relic});\n        alert(\"通过 手工小包 获得 \"+relic.name);\n      }\n    }\n  },\n  // {\n  //   name:\"奇怪的$墨镜\", \n  //   desc:\"购买藏品后,获得5赏金\",\n  //   onBuyRelic(S, relic) {\n  //     S.gold += 5;\n  //   }\n  // },\n  // {\n  //   name:\"一份演讲稿\", \n  //   desc:\"购买藏品时,有概率随机升级1个干员\",\n  //   onBuyRelic(S, relic) {\n  //     if (S.rng.random() <= 0.5) {\n  //       random_upgrade(S);\n  //     }\n  //   }\n  // },\n  {\n    name:\"迷迭香之拥\", \n    desc:\"购买藏品时,有小概率获得1个其复制\",\n    onBuyRelic(S, relic) {\n      if (S.rng.random() <= 0.2) {\n        S.relics.unshift({...relic});\n        alert(`获得${relic.name}的复制`);\n      }\n    }\n  },\n  {\n    name:\"咪波·运输型\", \n    desc:\"对局开始时费用+1\",\n    onBattleBegin(G, ctx) {\n      G.costs += 1;\n    }\n  },\n  {\n    name:\"芙蓉的健康餐\", \n    desc:\"所有敌人获得-1/-0\",\n    onBattleBegin(G, ctx) {\n      G.edeck.map(enemy => {enemy.atk = Math.max(enemy.atk-1, 0);});\n    }\n  },\n  {\n    name:\"压缩糖砖\", \n    desc:\"胜利所需分数-2(最低为10)\",\n    onTurnBegin(G, ctx) {\n      if (G.round_num == 1) {\n        G.goal -= 2;\n        G.goal = Math.max(G.goal, 10);\n      }\n    }\n  },\n  {\n    name:\"香草沙士汽水\", \n    desc:\"每局首次使用干员时不会横置(可叠加)\",\n    onBattleBegin(G, ctx, self) {\n      self.used = false;\n    },\n    onTurnBegin(G, ctx, self) {\n      G.onUseCard.push(\n        (G, ctx, card) => {\n          console.log(G.relics.map(x=>({...x})));\n          let gas = G.relics.find(x => x.name == \"香草沙士汽水\" && (!x.used));\n          console.log({...gas});\n          if (gas && ~G.field.indexOf(card) && card.exhausted) {\n            card.exhausted = false;\n            gas.used = true;\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"倒转的怀表\", \n    desc:\"回合开始时,每有1点动乱就获得3分\",\n    onTurnBegin(G, ctx) {\n      G.score += 3 * G.danger;\n    }\n  },\n  // {\n  //   name:\"断杖-织法者\", \n  //   desc:\"回合开始时,敌人数量每多我方1个,就获得1个钢\",\n  //   onTurnBegin(G, ctx) {\n  //     let diff = G.efield.length - G.field.length;\n  //     if (diff > 0) {\n  //       G.materials[3] += diff;\n  //     }\n  //   }\n  // },\n  {\n    name:\"米格鲁的饼干\", \n    desc:\"所有阻挡数至少为2的,阻挡数+2\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.block >= 2) {\n          x.block += 2;\n        }\n      });\n    }\n  },\n  {\n    name:\"断杖-咏唱\", \n    desc:\"所有采掘力至少为3的,<+2>\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.mine >= 3) {\n          x.mine += 2;\n        }\n      });\n    }\n  },\n  {\n    name:\"铁卫-推进\", \n    desc:\" 阻挡数多于2的,阻挡数-1,但是+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.block >= 2) {\n          x.block -= 1;\n          x.atk += 4;\n          x.hp += 4;\n        }\n      });\n    }\n  },\n  // {\n  //   name:\"辉煌工匠包\", \n  //   desc:\" 所有干员 +3攻 <-1>\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       x.atk += 3;\n  //       x.mine = Math.max(x.mine - 1, 0);\n  //     });\n  //   }\n  // },\n  {\n    name:\"左半边椰子壳\", \n    desc:\" 所有干员+1费,+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost += 1;\n        x.atk += 4;\n        x.hp += 4;\n      });\n    }\n  },\n  {\n    name:\"右半边椰子壳\", \n    desc:\" 所有干员-1费,胜利所需分数+8\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost -= 1;\n      });\n      G.goal += 8;\n    }\n  },\n  {\n    name:\"摩根队长佳酿\", \n    desc:\"起始获得2个钢\",\n    onBattleBegin(G, ctx) {\n      G.materials[3] += 2;\n    }\n  },\n  {\n    name:\"“坏家伙”来了！\", \n    desc:\"起始获得1个随机的强化3干员加入手牌\",\n    onBattleBegin(G, ctx) { \n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      let card = choice(ctx, G.CARDS);\n      reinforce.effect(card);\n      reinforce.effect(card);\n      reinforce.effect(card);\n      G.hand.unshift(card);\n    }\n  },\n  {\n    name:\"残弩-战场依存\", \n    desc:\"所有干员获得 采掘:造成2点伤害\",\n    onTurnBegin(G, ctx) {\n      G.onCardMine.push(\n        (G, ctx) => {\n          deal_random_damage(G, ctx, 2);\n        }\n      );\n    }\n  },\n  {\n    name:\"断杖-突破\", \n    desc:\"所有干员获得 超杀:获得1个材料\",\n    onTurnBegin(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, card, enemy) => {\n          if (enemy.dmg > enemy.hp) {\n            gainMaterials(G, ctx, 1);\n          }\n        }\n      );\n    }\n  },\n  // {\n  //   name:\"锈刃-无人之境\", \n  //   desc:\"所有干员获得 部署:获得1分\",\n  //   onTurnBegin(G, ctx) {\n  //     G.onPlayCard.push(\n  //       (G, ctx) => {\n  //         G.score += 1;\n  //       }\n  //     );\n  //   }\n  // },\n  {\n    name:\"热水壶\", \n    desc:\"购买时变成手里一个藏品的复制\",\n    onBought(S) {\n      let self = S.relics[0];\n      let relic = S.rng.choice(S.relics.slice(1));\n      if (relic) {\n        Object.assign(self, relic);\n      }\n    }\n  },\n  {\n    name:\"全息粉粉沙盒\", \n    desc:\"购买时变成2个随机藏品\",\n    onBought(S) {\n      let self = S.relics[0];\n      S.relics = S.relics.slice(1);\n      for (let i=0; i<2; i++) {\n        let relic = S.rng.choice(S.RELICS);\n        S.relics.unshift({...relic});      \n      }\n      alert(`获得 ${S.relics[0].name} ${S.relics[1].name}`);\n    }\n  },\n].map(init_relic);\n\nexport function init_relic(relic) {\n  return {\n    ...relic,\n    illust: get_relic_img(relic),\n  };\n}\n\nexport function get_relic_img(relic) {\n  return relic_images[relic_names.indexOf(relic.name)];\n}","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick, generate_roguelike_deck } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\nimport { TAGS } from './tags';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Card.css';\nimport './Roguelike.css';\nimport './Competition.css';\nimport { ICONS } from './icons';\nimport { CARDS, heijiao_in_dream } from './cards';\nimport { UPGRADES } from './upgrades';\nimport { RELICS } from './relics';\nimport { lose_image, result_images } from './assets';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到Roguelike模式“黑角的金针菇迷境”！\\n通关要求：完成9局对战；\\n每一局对战，都有要求的危机等级，成功完成该局对战，即可获得赏金，并进入下一局对战；\\n如果其中一次对局失败，则本次Roguelike旅程即宣告失败，胜败乃兵家常事，大侠请重头再来；\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！每高1级，就会额外获得10赏金(最高80赏金)；\\n如果比要求等级高4级，则会达成“满贯”，额外获得50赏金，并跳过1局对战；\\n如果比要求等级高8级，则会达成“大满贯”，额外获得120赏金！并跳过2局对战；`);\n}\n\nfunction reset_tags() {\n  return TAGS.map(x => ({...x}));\n}\n\nfunction setup_roguelike_mode(S) {\n  console.log(\"Roguelike mode reset\");\n  S.roguelike_mode = true;\n\n  S.rng = new PRNG(S.seed || Date());\n\n  init_tags(S);\n  S.RELICS = RELICS.map(x => ({...x}));\n\n  S.Deck = [];\n  S.relics = [];\n  S.gold = 100;\n\n\n  S.game_count = 1;\n  S.level_required = 0;\n\n  S.central_idx = 0;\n\n  S.dream_count = 0;\n\n  reset_card_picks(S);\n  // reset_shop(S);\n}\n\nfunction select_deck(S, deck) {\n  S.Deck = deck;\n  reset_shop(S);\n}\n\nfunction end_roguelike_mode(S) {\n  S.roguelike_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction move_on(S) {\n  S.game_count += 1;\n  S.tags.splice(S.tags.length-1, 0, ...S.remained_tags.slice(0,2));\n  S.remained_tags = S.remained_tags.slice(2);\n}\n\nfunction init_tags(S) {\n  let tags = reset_tags();\n  let final_tag = tags[tags.length - 1];\n  // let init_tags = [...tags.slice(0,6), ...tags.filter((x,idx) => [6,7,9,10,12,13].includes(idx)), final_tag];\n  let init_tags = [...tags.slice(0,15), final_tag];\n  let remained_tags = S.rng.shuffle(tags.filter(t => (!init_tags.includes(t)) && t.level > 0));\n  S.tags = [...init_tags.slice(0,init_tags.length-1), ...remained_tags.slice(0,2), final_tag];\n  S.remained_tags = remained_tags.slice(2);\n}\n\nfunction reduce_basic_tags(tags, rng) {\n  // return tags.filter((x,idx) => !rng.choice([[6,7,8],[9,10,11],[12,13,14]]).includes(idx));\n  return [...tags.slice(0,6), ...rng.shuffle(tags.slice(6)).slice(0,6).sort((t1,t2) => tags.indexOf(t1)-tags.indexOf(t2))];\n}\n\nfunction setup_normal_challenge(tags, rng) {\n  for (let t of tags) {\n    if (t.standard_level <= 2 || [0,3,4,6,9].includes(tags.indexOf(t))) {\n      t.locked = true;\n    }\n  }\n  let challenge_tag = rng.choice(tags.filter(x => x.challenge));\n  challenge_tag.locked = true;\n  let locked_tags = tags.filter(x => x.locked && [2,3].includes(x.level));\n  let other_tags = tags.filter(x => !x.locked && [2,3].includes(x.level));\n  other_tags = rng.shuffle(other_tags).slice(0,3);\n  return [...tags.slice(0,12), ...locked_tags, ...other_tags];\n}\n\nfunction setup_exhausted_challenge(tags, rng) {\n  tags[0].locked = true;\n  tags[1].locked = true;\n  let final_tag = tags[tags.length-1];\n  final_tag.locked = true;\n  let basic_tags = tags.filter(x => x.level == 1);\n  let another_challenge_tag = rng.choice(tags.filter(x => x.level == 3));\n  another_challenge_tag.locked = true;\n  let advanced_tags = rng.shuffle(tags.filter(x => [2,3].includes(x.level) && x != another_challenge_tag)).slice(0,5);\n  return [...basic_tags, another_challenge_tag, ...advanced_tags, final_tag];\n}\n\nfunction setup_daily_tags(S) {\n  let rng = new PRNG(S.date);\n  let tags = reset_tags();\n\n  if (rng.random() <= 0.6) {\n    S.tags = setup_normal_challenge(tags, rng);\n    S.level_required = 24;\n  }\n  else {\n    S.tags = setup_exhausted_challenge(tags, rng);\n    S.level_required = 18;\n  }\n}\n\nfunction enter_daily_mode(S) {\n  S.daily_mode = true;\n  S.date = Date().slice(0,15);\n  // S.date = Math.random();\n  setup_daily_tags(S);\n}\n\nfunction end_daily_mode(S) {\n  S.daily_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction set_difficulty(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [12, 14, 16, 18, 22, 26, 30, 34, 45];\n\n  if (difficulty == \"easy\") {\n    S.levels = [8, 10, 12, 14, 18, 22, 26, 30, 40];\n  }\n\n  if (difficulty == \"hard\") {\n    S.levels = [15, 18, 21, 24, 30, 36, 42, 48, 60];\n  }\n\n  if ([\"medium\", \"hard\"].includes(difficulty)) {\n    S.tags[S.tags.length-1].locked = true;\n  }\n\n  if ([\"hard\"].includes(difficulty)) {\n    S.tags[0].locked = true;\n    S.tags[1].locked = true;\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction preprocess_roguelike_card(card) {\n  card.onPlayBonus = [];\n}\n\nfunction setup_deck_selection(S) {\n  let rng = S.rng;\n  S.deck_names = _.times(3, ()=>rng.choice(CARDS.map(x=>x.name))).map(x => x + \"·黑角\");\n  S.deck_list = S.deck_names.map(generate_roguelike_deck).map(str2deck); // TODO: change the generator\n  S.deck_list.map(deck => deck.map(preprocess_roguelike_card))\n}\n\nfunction get_pick(S) {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card)).filter(card => card != undefined).map(card => ({...card, material:S.rng.randRange(3)})); // EH: Let material not be local solution, but global solution\n}\n\nfunction reset_card_picks(S) {\n  S.card_picks = _.times(3, ()=>get_pick(S));\n}\n\nfunction get_shop_item(S) {\n  // let rng = new PRNG(Math.random());\n  // let rng = S.rng;\n\n  let item_type = S.rng.randRange(100);\n  // console.log(item_type, \"item type\");\n\n  if (item_type <= 60) {\n    // TODO: change this to relic\n    return get_relic(S);\n  }\n  else if (item_type <= 95) {\n    // TODO: change this to upgrade\n    return get_upgrade(S);\n  }\n  else{\n    return delete_card(S);\n  }\n\n}\n\nfunction get_upgrade(S) {\n  let shop_item = {};\n\n  // Get upgrade\n  let upgrade = S.rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = S.rng.randRange(10) + 15;\n  // console.log(\"This deck\", S.Deck);\n  shop_item.indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"获得 \" + upgrade.desc;\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/up-arrow_2b06.png\";\n  shop_item.onBought = (S, idx) => {\n    let card = S.Deck[idx];\n    // console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n    if (card) {\n      upgrade.effect(card);\n    }\n    card.upgraded = true;\n  };\n\n  return shop_item;\n}\n\n// function get_reinforceupgrade(S, rng) {\n//   let shop_item = {};\n\n//   // Get upgrade\n//   let upgrade = rng.choice(UPGRADES);\n//   shop_item.name = \"升级: \" + upgrade.name;\n//   shop_item.price = rng.randRange(20) + 20;\n//   console.log(\"This deck\", S.Deck);\n//   shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n//   shop_item.desc = \"获得 \" + upgrade.desc;\n//   shop_item.onBought = (S, idx) => {\n//     let card = S.Deck[idx];\n//     console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n//     if (card) {\n//       upgrade.effect(card);\n//     }\n//     card.upgraded = true;\n//   };\n\n//   return shop_item;\n// }\n\nfunction get_reinforced_card(S, rng) {\n  let shop_item = {};\n\n  // Get card\n  let card = {\n    ...rng.choice(CARDS),\n    material: rng.randRange(3),\n    upgraded: true,\n    onPlayBonus: [], // EH: this should be abstracted instead of write here again\n  };\n  let reinforce_time = rng.randRange(2) + 1;\n\n  shop_item.name = card.name + \"(强化\" + reinforce_time + \")\";\n  shop_item.price = rng.randRange(20) + 20 + (30+rng.randRange(20)) * (reinforce_time - 1);\n  shop_item.desc = card.desc;\n\n  let reinforce_once = UPGRADES.find(x => x.name == \"强化1\");\n  for (let i=0; i<reinforce_time; i++) {\n    reinforce_once.effect(card);\n  }\n\n  shop_item.onBought = (S) => {\n    S.Deck.unshift(card);\n  };\n\n  return shop_item;\n}\n\nfunction get_relic(S) {\n  let shop_item = {};\n  let relic = S.rng.choice(RELICS);\n\n  shop_item.name = relic.name;\n  shop_item.desc = relic.desc;\n  shop_item.price = 30 + S.rng.randRange(20);\n  shop_item.src = relic.illust;\n\n  shop_item.onBought = (S) => {\n    let bought = {...relic};\n    console.log(\"Bought relic \", bought.name);\n\n    for (let r of S.relics) {\n      r.onBuyRelic && r.onBuyRelic(S, bought, r);\n    }\n\n    S.relics.unshift(bought);\n    if (bought.onBought) {\n      bought.onBought(S);\n    }\n  }\n\n  return shop_item;\n}\n\nfunction delete_card(S) {\n  let shop_item = {};\n\n  shop_item.name = \"删1张牌\";\n  shop_item.price = 10 + S.rng.randRange(10);\n  shop_item.indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"\";\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/foot_dark-skin-tone_1f9b6-1f3ff_1f3ff.png\";\n  shop_item.onBought = (S, card_idx) => {\n    console.log(\"The index:\", card_idx);\n    console.log(\"Before delete\", S.Deck.length, S.Deck);\n    S.Deck = S.Deck.filter((x,idx) => (idx != card_idx));\n    console.log(\"After delete\", S.Deck.length, S.Deck);\n  }\n\n  return shop_item;\n}\n\n\nfunction payGold(S, amount) {\n  if (S.gold >= amount) {\n    S.gold -= amount;\n    return true;\n  }\n  else {\n    alert(\"剩余赏金不够\");\n    return false;\n  }\n}\n\nfunction buy(S, idx) {\n  let item = S.current_item;\n  let item_idx = S.current_item_idx;\n  if (payGold(S, item.price)) {\n    S.shop_items = S.shop_items.filter((x,idx) => idx != item_idx);\n    if (idx != undefined) {\n      console.log(\"The indexes are:\", S.current_item.indexes.map(x=>x));\n      console.log(\"The selected index is:\", idx);\n      console.log(\"The chosen index is:\", S.current_item.indexes[idx]);\n      let card_idx = S.current_item.indexes[idx];\n      item.onBought(S, card_idx);\n    }\n    else {\n      item.onBought(S);\n    }\n  }\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(6, ()=>get_shop_item(S));\n}\n\nfunction refresh_shop(S) {\n  if (payGold(S, 10)) {\n    reset_shop(S);\n  }\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.card_picks[idx], ...S.Deck];\n  S.card_picks = undefined;\n\n  for (let r of S.relics) {\n    r.onPickCards && r.onPickCards(S);\n  }\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n\n  for (let r of S.relics) {\n    r.onSkipPick && r.onSkipPick(S);\n  }\n}\n\nfunction enter_dream(S) {\n  S.dream_count += 1;\n  if (S.dream_count == 9) {\n    alert(\"已进入黑角梦境\");\n    S.Deck = _.times(10, () => heijiao_in_dream);\n    S.relics = [...S.RELICS];\n  }\n  S.gold = 5000;\n}\n\nexport function get_gold_gained(risk_level, level_required) {\n   let gold_gained = 20;\n\n    let level_diff = risk_level - level_required;\n    gold_gained += Math.min(level_diff * 10, 100);\n\n    // For slam, don't store them in variables, instead, calculate it on time\n    // So do plenty of other things\n    if (level_diff >= 4) {\n      gold_gained += 50;\n    }\n    if (level_diff >= 8) {\n      gold_gained += 70;\n    }\n\n    return gold_gained;\n\n}\n\nfunction continue_run(S) {\n  // Resets go here\n  S.central_idx = 1;\n  reset_shop(S);\n  reset_card_picks(S);\n\n  if (S.won) {\n    S.gold += get_gold_gained(S.level_achieved, S.level_required);\n  }\n\n  for (let r of [...S.relics]) {\n    r.onBattleEnd && r.onBattleEnd(S, r);\n  }\n\n  // TODO: Reconstruct this part, into moveOn()\n  // S.game_count += 1;\n  move_on(S)\n\n  if ((S.level_achieved - S.level_required) >= 4) {\n    // S.game_count += 1;\n    move_on(S)\n  }\n  if ((S.level_achieved - S.level_required) >= 8) {\n    // S.game_count += 1;\n    move_on(S)\n  }\n  S.game_count = Math.min(S.game_count, 9);\n\n  S.level_required = S.levels[S.game_count - 1];\n}\n\nexport function random_upgrade(S) {\n  let card = S.rng.choice(S.Deck);\n  let upgrade = S.rng.choice(UPGRADES);\n  upgrade.effect(card);\n  alert(`${card.name} is upgraded with ${upgrade.name}`);\n}\n\n\nexport function RoguelikeDeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">选择你的卡组</div>\n    {props.decks.map(deck => <RoguelikeDeckRepr {...deck} />)}\n    <br/>\n    {/* <button className=\"deck-selection-button\" onClick={props.back}>返回</button> */}\n  </div>\n}\n\nfunction RoguelikeDeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper desc\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.refresh_picks}><span>刷新选牌({ICONS.gold}10)</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得{ICONS.gold}10</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\" align=\"center\">\n    <div className=\"shop-item-img-container\"><img src={props.src} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <span className=\"shop-item-price\">{ICONS.gold}{props.price}</span>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    <button className=\"buy\" onClick={props.buy}>购买</button>\n  </div>\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"shop-items\">    \n      {props.shop_items.map((item, idx) => <ShopItem {...item} buy={props.buy(idx)} />)}\n    </div>\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店({ICONS.gold}10)</button>\n  </div>\n\n}\n\nexport function Roguelike(props) {\n  return <div className=\"central\">\n    <div className=\"heijiao-container-2\">\n      <img src=\"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\" className=\"heijiao-img-2\" />\n    </div>\n    <div className=\"counter-container\" align=\"center\">\n      <div className=\"battle-count-title\" >第<span className=\"battle-count\">{props.game_count || 1}</span>/<span onClick={props.enter_dream}>9</span>战</div>\n    </div>\n    <div className=\"roguelike-operations\">\n      <button onClick={props.enter_battle} className=\"roguelike-operation primary\">进入对战</button>\n      <button onClick={props.check_deck} className=\"roguelike-operation\">查看卡组</button>\n      <button onClick={props.check_relics} className=\"roguelike-operation\">查看藏品</button>\n    </div>\n  </div>\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"finish-pick\">你已经完成了选择</div>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport function RoguelikeEntry(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"entry\">欢迎来到集成战略模式<br/>“黑角的金针菇迷境”<br/>请选择难度</div>\n    <div className=\"difficulty-selection\">\n      {props.difficulties.map(selection => <button className=\"difficulty-button\" onClick={selection.handleClick}>{selection.name}</button>)}\n    </div>\n    <button className=\"introduce-button\" onClick={props.back}>返回</button>\n    <button className=\"introduce-button\" onClick={introduce_roguelike_mode}>集成战略模式介绍</button>\n  </div>\n}\n\nexport function ShowMeTheMoney(props) {\n  return <div className=\"gold-gained\">\n    {ICONS.gold}+{props.amount}\n  </div>\n\n}\n\nexport function ResultWin(props) {\n  let slam = \"\";\n  if (props.slam) {\n    slam = \"满贯！\";\n  }\n  if (props.grand_slam) {\n    slam = \"大满贯！\";\n  }\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务完成<br/>\n      第{props.game_count}/9战<br/>\n      要求等级: {props.level_required}<br/>\n      实际等级: {props.level_achieved}<br/>\n    </div>\n    <ShowMeTheMoney \n      amount = {props.gold_amount}\n    />\n    <div className=\"slam\">{slam}</div>\n    <button className=\"continue-btn primary\" onClick={props.continue} >继续</button>\n  </div>\n\n}\n\nexport function ResultLose(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务失败<br/>\n      第{props.game_count}/9战<br/>\n    </div>\n    <div className=\"result-quote\">\n      胜败乃兵家常事<br/>\n      博士请重新来过\n    </div>\n    <div className=\"lose-img-container\">\n      <img src={lose_image} className=\"lose-img\"></img>\n    </div>\n    <button className=\"endrun-btn\" onClick={props.continue}>结束游戏</button>\n  </div>\n}\n\nexport function FinalResult(props) {\n  let [src, p_id] = props.rng.choice(result_images);\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      <div className=\"ascension\">通关！</div>\n      完成难度: {props.difficulty}\n    </div>\n    <div className=\"result-img-container\">\n      <img className=\"result-img\" src={src} />\n    </div>\n    <div className=\"result-win-quote\">面对天灾，<br/>我们甚至秀得飞起</div>\n    {/* TODO: Add show deck and show relics */}\n  <button className=\"endrun-btn\" onClick={props.continue}>{props.endgame}</button>\n  <div className=\"illust-info\">图片p站id: {p_id}</div>\n  </div>\n\n\n}\n\nexport const roguelike = {\n  setup_roguelike_mode,\n  set_difficulty,\n  setup_deck_selection,\n  select_deck,\n\n  pick_cards,\n  skip_pick,\n  enter_dream,\n  buy,\n  reset_shop,\n  refresh_shop,\n\n  continue_run,\n  end_roguelike_mode,\n\n  enter_daily_mode,\n  end_daily_mode,\n};","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h2>明日方舟: 采掘行动 游戏规则</h2>\n  <br/><br/>\n  <a href=\"https://www.bilibili.com/video/BV1554y167ax\n\">2分钟视频教学(B站)</a>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘能力为3，博士因此获得了{material_icons[0]}{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 点击干员，然后点击敌人，接着点击“战斗”，选定干员就会对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单能力:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次，点击已完成订单，然后点击“行动”，即可使用；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得4分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  {/* 回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/> */}\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  * 完成危机等级-50  <br/>\n  * 连续完成7天的每日挑战  <br/>\n  * 通关“黑角的金针菇迷境”整装待发难度  <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 热水壶\"完成危机等级18  <br/>\n  * 完成危机等级40  <br/>\n  <br/><br/>\n  <h4>FAQ:</h4>\n  <b>Q: 这游戏为什么这么屑？</b><br/>\n  A: 大雕出品，必属精品；<br/>\n  <b>Q: {\"<+1>\"}是什么+1?</b><br/>\n  A: 你有没有觉得{\"<>\"}很像一个镐子？<br/>\n  <b>Q: “重置状态”是什么意思？</b><br/>\n  A: 边是黑的，就是重置状态，边是红的，就是横置状态，干员一回合只能动一次，边从黑色变成红色，就是动过了；<br/>\n  <b>Q: “超杀”是什么意思？</b><br/>\n  A: 战斗时，造成了超过敌人生命值的额外伤害，比如5点攻击力打2血的，溢出了3点伤害，就会触发“超杀”效果；<br/>\n  <b>Q: 场面和手牌的上限都是多少？</b><br/>\n  A: 场面上限8，手牌上限12，召唤类效果无视场面上限，获得手牌类效果(比如摄影车、清流)无视手牌上限;<br/>\n  <b>Q: 哪些干员无法被重置？</b><br/>\n  A: 雷蛇，白面鸮，艾雅法拉，能天使，温蒂，霜叶；<br/>\n  <b>Q: 为什么阿米娅强化1次之后，点击行动，会变成近卫阿米娅？</b><br/>\n  A: 游戏里还有更多的彩蛋等着你来发现~<br/>\n  <b>Q: 替换是什么意思？</b><br/>\n  A: 出场时会换掉敌人阵列中最后一个非精英敌人，是个好效果；<br/>\n  <b>Q: 为什么敌方牌库被抽完也算输？</b><br/>\n  A: 只有分数达标才算赢，别的都算输；<br/>\n  <b>Q: </b><br/>\n  A: <br/>\n  <b>Q: </b><br/>\n  A: <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilterContainer } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks, get_desc, get_blocker } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck, default_filter, FILTERS } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop, RoguelikeEntry, RoguelikeDeckSelection, Roguelike, ResultWin, ResultLose, FinalResult, get_gold_gained } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n    this.process_relic_details = this.process_relic_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_relic_board = this.render_relic_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_shop_board = this.render_roguelike_shop_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n    this.render_roguelike_final_result_board = this.render_roguelike_final_result_board.bind(this);\n    this.render_roguelike_entry_board = this.render_roguelike_entry_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n    this.end_roguelike_mode = this.end_roguelike_mode.bind(this);\n    this.buy_item = this.buy_item.bind(this);\n\n    this.enter_daily_mode = this.enter_daily_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.reset_preview_deck = this.reset_preview_deck.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(produce((S) => action(S, ...args))), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      shop_selected: -1,\n      hand_choices: [false, false, false, false, false],\n      preview_filter: default_filter,\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_roguelike_result_board,\n      // DEFAULT\n      last_board: this.render_title_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n\n      dream_count: 0,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags, just_selected: new_tags[idx]});\n    };\n  }\n\n  choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,9].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    if (this.state.competition_mode) {\n      for (let tag of new_tags) {\n        if (tag.selected) {\n          tag.locked = true;\n        }\n      }\n    }\n\n    return new_tags;\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n\n  reset_preview_deck() {\n    this.setState({\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n    });\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    // EH: Reconstruct this, this is too procedure\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      vulnerable: card.vulnerable? (\"↓\" + card.vulnerable) : undefined,\n      //cost: card.cost,\n      blocked: get_blocker(this.props.G, this.props.ctx, card)? ICONS.block : undefined,\n    }; \n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_relic_details(relic) {\n    return {\n      eo_illust_detailed: relic.illust,\n      desc: relic.desc,\n    };\n  }\n\n  render_relic_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.relics.map(this.process_relic_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      // name: card.name,\n      desc: get_desc(card),\n      // desc: (\n      //   <span>\n      //     <span style={{fontSize:\"120%\"}}>\n      //       {card.atk}/{card.hp} &nbsp;\n      //       {ICONS.mine}{card.mine} &nbsp;\n      //       {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n      //     </span>\n      //     <br/>\n      //     {card.desc||\"\"}\n      //     <br/>\n      //     <span style={{\n      //       display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n      //     }}>\n      //       <i>\n      //       部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      //       </i>\n      //       <br/>\n      //     </span>\n      //     ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n      //     <br />\n      //     <i>{card.quote||\"\"}</i>\n      //   </span>\n      // ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      // if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n      //   this.play_card();\n      // }\n      // else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      // }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  //CHANGE\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"mode_selection\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"relic\": this.render_relic_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_entry\": this.render_roguelike_entry_board,\n      \"roguelike_shop\": this.render_roguelike_shop_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n      \"roguelike_final_result\": this.render_roguelike_final_result_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n\n    // Other onBoardSet functions go here\n    if (new_board == \"preview\") {\n      this.setState({preview_filter: default_filter});\n    }\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.competition_mode || this.state.roguelike_mode){\n      deck = this.state.Deck;\n      seed += this.state.roguelike_mode? this.state.game_count : this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    if (this.state.roguelike_mode) {\n      // Setup other roguelike stuffs here\n      this.props.moves.setupRoguelikeBattle(this.state.relics);\n    }\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else if (this.state.roguelike_mode) {\n      // Let results stuffs go to winning \n      // Set finishing stuffs here\n\n      this.change_board(\"roguelike_result\");\n      // this.roguelike.end_battle();\n    }\n    else{\n      this.change_board(\"tag\");\n      this.setState({seed: get_seed_name()});\n    }\n  }\n\n  end_roguelike_mode() {\n    this.roguelike.end_roguelike_mode();\n    this.enter_roguelike_mode();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"updated\");\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      console.log(\"Get the result\");\n      this.setState({\n        scenario_finished: true,\n        won: result.win,\n        level_achieved: this.get_risk_level(),\n        extra_gain: this.props.G.extra_gain,\n      });\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 50 && risk_level < 60) {\n          grade = \"SSSS\";\n        }\n        else if (risk_level >= 60 && risk_level < 70) {\n          grade = \"SSSSS\";\n        }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // console.log(\"Time to alert finish\");\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n${this.state.daily_mode?`完成每日挑战: ${this.state.date}\\n`:\"\"}地图种子: ${this.state.seed}`);\n\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n\n\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n        \n      \n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={() => {this.reset_preview_deck();this.check_deck();}} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      \"每日挑战\": this.enter_daily_mode,\n           // \"Roguelike模式\": this.enter_roguelike_mode,\n      \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_filter(this.state.preview_deck).map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n      <TypeFilterContainer \n        filters = {FILTERS.map(filter_ => ({\n          ...filter_,\n          selected: this.state.preview_filter == filter_.f,\n          handleClick: () => {\n            if (this.state.preview_filter == filter_.f) {\n              this.setState({preview_filter: default_filter});\n            }\n            else {\n              this.setState({preview_filter: filter_.f});\n            }\n          },\n        }))}\n      />\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.slice(0,5).map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.roguelike.select_deck(deck);this.change_board(\"roguelike\");},\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: this.choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_entry\");\n  }\n  \n  enter_daily_mode() {\n    this.roguelike.enter_daily_mode();\n    this.change_board(\"tag\");\n  }\n\n  enter_difficulty(difficulty) {\n    this.roguelike.set_difficulty(difficulty);\n    this.change_board(\"roguelike_deck_selection\");\n  }\n\n  buy_item(idx) {\n    return () => {\n      let item = this.state.shop_items[idx];\n      this.setState({\n        current_item: item,\n        current_item_idx: idx,\n      });\n\n      if (item.indexes) {\n        this.change_board(\"roguelike_shop\");\n      }\n      else {\n        this.roguelike.buy();\n      }\n    };\n  }\n\n  render_roguelike_entry_board() {\n    let difficulties = [\n      {\n        name: \"欢乐云游\",\n        handleClick: () => this.enter_difficulty(\"easy\"),\n      },\n      {\n        name: \"整装待发\",\n        handleClick: () => this.enter_difficulty(\"medium\"),\n      },\n      {\n        name: \"苦难之路\",\n        handleClick: () => this.enter_difficulty(\"hard\"),\n      },\n    ];\n    return <RoguelikeEntry \n      difficulties = {difficulties}\n      back = {() => {this.roguelike.end_roguelike_mode();this.change_board(\"tag\");}}\n    />;\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <RoguelikeDeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} />\n// introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} \n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} buy={this.buy_item} refresh_shop={this.roguelike.refresh_shop} />\n\n    const roguelike_main = <Roguelike \n      enter_battle = {() => this.change_board(\"tag\")}\n      enter_dream = {this.roguelike.enter_dream}\n      game_count = {this.state.game_count}\n      check_deck = {() => {this.setState({preview_deck:this.state.Deck});this.change_board(\"preview\");}}\n      check_relics = {() => {this.change_board(\"relic\");}}\n    />;\n\n    const centrals = [roguelike_main, card_picks, shop];\n\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"选牌区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_shop_board() {\n    // let cards = this.state.Deck.filter((x,idx) => this.state.current_item.indexes.includes(idx) && (idx < this.state.Deck.length));\n    let cards = this.state.current_item.indexes.map(idx => this.state.Deck[idx]).filter(x => x != undefined);\n    let selected_card = cards[this.state.shop_selected];\n    // console.log(cards);\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <div style={{marginTop: \"38.2%\", marginLeft: \"2%\"}}>{this.state.current_item.desc}</div>\n      <CardRow \n        cards = {cards.map(this.process_hand_data)}\n        handleClick = {(idx)=>()=>this.setState({shop_selected: idx})}\n        states = {this.state.current_item.indexes.map((x,idx) => ({selected: (idx==this.state.shop_selected)}))}\n        additionalStyle = {{marginTop: \"5%\"}}\n      />\n      <div style={{margin:\"5% 2% 5% 2%\", width:\"95%\", height:\"30%\", overflowY:\"hidden\"}}>\n        {selected_card && get_desc(selected_card)}\n      </div>\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.roguelike.buy(this.state.shop_selected);\n          this.back();\n        }}\n      >\n        确认购买({ICONS.gold}{this.state.current_item.price})\n      </button>\n      <button className=\"preview-button\" onClick={this.back}>返回</button>\n    </div>);\n  }\n\n  render_roguelike_result_board() {\n    let level_diff = this.state.level_achieved - this.state.level_required;\n    let win = <ResultWin \n      game_count = {this.state.game_count}\n      level_required = {this.state.level_required}\n      level_achieved = {this.state.level_achieved}\n      gold_amount = {get_gold_gained(this.state.level_achieved, this.state.level_required)}\n      slam = {level_diff >= 4}\n      grand_slam = {level_diff >= 8}\n      continue = {() => {\n        let game_count = this.state.game_count;\n        this.roguelike.continue_run();\n        if (game_count < 9) {\n          this.change_board(\"roguelike\");\n        }\n        else {\n          this.change_board(\"roguelike_final_result\");\n        }\n      }}\n    />\n    let lose = <ResultLose\n      game_count = {this.state.game_count}\n      continue = {this.end_roguelike_mode}\n    />\n    return this.state.won? win : lose;\n  }\n  \n  render_roguelike_final_result_board() {\n    let difficulty = {\n      easy: \"欢乐云游\",\n      medium: \"整装待发\",\n      hard: \"苦难之路\",\n    }[this.state.difficulty];\n    return <FinalResult \n      difficulty = {difficulty}\n      endgame = \"结束游戏\"\n      continue = {this.end_roguelike_mode}\n      rng = {this.state.rng || new PRNG(Math.random())}\n    />;\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          {this.props.ctx.gameover? <span>{ICONS.endgame}结束游戏</span>:<span>{ICONS.endturn}结束回合</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n\n            display: (this.state.competition_mode || this.state.roguelike_mode)?\"none\":\"\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      快速设置: () => this.setState({\n        tags: this.choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      // 其他模式: () => this.change_board('mode_selection'),\n      每日挑战: this.enter_daily_mode,\n      肉鸽模式: this.enter_roguelike_mode,\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n    if (this.state.roguelike_mode) {\n      actions = {};\n\n      if (risk_level >= this.state.level_required) {\n        actions.进入游戏 = () => this.enter_game();\n      }\n    }\n\n    if (this.state.daily_mode) {\n      let end_daily_mode = () => {\n          this.roguelike.end_daily_mode();\n          this.change_board(\"tag\");\n        };\n      actions = {\n        返回: end_daily_mode ,\n      };\n\n      if (risk_level >= this.state.level_required) {\n        actions = {\n          进入游戏: () => this.change_board(\"deck\"),\n          返回: end_daily_mode,\n        };\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n          just_selected = {this.state.just_selected}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"#cf1322\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16 && (!(this.state.roguelike_mode || this.state.daily_mode)))? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 1% 2%\",\n            display:(this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          今天是: {this.state.date}\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 3% 2%\",\n            display:(this.state.roguelike_mode || this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          要求危机等级: {this.state.level_required}\n        </div>\n\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        // this.setState({\n          // preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.reset_preview_deck();\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}