{"version":3,"sources":["cards.js","enemies.js","icons.js","orders.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","DeckGenerator.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["CARDS","name","cost","atk","hp","mine","block","illust","reinforce","onReinforce","G","ctx","self","reinforce_desc","desc","onMine","score","power","deal_random_damage","onPlay","draw","onFight","gainMaterials","action","costs","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","init_card_state","move","onOut","hand","field","card","enemy","materials","ready_random_card","cure","payCost","get_rhine_order","finished","random","Shuffle","order","num_finished","map","i","ENEMIES","join","drawEnemy","is_elite","onUnrest","danger","high","dmg","idx","Die","deal_damage","ICONS","alcohol","src","height","rma","rock","d32","order_illust","material_icons","ORDERS","requirements","reward","effect","payMaterials","map_object","fn","obj","new_obj","k","PRNG","seed","this","val","charCodeAt","Math","sin","result","floor","arr","len","randRange","d1","d2","cd_idx","splice","push","logMsg","count","cnt","gained","material","delta","use","out","deck","stage","amount","exhausted_enter","unshift","pop","drawOrder","odeck","sort_finished","sort","o","indexOf","edeck","switcher","surge","switchEnemy","unexhausted","exhausted_cards","includes","Object","assign","rhine","str2deck","deck_data","card_dict","item","arr2obj","cards","split","card_data","parseInt","target_card","j","msg","messages","AC","setup","get_enemies","concat","discard","ediscard","orders","goal","max_danger","playing","console","log","moves","setDeck","addTags","tags","onScenarioBegin","events","endTurn","play","act","setValue","attr","finishOrder","useOrder","fight","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","c","get_blocker","blocker_idx","changeMsg","turn","onBegin","refresh","onTurnBegin","fog","onEnd","onEnemyStageEnd","endIf","win","reason","undefined","Card","props","additional_styles","e_illust","o_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","style","cardStyle","keys","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","CardDetailed","align","Controller","actions","process_action","checkCard","float","display","EnterGame","switchScene","Panel","content","TagSelection","tbody","row","row_tags","slice","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","type","onChange","handleChange","changeName","checkDeck","TitleScreen","textAlign","enterGame","checkRule","PREFIXES","strategies","get_random_card","rng","choice","get_deck_name","get_single_card","count1","count2","generate_deck","deck_name","s1","s2","strategy","arr2deck","remove_redundant","output","deck2str","TAGS","tag_list","t","process_tags","RULES","_","require","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","play_card","use_mine","use_fight","use_act","reinforce_card","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","change_board","choose_tag","get_risk_level","enter_game","check_deck","back","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","branch","show_field","show_tag_selection","board","last_board","preview_deck","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","log_select","new_tags","setState","reduce","acc","icon","order_effect","finished_effect","illust_detailed","cost_detailed","fontSize","times","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","target","new_board","boards","reset","gameover","grade","alert","width","margin","overflow","player_panel","end_game","game_panel","position","top","left","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f90bbb9.chunk.js","sourcesContent":["import { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state\n} from './Game';\n\nexport var CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      G.score += 1 + self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+2*self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 3,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 4;\n    },\n    reinforce_desc: \"+0/+4\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 6,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+6/+2\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 1,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://ak.mooncell.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个随机材料\",\n    illust:\"http://ak.mooncell.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1个\",\n  },\n\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust:\"http://ak.mooncell.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动：获得3点费用\",\n    action(G, ctx, self) {\n      G.costs += 3 + 3 * self.power;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得3点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"战斗：获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘：获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘：横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://ak.mooncell.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动：打出牌库顶的1张牌\", \n    illust:\"http://ak.mooncell.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      //EH: add \"init field card state\" function\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"红豆\", \n    cost:4, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"亡语：将手牌中的1名干员部署到场上\", \n    illust:\"http://ak.mooncell.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    onOut(G, ctx, self) {\n      if (G.hand.length > 0) {\n        let card = move(G, ctx, \"hand\", \"field\");\n        init_card_state(G, ctx, card);\n      }\n      G.costs += 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"并返还2点费用\",\n  },\n  \n  {\n    name:\"推进之王\", \n    cost:5, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署：所有手牌的费用-1\", \n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce_desc: \"再触发一次”部署:“效果\",\n  },\n\n  {\n    name:\"天火\", \n    cost:5, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"部署：场上所有其他干员获得<+2>\", \n    illust:\"http://ak.mooncell.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card.name != self.name) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"能天使\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"攻击被横置的敌人时，获得+3/+3和<+1>\", \n    illust:\"http://ak.mooncell.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        self.atk += 3;\n        self.hp += 3;\n        self.mine += 1;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗：对一个敌人造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+self.power*2);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:2, \n    hp:2, \n    mine:1, \n    block:2, \n    desc:\"部署：场上每有1个干员，就获得+1/+1和<+1>\", \n    illust:\"http://ak.mooncell.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        self.atk += 1;\n        self.hp += 1;\n        self.mine += 1;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署：对两名敌人造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce_desc: \"再触发一次”部署:“效果\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:4, \n    hp:5, \n    mine:2, \n    block:1, \n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc:\"部署：获得2个D32钢\", \n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      G.materials[3] += 1;\n    },\n    reinforce_desc: \"获得1个D32钢\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:5, \n    mine:1, \n    block:2, \n    desc:\"行动：获得+3生命值\", \n    illust:\"http://ak.mooncell.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2生命值\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗：横置1个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 8;\n    },\n    reinforce_desc: \"+0/+8\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗：重置1个干员\", \n    illust:\"http://ak.mooncell.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 8;\n    },\n    reinforce_desc: \"+0/+8\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:2, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动：使一名干员获得+4生命值\", \n    illust:\"http://ak.mooncell.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 4 + 2 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2生命值\",\n  },\n  \n  {\n    name:\"清流\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动：使一名干员获得+6生命值\", \n    illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"空\", \n    cost:3, \n    atk:0, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"行动：横置2个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n      if (self.power > 0) {\n        exhaust_random_enemy(G, ctx);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再横置1个(限强化1次)\",\n  },\n  \n  {\n    name:\"阿消\", \n    cost:4, \n    atk:3, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"行动：消耗3点费用，获得4分\", \n    illust:\"http://ak.mooncell.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3-2*self.power)) {\n        G.score += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用-2\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署：获得2个“莱茵生命订单”\",\n    illust:\"http://ak.mooncell.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个”莱茵生命订单“\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动：获得1个“莱茵生命订单”，重置1个干员\",\n    illust:\"http://ak.mooncell.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n      if (self.power > 0) {\n        ready_random_card(G, ctx, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再重置1个(限强化1次)\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc:\"行动：重置所有已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    action(G, ctx, self) {\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"采掘：重置1个已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    onMine(G, ctx, self) {\n      for (let order of ctx.random.Shuffle(G.finished)) {\n        if (order.exhausted) {\n          order.exhausted = false;\n          break;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  {\n    name:\"塞雷娅\",\n    cost:7,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署：每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"采掘：触发场上所有干员的“采掘:”效果\",\n    illust:\"http://ak.mooncell.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      for (let card of G.field) {\n        if (card.onMine && (card.name != self.name)) {\n          card.onMine(G, ctx, self);\n          if (self.power > 0) {\n            card.onMine(G, ctx, self);\n          }\n        }\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再触发1次(限强化1次)\",\n  },\n  \n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:3,\n    block:1,\n    desc:\"部署：触发手牌中所有干员的“部署:”效果\",\n    illust:\"http://ak.mooncell.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.name != self.name)) {\n          card.onPlay(G, ctx, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"莫斯提马\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"采掘：每有1个横置的敌人，就额外获得1个随机材料\",\n    illust:\"http://ak.mooncell.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      for (let i=0; i<self.power; i++) {\n        exhaust_random_enemy(G, ctx);\n      }\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得”采掘:横置1个敌人“\",\n  },\n\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import { drawEnemy, switchEnemy, deal_damage } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 3,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"涌动\",\n    onPlay(G, ctx) {\n      drawEnemy(G, ctx);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onUnrest(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对最后部署的高台位造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        high[high.length-1].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场：使一个敌人获得+3攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 3;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换，行动：对所有干员造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"亡语：对一个随机干员造成{攻击力+2}点伤害\",\n    onOut(G, ctx, self) {\n      if (G.field.length > 0) {\n        let idx = ctx.random.Die(G.field.length) - 1;\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n      }\n    }\n    \n  },\n\n];","import React from 'react';\nconst icon_height = \"25em\";\nconst attr_icon_height = \"20em\";\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n}","import { React } from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let cnt = count || 1;\n  let gained = [];\n\n  for (let i=0; i<cnt; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nfunction get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  for (let c of G.field) {\n    blocked_enemies += c.block || 0;\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  //cards with no damage may not have the damage attr\n  card.dmg = card.dmg || 0;\n  card.dmg += dmg;\n  logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n  if (card.dmg >= card.hp && G.stage != \"enemy\") {\n    out(G, ctx, deck, idx);\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  if (G.efield.length > 0){\n    let idx = ctx.random.Die(G.efield.length) - 1\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = 0;\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } //TODO: else, lose the game\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n  }\n}\n\nfunction sort_finished(G) {\n  G.finished.sort(x=>ORDERS.map(o=>o.effect).indexOf(x.effect));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = true;\n    enemy.dmg = 0;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n    }\n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    card.action(G, ctx, card);\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n  }\n}\n\nfunction reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (payMaterials(G, ctx, requirements)) {\n    card.power += 1;\n    if (card.onReinforce) {\n      card.onReinforce(G, ctx, card);\n    }\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!x.exhausted));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (![self.name, \"雷蛇\", \"白面鸮\"].includes(x.name))));\n  if (exhausted_cards.length > 0) {\n    ctx.random.Shuffle(exhausted_cards)[0].exhausted = false;\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.map(x=>x).sort(x => -x.dmg);\n  let card = ranked_field_by_dmg[0];\n  card.dmg -= amount;\n  if (card.dmg < 0) {\n    card.hp -= card.dmg;\n    card.dmg = 0;\n  }\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = Object.assign({}, ctx.random.Shuffle(G.odeck)[0]);\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  G.stage = \"enemy\";\n}\n\nfunction enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n    if (enemy.action) {\n      enemy.action(G, ctx, enemy);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n      }\n\n      else {\n        G.danger += 1;\n        logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n        if (enemy.onUnrest) {\n          enemy.onUnrest(G, ctx, enemy);\n        }\n      }\n    }\n  }\n}\n\nfunction onEnemyStageEnd(G, ctx) {\n  for (let i=G.field.length-1; i>=0; i--) {\n    let card = G.field[i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, \"field\", i);\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<3; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\nfunction setDeck(G, ctx, deck_data) {\n  G.deck = ctx.random.Shuffle(str2deck(deck_data));\n}\n\nfunction logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies()));\n    G.odeck = ctx.random.Shuffle(ORDERS.map(x=>Object.assign({},x)));\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n\n    G.exhausted_enter = false;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n\n    console.log(ctx.random);\n\n    return G;\n  }\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDeck,\n    addTags,\n    onScenarioBegin,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    drawEnemy,\n    fight,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        refresh(G, ctx);\n        draw(G, ctx);\n        drawOrder(G, ctx);\n        G.costs += 3;\n\n        for (let card of G.field.concat(G.efield.concat(G.finished))) {\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1;i>=0;i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      onEnemyStageEnd(G, ctx);\n    },\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    hp: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  }\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\">\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card={card}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CardDetailed = (props) => {\n  return (\n    <div className=\"card-board\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n        <button className=\"controller-button\" onClick={props.checkCard} style={{float:\"right\", display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.action}\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level==3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"50%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>查看规则</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 地火 高级资深干员 非洲战神 黄票之源 注意力涣散 精二满级 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 公招巨头 富婆 老婆 猛男 打得不错 神抽狗 金色普通\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst dubin_score = `杜宾 0 3\n推进之王 0 3\n天火 0 3\n香草 2 3\n讯使 2 3\n芬 2 3\n米格鲁 0 3\n玫兰莎 0 2\n芙蓉 0 2\n克洛丝 0 2\n清流 0 1\n蛇屠箱 0 1\n史都华德 3 4\n炎熔 2 3\n阿米娅 2 3\n白面鸮 0 2\n远山 0 2`;\n\nconst solve = `空 2 3\n能天使 1 3\n天火 1 3\n克洛丝 1 3\n杰西卡 1 3\n蓝毒 1 3\n桃金娘 1 3\n香草 1 3\n陈 0 2\n德克萨斯 0 2\n炎熔 0 2\n芬 0 2\n推进之王 0 2\n阿消 0 2\n蛇屠箱 0 2\n白面鸮 0 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n可颂 1 3\n能天使 1 3\n莫斯提马 1 3\n巡林者 0 2\n雷蛇 0 2\n桃金娘 1 3\n讯使 0 2\n阿消 0 2\n白面鸮 0 2`;\n\nconst highcost = `风笛 2 3\n红豆 3 4\n桃金娘 2 4\n蛇屠箱 1 3\n清流 1 3\n巡林者 1 3\n12F 1 3\n黑角 1 3\n芙兰卡 0 3\n可颂 0 2\n陈 0 2\n蓝毒 0 2\n雷蛇 0 2\n星极 0 2\n天火 0 2\n白面鸮 0 2`;\n\nconst rhine = `赫默 2 3\n白面鸮 2 3\n伊芙利特 1 2\n塞雷娅 1 2\n远山 1 2\n清流 1 2\n桃金娘 1 2\n讯使 0 2\n炎熔 0 2\n蛇屠箱 0 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 2 3\n远山 0 2\n杰西卡 2 3\n讯使 2 3\n德克萨斯 1 3\n雷蛇 0 2\n可颂 0 2\n蓝毒 0 2\n陈 0 2`;\n\nconst angelina = `安洁莉娜 1 2\n芬 2 3\n推进之王 1 3\n米格鲁 0 1\n杜宾 1 2\n塞雷娅 0 2\n天火 1 2\n陈 1 2\n赫默 1 2\n星极 1 2`;\n\nconst strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina];\n\n\nfunction get_random_card(rng) {\n  return rng.choice(CARDS).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n  let s1 = rng.choice(strategies).split(\"\\n\");\n  let s2 = rng.choice(strategies).split(\"\\n\");\n  for (let s of s1.concat(s2)) {\n    let strategy = s.split(\" \");\n    deck.push(get_single_card(rng, strategy[0], parseInt(strategy[1]), parseInt(strategy[2])));\n  }\n\n  deck = remove_redundant(deck);\n  deck = arr2deck(deck);\n\n  if (deck.length < 30) {\n    for (let i=0; i<(30-deck.length); i++) {\n      deck.push(get_random_card(rng));\n    }\n  }\n\n  if (deck.length > 30) {\n    for (let i=0; i<(deck.length-30); i++) {\n      deck.splice(rng.randRange(deck.length), 1);\n    }\n  }\n\n  return deck2str(deck);\n\n  //TODO: let deck be the summarized version, this is an advanced feature\n}","const tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+2\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+1生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f7/Enemy_movespeed_1.png\",\n    desc: \"干员以横置状态入场\",\n    level: 3,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"所有敌人获得+2/+2\",\n    level: 3,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.atk += 2;\n        enemy.hp += 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/09/Enemy_hp_3.png\",\n    desc: \"胜利所需分数+5\",\n    level: 3,\n    effect(G, ctx){\n      G.goal += 5;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    effect(G, ctx){\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS } from './orders';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>消耗费用(写在卡牌左上角)，将干员从手牌中部署到场上；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用“星极”进行采掘，星极的采掘能力为3，因此获得3个随机材料，博士因此获得了“扭转醇”、“扭转醇”和“研磨石”；然后使用“阿米娅”进行采掘，阿米娅的采掘能力为2，因此获得“扭转醇”和“RMA12”，而阿米娅的效果为“采掘: 获得1分”，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 选定场上的一名干员，和一名敌人，该干员对敌人造成等同于自己攻击力的伤害；<br/>\n  <i>举例: 博士使用“克洛丝”对“破阵者”发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果场上的一名干员有“行动”效果，则可以横置该干员，然后触发其“行动”效果；<br/>\n  <i>举例: 博士“桃金娘”行动，桃金娘的效果为“行动: 获得3点费用”，因此博士横置桃金娘后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在订单右上角，一般是一些分数和一个材料)，完成订单是得分的主要手段；\"D32钢\"是百搭资源，可作为任意资源交付订单；<br/><br/>\n  <b>* 使用订单:</b> 完成的订单，拥有自己的订单能力，每回合可以使用一次；<br/>\n  <i>举例: 博士首先使用完成的第一个订单，能力描述为“扭转醇→？+？”，也就是可以用1个扭转醇换2个随机材料，博士因此消耗1个扭转醇，获得了2个随机材料，分别为“研磨石”和“研磨石”，此时博士刚好凑够了3个研磨石，立刻完成了一个需要3个研磨石的订单，获得了2分和1个“RMA12”，该订单的能力描述为“扭转醇→2分”，也就是可以用1个扭转醇换2分，博士使用了该订单，消耗了1个扭转醇，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次，在你的回合结束后，进入整合运动阶段；<br/><br/>\n  首先，翻开2张敌人牌，以横置状态入场；<br/><br/>\n  然后，场上处于重置状态的敌人，从左到右行动一次，被阻挡的敌人，会向阻挡者发起攻击，未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，“阻挡X”表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n</div>;","import React from 'react';\nimport { Card, CardRow, CardDetailed, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { get_deck_name, generate_deck } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\n\nvar _ = require(\"lodash\");\n\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_title_board, \n      // board: this.render_game_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n      deck_name: get_deck_name(),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { // TODO: set all \"check\" aside to the right, this is not done using Controller, first set the width of controller, then add a new button on render_board\n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n  \n  process_hand_data(card) {\n    return {\n      illust: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let data = {\n      illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    return {\n      e_illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    return {\n      illust_detailed: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_deck_change(event) {\n    this.setState(\n      {deck_name: event.target.value}\n    );\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const boards = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: boards[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    this.props.moves.setDeck(generate_deck(this.state.deck_name));\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.change_board(\"game\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({scenario_finished: false});\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else {\n          grade = \"SSS\";\n        }\n        alert(`任务完成\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_name}`);\n      }\n\n      else {\n        alert(`任务失败\\n原因: ${result.reason}`);\n\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n        }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        */}\n      {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return <div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.enemyInit();\n            this.enemy_move(-2);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n          </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n        additionalStyle = {{height: \"25%\", marginTop:\"16%\"}}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CardDetailed \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=5)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\")}}\n          action = \"查看卡组\"\n        />\n\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    return (\n      <div className=\"board\" >\n        <DeckConstruction\n          value = {this.state.deck_name}\n          handleChange = {this.handle_deck_change}\n          changeName = {() => this.setState({deck_name:get_deck_name()})}    \n          checkDeck = {() => {\n            this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n            this.check_deck();\n          }}\n          />\n\n        <EnterGame \n          switchScene = {() => {this.enter_game()}}\n          action = \"进入游戏\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}