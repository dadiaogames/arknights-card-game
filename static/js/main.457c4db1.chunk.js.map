{"version":3,"sources":["cards.js","enemies.js","icons.js","orders.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","DeckGenerator.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["CARDS","name","cost","atk","hp","mine","block","illust","desc","onMine","G","ctx","score","deal_random_damage","onPlay","draw","onFight","gainMaterials","action","costs","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","card","move","dmg","exhausted_enter","onOut","hand","self","enemy","idx","indexOf","deal_damage","field","materials","ready_random_card","cure","payCost","ENEMIES","map","join","ICONS","alcohol","src","height","rma","rock","d32","order_illust","material_icons","ORDERS","requirements","reward","effect","payMaterials","onTurnBegin","map_object","fn","obj","new_obj","k","PRNG","seed","this","val","i","charCodeAt","Math","sin","result","floor","random","arr","len","randRange","d1","d2","cd_idx","splice","push","logMsg","count","cnt","gained","material","Die","delta","use","deck","amount","unshift","pop","drawOrder","odeck","drawEnemy","edeck","unexhausted","Shuffle","exhausted_cards","sort","msg","messages","AC","setup","get_enemies","Object","assign","concat","discard","ediscard","orders","finished","danger","goal","max_danger","playing","moves","setDeck","deck_data","card_dict","item","arr2obj","cards","split","card_data","parseInt","target_card","addTags","tags","onScenarioBegin","console","log","events","endTurn","play","act","setValue","attr","finishOrder","order","useOrder","fight","idx1","idx2","enemyMove","blocker","blocked_enemies","c","get_blocker","blocker_idx","changeMsg","turn","onBegin","refresh","endIf","win","reason","Card","props","additional_styles","e_illust","o_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","keys","data","variant","value","additionalStyle","Data","is_img","includes","img_tag","style","CardRow","states","SCard","CardDetailed","align","Controller","actions","checkCard","float","display","EnterGame","switchScene","Panel","content","TagSelection","tbody","row","row_tags","slice","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","RiskLevel","risk_level","DeckConstruction","type","onChange","handleChange","changeName","fontSize","TitleScreen","textAlign","enterGame","checkRule","PREFIXES","strategies","get_random_card","rng","choice","get_deck_name","get_single_card","count1","count2","generate_deck","deck_name","s1","s2","strategy","arr2deck","output","deck2str","TAGS","tag_list","t","level","process_tags","RULES","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","change_board","choose_tag","get_risk_level","enter_game","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","branch","show_field","show_tag_selection","stage","board","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","log_select","new_tags","setState","reduce","acc","icon","j","order_effect","finished_effect","illust_detailed","cost_detailed","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","target","new_board","boards","reset","gameover","grade","alert","width","margin","overflow","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","finished_cardrow","undefined","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.457c4db1.chunk.js","sourcesContent":["import { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, \n} from './Game';\n\nexport var CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx) {\n      G.score += 1;\n    }\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    }\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 2,\n    hp: 3,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 5,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 6,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n  },\n\n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 3,\n    atk: 1,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://ak.mooncell.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust:\"http://ak.mooncell.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx) {\n      gainMaterials(G, ctx, 1);\n    }\n  },\n\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust:\"http://ak.mooncell.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动：获得3点费用\",\n    action(G, ctx) {\n      G.costs += 3;\n    }\n  },\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"战斗：获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx) {\n      G.costs += 2;\n    }\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘：获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx) {\n      G.costs += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘：横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://ak.mooncell.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted;\n    }\n  },\n  \n  {\n    name:\"风笛\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动：打出牌库顶的1张牌\", \n    illust:\"http://ak.mooncell.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx) {\n      let card = move(G, ctx, \"deck\", \"field\");\n      card.dmg = 0;\n      card.exhausted = G.exhausted_enter;\n      //EH: add \"init field card state\" function\n    }\n  },\n  \n  {\n    name:\"红豆\", \n    cost:4, \n    atk:3, \n    hp:1, \n    mine:2, \n    block:1, \n    desc:\"亡语：获得3点费用\", \n    illust:\"http://ak.mooncell.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    onOut(G, ctx) {\n      G.costs += 3;\n    }\n  },\n  \n  {\n    name:\"推进之王\", \n    cost:5, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署：所有手牌的费用-1\", \n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    }\n  },\n  \n  {\n    name:\"能天使\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"攻击被横置的敌人时，伤害+3\", \n    illust:\"http://ak.mooncell.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        let idx = G.efield.indexOf(enemy);\n        if (idx > 0) {\n          deal_damage(G, ctx, \"efield\", idx, 3);\n        }\n      }\n    }\n  },\n  \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗：对一个敌人造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    }\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署：场上所有干员获得+1/+1\", \n    illust:\"http://ak.mooncell.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx) {\n      for (let card of G.field) {\n        card.atk += 1;\n        card.hp += 1;\n      }\n    }\n  },\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署：对两名敌人造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n      deal_random_damage(G, ctx, 3);\n    }\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:4, \n    hp:5, \n    mine:2, \n    block:1, \n    desc:\"_\", \n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc:\"部署：获得2个D32钢\", \n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx) {\n      G.materials[3] += 2;\n    }\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:5, \n    mine:1, \n    block:2, \n    desc:\"行动：获得+3生命值\", \n    illust:\"http://ak.mooncell.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 3;\n    }\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗：横置1个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx) {\n      exhaust_random_enemy(G, ctx);\n    }\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗：重置1个干员\", \n    illust:\"http://ak.mooncell.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx) {\n      ready_random_card(G, ctx);\n    },\n    onFight(G, ctx) {\n      ready_random_card(G, ctx);\n    }\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:2, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动：使一名干员获得+4生命值\", \n    illust:\"http://ak.mooncell.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx) {\n      cure(G, ctx, 4);\n    }\n  },\n  \n  {\n    name:\"清流\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动：使一名干员获得+6生命值\", \n    illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    action(G, ctx) {\n      cure(G, ctx, 6);\n    }\n  },\n  \n  {\n    name:\"空\", \n    cost:3, \n    atk:0, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"行动：横置2个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    }\n  },\n  \n  {\n    name:\"阿消\", \n    cost:4, \n    atk:3, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"行动：消耗3点费用，获得4分\", \n    illust:\"http://ak.mooncell.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx) {\n      if (payCost(G, ctx, 3)) {\n        G.score += 4;\n      }\n    }\n  },\n  \n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","export var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"空降兵\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"萨卡兹术师\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n    desc: \"动乱: 额外增加2点动乱值\",\n  },\n\n];","import React from 'react';\nconst icon_height = \"25em\";\nconst attr_icon_height = \"20em\";\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]}</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]}</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]}</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>收入: {material_icons[1]}</span>),\n    onTurnBegin(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>收入: {material_icons[2]}</span>),\n    onTurnBegin(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>收入: {material_icons[0]}</span>),\n    onTurnBegin(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n}","import { React } from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let cnt = count || 1;\n  let gained = [];\n\n  for (let i=0; i<cnt; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nfunction get_blocker(G, ctx, idx) {\n  //Return who blocks this enemy\n  let blocked_enemies = 0;\n\n  for (let c of G.field) {\n    blocked_enemies += c.block || 0;\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  //cards with no damage may not have the damage attr\n  card.dmg = card.dmg || 0;\n  card.dmg += dmg;\n  logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n  if (card.dmg >= card.hp) {\n    let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n    move(G, ctx, deck, discard, idx);\n    logMsg(G, ctx, `${card.name} 被摧毁`);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  if (G.efield.length > 0){\n    let idx = ctx.random.Die(G.efield.length) - 1\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function draw(G, ctx) {\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } //TODO: else, lose the game\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    card.dmg = 0;\n    card.exhausted = G.exhausted_enter;\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = true;\n    enemy.dmg = 0;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  }\n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    card.action(G, ctx, card);\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!x.exhausted));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx) {\n  let exhausted_cards = G.field.filter(x => x.exhausted);\n  if (exhausted_cards.length > 0) {\n    ctx.random.Shuffle(exhausted_cards)[0].exhausted = false;\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.map(x=>x).sort(x => -x.dmg);\n  ranked_field_by_dmg[0].hp += amount;\n}\n\nfunction enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n    let blocker = get_blocker(G, ctx, idx);\n    let blocker_idx = G.field.indexOf(blocker);\n\n    if (blocker) {\n      deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n      logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n    }\n\n    else {\n      G.danger += 1;\n      logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n      card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<3; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nfunction setDeck(G, ctx, deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let card of cards) {\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n      if (target_card) {\n        for (let i=0; i<amount; i++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n  G.deck = ctx.random.Shuffle(deck);\n}\n\nfunction logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies()));\n    G.odeck = ctx.random.Shuffle(ORDERS.map(x=>Object.assign({},x)));\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n\n    G.exhausted_enter = false;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n\n    G.playing = false;\n    G.gained = [];\n\n    return G;\n  }\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDeck,\n    addTags,\n    onScenarioBegin,\n    draw,\n    play,\n    mine,\n    act,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    drawEnemy,\n    fight,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n        if (G.playing) {\n          console.log(\"On turn begin\");\n          logMsg(G, ctx, \"回合开始\");\n          refresh(G, ctx);\n          draw(G, ctx);\n          drawOrder(G, ctx);\n          G.costs += 3;\n      }\n    },\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  }\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    hp: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  }\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n}\n\nexport const CardRow = (props) => {\n  return (\n    <div className=\"card-row\">\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n        />\n      ))}\n    </div>\n  );\n}\n\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\">\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const CardDetailed = (props) => {\n  return (\n    <div className=\"card-board\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n}","import React from 'react';\nimport './Controller.css';\n\n//TODO: reconstruct the controller\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{action}</button>\n        )\n      )}\n        <button className=\"controller-button\" onClick={props.checkCard} style={{float:\"right\", display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.action}\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          className=\"tag\" \n          \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <img \n            className=\"tag\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\">{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          style={{\n            fontSize: \"105%\",\n            marginTop: \"5%\",\n          }}\n        >\n          换个随机名字\n        </button>\n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"50%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>查看规则</button><br/>\n  </div>\n);","import { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 地火 高级资深干员 非洲战神 黄票之源 注意力涣散 精二满级 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 公招巨头 富婆 老婆 看板娘 猛男 打得不错 神抽狗\".split(\" \");\n\nconst dubin_defend = `杜宾 1 2\n推进之王 1 2\n香草 0 1\n讯使 0 1\n芬 1 2\n玫兰莎 2 3\n米格鲁 3 4\n芙蓉 2 3\n蛇屠箱 0 2\n清流 0 2`;\n\nconst dubin_score = `杜宾 1 2\n推进之王 1 2\n香草 0 1\n讯使 0 1\n芬 1 2\n米格鲁 2 3\n玫兰莎 1 2\n芙蓉 1 2\n克洛丝 0 2\n史都华德 3 4\n炎熔 2 3\n阿米娅 2 3`;\n\nconst dubin_fight = `杜宾 1 2\n推进之王 1 2\n香草 1 2\n讯使 0 1\n芬 1 2\n米格鲁 0 2\n玫兰莎 0 2\n芙蓉 0 2\n克洛丝 3 4\n杰西卡 3 4\n炎熔 2 3\n蓝毒 1 2\n陈 0 2`;\n\nconst penguin =  `德克萨斯 3 4\n空 2 3\n可颂 1 3\n能天使 0 2\n巡林者 0 2\n雷蛇 0 2`;\n\nconst highcost = `风笛 2 3\n红豆 3 4\n桃金娘 2 4\n蛇屠箱 1 3\n清流 1 3\n巡林者 1 3\n12F 1 3\n黑角 1 3\n芙兰卡 0 3\n可颂 0 2\n陈 0 2\n蓝毒 0 2\n星极 0 2`;\n\nlet strategies = [dubin_defend, dubin_fight, dubin_score, penguin, highcost];\n\n\nfunction get_random_card(rng) {\n  return rng.choice(CARDS).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n  let s1 = rng.choice(strategies).split(\"\\n\");\n  let s2 = rng.choice(strategies).split(\"\\n\");\n  for (let s of s1.concat(s2)) {\n    let strategy = s.split(\" \");\n    deck.push(get_single_card(rng, strategy[0], parseInt(strategy[1]), parseInt(strategy[2])));\n  }\n\n  deck = arr2deck(deck);\n\n  if (deck.length < 30) {\n    for (let i=0; i<(30-deck.length); i++) {\n      deck.push(get_random_card(rng));\n    }\n  }\n\n  if (deck.length > 30) {\n    for (let i=0; i<(deck.length-30); i++) {\n      deck.splice(rng.randRange(deck.length), 1);\n    }\n  }\n\n  return deck2str(deck);\n\n  //TODO: let deck be the summarized version, this is an advanced feature\n}","const tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+2\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+1生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f7/Enemy_movespeed_1.png\",\n    desc: \"干员以横置状态入场\",\n    level: 2,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS } from './orders';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>消耗费用(写在卡牌左上角)，将干员从手牌中部署到场上；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用“星极”进行采掘，星极的采掘能力为3，因此获得3个随机材料，博士因此获得了“扭转醇”、“扭转醇”和“研磨石”；然后使用“阿米娅”进行采掘，阿米娅的采掘能力为2，因此获得“扭转醇”和“RMA12”，而阿米娅的效果为“采掘: 获得1分”，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 选定场上的一名干员，和一名敌人，该干员对敌人造成等同于自己攻击力的伤害；<br/>\n  <i>举例: 博士使用“克洛丝”对“破阵者”发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果场上的一名干员有“行动”效果，则可以横置该干员，然后触发其“行动”效果；<br/>\n  <i>举例: 博士“桃金娘”行动，桃金娘的效果为“行动: 获得3点费用”，因此博士横置桃金娘后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在订单右上角，一般是一些分数和一个材料)，完成订单是得分的主要手段；\"D32钢\"是百搭资源，可作为任意资源交付订单；<br/><br/>\n  <b>* 使用订单:</b> 完成的订单，拥有自己的订单能力，每回合可以使用一次；<br/>\n  <i>举例: 博士首先使用完成的第一个订单，能力描述为“扭转醇→？+？”，也就是可以用1个扭转醇换2个随机材料，博士因此消耗1个扭转醇，获得了2个随机材料，分别为“研磨石”和“研磨石”，此时博士刚好凑够了3个研磨石，立刻完成了一个需要3个研磨石的订单，获得了2分和1个“RMA12”，该订单的能力描述为“扭转醇→2分”，也就是可以用1个扭转醇换2分，博士使用了该订单，消耗了1个扭转醇，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次，在你的回合结束后，进入整合运动阶段；<br/><br/>\n  首先，翻开2张敌人牌，以横置状态入场；<br/><br/>\n  然后，场上处于重置状态的敌人，从左到右行动一次，被阻挡的敌人，会向阻挡者发起攻击，未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，“阻挡X”表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n</div>;","import React from 'react';\nimport { Card, CardRow, CardDetailed } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { get_deck_name, generate_deck } from './DeckGenerator';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_title_board, //function or string here?\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n      deck_name: get_deck_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { // TODO: set all \"check\" aside to the right, this is not done using Controller, first set the width of controller, then add a new button on render_board\n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n  \n  process_hand_data(card) {\n    return {\n      illust: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let data = {\n      illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    return {\n      e_illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    return {\n      illust_detailed: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          {card.atk}/{card.hp} &nbsp;\n          {ICONS.mine}{card.mine} &nbsp;\n          {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      this.setState({stage: \"enemy\"});\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n      this.setState({stage:\"player\"});\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      console.log(Object.keys(new_branch));\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      console.log(Object.keys(new_branch));\n      // TODO: add reinforce\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_deck_change(event) {\n    this.setState(\n      {deck_name: event.target.value}\n    );\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const boards = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n    };\n    this.setState({board: boards[new_board]});\n  }\n\n  enter_game() {\n    this.props.moves.setDeck(generate_deck(this.state.deck_name));\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.change_board(\"game\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({scenario_finished: false});\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 6) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 6 && risk_level < 8) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 8 && risk_level < 10) {\n          grade = \"SS\";\n        }\n        else {\n          grade = \"SSS\";\n        }\n        alert(`任务完成\\n完成危机等级: ${risk_level}\\n评级: ${grade}`);\n      }\n\n      else {\n        alert(`任务失败\\n原因: ${result.reason}`);\n\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n        }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        */}\n      {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        style = {{\n          margin: \"3%\",\n          fontSize: \"105%\",\n        }}\n      >返回</button>\n    </div>;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.state.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{this.enemy_move(-2);}}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CardDetailed \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=5)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\")}}\n          action = \"查看卡组\"\n        />\n\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    return (\n      <div className=\"board\" >\n        <DeckConstruction\n          value = {this.state.deck_name}\n          handleChange = {this.handle_deck_change}\n          changeName = {() => this.setState({deck_name:get_deck_name()})}    \n          />\n\n        <EnterGame \n          switchScene = {() => {this.enter_game()}}\n          action = \"进入游戏\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}