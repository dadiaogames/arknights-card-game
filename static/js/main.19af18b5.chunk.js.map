{"version":3,"sources":["avatars.js","utils.js","DeckGenerator.js","icons.js","orders.js","cards.js","enemies.js","upgrades.js","alters.js","Game.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","assets.js","relics.js","Roguelike.js","rules.js","Multiplayer.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["AVATARS","map_object","fn","obj","new_obj","k","vector_diff","v1","v2","length","map","v","i","mod_slice","arr","idx","cnt","len","from","slice","PRNG","seed","this","val","charCodeAt","x","Math","sin","result","floor","random","randRange","deck","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","pick_scorers","pick_vanguards","cost_vanguard","scorer","shooter","supporter","strategies","mini_sets","mini_set","filter","card","get_random_card","rng","banned_cards","card_pool","CARDS","includes","name","choice","get_deck_name","get_challenge_name","desc","illust","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","Object","keys","sort","c","join","deck_from_strategy","strategy","amount","push","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","select_one_card","generate_deck_s2","deck_dict","sets","deck_from_mini_sets","reduce","acc","_","times","generate_roguelike_deck","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","style","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","reset","food_icons","color","smaller_icons","order_illust","material_icons","ready_order","G","ctx","from_card","Shuffle","finished","exhausted","ready_other_orders","advanced_orders","requirements","score","reward","advanced","effect","field_selected","field","logMsg","atk","costs","colors","min","ORDERS","payCost","materials","cost","harvest","init_card","dmg","power","onPlayBonus","hp","reinforce","onReinforce","self","reinforce_desc","onMine","delta","achieve","queen","find","assign","onPlay","deal_random_damage","white","draw","onTurnBegin","undefined","onFight","eliminate_field","exhaust_random_enemy","num_exhausted","efield","enemy","new_card","indexOf","splice","init_card_state","hand","gainMaterials","drop","get_blocker","ready_random_card","summon","cure","onPlayCard","colored_orders","onCardFight","add_vulnerable","exhaust_order","payMaterials","order1","order2","was_enemy","extra_cards","generator","generate","actors","unshift","battlecries","score_gained","onEnemyOut","cards","extracted_attrs","skill_power","reinforce_skill","j","onCardMine","use_count","discard","danger","reinforce_field","reinforce_hand","num_cards","has_discarded","played","onOut","gravel","excess","max","player","damaged_enemy","cost_remained","fever","mcard","miner","fighter","enemy_idx","e","is_boss","texas","wind","reinforce_card","generate_combined_card","heijiao_in_dream","blank_enemy","material","Die","values","default_filter","ENEMIES","self_copy","is_elite","high","deal_damage","enraged","drawEnemy","BOSSES","UPGRADES","is_init","ALTER_ARTS","安洁莉娜","阿米娅","森蚺","陨星","孑","玫兰莎","陈","安比尔","波登可","move","d1","d2","onPayCost","f","gained","use","stage","onUseCard","blocked_enemies","out","total_dmg","vulnerable","exhausted_enter","user","hand_limit","pop","onDropCard","refreshOrder","orders","odeck","round_num","y","price_y","price_x","price_up","edeck","enemy_exhausted_enter","switcher","switchEnemy","addBoss","boss_name","boss","reversed","time_points","effects","EFFECTS","title","reverse","alist","unexhausted","unyielding","exhausted_cards","prepared_cards","ready_times","clearField","str2deck","card_dict","item","arr2obj","alter_art","console","log","card_data","target_card","altered","old_illust","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardAct","onCardReinforced","onUseOrder","setup_scenario","ediscard","picks","goal","max_danger","num_enemies_out","field_limit","relics","extra_gain","playing","diff_queue","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","get_desc","fontSize","display","quote","AC","setup","moves","setDecks","decks","another_deck","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","bonus","play_card","act","reinforce_need_cost","rest","rest_cards","num_rest_cards","onRest","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","setupRoguelikeBattle","onBattleBegin","receive_diff","diff","efield_dmg","efield_hp","emit_diff","optimizer","turn","onBegin","concat","refresh","special_card_name","special_card","refresh_picks","order_id","sort_finished","setup_turn_states","enemy_grow","enemy_hp_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","limit_hand","reduce_goal","onEnd","endIf","win","reason","plugins","fnWrap","args","prev_score","prev_danger","prev_materials","prev_efield","new_G","is_diff","span_diff","abs","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","EnterGame","divAlign","ProgressBar","bgcolor","completed","containerStyles","backgroundColor","bottom","fillerStyles","textAlign","transition","padding","fontWeight","Panel","content","ScoreBoard","useState","MaterialDisplay","Tag","bg_color","locked","TagSelection","tag","TagList","marginLeft","marginTop","selected_tags","just_selected","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","handleToggle","back","TitleScreen","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","margin","Competition","results","finalResult","final_tag","level","TAGS","tag_list","t","process_tags","challenge","unstackable","extra_challenge","standard_level","advance","stackable","replace","enemy2card","rhodes_training_mode","result_images","relic_images","relic_names","RELICS","played_card","onPickCard","S","onBattleEnd","level_achieved","level_required","onUse","random_upgrade","relic","onRefreshShop","shop_items","is_relic","onBuyRelic","delete_card","get_specific_card_pick","get_relic","used","gas","get_relic_img","introduce_roguelike_mode","weekly_introduction","reset_tags","move_on","game_count","remained_tags","difficulty","choose_standard_tags","current_standard_level","new_tags","setup_daily_tags","date","locked_tags","other_tags","setup_normal_challenge","basic_tags","another_challenge_tag","advanced_tags","setup_exhausted_challenge","generate_weekly_challenges","week","challenges","preprocess_roguelike_card","get_pick","selection","get_roguelike_pick","get_shop_item","item_type","shop_item","indexes","onBought","get_upgrade","get_card_pick","is_pick","get_indexes_from_cost","bought","payGold","reset_shop","get_gold_gained","gold_gained","level_diff","slam_bonus","proceed","scene_queue","changer","scene","current_upgrades","current_indexes","current_item","get_init_card_pick","current_relics","RoguelikeDeckSelection","RoguelikeDeckRepr","GoldAmount","ShopItem","buy","Relic","operation","Relics","checking","Weekly","click_title","Shop","refresh_shop","Roguelike","enter_dream","enter_battle","check_deck","check_relics","RoguelikeTabs","onSelect","RoguelikeEntry","difficulties","ShowMeTheMoney","ResultWin","slam","grand_slam","gold_amount","continue","ResultLose","FinalResult","p_id","roguelike","setup_roguelike_mode","roguelike_mode","Date","repeat_tags","flatMap","init_added_tags","init_tags_S2","central_idx","dream_count","set_difficulty","levels","set_difficulty_S2","select_init_card","pick_cards","card_picks","onPickCards","skip_pick","onSkipPick","item_idx","current_item_idx","click_that_button","continue_run","reset_card_picks","won","num_bonus","end_roguelike_mode","upgrade_card","upgrade_selected","selection_selected","pick_relic","use_relic","enter_daily_mode","daily_mode","end_daily_mode","setup_weekly_challenge","deck_mode","weekly_challenge_idx","enter_weekly_mode","weekly_mode","getFullYear","getMonth","getDate","getDay","setup_weekly_tags","end_weekly_mode","RULES","show_multiplayer_intro","Multiplayer","create_room","enter_room","CreateRoom","enter_difficulty","EnterRoom","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_relic_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_relic_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_shop_board","render_roguelike_result_board","render_roguelike_final_result_board","render_roguelike_entry_board","render_roguelike_deck_upgrade_board","render_roguelike_relic_selection_board","render_roguelike_relic_check_board","render_weekly_board","render_multiplayer_board","render_create_room_board","render_enter_room_board","enter_competition_mode","start_competition","enter_roguelike_mode","buy_item","join_room","enter_multiplayer_mode","change_board","reset_preview_deck","choose_tag","get_risk_level","enter_game","end_game","turn_end","setState","produce","state","hand_selected","efield_selected","order_selected","finished_selected","pick_selected","shop_selected","hand_choices","preview_filter","branch","show_field","show_tag_selection","animations","board","last_board","preview_deck","show_finished","lock_seed","room_id","scenario_finished","branches","log_select","cardrow","illust_variants","icon","order_data","rhine","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","target","new_board","BOARDS","multiplayer_mode","competition_mode","get_enemies","init_decks","socket","emit","disconnect","prevProps","prevState","gameover","good_grade","grade","failed","overflow","getMinutes","getSeconds","get_room_id","socketIOClient","query","withCredentials","on","shop","centrals","selected_card","overflowY","lose","easy","medium","hard","deck_idx","mean","a","b","round","查看卡组","player_panel","game_panel","paddingTop","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","难度速设","合作模式","肉鸽模式","返回标题","返回","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,oDAGYC,GAAc,CAAC,iCAC5B,uCACA,iCACA,2BACA,uCACA,uCACA,2BACA,iCACA,uCACA,2BACA,2BACA,6CACA,2BACA,2BACA,2BACA,uCACA,iCACA,2BACA,iCACA,uCACA,iCACA,2BACA,2BACA,eACA,iCACA,uCACA,uCACA,uCACA,2BACA,uCACA,uCACA,iCACA,iCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,iCACA,iCACA,2BACA,uCACA,iCACA,iCACA,qCACA,6CACA,iCACA,kCACA,2BACA,uCACA,uCACA,uCACA,2BACA,iCACA,eACA,2BACA,iCACA,iCACA,2BACA,2BACA,uCACA,iCACA,6CACA,2BACA,6CACA,6CACA,uCACA,uCACA,uCACA,2BACA,2BACA,6CACA,6CACA,2BACA,uCACA,uCACA,2BACA,uCACA,iCACA,uCACA,2BACA,iCACA,2BACA,2BACA,6CACA,uCACA,6CACA,2BACA,mCACA,6CACA,iCACA,uCACA,uCACA,2BACA,2BACA,iCACA,uCACA,2BACA,iCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,8CACA,wCACA,4BACA,4BACA,4BACA,kCACA,4BACA,4BACA,wCACA,4BACA,4BACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,uCACA,iCACA,iCACA,0BACA,iCACA,uCACA,uCACA,iCACA,2BACA,uCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,qBACA,mDACA,eACA,iCACA,2BACA,4BCriBYC,GAAS,CAQpB,CACE7jB,KAAM,iCACNI,KAAM,8HACNwI,YAHF,SAGc5C,EAAGC,GACb,IAAK,IAAIhJ,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACtB,IAAIwC,EAAI,eAAOQ,GAAOgG,EAAKD,EAAElG,QAC7BL,EAAK8H,MAAQ,EACbvB,EAAEwD,KAAKoB,QAAQnL,MAIrB,CACEO,KAAM,iCACNI,KAAM,+CACNkX,cAHF,SAGgBtR,EAAGC,GACfD,EAAEmN,aAAe,IAGrB,CACEnT,KAAM,4BACNI,KAAM,qGACNwI,YAHF,SAGc5C,EAAGC,GACbD,EAAE+D,WAAWxI,MAAK,SAACyE,EAAGC,EAAKxG,GACrBA,EAAK8H,MAAQ,GACfkB,GAAmBzC,EAAGC,EAAK,QAIjC,CACAjG,KAAM,iCACNI,KAAM,qGACNwI,YAHA,SAGY5C,EAAGC,GACbD,EAAEiB,OAAS,EACXwC,GAAczD,EAAGC,EAAK,KAExB,CACAjG,KAAM,iCACNI,KAAM,6EACNkX,cAHA,SAGctR,EAAGC,GACf,IAAImD,EAAWnD,EAAI9H,OAAOgI,QAAQH,EAAElG,MAAMN,QAAO,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","file":"static/js/main.19af18b5.chunk.js","sourcesContent":["export const AVATARS = \n[[\"罗宾\", \"https://i.postimg.cc/T39t15Bv/img-avatars-0.png\"],\n[\"卡夫卡\", \"https://i.postimg.cc/XvYQC70G/img-avatars-1.png\"],\n[\"山\", \"https://i.postimg.cc/y8Bf7yQT/img-avatars-2.png\"],\n[\"松果\", \"https://i.postimg.cc/xTLxr4RC/img-avatars-3.png\"],\n[\"阿米娅(近卫)\", \"https://i.postimg.cc/pVwG6HK4/img-avatars-4.png\"],\n[\"迷迭香\", \"https://i.postimg.cc/SQ21dsYc/img-avatars-5.png\"],\n[\"泥岩\", \"https://i.postimg.cc/Wzk91Wc5/img-avatars-6.png\"],\n[\"絮雨\", \"https://i.postimg.cc/Jng6mwvy/img-avatars-7.png\"],\n[\"杰克\", \"https://i.postimg.cc/HxjZfWZD/img-avatars-8.png\"],\n[\"瑕光\", \"https://i.postimg.cc/R0gpsJTL/img-avatars-9.png\"],\n[\"奥斯塔\", \"https://i.postimg.cc/GpLSxxvp/img-avatars-10.png\"],\n[\"鞭刃\", \"https://i.postimg.cc/P5k7PjxY/img-avatars-11.png\"],\n[\"泡泡\", \"https://i.postimg.cc/sg9NWNQ8/img-avatars-12.png\"],\n[\"史尔特尔\", \"https://i.postimg.cc/Qx7P8tXj/img-avatars-13.png\"],\n[\"四月\", \"https://i.postimg.cc/G3VVnYnM/img-avatars-14.png\"],\n[\"薄绿\", \"https://i.postimg.cc/c1r2zh2g/img-avatars-15.png\"],\n[\"芳汀\", \"https://i.postimg.cc/c6G8d6XK/img-avatars-16.png\"],\n[\"森蚺\", \"https://i.postimg.cc/FR1SZMYK/img-avatars-17.png\"],\n[\"燧石\", \"https://i.postimg.cc/d1XyS5Cj/img-avatars-18.png\"],\n[\"特米米\", \"https://i.postimg.cc/vTVVR5LF/img-avatars-19.png\"],\n[\"酸糖\", \"https://i.postimg.cc/JhpJjr4g/img-avatars-20.png\"],\n[\"棘刺\", \"https://i.postimg.cc/wBqLtyHL/img-avatars-21.png\"],\n[\"安哲拉\", \"https://i.postimg.cc/Mp8yS3Fs/img-avatars-22.png\"],\n[\"孑\", \"https://i.postimg.cc/VkBXLByz/img-avatars-23.png\"],\n[\"贾维\", \"https://i.postimg.cc/wTNhnY0y/img-avatars-24.png\"],\n[\"蜜蜡\", \"https://i.postimg.cc/T2FVk3qv/img-avatars-25.png\"],\n[\"稀音\", \"https://i.postimg.cc/fLgcQwGX/img-avatars-26.png\"],\n[\"铃兰\", \"https://i.postimg.cc/prhD2wvS/img-avatars-27.png\"],\n[\"断崖\", \"https://i.postimg.cc/tJKF7BC4/img-avatars-28.png\"],\n[\"亚叶\", \"https://i.postimg.cc/d102f7xw/img-avatars-29.png\"],\n[\"卡达\", \"https://i.postimg.cc/2S47LNWR/img-avatars-30.png\"],\n[\"早露\", \"https://i.postimg.cc/cJ0MQk7K/img-avatars-31.png\"],\n[\"莱恩哈特\", \"https://i.postimg.cc/rpjGgGgf/img-avatars-32.png\"],\n[\"苦艾\", \"https://i.postimg.cc/Zn2xpTjZ/img-avatars-33.png\"],\n[\"波登可\", \"https://i.postimg.cc/8PfHD6PC/img-avatars-34.png\"],\n[\"月禾\", \"https://i.postimg.cc/sxvJMBYw/img-avatars-35.png\"],\n[\"石棉\", \"https://i.postimg.cc/y6bPwPK5/img-avatars-36.png\"],\n[\"W\", \"https://i.postimg.cc/V67Rs9CJ/img-avatars-37.png\"],\n[\"温蒂\", \"https://i.postimg.cc/3Rr1HfdM/img-avatars-38.png\"],\n[\"极境\", \"https://i.postimg.cc/mryjJWZN/img-avatars-39.png\"],\n[\"THRM-EX\", \"https://i.postimg.cc/JhLKpz8z/img-avatars-40.png\"],\n[\"傀影\", \"https://i.postimg.cc/BnDM51dz/img-avatars-41.png\"],\n[\"巫恋\", \"https://i.postimg.cc/zXydBQp8/img-avatars-42.png\"],\n[\"铸铁\", \"https://i.postimg.cc/hPN2703x/img-avatars-43.png\"],\n[\"刻刀\", \"https://i.postimg.cc/C5Qm7Ch3/img-avatars-44.png\"],\n[\"断罪者\", \"https://i.postimg.cc/BZYYJ3Tm/img-avatars-45.png\"],\n[\"风笛\", \"https://i.postimg.cc/prTsKcHQ/img-avatars-46.png\"],\n[\"慑砂\", \"https://i.postimg.cc/NMbN9qWf/img-avatars-47.png\"],\n[\"柏喙\", \"https://i.postimg.cc/zBqtGX2c/img-avatars-48.png\"],\n[\"宴\", \"https://i.postimg.cc/VNqZwbgt/img-avatars-49.png\"],\n[\"清流\", \"https://i.postimg.cc/Bv97RCTs/img-avatars-50.png\"],\n[\"刻俄柏\", \"https://i.postimg.cc/JzBdTFBP/img-avatars-51.png\"],\n[\"惊蛰\", \"https://i.postimg.cc/kXGHSGMr/img-avatars-52.png\"],\n[\"年\", \"https://i.postimg.cc/7YRWn4b5/img-avatars-53.png\"],\n[\"阿\", \"https://i.postimg.cc/sx608dc0/img-avatars-54.png\"],\n[\"吽\", \"https://i.postimg.cc/3rn6WmTC/img-avatars-55.png\"],\n[\"雪雉\", \"https://i.postimg.cc/hvP5pP9d/img-avatars-56.png\"],\n[\"煌\", \"https://i.postimg.cc/bJR5x22P/img-avatars-57.png\"],\n[\"灰喉\", \"https://i.postimg.cc/nzx591rT/img-avatars-58.png\"],\n[\"安比尔\", \"https://i.postimg.cc/VNnpNhfd/img-avatars-59.png\"],\n[\"布洛卡\", \"https://i.postimg.cc/13gbktb0/img-avatars-60.png\"],\n[\"苇草\", \"https://i.postimg.cc/Z51X4mhG/img-avatars-61.png\"],\n[\"莫斯提马\", \"https://i.postimg.cc/tCvLvPvC/img-avatars-62.png\"],\n[\"槐琥\", \"https://i.postimg.cc/7YZFNXVW/img-avatars-63.png\"],\n[\"拜松\", \"https://i.postimg.cc/L4DdfGzP/img-avatars-64.png\"],\n[\"梅\", \"https://i.postimg.cc/rsQvkt8j/img-avatars-65.png\"],\n[\"微风\", \"https://i.postimg.cc/V69xKVp3/img-avatars-66.png\"],\n[\"伊桑\", \"https://i.postimg.cc/HxCG4gZw/img-avatars-67.png\"],\n[\"麦哲伦\", \"https://i.postimg.cc/pr2g4Bty/img-avatars-68.png\"],\n[\"送葬人\", \"https://i.postimg.cc/tg6QxT5R/img-avatars-69.png\"],\n[\"炎客\", \"https://i.postimg.cc/y8tCx90r/img-avatars-70.png\"],\n[\"红云\", \"https://i.postimg.cc/GmH1bzTy/img-avatars-71.png\"],\n[\"坚雷\", \"https://i.postimg.cc/fTHN41ys/img-avatars-72.png\"],\n[\"赫拉格\", \"https://i.postimg.cc/SNQhvmyV/img-avatars-73.png\"],\n[\"星极\", \"https://i.postimg.cc/ryNTjDLK/img-avatars-74.png\"],\n[\"桃金娘\", \"https://i.postimg.cc/T1f6G6nd/img-avatars-75.png\"],\n[\"黑\", \"https://i.postimg.cc/XqL0Yzgw/img-avatars-76.png\"],\n[\"格劳克斯\", \"https://i.postimg.cc/XJwbTJG1/img-avatars-77.png\"],\n[\"锡兰\", \"https://i.postimg.cc/4dCGLtdh/img-avatars-78.png\"],\n[\"苏苏洛\", \"https://i.postimg.cc/N02Ykbgc/img-avatars-79.png\"],\n[\"陈\", \"https://i.postimg.cc/9QnC9sHb/img-avatars-80.png\"],\n[\"诗怀雅\", \"https://i.postimg.cc/DwZ78nHm/img-avatars-81.png\"],\n[\"格雷伊\", \"https://i.postimg.cc/wTF6q7WS/img-avatars-82.png\"],\n[\"斑点\", \"https://i.postimg.cc/wT9qYhkX/img-avatars-83.png\"],\n[\"泡普卡\", \"https://i.postimg.cc/j24RJ5Rn/img-avatars-84.png\"],\n[\"斯卡蒂\", \"https://i.postimg.cc/RC7SYPwC/img-avatars-85.png\"],\n[\"格拉尼\", \"https://i.postimg.cc/wMp6vJYd/img-avatars-86.png\"],\n[\"夜魔\", \"https://i.postimg.cc/bJbypgMT/img-avatars-87.png\"],\n[\"猎蜂\", \"https://i.postimg.cc/6QFWkgHq/img-avatars-88.png\"],\n[\"月见夜\", \"https://i.postimg.cc/BvjZw4BR/img-avatars-89.png\"],\n[\"空爆\", \"https://i.postimg.cc/qMG7Nm7D/img-avatars-90.png\"],\n[\"暴行\", \"https://i.postimg.cc/L868LzY9/img-avatars-91.png\"],\n[\"银灰\", \"https://i.postimg.cc/MpPKDvVy/img-avatars-92.png\"],\n[\"塞雷娅\", \"https://i.postimg.cc/sxYg9m4X/img-avatars-93.png\"],\n[\"星熊\", \"https://i.postimg.cc/QxDtxLjW/img-avatars-94.png\"],\n[\"夜莺\", \"https://i.postimg.cc/NGmFcGvc/img-avatars-95.png\"],\n[\"闪灵\", \"https://i.postimg.cc/Fz5KL8c8/img-avatars-96.png\"],\n[\"安洁莉娜\", \"https://i.postimg.cc/JnBntMyj/img-avatars-97.png\"],\n[\"艾雅法拉\", \"https://i.postimg.cc/HLNnpVLp/img-avatars-98.png\"],\n[\"伊芙利特\", \"https://i.postimg.cc/Jh0tVbM6/img-avatars-99.png\"],\n[\"推进之王\", \"https://i.postimg.cc/sgw1NndG/img-avatars-100.png\"],\n[\"能天使\", \"https://i.postimg.cc/wj672CPd/img-avatars-101.png\"],\n[\"食铁兽\", \"https://i.postimg.cc/7YrCGGnh/img-avatars-102.png\"],\n[\"狮蝎\", \"https://i.postimg.cc/xTGXKf6R/img-avatars-103.png\"],\n[\"空\", \"https://i.postimg.cc/ZYdB5F3X/img-avatars-104.png\"],\n[\"真理\", \"https://i.postimg.cc/RhKNp44v/img-avatars-105.png\"],\n[\"初雪\", \"https://i.postimg.cc/SswnGJ0Z/img-avatars-106.png\"],\n[\"崖心\", \"https://i.postimg.cc/PqVpPSSn/img-avatars-107.png\"],\n[\"守林人\", \"https://i.postimg.cc/j5WWNy1w/img-avatars-108.png\"],\n[\"普罗旺斯\", \"https://i.postimg.cc/FKHkrMgx/img-avatars-109.png\"],\n[\"火神\", \"https://i.postimg.cc/L8RZ7YJw/img-avatars-110.png\"],\n[\"可颂\", \"https://i.postimg.cc/13HNZm6t/img-avatars-111.png\"],\n[\"雷蛇\", \"https://i.postimg.cc/pXKFqYLK/img-avatars-112.png\"],\n[\"红\", \"https://i.postimg.cc/CM38G6SF/img-avatars-113.png\"],\n[\"临光\", \"https://i.postimg.cc/2jbvBfpc/img-avatars-114.png\"],\n[\"华法琳\", \"https://i.postimg.cc/k4ZJdZfD/img-avatars-115.png\"],\n[\"赫默\", \"https://i.postimg.cc/hhRKXmFB/img-avatars-116.png\"],\n[\"梅尔\", \"https://i.postimg.cc/KjMZcNHf/img-avatars-117.png\"],\n[\"天火\", \"https://i.postimg.cc/cJx47fv1/img-avatars-118.png\"],\n[\"阿米娅\", \"https://i.postimg.cc/jjMqMCfH/img-avatars-119.png\"],\n[\"陨星\", \"https://i.postimg.cc/W3tNCjmQ/img-avatars-120.png\"],\n[\"白金\", \"https://i.postimg.cc/rwCwtfFY/img-avatars-121.png\"],\n[\"蓝毒\", \"https://i.postimg.cc/8zVC52D6/img-avatars-122.png\"],\n[\"幽灵鲨\", \"https://i.postimg.cc/sfqxFBNK/img-avatars-123.png\"],\n[\"拉普兰德\", \"https://i.postimg.cc/MKBTz6kw/img-avatars-124.png\"],\n[\"因陀罗\", \"https://i.postimg.cc/ZnG56gdX/img-avatars-125.png\"],\n[\"芙兰卡\", \"https://i.postimg.cc/fLgLRkTz/img-avatars-126.png\"],\n[\"德克萨斯\", \"https://i.postimg.cc/rs0p0cKS/img-avatars-127.png\"],\n[\"凛冬\", \"https://i.postimg.cc/XJvqW9W1/img-avatars-128.png\"],\n[\"白面鸮\", \"https://i.postimg.cc/XvLqtQRy/img-avatars-129.png\"],\n[\"阿消\", \"https://i.postimg.cc/5tbjPZRV/img-avatars-130.png\"],\n[\"地灵\", \"https://i.postimg.cc/6pdyf9zc/img-avatars-131.png\"],\n[\"深海色\", \"https://i.postimg.cc/x1rXmkGq/img-avatars-132.png\"],\n[\"古米\", \"https://i.postimg.cc/BQP8t5Kd/img-avatars-133.png\"],\n[\"蛇屠箱\", \"https://i.postimg.cc/59RYxK6B/img-avatars-134.png\"],\n[\"角峰\", \"https://i.postimg.cc/prpmfz15/img-avatars-135.png\"],\n[\"调香师\", \"https://i.postimg.cc/2yMV2yPc/img-avatars-136.png\"],\n[\"嘉维尔\", \"https://i.postimg.cc/Y9X4Lb8w/img-avatars-137.png\"],\n[\"末药\", \"https://i.postimg.cc/zBDbf9Cj/img-avatars-138.png\"],\n[\"暗索\", \"https://i.postimg.cc/7LnJwx2h/img-avatars-139.png\"],\n[\"砾\", \"https://i.postimg.cc/JhLHfytS/img-avatars-140.png\"],\n[\"慕斯\", \"https://i.postimg.cc/ZKWNpt1s/img-avatars-141.png\"],\n[\"艾丝黛尔\", \"https://i.postimg.cc/htx7Z849/img-avatars-142.png\"],\n[\"霜叶\", \"https://i.postimg.cc/Y2ngvqym/img-avatars-143.png\"],\n[\"缠丸\", \"https://i.postimg.cc/5NDCmKJ4/img-avatars-144.png\"],\n[\"杜宾\", \"https://i.postimg.cc/rsPt3Qt9/img-avatars-145.png\"],\n[\"红豆\", \"https://i.postimg.cc/T1wDtZhw/img-avatars-146.png\"],\n[\"清道夫\", \"https://i.postimg.cc/MTzRQcS1/img-avatars-147.png\"],\n[\"讯使\", \"https://i.postimg.cc/zBphSJz6/img-avatars-148.png\"],\n[\"白雪\", \"https://i.postimg.cc/K8gnSSf3/img-avatars-149.png\"],\n[\"流星\", \"https://i.postimg.cc/0NR79WXW/img-avatars-150.png\"],\n[\"杰西卡\", \"https://i.postimg.cc/25QhyQPz/img-avatars-151.png\"],\n[\"远山\", \"https://i.postimg.cc/CL2jQLGV/img-avatars-152.png\"],\n[\"夜烟\", \"https://i.postimg.cc/gkjVs66D/img-avatars-153.png\"],\n[\"梓兰\", \"https://i.postimg.cc/DfBQ1cm0/img-avatars-154.png\"],\n[\"史都华德\", \"https://i.postimg.cc/1XCpPybw/img-avatars-155.png\"],\n[\"安赛尔\", \"https://i.postimg.cc/1X5pL87y/img-avatars-156.png\"],\n[\"芙蓉\", \"https://i.postimg.cc/j5T64gzw/img-avatars-157.png\"],\n[\"炎熔\", \"https://i.postimg.cc/ZRL878cf/img-avatars-158.png\"],\n[\"安德切尔\", \"https://i.postimg.cc/g2fHnkjK/img-avatars-159.png\"],\n[\"克洛丝\", \"https://i.postimg.cc/R0KQf5nx/img-avatars-160.png\"],\n[\"米格鲁\", \"https://i.postimg.cc/4N25R1Tq/img-avatars-161.png\"],\n[\"卡缇\", \"https://i.postimg.cc/T290C6NR/img-avatars-162.png\"],\n[\"玫兰莎\", \"https://i.postimg.cc/BbMC6TP8/img-avatars-163.png\"],\n[\"翎羽\", \"https://i.postimg.cc/rFwJHP75/img-avatars-164.png\"],\n[\"香草\", \"https://i.postimg.cc/mkbwBXkf/img-avatars-165.png\"],\n[\"芬\", \"https://i.postimg.cc/26dGpRz7/img-avatars-166.png\"],\n[\"12F\", \"https://i.postimg.cc/8PZyPSLy/img-avatars-167.png\"],\n[\"杜林\", \"https://i.postimg.cc/HsYZgx8c/img-avatars-168.png\"],\n[\"巡林者\", \"https://i.postimg.cc/MZbPNRHJ/img-avatars-169.png\"],\n[\"黑角\", \"https://i.postimg.cc/1XPW4RWd/img-avatars-170.png\"],\n[\"夜刀\", \"https://i.postimg.cc/DZ1j24cs/img-avatars-171.png\"],\n[\"Castle-3\", \"https://i.postimg.cc/R0kp5Lw4/img-avatars-172.png\"],];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function vector_sum(v1, v2) {\n  if (v1.length != v2.length) {\n    return v1;\n  }\n  else {\n    return v1.map((v,i) =>(v + v2[i]));\n  }\n}\n\nexport function vector_diff(v1, v2) {\n  if (v1.length != v2.length) {\n    return [0];\n  }\n  else {\n    return v1.map((v,i) => (v - v2[i]));\n  }\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport function mod_slice(arr, idx, cnt) {\n  let len = arr.length;\n  let from = idx % len;\n  return [...arr.slice(from, len), ...arr.slice(0, from)].slice(0, cnt);\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed || 0;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { AVATARS } from './avatars';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 金色普通 龙门粗口 蕾丝花边超短裙 泳装 充电宝 抛光 JK 洁哥不要 蕾丝花边超短裙 老婆 泳装\".split(\" \");\n\nconst SEEDS = \"龙门厕所 250区废墟 完整小道 旧街 中转坐 霜烤废墟 废铁峡谷 军械库北 风蚀矮天 荒废受厂 龙门厕所 荒废受厂 风蚀矮天\".split(\" \");\n\nexport const classes = {\n  producers: \"极境 讯使 香草 桃金娘 红豆 清道夫 德克萨斯 惊蛰 推进之王 芬 调香师 断崖 锡兰 豆苗\".split(\" \"),\n  solvers: \"克洛丝 巡林者 杰西卡 蓝毒 陨星 流星 空爆 能天使 黑 W 陈 棘刺 史尔特尔 拉普兰德 刻刀 松果 刻俄柏 四月\".split(\" \"),\n  miners: \"史都华德 12F 阿米娅 炎熔 夜烟 远山 天火 星极 艾雅法拉\".split(\" \"),\n  standers: \"玫兰莎 芙兰卡 慕斯 柏喙 赫拉格 孑 宴 银灰 凛冬 卡达 阿米娅-近卫 机械水獭 末药 杜宾 森蚺 夜刀\".split(\" \"),\n  defenders: \"米格鲁 蛇屠箱 斑点 年 可颂 古米 雷蛇 塞雷娅 泥岩 砾 摄影车 龙腾 星熊\".split(\" \"),\n  supporters: \"梓兰 红 诗怀雅 安洁莉娜 霜叶 薄绿 清流 翎羽 白面鸮 赫默 凯尔希 空 波登可 真理 巫恋 安比尔 温蒂 夜莺 黑角\".split(\" \"),\n  scorers: \"阿消 崖心 食铁兽 雪雉 卡夫卡 铃兰 酸糖 普罗旺斯 闪灵 煌 阿 断罪者 伊芙利特 苏苏洛 大帝\".split(\" \"),\n  randomizers: \"斯卡蒂 图耶 热水壶 嘉维尔 迷迭香 风笛 安赛尔 微风 亚叶 伊桑 狮蝎 坚雷 暗索 可露希尔\".split(\" \"),\n};\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 杜林 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nexport const pick_scorers = \"阿米娅 阿消 崖心 雪雉 酸糖 煌 凯尔希 苏苏洛\".split(\" \");\n\nexport const pick_vanguards = \"极境 讯使 香草 桃金娘 豆苗 惊蛰 推进之王\".split(\" \");\n\nconst cost_vanguard =  `极境 1 2\n香草 1 1\n讯使 1 1\n桃金娘 1 2\n惊蛰 1 1\n推进之王 1 1\n豆苗 1 1`;\n\nconst draw_vanguard = `芬 1 2\n调香师 1 1\n锡兰 0 1\n清流 0 1`;\n\nconst scorer = `阿米娅 1 1\n崖心 1 1\n食铁兽 0 1\n酸糖 0 1\n普罗旺斯 0 1\n阿消 1 1\n阿米娅-近卫 0 1\n凯尔希 1 1\n伊芙利特 0 1\n雪雉 1 1\n卡夫卡 0 1\n铃兰 0 1\n阿 0 1`;\n\nconst miner =  `史都华德 1 1\n夜烟 1 1\n远山 1 1\n炎熔 1 1`;\n\nconst shooter = `棘刺 1 1\n陈 1 1\n银灰 1 1\nW 1 1\n卡达 1 1\n拉普兰德 0 1\n史尔特尔 1 1\n松果 1 1\n刻刀 1 1`;\n\nconst defender = `米格鲁 1 1\n蛇屠箱 0 1\n年 0 1\n龙腾 0 1\n摄影车 1 1`;\n\nconst supporter = `翎羽 1 1\n白面鸮 1 1\n雷蛇 0 1\n赫默 0 1\n凯尔希 0 1`;\n\nexport const solver_core = \"棘刺 陈 银灰 W 松果 刻刀 刻俄柏\".split(\" \");\nexport const scorer_core = \"阿米娅 阿消 崖心 雪雉 酸糖 铃兰 普罗旺斯 煌 凯尔希 伊芙利特\".split(\" \");\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 杜林 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n大帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n天火 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n天火 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n杜林 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\n// Maybe this should be rewrite to mini_sets_S2 with plenty of union sets\nconst mini_sets = [\n  //基本阿米娅单核\n  ' 阿米娅 雷蛇 艾雅法拉 ',\n  ' 阿米娅 夜烟 炎熔|史都华德|凯尔希 ',\n\n  //风笛套\n  ' 风笛 白面鸮 温蒂',\n  ' 风笛 夜刀|食铁兽 黑角|食铁兽 ',\n\n  //莱茵订单流\n  ' 赫默 赫默|白面鸮 凯尔希 ',\n\n  //火龙单核\n  ' 伊芙利特 赫默 史都华德|夜烟|炎熔 ',\n\n  //企鹅物流 有德狗爆费核心 有空大帝刷分核心 还有空德可颂的清场\n  ' 德克萨斯 德克萨斯 艾雅法拉 ',\n  ' 空 空 温蒂 波登可 大帝 ',\n  ' 德克萨斯 可颂 可颂 ',\n\n  //能天使核心各种 能陨速清场 能炎熔刷材料\n  // ' 能天使 陨星 蓝毒 炎熔 ',\n  // ' 能天使 陨星 拉普兰德 刻俄柏 ',\n\n  //陨星单核\n  ' 能天使 陨星 雷蛇 末药 ',\n\n  //狙击流\n  ' 空爆|清道夫|阿 摄影车|机械水獭 砾 ',\n\n  //艾雅法拉核心各种\n  // ' 艾雅法拉 杰西卡 柏喙 柏喙 ',\n  ' 艾雅法拉 巫恋 刻俄柏 巫恋|刻俄柏 ', // 易伤流\n\n  //安洁莉娜强力全套\n  ' 安洁莉娜 陈|翎羽 陈|诗怀雅 ',\n  // ' 安洁莉娜 推进之王 推进之王 森蚺|泥岩 ',\n\n  //送盾流\n  ' 年 米格鲁 米格鲁|摄影车 ',\n\n  //梅尔清场流\n  // ' 机械水獭 机械水獭 史都华德|远山|杜林 ',\n\n  //雷蛇引擎流\n  ' 艾雅法拉  能天使  雷蛇 白雪 ',\n\n  //温蒂引擎刷分流\n  ' 温蒂 白面鸮 食铁兽 ',\n\n  //崖心刷钢流\n  ' 星极 赫默|白面鸮 崖心 ',\n\n  //经典断罪者套\n  ' 调香师 调香师 艾雅法拉 棘刺 微风|棘刺 清流 断罪者 ',\n\n  //召唤回手套\n  ' 图耶 安赛尔 霜叶|薄绿 ',\n\n  //调香师单核\n  ' 棘刺|微风 棘刺|微风 调香师 芬|调香师 ',\n\n  //铃兰小家族\n  ' 铃兰 阿|空爆|清道夫|霜叶 摄影车|砾 ',\n\n  //波登可经典引擎战吼套\n  ' 波登可 白面鸮 温蒂 ',\n  //波登可全员增强\n  // ' 波登可 图耶 杜宾 杜宾 ',\n\n  //苏苏洛经典套\n  // ' 苏苏洛 杜林 卡达 波登可 ',\n\n  //消费流\n  // ' 阿消 夜烟 史尔特尔 惊蛰 ',\n\n  //史尔特尔\n  ' 史尔特尔 末药 酸糖 ',\n\n  //真理单核套路集合\n  // ' 凛冬 凛冬 真理 ',\n  ' 刻俄柏|陈 食铁兽|伊芙利特 真理 ',\n  // ' 伊桑 刻俄柏 芙兰卡 真理 ',\n\n  //经典强化\n  // ' 古米 古米|诗怀雅 ',\n\n  //超杀\n  ' 安比尔 天火|煌|迷迭香|白金 煌 ',\n\n  //绝对解场\n  ' 酸糖 拉普兰德 刻刀 ',\n\n  //刻刀别的配合\n  ' 刻刀 霜叶 ',\n\n  //整活套路\n  ' 斯卡蒂 斯卡蒂 森蚺 ',\n  // ' 图耶 亚叶 ',\n  ' 安赛尔 安赛尔|微风 微风 ',\n  ' 图耶 狮蝎 狮蝎 ',\n  ' 热水壶 热水壶 斯卡蒂 ',\n\n  //养巨怪套路\n  ' 安洁莉娜 波登可 森蚺 森蚺 ',\n  ' 安洁莉娜 极境 泥岩 ',\n\n  //卡夫卡\n  ' 卡夫卡 摄影车 安洁莉娜 ',\n  \n  //刻刀单核小套路\n  ' 刻刀 刻刀 刻俄柏 波登可 ',\n  //前期猛打小套路\n  // ' 孑 宴 孑|宴  翎羽 ',\n  //前期直接打爆 稳住直接持续\n  ' 孑 孑 史都华德 惊蛰 ',\n  //拉狗单核小套路\n  ' 拉普兰德  能天使  刻俄柏 ',\n  //柏喙小套路\n  ' 柏喙 翎羽 夜莺 ',\n  //银灰单核\n  ' 银灰 赫默|凯尔希 星极 ',\n  //清道夫小配合\n  // ' 清道夫 空爆 砾 摄影车 流星 ',\n  //闪灵小配合\n  // ' 闪灵 蛇屠箱 ',\n  //史尔特尔小配合\n  // ' 史尔特尔 米格鲁 空 ',\n  //阿米娅近卫小配合\n  ' 阿米娅-近卫 卡达 龙腾|机械水獭 ',\n\n  //W小配合\n  ' W 史都华德|夜烟|炎熔 ',\n\n  //安洁其他配合\n  ' 安洁莉娜 远山|杜宾 远山|红 ',\n\n  //苏苏洛\n  ' 苏苏洛 波登可 ',\n\n  //普罗旺斯\n  ' 普罗旺斯 巡林者 ',\n  //还有一个普罗旺斯泥岩的套路 然而这个套路一个问题在于 需要的牌太多了 这边尽可能都是小combo 不能是大的 但只有20张 所以加上也无妨\n  ' 普罗旺斯 泥岩 极境 安洁莉娜 波登可 霜叶|闪灵 ',\n\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n  // ' 阿 蛇屠箱 闪灵 ',\n  // ' 棘刺 棘刺 调香师 芬 ',\n  // ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n  // ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n  // ' 锡兰  锡兰  夜莺 ',\n  // ' 普罗旺斯  灰喉  巡林者 波登可 ',\n  // ' 安洁莉娜 陈 陈  波登可 ',\n  // ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n  // ' 梅尔 赫默 白面鸮 天火  艾雅法拉 ',\n  // ' 能天使 蓝毒 陨星 酸糖 ',\n  // ' 霜叶  图耶  杜宾 ',\n  // ' 守林人  守林人  夜莺 ',\n  //  ' 末药  银灰  初雪 ',\n  //  ' 梓兰  梓兰  能天使 ',\n  //  ' 赫默  稀音  梅尔 梅尔 史都华德  天火  塞雷娅 ',\n  //  ' 温蒂  白面鸮  桃金娘 ',\n  //  ' 白金  末药  煌 ',\n  //' 拉普兰德  白雪  白雪 ',\n  //  ' 酸糖 米格鲁 米格鲁 红 ',\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_challenge_name(rng) {\n  let card = rng.choice(AVATARS);\n  return {\n    desc:`${card[0]}在${rng.choice(SEEDS)}`, \n    illust:card[1],\n  };\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n\n  selection = selection.map(select_one_card(rng));\n\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nexport function deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport const select_one_card = rng => x => x.includes(\"|\")? rng.choice(x.split(\"|\")):x;\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  // deck = [...deck, ...deck_from_strategy(scorer, 1, rng)];\n  // deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(supporter, 1, rng)];\n\n  // Strategy deck\n  // deck = [...deck, ...deck_from_mini_sets(12, rng)];\n  deck = [...deck, ...deck_from_mini_sets(8, rng)];\n\n  // Let diff goes\n  // console.log(\"deck before\", deck);\n  deck = deck.map(select_one_card(rng));\n  // console.log(\"deck after\", deck);\n\n  // No more than 2\n  let deck_dict = deck.reduce((acc, val) => ({...acc, [val]: (acc[val]+1)||1}), {})\n  for (let card in deck_dict) {\n    if (deck_dict[card] > 2) {\n      deck_dict[card] = 2;\n    }\n  }\n  deck = Object.keys(deck_dict).reduce((acc, val) => [...acc, ..._.times(deck_dict[val], ()=>val)], [])\n\n  // Random cards\n  let amount_add = 22 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_roguelike_deck(deck_name) {\n  let deck = [\"黑角\", \"极境\", \"桃金娘\", deck_name.slice(0,-3)];\n  // console.log(deck);\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(supporter, 1, rng)];\n  // console.log(deck);\n\n  // Random cards\n  let amount_add = 12 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  // let generator = (rng.random() > 0.05)? generate_deck_s2 : generate_deck_s1;\n  let generator = generate_deck_s2;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value != 20) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"https://i.postimg.cc/CKyWC0dF/img-icons-5.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"https://i.postimg.cc/dVZbT3sH/img-icons-6.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"https://i.postimg.cc/YqPc9YHL/img-icons-7.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"https://i.postimg.cc/j5tm9hzm/img-icons-3.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"https://i.postimg.cc/mrQK8nF7/img-icons-4.png\" style={{height: \"1.1em\"}} className=\"steel\" />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M12 19V6M5 12l7-7 7 7\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n\n  reset: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.2\"/></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];\n\nconst smaller_height = '1.1em';\nexport const smaller_icons = [\n  (<img src=\"https://i.postimg.cc/CKyWC0dF/img-icons-5.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"https://i.postimg.cc/dVZbT3sH/img-icons-6.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"https://i.postimg.cc/YqPc9YHL/img-icons-7.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"https://i.postimg.cc/j5tm9hzm/img-icons-3.png\" style={{height:smaller_height}} className=\"material steel\" />),\n]","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[0];\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得+2攻击力`);\n  }\n  card.atk += 2;\n  // card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nfunction set_collection_order(G, ctx) {\n  let colors = G.finished.reduce((acc,val)=>{\n    if(val.color >= 0) acc[val.color]+=1;\n    return acc;\n  }, [0,0,0]);\n  // console.log(colors);\n  let times = _.min(colors);\n  G.score += 2 * times;\n  logMsg(G, ctx, `使用三色订单获得 ${2*times} 分`);\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+2攻击力</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 1,\n    reward: 3,\n    desc: (<span>获得: 1费</span>),\n    advanced: true,\n    effect(G, ctx) {\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [1,1,1,0],\n    score: 1, \n    reward: 3,\n    advanced: true,\n    desc: (<span>2分/每组{food_icons.slice(0,3)}订单</span>),\n    effect: set_collection_order,\n  },\n  \n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   desc: (<span>重置1订单</span>),\n  //   advanced: true,\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n    \n];\n  \nexport const ORDERS = [\n  \n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 4,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 4,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 4,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>{material_icons[2]} → 2费</span>),\n  //   cost: [0,0,1,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 2费</span>),\n  //   cost: [1,0,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 2费</span>),\n  //   cost: [0,1,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n\n  // // {\n  //   requirements: [3,0,0,0],\n  //   score: 2, \n  //   reward: 2,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2, \n  //   reward: 0,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // }, \n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  \n  \n\n  ...advanced_orders,\n  // ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, reduce_enemy_atk, silent, summon, eliminate_field, reinforce_field, choice, add_vulnerable, play_card, exhaust_order, get_blocker,\n} from './Game';\nimport { classes } from './DeckGenerator';\nimport { material_icons, ready_order } from './orders';\nimport { food_icons } from './icons';\n\nexport function init_card(card) {\n  return {\n    name: \"card\",\n    block: 0,\n    dmg: 0,\n    power: 0,\n    // material: rng.randRange(3),\n\n    onPlayBonus: [],\n\n    ...card,\n  };\n}\n\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"https://i.postimg.cc/g2wKz6zJ/img-cards-0.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"https://i.postimg.cc/QtZmnxrM/img-cards-1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 30) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得30分以上\", self);\n      }\n    },\n    action(G, ctx, self) {\n      if (self.power == 1) {\n        let queen = G.CARDS.find(x => x.name == \"阿米娅-近卫\");\n        Object.assign(self, queen);\n        self.onPlay(G, ctx, self);\n      }\n      else {\n        logMsg(G, ctx, \"只需要强化1次即可\");\n      }\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"https://i.postimg.cc/sg8w7467/img-cards-2.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"https://i.postimg.cc/1zqMHV2T/img-cards-3.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"芙兰卡\", \n  //   cost:4, \n  //   atk:6, \n  //   hp:6, \n  //   mine:3, \n  //   block:1, \n  //   illust:\"https://i.postimg.cc/jSCMDFXR/img-cards-4.png\",\n  //   reinforce: 2,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 6;\n  //     self.hp += 6;\n  //   },\n  //   reinforce_desc: \"+6/+6\",\n  // },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"https://i.postimg.cc/VvRKtypk/img-cards-5.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"https://i.postimg.cc/ZqBsMMBw/img-cards-6.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  // {\n  //   name: \"12F\",\n  //   cost: 5,\n  //   atk: 6,\n  //   hp: 4,\n  //   mine: 5,\n  //   block: 0,\n  //   illust: \"https://i.postimg.cc/9FbkRTHY/img-cards-7.png\",\n  //   reinforce: 2,\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 10,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"https://i.postimg.cc/dVSSnY17/img-cards-8.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+5/+2\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"https://i.postimg.cc/9QfnGMW5/img-cards-9.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let white = G.CARDS.find(x => x.name == \"白面鸮\");\n      Object.assign(self, white);\n      self.exhausted = false;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:16,\n    hp:16,\n    mine:8,\n    block:2,\n    illust:\"https://i.postimg.cc/wMcGkRyH/img-cards-10.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 50) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到50\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"https://i.postimg.cc/kMxzCzjZ/img-cards-11.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"https://i.postimg.cc/dtwXV6p0/img-cards-12.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.block <= 0) {\n    //     self.block = 1;\n    //   }\n    // },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n        self.onTurnBegin = (G, ctx, self) => {\n          self.block += 1;\n          self.onTurnBegin = undefined;\n        };\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"https://dadiaogames.gitee.io/images/imagebed/vanilla.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"https://i.postimg.cc/PJk7ZQq2/img-cards-13.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"https://i.postimg.cc/cH3jrbdv/img-cards-14.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 摧毁场上1个(重置的)干员，并获得4点费用\", \n    illust:\"https://i.postimg.cc/N05Zw0V7/img-cards-15.png\",\n    onMine(G, ctx, self) {\n      if (eliminate_field(G, ctx, self)) {\n        G.costs += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"https://i.postimg.cc/XY2th52Y/img-cards-16.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"https://i.postimg.cc/Hs9qwRX5/img-cards-17.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 10) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少10点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"https://i.postimg.cc/XvmmNb6M/img-cards-18.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n        logMsg(G, ctx, `打出 ${new_card.name}`);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"https://i.postimg.cc/Hs9qwRX5/img-cards-17.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"https://i.postimg.cc/bNPX2pDp/img-cards-20.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 5) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王5次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"https://i.postimg.cc/tRWQTYgB/img-cards-21.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得1个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"https://i.postimg.cc/9036bjLP/img-cards-22.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 4 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+4\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"https://i.postimg.cc/x1tS2hdY/img-cards-23.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  // {\n  //   name:\"杜林\", \n  //   cost:3, \n  //   atk:2, \n  //   hp:1, \n  //   mine:2, \n  //   block:0, \n  //   desc:\"部署: 场上所有其他干员获得<+1>\", \n  //   illust:\"https://i.postimg.cc/4yt8x7bV/img-cards-138.png\",\n  //   onPlay(G, ctx, self) {\n  //     for (let card of G.field) {\n  //       if (card != self) {\n  //         card.mine += 1;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 2,\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"https://i.postimg.cc/6p9NFttY/img-cards-25.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 15)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少15次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"https://i.postimg.cc/qRCf27xM/img-cards-26.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"https://i.postimg.cc/tgJGCk16/img-cards-27.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-6\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 6;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc: <span>采掘: 弃2张牌，获得2个{material_icons[3]}</span>, \n    illust:\"https://i.postimg.cc/4Nvg8mkY/img-cards-28.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.materials[3] += 2;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不够\");\n        // self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:2, \n    desc:\"行动: 获得+6生命值，本回合阻挡数+1\", \n    illust:\"https://i.postimg.cc/021vd73g/img-cards-29.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n      self.block += 1;\n      self.onTurnBegin = (G, ctx, self) => {\n        self.block -= 1;\n        self.onTurnBegin = undefined;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n// {\n//     name:\"斑点\", \n//     cost:4, \n//     atk:2, \n//     hp:12, \n//     mine:2, \n//     block:2, \n//     desc:\"行动: 完全治疗自己\", \n//     illust:\"https://i.postimg.cc/0jLLt1Zd/img-cards-62.png\",\n//     action(G, ctx, self) {\n//       // let self_idx = G.field.indexOf(self);\n//       // G.field.map((card, idx) => {\n//       //   if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n//       //     card.hp += 4;\n//       //   }\n//       // });\n//       self.dmg = 0;\n//     },\n//     reinforce: 1,\n//     reinforce_desc: \"+0/+6\",\n//     onReinforce(G, ctx, self) {\n//       self.hp += 6;\n//     }\n//   },\n\n  {\n    name:\"星熊\", \n    cost:3, \n    atk:2, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"行动: 消耗1点费用，对阻挡的所有敌人造成2点伤害，然后重置自己\", \n    illust:\"https://i.postimg.cc/T1qrsrJ7/img-cards-119.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 1, true)) {\n        // self.atk += 2;\n        // self.hp += 2;\n        // self.block += 1;\n        for (let enemy of G.efield) {\n          if (get_blocker(G, ctx, enemy) == self) {\n            enemy.dmg += 2;\n          }\n        }\n      }\n      self.exhausted = false;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n\n\n  {\n    name:\"年\", \n    cost:5, \n    atk:3, \n    hp:9, \n    mine:2, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"https://i.postimg.cc/fyx6ggPG/img-cards-32.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"https://i.postimg.cc/PfwhwSSz/img-cards-33.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n    \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"https://i.postimg.cc/kGKmP52h/img-cards-34.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:2, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"采掘: 使场上1个(重置的)干员获得+2/+2\", \n    illust:\"https://i.postimg.cc/B6d0zFnK/img-cards-35.png\",\n    // onPlay(G, ctx, self) {\n    //   fully_restore(G, ctx);\n    // },\n    onMine(G, ctx, self) {\n      let card = choice(ctx, G.field.filter(x => x!=self).filter(x => !x.exhausted));\n      if (card) {\n        card.atk += 2 + self.power;\n        card.hp += 2 + self.power;\n      }\n\n    },\n    reinforce: 1,\n    // onReinforce(G, ctx, self) {\n    //   cure(G, ctx, 6);\n    // },\n    reinforce_desc: \"再获得+1/+1\",\n  },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个2费干员\", \n    illust:\"https://i.postimg.cc/d0Nv8pMn/img-cards-36.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        // G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n        summon(G, ctx, new_card, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个(重置的)干员获得+3/+3\", \n    illust:\"https://i.postimg.cc/G2BRzKdR/img-cards-37.png\",\n    onPlay(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      let card = choice(ctx, G.field.filter(x => x!=self).filter(x => !x.exhausted));\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n  },\n  \n  // {\n  //   name:\"Lancet-2\", \n  //   cost:3,\n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 本回合下一次部署干员时，会额外部署1次\", \n  //   was_enemy: true,\n  //   illust:\"https://i.postimg.cc/G2BRzKdR/img-cards-37.png\",\n  //   onPlay(G, ctx, self) {\n  //     let play_again = () => {\n  //       let played = false;\n  //       return (G, ctx, card_played, card) => {\n  //         if (!played) {\n  //           play_card(G, ctx, card);\n  //           played = true;\n  //         }\n  //       }};\n  //     G.onPlayCard.push(\n  //       play_again(),\n  //     );\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"https://i.postimg.cc/YSWLV6p6/img-cards-103.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"https://i.postimg.cc/qRpBLygM/img-cards-79.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  // {\n  //   name:\"闪灵\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n  //   illust:\"https://i.postimg.cc/TYnRZtmY/img-cards-41.png\",\n  //   reinforce: 2,\n  //   action(G, ctx, self) {\n  //     let cured = fully_restore(G, ctx);\n  //     if (cured >= 4) {\n  //       G.score += 2 + 2 * self.power;\n  //     }\n  //   },\n  //   reinforce_desc: \"再获得2分\",\n  // },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"https://i.postimg.cc/tRKqSKsM/img-cards-42.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"https://i.postimg.cc/CMBM4hx8/img-cards-43.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"大帝\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得1分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += num_exhausted;\n      if (num_exhausted >= 10) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少10个敌人被横置时部署大帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"https://i.postimg.cc/FHm9m0gb/img-cards-44.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + self.power, true)) {\n        let delta = 6 + 2 * self.power;\n        G.score += delta;\n\n        if (delta >= 40) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少40分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+1，得分+2\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"https://i.postimg.cc/CxNwKdm3/img-cards-45.png\",\n    action(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce: 2,\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"https://i.postimg.cc/T1Ws5HGy/img-cards-46.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"https://i.postimg.cc/3wSfSHx4/img-cards-143.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc: \"行动: 摧毁3个颜色相同的(重置的)订单，获得12分\",\n    illust:\"https://i.postimg.cc/0Q43QqgR/img-cards-48.png\",\n    action(G, ctx, self) {\n      for (let i=0; i<3; i++) {\n        let colored_orders = G.finished.filter(x => (!x.exhausted) && (x.color == i));\n        if (colored_orders.length >= 3) {\n          G.finished = G.finished.filter(x => !colored_orders.includes(x));\n          G.score += 12;\n          logMsg(G, ctx, \"获得12分\");\n          return;\n        }\n      }\n      self.exhausted = false;\n      logMsg(G, ctx, \"没有3个同色的订单\");\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2分\",\n    onReinforce(G, ctx, self){\n      G.score += 2;\n    },\n  },\n\n  {\n    name:\"塞雷娅\",\n    cost:4,\n    atk:4,\n    hp:9,\n    mine:2,\n    block:2,\n    desc: \"行动: 本回合剩余时间内，使用其他干员战斗时，重置1个订单\",\n    illust:\"https://i.postimg.cc/ydxts8by/img-cards-49.png\",\n    action(G, ctx, self) {\n      G.onCardFight.push(\n        (G, ctx) => {\n          ready_order(G, ctx, true);\n        }\n      );\n    },\n    reinforce: 1,\n    reinforce_desc: \"使1个敌人获得易伤1\",\n    onReinforce(G, ctx, self){\n      add_vulnerable(G, ctx, 1);\n    },\n  },\n{\n    name:\"凯尔希\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 横置1个订单，并触发其能力2次\",\n    illust:\"https://i.postimg.cc/hGSNZr8w/img-cards-50.png\",\n    onMine(G, ctx, self) {\n      let order = exhaust_order(G, ctx);\n      if (order) {\n        for (let i=0; i<(2+self.power); i++) {\n          if ((order.cost == undefined) || payMaterials(G, ctx, order.cost, true)) {\n            order.effect(G, ctx);\n          }\n        }\n      }\n      else {\n        logMsg(G, ctx, \"没有可横置的订单\");\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再触发1次\",\n  },\n{\n    name:\"松果\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 横置2个订单，摧毁1个敌人，如果2个订单颜色相同，则再摧毁1个\",\n    illust:\"https://i.postimg.cc/GmPZjNDG/img-cards-51.png\",\n    onPlay(G, ctx, self) {\n      let order1 = exhaust_order(G, ctx);\n      let order2 = exhaust_order(G, ctx);\n      if (order1 != undefined && order2 != undefined) {\n        let times = (order1.color == order2.color)? 2 : 1;\n        for (let i=0; i<times; i++) {\n          let enemy = choice(ctx, G.efield.filter(x => x.hp > x.dmg));\n          enemy.dmg += enemy.hp;\n        }\n      }\n      else {\n        logMsg(G, ctx, \"没有足够的订单\");\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成4点伤害\",\n    onReinforce(G, ctx, self){\n      deal_random_damage(G, ctx, 4);\n    },\n  },\n  {\n    name:\"白金\",\n    cost:3,\n    atk:5,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"超杀: 横置1个订单，重置1个干员\",\n    illust:\"https://i.postimg.cc/VkPxn1Jz/img-cards-52.png\",\n    reinforce: 1,\n    reinforce_desc: \"+2/+1\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp && exhaust_order(G, ctx)) {\n        ready_random_card(G, ctx, self);\n      }\n    },\n    onReinforce(G, ctx, self){\n      self.atk += 2;\n      self.hp += 1;\n    },\n  },\n// {\n//     name:\"豆苗\",\n//     cost:2,\n//     atk:3,\n//     hp:2,\n//     mine:1,\n//     block:0,\n//     desc: <span>采掘: 横置1个订单，如果该订单是<br/>{food_icons[0]}: 获得3点费用<br/>{food_icons[1]}: 摸2张牌，并使该牌费用-1<br/>{food_icons[2]}: 召唤手牌中1个干员的4/4复制</span>,\n//     illust:\"https://i.postimg.cc/YqFcvjqX/img-cards-53.png\",\n//     onMine(G, ctx, self) {\n//       let order = exhaust_order(G, ctx);\n//       if (order) {\n//         if (order.color == 0) {\n//           G.costs += 3;\n//         }\n//         else if (order.color == 1) {\n//           draw(G, ctx);\n//           draw(G, ctx);\n//           G.hand[0].cost -= 1;\n//           G.hand[1].cost -= 1;\n//         }\n//         else {\n//           let card = choice(ctx, G.hand);\n//           if (card) {\n//             summon(G, ctx, {\n//               ...card,\n//               atk: 4,\n//               hp: 4,\n//               mine: 2,\n//               cost: 3,\n//             }, self);\n//           }\n//       }\n//       }\n//     },\n//     reinforce: 1,\n//     reinforce_desc: \"获得1点费用\",\n//     onReinforce(G, ctx, self){\n//       G.costs += 1;\n//     },\n//   },\n{\n    name:\"夜莺\",\n    cost:2,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: <span>行动: 横置1个订单，如果该订单是<br/>{food_icons[0]}: 重置1个干员<br/>{food_icons[1]}: 横置2个敌人<br/>{food_icons[2]}: 触发场上1个干员的\"部署:\"效果(极境除外)</span>,\n    illust:\"https://i.postimg.cc/kGf28wcm/img-cards-100.png\",\n    action(G, ctx, self) {\n      let order = exhaust_order(G, ctx);\n      if (order) {\n        if (order.color == 0) {\n          ready_random_card(G, ctx, self);\n        }\n        else if (order.color == 1) {\n          exhaust_random_enemy(G, ctx);\n          exhaust_random_enemy(G, ctx);\n        }\n        else {\n          let card = choice(ctx, G.field.filter(x => x.onPlay && x.name != \"极境\"));\n          if (card) {\n            card.onPlay(G, ctx, card);\n            logMsg(G, ctx, `触发 ${card.name} 的部署效果`);\n          }\n          else {\n            logMsg(G, ctx, \"没有合适的干员触发\");\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n    onReinforce(G, ctx, self){\n      cure(G, ctx, 6);\n    },\n  },\n  {\n    name:\"天火\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:4,\n    block:0,\n    desc: \"超杀: 每造成2点额外伤害，就获得1个材料\",\n    illust:\"https://i.postimg.cc/1R2hRDPn/img-cards-55.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let times = Math.floor(delta / 2);\n        // for (let i=0; i<times; i++) {\n        //   let order = choice(ctx, G.finished.filter(x => !x.exhausted));\n        //   if (order) {\n        //     order.effect(G, ctx);\n        //     logMsg(G, ctx, [\"触发订单 \", order.desc]);\n        //   }\n        // }\n        gainMaterials(G, ctx, times);\n      }\n    },\n    // action(G, ctx) {\n    //   G.onUseOrder.push(\n    //     (G, ctx) => {\n    //       deal_random_damage(G, ctx, 3);\n    //     }\n    //   );\n    // },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+2/+1\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  // {\n  //   name:\"梅尔\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n  //   illust:\"https://i.postimg.cc/B6jYRwjh/img-cards-145.png\",\n  //   reinforce: 1,\n\n  //   onPlay(G, ctx) {\n  //     let order = {};\n  //     let material = ctx.random.Die(3) - 1;\n  //     let requirements = [0,0,0,0];\n  //     requirements[material] = 1;\n  //     order.desc = <span>{material_icons[material]}→5伤害</span>;\n  //     order.effect = (G,ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         deal_random_damage(G, ctx, 5);\n  //       }\n  //     };\n  //     order.is_rhine = true;\n  //     G.finished.unshift(order);\n  //   },\n    \n  //   onReinforce(G, ctx) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"https://i.postimg.cc/BvQwBv4f/img-cards-144.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"摄影车\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个召唤物\\\"稀音\\\"\",\n    was_enemy: true,\n    illust:\"https://i.postimg.cc/NjhcDmzq/img-cards-59.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, card, ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"稀音\\\"\",\n  },\n  \n  {\n    name:\"机械水獭\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个召唤物\\\"梅尔\\\"\",\n    was_enemy: true,\n    illust:\"https://i.postimg.cc/Nj1wzF3y/img-cards-60.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), card.generator(ctx), ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"梅尔\\\"\",\n  },\n  \n  {\n    name:\"龙腾\",\n    was_enemy: true,\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤3个\"麦哲伦\"</span>,\n    illust:\"https://i.postimg.cc/3J0h2n9F/img-cards-61.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let generator = extra_cards.find(x => x.name == \"麦哲伦\");\n        for (let i=0; i<3; i++) {\n          let card = generator.generate(ctx);\n          summon(G, ctx, {...card}, self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  \n  // {\n  //   name:\"斑点\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:6,\n  //   mine:2,\n  //   block:3,\n  //   desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n  //   illust:\"https://i.postimg.cc/0jLLt1Zd/img-cards-62.png\",\n  //   onPlay(G, ctx, self) {\n  //     let num_finished = G.finished.length;\n  //     self.atk += num_finished;\n  //     self.hp += 2 * num_finished;\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"阻挡数+1\",\n  // },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"https://i.postimg.cc/D0W9dwQw/img-cards-63.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 2,\n    // onReinforce(G, ctx, self) {\n    //   let miners = G.deck.filter(x => x.onMine);\n    //   if (miners.length > 0) {\n    //     let card = ctx.random.Shuffle(miners)[0];\n    //     G.hand.unshift(Object.assign({}, card));\n    //   }\n    // },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:1, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"https://i.postimg.cc/43sTkZGW/img-cards-64.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 2,\n    // onReinforce(G, ctx, self) {\n    //   let fighters = G.deck.filter(x => x.onFight);\n    //   if (fighters.length > 0) {\n    //     let card = ctx.random.Shuffle(fighters)[0];\n    //     G.hand.unshift(Object.assign({}, card));\n    //   }\n    // },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:4, \n    hp:6, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"https://i.postimg.cc/ZRDkdddQ/img-cards-65.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"https://i.postimg.cc/63QJq0yR/img-cards-66.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"采掘: 获得2分，然后横置1个干员，该干员每有2点攻击力，就再获得1分\", \n    illust:\"https://i.postimg.cc/HLz1TKsd/img-cards-67.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      if (card) {\n        card.exhausted = true;\n        let delta = Math.floor(card.atk / 2) + 2;\n        G.score += delta;\n        logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n      }\n      // let power = self.power;\n      // G.onPayCost.push(\n      //   (G, ctx, amount) => {\n      //     for (let i=0; i<amount; i++) {\n      //       deal_random_damage(G, ctx, 3 + power);\n      //     }\n      //   }\n      // );\n    },\n    reinforce: 2,\n    reinforce_desc: \"触发1次\\\"采掘:\\\"效果\",\n    onReinforce(G, ctx, self) {\n      this.onMine && this.onMine(G, ctx, self);\n    }\n  },\n  \n  // {\n  //   name:\"灰喉\", \n  //   cost:4,\n  //   atk:2, \n  //   hp:1, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 获得+15攻击力直到回合结束\", \n  //   illust:\"https://i.postimg.cc/jqFKWG6j/img-cards-68.png\",\n  //   onPlay(G, ctx, self) {\n  //     let delta = 15;\n  //     self.atk += delta;\n  //     self.played = true;\n  //     self.onTurnBegin = (G, ctx, self) => {\n  //       if (self.played) {\n  //         self.atk -= delta;\n  //         self.played = false;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n\n  // },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"https://i.postimg.cc/nrCJRkxZ/img-cards-69.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 50) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少50分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:4,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"超杀: 每造成1点额外伤害，就摸1张牌\",\n  //   illust:\"https://i.postimg.cc/5yTMZC9z/img-cards-70.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let delta = enemy.dmg - enemy.hp;\n  //       for (let i=0; i<delta; i++) {\n  //         draw(G, ctx);\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的2/2复制\",\n  //   illust:\"https://z3.ax1x.com/2020/11/26/Ddxxbt.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       for (let i=0; i<2; i++) {\n  //         let card = ctx.random.Shuffle(G.CARDS.filter(x => x.onMine || x.onFight || x.action))[0];\n  //         card = {...card};\n  //         card.atk = 2;\n  //         card.hp = 2;\n  //         card.mine = 1;\n  //         card.cost = 2;\n  //         summon(G, ctx, card, self);\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  {\n    name:\"安比尔\",\n    cost:2,\n    atk:4,\n    hp:2,\n    mine:0,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，干员的\\\"超杀:\\\"效果将额外触发1次\",\n    illust:\"https://i.postimg.cc/LX4RfS0J/img-cards-71.png\",\n    action(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, self, enemy) => {\n          if (enemy.dmg > enemy.hp && ((typeof self.desc) == \"string\") && self.desc.includes(\"超杀\")) {\n            self.onFight && self.onFight(G, ctx, self, enemy);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n  {\n    name:\"黑\",\n    cost:3,\n    atk:5,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"战斗: 攻击其面前的敌人时，造成伤害翻倍\",\n    illust:\"https://i.postimg.cc/8CmNjcw8/img-cards-72.png\",\n    onFight(G, ctx, self, enemy) {\n      let idx = G.field.indexOf(self);\n      let target = G.efield[idx];  // it's fine if it is undefined\n      if (enemy == target) {\n        enemy.dmg += self.atk;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+2/+1\",\n  },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"https://i.postimg.cc/Fsw96216/img-cards-73.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:3, \n    hp:3, \n    mine:2, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 变成1个随机干员\", \n    illust:\"https://i.postimg.cc/5979BHJb/img-cards-74.png\",\n    onPlay(G, ctx, self) {\n      // self.hp += 2;\n      // G.costs += 1;\n      // G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n      let card = choice(ctx, G.CARDS.filter(c => c.onMine || c.onFight || c.action));\n      Object.assign(self, {...card, atk:self.atk, hp:self.hp, mine:self.mine, block:self.block, was_enemy:false})\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"https://i.postimg.cc/FRPvV62D/img-cards-75.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3+2*self.power); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复2次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"https://i.postimg.cc/NjTgvpHj/img-cards-76.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的部署效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的采掘效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的战斗效果`, '\"', card.desc, '\"']);\n      }\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的行动效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);\n      }\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"图耶\",\n    cost:6,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制\",\n    illust:\"https://i.postimg.cc/N0cQsm67/img-cards-77.png\",\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS).filter(c => c.onMine || c.onFight || c.action || (c.cost >= 4));\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        // G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  // {\n  //   name:\"暴行\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:4,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n  //   illust:\"https://i.postimg.cc/yxbVsGjk/img-cards-78.png\",\n  //   onPlay(G, ctx) {\n  //     let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n  //     G.hand = cards.map(x => ({...x}));\n  //   },\n  //   onMine(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  // },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"https://i.postimg.cc/qRpBLygM/img-cards-79.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n  \n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://z3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    desc: `行动: 造成3点伤害，重复4次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成3点伤害，重复${4+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/3)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      \n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n      self.desc = this.desc;\n    },\n    action: (G, ctx, self) => {\n      let skill_power = self.skill_power || 1;\n        for (let i=0; i<(4+skill_power); i++) {\n          deal_random_damage(G, ctx, 3);\n        }\n        for (let j=0; j<Math.floor(skill_power/3 + 1); j++) {\n          G.onCardMine.push((G, ctx) => {\n            G.score += 1;\n          });\n        }\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"https://i.postimg.cc/FzRrtvjM/img-cards-80.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 10) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰10次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"https://i.postimg.cc/vmFZ4psn/img-cards-81.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 2 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n  {\n    name:\"雪雉\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:\"行动: 清除弃牌堆中的5张牌，获得6分\",\n    illust:\"https://i.postimg.cc/mgFr2T0R/img-cards-82.png\",\n    action(G, ctx, self) {\n      if (G.discard.length >= 5) {\n        G.discard = G.discard.slice(5);\n        G.score += 6 + 2 * self.power;\n        logMsg(G, ctx, `弃牌堆中还剩${G.discard.length}张`);\n      }\n      else {\n        logMsg(G, ctx, `弃牌堆中的牌数量不够(${G.discard.length}张)`);\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  // {\n  //   name:\"初雪\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n  //   illust:\"https://i.postimg.cc/3wXJmn8c/img-cards-83.png\",\n  //   action(G, ctx, self) {\n  //     G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"获得2点费用\",\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  // },\n  // {\n  //   name:\"角峰\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:1,\n  //   block:2,\n  //   desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n  //   illust:\"https://i.postimg.cc/Ghf2C4gq/img-cards-84.png\",\n  //   onPlay(G, ctx, self) {\n  //     self.atk += G.materials[3];\n  //     self.hp += G.materials[3];\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n  {\n    name:\"棘刺\",\n    cost:2,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己\",\n    illust:\"https://i.postimg.cc/9M1mN0qP/img-cards-85.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n        self.use_count -= 1;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足 或 使用次数已达到上限\");\n      }\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 20;\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"夜烟\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:3,\n    block:0,\n    desc:\"采掘: 消耗2点费用，再获得3个材料\",\n    illust:\"https://i.postimg.cc/Yq09Z6Rv/img-cards-86.png\",\n    onMine(G, ctx) {\n      if (payCost(G, ctx, 2, true)) {\n        gainMaterials(G, ctx, 3);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+1>\",\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    }\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"https://i.postimg.cc/WzW4tzNp/img-cards-87.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"https://i.postimg.cc/fRvrdd4v/img-cards-146.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"https://i.postimg.cc/KcJj0qPX/img-cards-89.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:3,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"https://i.postimg.cc/KzbjHCpb/img-cards-90.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        G.costs -= 2;\n        // let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:1,\n    // desc: \"采掘/战斗: 强化1张手牌\",\n    desc: \"采掘/战斗: 强化场上1个(重置的)干员\",\n    illust:\"https://i.postimg.cc/jjPCvRXv/img-cards-91.png\",\n    reinforce: 1,\n    // onMine(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    // },\n    // onFight(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    //   let num_reinforced = G.hand.filter(x => (x.power > 0)).length;\n    //   G.costs += num_reinforced;\n    // },\n    onMine(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 强化1张手牌，重复2次\",\n    illust:\"https://i.postimg.cc/zG9VnynV/img-cards-92.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再重复1次\",\n  },\n  // {\n  //   name:\"古米\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:2,\n  //   block:2,\n  //   desc: \"采掘/战斗: 强化场上1个(重置的)干员\",\n  //   illust:\"https://i.postimg.cc/pTBrbk3F/img-cards-93.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     reinforce_field(G, ctx);\n  //   },\n  //   onFight(G, ctx, self) {\n  //     reinforce_field(G, ctx);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //   },\n  //   reinforce_desc: \"+0/+6\",\n  // },\n\n  {\n    name:\"诗怀雅\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 强化场上1个(重置的)干员，重复2次\",\n    illust:\"https://i.postimg.cc/pVZhgXt6/img-cards-99.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n      // reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"https://i.postimg.cc/D0yZ2LKY/img-cards-95.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  //休整一家暂时退休\n  // {\n  //   name:\"守林人\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n  //   illust:\"https://i.postimg.cc/65b7pjqV/img-cards-96.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n  //   },\n  //   reinforce_desc: \"伤害+3\",\n  // },\n  {\n    name:\"霜叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 将场上1个(重置的)干员返回手牌\",\n    illust:\"https://i.postimg.cc/J4zDmVr4/img-cards-97.png\",\n    reinforce: 1,\n    // onRest(G, ctx, self) {\n    //   let num_rest_cards = get_num_rest_cards(G, ctx);\n    //   self.atk += num_rest_cards;\n    //   self.hp += num_rest_cards;\n    // },\n    onMine(G, ctx, self) {\n      let card = choice(ctx, G.field.filter(x => !x.exhausted));\n      if (card) {\n        G.field = G.field.filter(x => x != card);\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  // {\n  //   name:\"锡兰\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"采掘: 本回合剩余时间内，每打出1张牌，就摸1张牌\",\n  //   illust:\"https://i.postimg.cc/mgcPzY1v/img-cards-98.png\",\n  //   reinforce: 2,\n  //   // onRest(G, ctx, self) {\n  //   //   let num_rest_cards = get_num_rest_cards(G, ctx);\n  //   //   G.score += num_rest_cards;\n  //   // },\n  //   onMine(G, ctx, self) {\n  //     G.onPlayCard.push(\n  //       (G, ctx) => {\n  //         draw(G, ctx);\n  //       }\n  //     );\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  //   reinforce_desc: \"获得2点费用\",\n  // },\n  // // {\n  // //   name:\"诗怀雅\",\n  // //   cost:4,\n  // //   atk:4,\n  // //   hp:5,\n  // //   mine:1,\n  // //   block:1,\n  // //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  // //   illust:\"https://i.postimg.cc/pVZhgXt6/img-cards-99.png\",\n  // //   reinforce: 1,\n  // //   onRest(G, ctx, self) {\n  // //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  // //     if (player) {\n  // //       player.onPlay(G, ctx, player);\n  // //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  // //     }\n  // //   },\n  // //   onReinforce(G, ctx, self) {\n  // //     self.atk += 2;\n  // //     self.hp += 2;\n  // //   },\n  // //   reinforce_desc: \"+2/+2\",\n  // // },\n  // {\n  //   name:\"夜莺\",\n  //   cost:5,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n  //   illust:\"https://i.postimg.cc/kGf28wcm/img-cards-100.png\",\n  //   onRest(G, ctx, self) {\n  //     if (~G.field.indexOf(self)) {\n  //       for (let card of G.field.map(x=>x)) {\n  //         if (card.onRest && (card.onRest != self.onRest)) {\n  //           card.onRest(G, ctx, card);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     let resters = G.deck.filter(x => x.onRest);\n  //     if (resters.length > 0) {\n  //       let card = ctx.random.Shuffle(resters)[0];\n  //       G.hand.unshift(Object.assign({}, card));\n  //     }\n  //   },\n  //   reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  // },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 摧毁1个(重置的)干员，获得3分\",\n    illust:\"https://i.postimg.cc/nzKjVn9M/img-cards-101.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      // if (card) {\n      //   card.dmg += 3;\n      //   G.score += 3;\n      //   if (card.dmg >= card.hp) {\n      //     // let card_idx = G.field.indexOf(card);\n      //     // G.field.splice(card_idx, 1);\n      //     // G.discard.push(card);\n      //     G.field = G.field.filter(x => x != card);\n      //     G.discard = [card, ...G.discard];\n      //   }\n      //   // else {\n      //     // card.onMine = (G, ctx) => {G.score += 4};\n      //     // card.onFight = card.onMine;\n      //     // card.desc = \"采掘/战斗: 获得4分\";\n      //     // G.score += 3;\n      //   // }\n        if (eliminate_field(G, ctx, self)) {\n          G.score += 3;\n        }\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 10) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿10次以上\", self);\n        }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"https://i.postimg.cc/rs8dK75j/img-cards-102.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n      G.has_discarded = true;\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n\n      // G.onDropCard.push(\n      //   (G, ctx) => {\n      //     G.score += 1;\n      //   }\n      // );\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"https://i.postimg.cc/YSWLV6p6/img-cards-103.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"https://i.postimg.cc/9MHwjDMv/img-cards-104.png\",\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:6,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得5分\",\n    illust:\"https://i.postimg.cc/JzgBP6W7/img-cards-105.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 5;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  // {\n  //   name:\"格拉尼\",\n  //   cost:4,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n  //   illust:\"https://i.postimg.cc/kgDbNrzh/img-cards-106.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n  //     G.field.push(init_card_state(G, ctx, {...new_card}));\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"https://i.postimg.cc/9FL9qX87/img-cards-107.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"月见夜\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:3, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"采掘/战斗: 如果你在本回合弃过手牌，则获得+3/+3\", \n  //   illust:\"https://i.postimg.cc/c1Mw0BfT/img-cards-108.png\",\n  //   onMine(G, ctx, self) {\n  //     if (G.has_discarded) {\n  //       self.atk += 3;\n  //       self.hp += 3;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"https://i.postimg.cc/15m6tVHS/img-cards-109.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n      // self.mine += 3;\n      // self.played = true;\n      // self.onTurnBegin = (G, ctx, self) => {\n      //   if (self.played) {\n      //     self.mine -= 3;\n      //     self.played = false;\n      //   }\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i.postimg.cc/nrkD2nnN/img-cards-110.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:3,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"https://i.postimg.cc/bv7kN66V/img-cards-111.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  {\n    name:\"卡夫卡\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:2,\n    block:1,\n    desc: \"部署: 如果场上干员数量多于敌人，则获得5分\",\n    illust:\"https://i.postimg.cc/5tY8JcmF/img-cards-112.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      if (G.field.length > G.efield.length) {\n        G.score += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...CARDS.find(x => x.name == \"卡夫卡\")});\n    },\n    reinforce_desc: \"获得1张\\\"卡夫卡\\\"\",\n  },\n  \n\n  {\n    name:\"薄绿\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n    illust:\"https://i.postimg.cc/XYD9tN9b/img-cards-113.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n      if (card != undefined) {\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"https://i.postimg.cc/XJ9FZwmj/img-cards-114.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    // onReinforce(G, ctx, self) {\n    //   self.atk += 2;\n    //   self.hp += 2;\n    // },\n    // reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:5,\n    hp:8,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得+1攻击力并治疗5点伤害\",\n    illust:\"https://i.postimg.cc/L8szygYD/img-cards-115.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let excess = Math.floor((enemy.dmg - enemy.hp) / 2);\n        self.atk += excess;\n        self.dmg = Math.max((self.dmg - excess * 5), 0);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"https://i.postimg.cc/nc24YGzM/img-cards-116.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n      else {\n        logMsg(G, ctx, \"没有合适的干员触发\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"采掘: 使1个敌人获得易伤2，重复2次\",\n    illust:\"https://i.postimg.cc/QxhgTyjR/img-cards-117.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      // reduce_enemy_atk(G, ctx, 4);\n      // reduce_enemy_atk(G, ctx, 4);\n      for (let i=0; i<2+self.power; i++) {\n        add_vulnerable(G, ctx, 2);\n      }\n    },\n    // onReinforce(G, ctx, self) {\n    //   G.costs += 2;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"https://i.postimg.cc/sfp91rCY/img-cards-118.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"https://i.postimg.cc/T1qrsrJ7/img-cards-119.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  // {\n  //   name:\"四月\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:0,\n  //   block:0,\n  //   desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n  //   illust:\"https://i.postimg.cc/W4C6qp4n/img-cards-120.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.field.map(card => {\n  //       if (card.exhausted) {\n  //         card.exhausted = false;\n  //         card.mine = 0;\n  //         silent(card);\n  //       }\n  //     })\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  //   reinforce_desc: \"+3/+1\",\n  // },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"https://i.postimg.cc/4dcv6C7T/img-cards-121.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  // {\n  //   name:\"贾维\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:2,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"采掘: 弃2张牌，获得4点费用\",\n  //   illust:\"https://i.postimg.cc/3NHX9Lm0/img-cards-122.png\",\n  //   onMine(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       G.costs += 4;\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"手牌不足\");\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n  {\n    name:\"泥岩\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:2,\n    block:2,\n    desc:\"部署: 消耗所有剩余费用，然后每消耗1点，就获得+3/+3\",\n    illust:\"https://i.postimg.cc/fRHvZfn1/img-cards-123.png\",\n    onPlay(G, ctx, self) {\n      let cost_remained = G.costs;\n      self.atk += 3 * cost_remained;\n      self.hp += 3 * cost_remained;\n      G.costs = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"阻挡数+1\",\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n  },\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:5,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"行动: 弃2张牌，获得+2/+2，然后重置自己\",\n  //   illust:\"\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       self.atk += 2 + self.power;\n  //       self.hp += 2 + self.power;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"再获得+1/+1\",\n  // },\n  {\n    name:\"微风\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 弃2张牌，召唤1个4费干员\",\n    illust:\"https://i.postimg.cc/HkWtfPKQ/img-cards-124.png\",\n    action(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n        summon(G, ctx, new_card, self);\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤1个费用为2的干员\",\n    onReinforce(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      summon(G, ctx, new_card, self);\n    },\n  },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的1/1复制\",\n  //   illust:\"\",\n  //   onPlay(G, ctx, self) {\n  //   },\n  //   onMine(G, ctx, self) {\n  //   },\n  //   onFight(G, ctx, self, enemy) {\n  //   },\n  //   action(G, ctx, self) {\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  // },\n  {\n    name:\"亚叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤1个随机干员的6/6复制</span>,\n    illust:\"https://i.postimg.cc/65f0bNHW/img-cards-125.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let card = ctx.random.Shuffle(G.CARDS.filter(x => x.onMine || x.onFight || x.action))[0];\n        card = {...card};\n        card.atk = 6;\n        card.hp = 6;\n        card.mine = 3;\n        card.cost = 5;\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },{\n    name:\"史尔特尔\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"超杀: 消耗1点费用，重置自己\",\n    illust:\"https://i.postimg.cc/YShzSLt0/img-cards-126.png\",\n    onFight(G, ctx, self, enemy) {\n      // if (G.field.indexOf(self) == G.efield.indexOf(enemy) && payCost(G, ctx, 1)) {\n      //   self.exhausted = false;\n      // }\n      if (enemy.dmg > enemy.hp && payCost(G, ctx, 1, true)) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },\n  // {\n  //   name:\"流星\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:2,\n  //   mine:0,\n  //   block:0,\n  //   desc:\"部署: 造成5点伤害\",\n  //   illust:\"https://i.postimg.cc/gkWsK0Ht/img-cards-127.png\",\n  //   onPlay(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 5);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"造成3点伤害\",\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  // },\n\n  // {\n  //     name:\"空爆\",\n  //     cost:2,\n  //     atk:4,\n  //     hp:2,\n  //     mine:1,\n  //     block:0,\n  //     desc:\"采掘: 摧毁场上1个(重置的)干员，然后造成4点伤害，重复2次\",\n  //     illust:\"https://i.postimg.cc/Y2g8gFYm/img-cards-128.png\",\n  //     onMine(G, ctx, self) {\n  //       if (eliminate_field(G, ctx, self)) {\n  //         for (let i=0; i<(2+self.power); i++) {\n  //           deal_random_damage(G, ctx, 4);\n  //         }\n  //       }\n  //     },\n  //     action(G, ctx, self) {\n  //       if (self.power == 1) {\n  //         let meteorite = G.CARDS.find(x => x.name == \"陨星\");\n  //         Object.assign(self, meteorite);\n  //         self.action = undefined;\n  //       }\n  //       else {\n  //         logMsg(G, ctx, \"只需要强化1次即可\");\n  //         self.exhausted = false;\n  //       }\n  //     },\n  //     reinforce: 1,\n  //     reinforce_desc: \"再重复1次\",\n  //     // onReinforce(G, ctx, self) {\n  //     //   deal_random_damage(G, ctx, 3);\n  //     // },\n  //   },\n\n  {\n    name:\"卡达\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"行动: 本回合剩余时间内，使用其他干员采掘时，重置自己\",\n    illust:\"https://i.postimg.cc/C5yNXMT1/img-cards-129.png\",\n    action(G, ctx, self) {\n      self.fever = true;\n      G.onCardMine.push(\n        (G, ctx, mcard) => {\n          for (let card of G.field) {\n            if (card.fever && (!mcard.fever)) {\n              card.exhausted = false;\n            }\n          }\n        }\n      );\n    },\n    onTurnBegin(G, ctx, self) {\n      self.fever = false;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n  },\n\n  {\n    name:\"白雪\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果\",\n    illust:\"https://i.postimg.cc/rsSJk6M9/img-cards-130.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n      if (miner) {\n        miner.onMine(G, ctx, self);\n        logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onFight(G, ctx, self) {\n      let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n      if (fighter) {\n        fighter.onFight(G, ctx, self);\n        logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n\n  // {\n  //   name:\"伊桑\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc: \"行动: 变成手牌中1个干员的复制\",\n  //   illust:\"https://i.postimg.cc/XvzxKcs9/img-cards-131.png\",\n  //   reinforce: 3,\n  //   action(G, ctx, self) {\n  //     // if (G.field.length > 1){\n  //     //   G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n  //     // }\n  //     let card = choice(ctx, G.hand);\n  //     if (card) {\n  //       Object.assign(self, card);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.hand.unshift(enemy2card(G, ctx));\n  //   },\n  //   reinforce_desc: \"将1张敌人牌加入手牌\",\n  // },\n  \n  {\n    name:\"W\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，造成4点伤害，重复4次</span>,\n\n    illust:\"https://i.postimg.cc/zGpxv1Wt/img-cards-132.png\",\n    // onPlay(G, ctx) {\n    //   drawEnemy(G, ctx);\n    // },\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        for (let i=0; i<(4+self.power); i++) {\n          deal_random_damage(G, ctx, 4);\n        }\n      }\n    },\n    reinforce: 1,\n    // onReinforce(G, ctx, self) {\n      // self.atk += 3;\n      // self.hp += 3;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"https://i.postimg.cc/G2TKX8fV/img-cards-133.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+1/+1\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"https://i.postimg.cc/y87f7NJ3/img-cards-134.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并将其沉默\",\n    illust:\"https://i.postimg.cc/zfB0RPFJ/img-cards-135.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"https://i.postimg.cc/gc54LDxp/img-enemies-7.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      if (!enemy.is_boss) {\n        G.efield[idx] = blank_enemy;\n      }\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      // G.field.push(init_card_state(G, ctx, {...texas}));\n      summon(G, ctx, {...texas}, self);\n\n      if (self.power >= 8) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署8个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i.postimg.cc/15GCxFzZ/img-cards-137.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n\n      if (self.power == 3) {\n        let wind = G.CARDS.find(x => x.name == \"风笛\");\n        if (~G.field.indexOf(self)) {\n          Object.assign(self, wind);\n        }\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"https://i.postimg.cc/4yt8x7bV/img-cards-138.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"https://i.postimg.cc/ZYysc2tn/img-cards-139.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成高1费的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"https://i.postimg.cc/xTDxF5nR/img-cards-140.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  // {\n  //   name:\"暗索\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:2,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://i.postimg.cc/fL12sjXM/img-cards-141.png\",\n  //   reinforce: 1,\n  //   desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n  //   onPlay(G, ctx, self) {\n  //     G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n  //   },\n  //   action(G, ctx, self) {\n  //     G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n  //   },\n  //   reinforce_desc: \"从另一个游戏里偷1张牌\",\n  //   onReinforce(G, ctx, self) {\n  //     G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n  //   }\n  // },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n].map(init_card);\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n].map(init_card);\n\nexport const heijiao_in_dream =  {\n    name:\"黑角\",\n    cost:1,\n    atk:8,\n    hp:8,\n    mine:4,\n    block:2,\n    onPlayBonus: [],\n    desc:\"部署: 获得5000分\",\n    illust:\"https://i.postimg.cc/3wSfSHx4/img-cards-143.png\",\n    onPlay(G, ctx) {\n      G.score += 5000;\n    },\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n};\n\nexport const extra_cards = [\n  {\n    name:\"稀音\",\n    cost:0,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    material:3,\n    desc:\"\",\n    illust:\"https://i.postimg.cc/BvQwBv4f/img-cards-144.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 3;\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name: \"梅尔\",\n    generator(ctx) {\n      let material = ctx.random.Die(3) - 1;\n      return {\n          name:\"梅尔\",\n          cost:1,\n          atk:3,\n          hp:2,\n          mine:2,\n          block:0,\n          material:3,\n          desc: <span>行动: 消耗1个{material_icons[material]}，造成6点伤害</span>,\n          illust:\"https://i.postimg.cc/B6jYRwjh/img-cards-145.png\",\n          reinforce: 1,\n      \n          action(G, ctx) {\n            let requirements = [0,0,0,0];\n            requirements[material] = 1;\n            if (payMaterials(G, ctx, requirements)) {\n                deal_random_damage(G, ctx, 6);\n            }\n          },\n          \n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n  {\n    name: \"麦哲伦\",\n    generate(ctx) {\n      let name = choice(ctx, \"麦迪文 麦当劳 麦当娜 麦克雷 麦旋风 麦克斯韦 张信哲 哥伦布 周杰伦 炎亚纶 拿破仑 达尔文 刘德华\".split(\" \"));\n      let values = choice(ctx, [\n        {\n          atk: 2,\n          hp: 2,\n          mine: 1,\n          block: 2,\n        },\n        {\n          atk: 4,\n          hp: 2,\n          mine: 0,\n          block: 1,\n        },\n        {\n          atk: 0,\n          hp: 2,\n          mine: 2,\n          block: 1,\n        },\n      ]);\n      return {\n          name,\n          ...values,\n          cost:1,\n          material:3,\n          illust:\"https://i.postimg.cc/fRvrdd4v/img-cards-146.png\",\n          reinforce: 1,\n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n    \n].map(init_card);\n\nexport const default_filter = x => x;\n\nconst type_filter = (type_,deck) => classes[type_].map(name => deck.find(card => card.name == name)).filter(card => card);\n\nexport const FILTERS = [\n  \n  {\n    illust: \"https://i.postimg.cc/VLnTYTDp/img-cards-147.png\",\n    f(deck) {\n      return type_filter(\"producers\", deck);\n    }\n  },\n\n  {\n    illust: \"https://i.postimg.cc/NGySnLTg/img-cards-148.png\",\n    f(deck) {\n      return type_filter(\"solvers\", deck);\n    }\n  },\n  {\n    illust: \"https://i.postimg.cc/h4H6RgbV/img-cards-149.png\",\n    f(deck) {\n      return type_filter(\"miners\", deck);\n    }\n  },\n\n  {\n    illust: \"https://i.postimg.cc/PJ8WQgCj/img-cards-150.png\",\n    f(deck) {\n      return type_filter(\"standers\", deck);\n    }\n  },\n\n  {\n    illust: \"https://i.postimg.cc/kD3x1TSt/img-cards-151.png\",\n    f(deck) {\n      return type_filter(\"defenders\", deck);\n    }\n  },\n\n  {\n    illust: \"https://i.postimg.cc/HxN05Ysz/img-cards-152.png\",\n    f(deck) {\n      return type_filter(\"supporters\", deck);\n    }\n  },\n\n  {\n    illust: \"https://i.postimg.cc/63qLy2wT/img-cards-153.png\",\n    f(deck) {\n      return type_filter(\"scorers\", deck);\n    }\n  },\n\n  {\n    illust: \"https://z3.ax1x.com/2020/12/08/r9iiyq.png\",\n    f(deck) {\n      return type_filter(\"randomizers\", deck);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card, clearField, draw, gainMaterials, init_card_state\n } from \"./Game\";\n\nexport const ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"https://i.postimg.cc/KYJDG76d/img-enemies-0.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 1,\n    illust: \"https://i.postimg.cc/CKF4prQG/img-enemies-1.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"敌方能天使\",\n    atk: 2,\n    hp: 4,\n    illust: \"https://i.postimg.cc/dVcB4VRS/img-enemies-2.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"雪怪小队\",\n    atk: 3,\n    hp: 4,\n    illust: \"https://i.postimg.cc/Z5PLgzVY/img-enemies-3.png\",\n    desc: \"摧毁: 摸2张牌\",\n    onOut(G, ctx) {\n      draw(G, ctx);\n      draw(G, ctx);\n    }\n  },\n  {\n    name: \"法术大师A2\",\n    atk: 4,\n    hp: 5,\n    illust: \"https://i.postimg.cc/VLCgqCtC/img-enemies-4.png\",\n    desc: \"摧毁: 获得2个材料\",\n    onOut(G, ctx) {\n      gainMaterials(G, ctx, 2);\n    }\n  },\n\n  {\n    name: \"敌方风笛\",\n    atk: 5,\n    hp: 6,\n    illust: \"https://i.postimg.cc/j2WXkWkB/img-enemies-5.png\",\n    desc: \"摧毁: 打出牌库顶的1张牌\",\n    onOut(G, ctx) {\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      if (new_card != undefined) {\n        G.field.push(init_card_state(G, ctx, {...new_card}));\n        logMsg(G, ctx, `打出 ${new_card.name}`);\n      }\n    }\n  },\n\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"https://i.postimg.cc/sxtcFVkx/img-enemies-6.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"https://i.postimg.cc/gc54LDxp/img-enemies-7.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"https://i.postimg.cc/k4YscNwx/img-enemies-8.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"https://i.postimg.cc/vBZXf27Y/img-enemies-9.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 2,\n    illust: \"https://i.postimg.cc/1zHJg1q7/img-enemies-10.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 1,\n    illust: \"https://i.postimg.cc/q701MvzC/img-enemies-11.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"https://i.postimg.cc/NjRNcHfc/img-enemies-12.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"https://i.postimg.cc/4ND8q5GP/img-enemies-13.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n\n  {\n    name: \"乌萨斯刁民\",\n    atk: -3,\n    hp: 4,\n    illust: \"https://i.postimg.cc/PfFVzHFB/img-enemies-14.png\",\n    desc: \"摧毁: 获得2点费用\",\n    onOut(G, ctx) {\n      G.costs += 2;\n    }\n  },\n  {\n    name: \"冰爆源石虫\",\n    atk: -2,\n    hp: 1,\n    illust: \"https://i.postimg.cc/x87s0Gz0/img-enemies-15.png\",\n    desc: \"摧毁: 失去2点费用\",\n    onOut(G, ctx) {\n      G.costs -= 2;\n    }\n  },\n  \n  // {\n  //   name: \"双持剑士\",\n  //   atk: 2,\n  //   hp: 4,\n  //   illust: \"https://i.postimg.cc/Rhqs5pqs/img-enemies-16.png\",\n  //   desc: \"无法被横置\",\n  //   unyielding: true,\n  // },\n\n  {\n    name: \"寻仇者\",\n    atk: 3,\n    hp: 3,\n    illust: \"https://i.postimg.cc/MT9PLJZf/img-enemies-17.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  // {\n  //   name: \"复仇者\",\n  //   atk: 3,\n  //   hp: 6,\n  //   illust: \"https://i.postimg.cc/9MbKjqbM/img-enemies-28.png\",\n  //   desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n  //   is_elite: true,\n  //   enraged: true,\n  //   onFight(G, ctx, self, card) {\n  //     if (card.dmg > card.hp) {\n  //       G.danger += 1;\n  //     }\n  //   },\n  // },\n  \n  // {\n  //   name: \"碎岩者\",\n  //   illust: \"https://i.postimg.cc/V6fZ4kwc/img-enemies-19.png\",\n  //   atk: -3,\n  //   hp: 8,\n  //   // onTurnBegin(G, ctx, self) {\n  //   //   if (self.atk <= 0) {\n  //   //     self.atk = 1;\n  //   //   }\n  //   // }\n  // },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"https://i.postimg.cc/fbjgx06K/img-enemies-20.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  // {\n  //   name: \"酸液源石虫\",\n  //   illust: \"https://i.postimg.cc/k5dp6yhG/img-enemies-21.png\",\n  //   atk: -1,\n  //   hp: 4,\n  //   desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n  //   is_elite: true,\n  //   onOut(G, ctx, self) {\n  //     for (let card of G.field) {\n  //       card.dmg += 1;\n  //     }\n  //   },\n  // },\n\n  {\n    name: \"拳手\",\n    atk: 5,\n    hp: 5,\n    illust: \"https://i.postimg.cc/P5D757y0/img-enemies-22.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"https://i.postimg.cc/NfSVYt61/img-enemies-23.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"https://i.postimg.cc/yYk5wxZ1/img-enemies-24.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 2,\n    illust: \"https://i.postimg.cc/jq8mgPC3/img-enemies-25.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  // {\n  //   name: \"狂暴宿主组长\",\n  //   atk: -2,\n  //   hp: 6,\n  //   is_elite: true,\n  //   illust: \"https://i.postimg.cc/MHrLn2hJ/img-enemies-26.png\",\n  //   desc: \"替换，摧毁: 胜利所需分数+4\",\n  //   onOut(G, ctx, self) {\n  //     G.goal += 4;\n  //   },\n  //   // onTurnBegin(G, ctx, self) {\n  //   //   if (self.atk <= 0) {\n  //   //     self.atk = 1;\n  //   //   }\n  //   // }\n  // },\n\n\n];\n\nexport const BOSSES = [\n  {\n    name: \"大泡普\",\n    atk: 4,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    enraged: true,\n    illust: \"https://dadiaogames.gitee.io/images/imagebed/bigbob.png\",\n    desc: <span>愤怒，超杀: 失去1点费用<br/>摧毁: 获得15分</span>,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.costs -= 1;\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 15;\n    }\n  },\n\n  {\n    name: \"锈锤战士\",\n    atk: 5,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    illust: \"https://i.postimg.cc/XqvhN71g/img-enemies-27.png\",\n    desc: <span>行动: 对最后部署的干员造成5点伤害<br/>摧毁: 获得15分</span>,\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n        if (card.dmg > card.hp) {\n          G.field = G.field.filter(x => x != card)\n        }\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 15;\n    }\n  },\n  {\n    name: \"复仇者\",\n    atk: 99,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    illust: \"https://i.postimg.cc/9MbKjqbM/img-enemies-28.png\",\n    desc: <span>超杀: 增加1点动乱值<br/>摧毁: 获得80分</span>,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 80;\n    }\n  },\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks, summon } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+2/+4\",\n    desc: \"+2/+4\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 2;\n      card.hp += 4;\n    }\n  },\n\n  {\n    name: \"-1费\",\n    desc: \"部署费用-1\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 1;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"4分\",\n    desc: \"部署奖励:\\\"获得4分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 4;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"3材料\",\n    desc: \"部署奖励:\\\"获得3个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 3);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"3张牌\",\n  //   desc: \"部署奖励:\\\"摸3张牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         draw(G, ctx);\n  //         draw(G, ctx);\n  //         draw(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"6伤害\",\n    desc: \"部署奖励:\\\"造成6点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 6);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"手牌强化2\",\n  //   desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         reinforce_hand(G, ctx);\n  //         reinforce_hand(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"获得1张2费干员牌并使其费用变为0\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            // new_card = init_card_state(G, ctx, {...new_card});\n            // new_card.hp = 1;\n            // G.field.push(new_card);\n            G.hand.push({...new_card, cost: 0});\n          }\n        }\n    });\n  }\n},\n\n// {\n//   name: \"迷迭香之力\",\n//   desc: \"部署奖励:\\\"召唤1个随机干员的2/2复制\\\"\",\n//   effect(card) {\n//     card.onPlayBonus.push(\n//       {\n//         name: this.name,\n//         effect (G, ctx, self) {\n//         let card = ctx.random.Shuffle(G.CARDS)[0];\n//         card = {...card};\n//         card.atk = 2;\n//         card.hp = 2;\n//         card.mine = 1;\n//         card.cost = 2;\n//         summon(G, ctx, card, self);\n//     }});\n//   }\n// },\n\n// {\n//     name: \"凯尔希之力\",\n//     desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n//     effect(card) {\n//       // Maybe reconstruct this to call the skill of Ansel is better?\n//       card.onPlayBonus.push({\n//         name: this.name,\n//         effect(G, ctx, card) {\n//           if (card) {\n//             let new_card = G.CARDS.find(x => x.name == card.name);\n//             new_card = init_card_state(G, ctx, {...new_card});\n//             new_card.atk = 1;\n//             new_card.hp = 1;\n//             new_card.mine = 1;\n//             new_card.cost = 1;\n//             new_card.power = 0;\n//             G.field.push(new_card);\n//           }\n//         }\n//     });\n//   }\n// },\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌，并使其费用-1\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let name = card.name;\n        if (name.includes(\"异画\")) {\n          name = name.slice(0, name.length-4);\n        }\n        let new_card = G.CARDS.find(x => x.name == name);\n        if (new_card) {\n          G.hand.unshift({...new_card, cost: new_card.cost-1});\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"订单1\",\n  //   desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制(最多500个)\",\n    effect(card) {\n      if (card.onPlayBonus && (card.onPlayBonus.length <= 500)) {\n        card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n      }\n    }\n  },\n  \n];","export const ALTER_ARTS = {\n  安洁莉娜: \"https://s3.ax1x.com/2020/11/28/D61oIH.png\",\n  阿米娅: \"https://s3.ax1x.com/2020/11/28/D61jL8.png\",\n  森蚺: \"https://s3.ax1x.com/2020/11/28/D615ZD.jpg\",\n  陨星: \"https://s3.ax1x.com/2020/11/28/D61Ide.jpg\",\n  // 安赛尔: \"https://s3.ax1x.com/2020/11/28/D61hqO.jpg\",\n  // 史尔特尔: \"https://s3.ax1x.com/2020/11/28/D617id.jpg\",\n  // 凛冬: \"https://s3.ax1x.com/2020/11/28/D61HJA.jpg\",\n  孑: \"https://s3.ax1x.com/2020/11/30/DWto8K.jpg\",\n  玫兰莎: \"https://s3.ax1x.com/2020/11/28/D61OQP.jpg\",\n  陈: \"https://s3.ax1x.com/2020/11/28/D61Xsf.jpg\",\n  安比尔: \"https://s3.ax1x.com/2020/11/28/D61qzt.jpg\",\n  波登可: \"https://s3.ax1x.com/2020/11/30/DWtbKe.png\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { BOSSES, ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1, solver_core, scorer_core, pick_scorers, pick_vanguards } from './DeckGenerator';\nimport { arr2obj, mod_slice, PRNG, vector_diff, vector_sum } from \"./utils\";\nimport { ICONS, food_icons } from \"./icons\";\nimport { ALTER_ARTS } from \"./alters\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost, from_card) {\n  if (G.costs >= cost) {\n    G.costs -= cost;\n\n    if (from_card) {\n      for (let f of G.onPayCost) {\n        f(G, ctx, cost);\n      }\n    }\n\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n\n    if (G.stage == \"player\") {\n      for (let f of G.onUseCard) {\n        f(G, ctx, card);\n      }\n    }\n\n    return true;\n  }\n\n  else {\n    if (G.stage == \"player\") {\n      logMsg(G, ctx, \"该卡已被横置(已使用过)，无法使用\");\n    }\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁${(deck==\"efield\")?\"(+1分)\":\"\"}`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    let total_dmg = dmg + (card.vulnerable || 0);\n    card.dmg = (card.dmg || 0) + total_dmg;\n    logMsg(G, ctx, `${card.name} 受到${total_dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function eliminate_field(G, ctx, user) {\n  let card = ctx.random.Shuffle(G.field.filter(x => (!x.exhausted) && (x != user)))[0];\n  if (card) {\n    G.field = G.field.filter(x => x != card);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.hand.length >= G.hand_limit) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n  else {\n    if (G.deck.length > 0) {\n      G.hand.unshift(G.deck.pop());\n    } \n    else {\n      // G.danger += 1;\n      // logMsg(G, ctx, \"无牌可抽，增加1点动乱值\");\n      logMsg(G, ctx, \"无牌可抽\");\n    }\n  }\n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n\n    G.has_discarded = true;\n\n    for (let f of G.onDropCard) {\n      f(G, ctx);\n    }\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = [...G.hand.slice(0,5).filter((x, idx) => !choices[idx]), ...G.hand.slice(5)];\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Psudo-shuffle the deck\n  // let solver = G.deck.find(x => solver_core.includes(x.name)) || G.deck[0];\n  // let scorer = G.deck.find(x => scorer_core.includes(x.name)) || G.deck[1];\n  // G.deck = [...G.deck.filter(x => ![solver, scorer].includes(x)), scorer, solver];\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function play_card(G, ctx, card) {\n  if (G.field.length < G.field_limit) {\n    let inserted = init_card_state(G, ctx, {...card});\n    G.field = [...G.field, inserted];\n    if (inserted.onPlay) {\n      inserted.onPlay(G, ctx, inserted);\n    }\n    for (let bonus of (inserted.onPlayBonus || [])) {\n      if (bonus && (bonus.effect != undefined)) {\n        bonus.effect(G, ctx, inserted);\n      }\n    }\n    return inserted;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    logMsg(G, ctx, `部署 ${card.name}(剩余部署位: ${G.field_limit-G.field.length-1})`);\n    let inserted = play_card(G, ctx, card); // EH: What a strange abstraction, this should be changed\n    if (inserted) {\n      for (let f of G.onPlayCard) {\n        f(G, ctx, inserted, card);\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.unshift(card);\n    }\n  }\n\n  else {\n    logMsg(G, ctx, `费用不足，无法部署`);\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  // console.log(\"Orders:\", [...G.odeck], G.round_num);\n  // console.log(\"Picks:\", [...G.another_deck], G.round_num);\n  G.orders = mod_slice(G.odeck, G.round_num*8, 8);\n  G.orders = sort_orders(G.orders);\n}\n\nfunction sort_orders(orders) {\n  return orders.sort((x,y) => {\n    let price_y = _.sum(y.requirements);\n    let price_x = _.sum(x.requirements);\n    if (price_y != price_x) return price_x - price_y;\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\n// function sort_orders(G) {\n//   G.orders = G.orders.sort((x,y)=>{\n//     if (y.advanced && !x.advanced) return -1;\n//     if (!y.advanced && x.advanced) return 1;\n//     return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n//   });\n// }\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction price_up(order) {\n  // let new_requirements = order.requirements;\n  // if (order.advanced) {\n  //   new_requirements[3] += 1;\n  // }\n  // else {\n  //   new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  // }\n  // return {...order, requirements: new_requirements};\n  if (order.advanced) {\n    order.requirements[3] += 1;\n  }\n  else {\n    order.requirements = order.requirements.map(x => (x==0)?0:x+1);\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    // sort_orders(G);\n\n    if ([4,8].includes(G.finished.length)) {\n      G.orders.map(price_up);\n      G.odeck.map(price_up);\n    }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场(还剩${G.edeck.length}张)`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n      // if (enemy.onPlay && !surge) {\n      //   enemy.onPlay(G, ctx, enemy);\n      // }\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  \n  }\n}\n\nexport function addBoss(G, ctx, boss_name) {\n  let boss = {...BOSSES.find(x => x.name == boss_name)};\n\n  boss.exhausted = false;\n  if (boss.name == \"复仇者\") {\n    boss.dmg = -98;\n  }\n  else {\n    boss.dmg = -24;\n  }\n  G.efield.push(boss);\n}\n\nexport function switchEnemy(G, ctx) {\n  // if (G.not_switch) {\n  //   return false;\n  // }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher && (!switcher.is_elite)) {\n    G.efield.splice(len-2, 1);\n  }\n  else {\n    enemy.atk = Math.max(enemy.atk - 2, 1);\n    enemy.hp = Math.max(enemy.hp - 2, 1);\n  }\n\n  // return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    logMsg(G, ctx, \"请先选定场上干员后，再点击敌人和\\\"战斗\\\"\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n\n    for (let f of G.onCardAct) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      // draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.reinforce_need_cost) {\n    let paid = payCost(G, ctx, 1);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function choice(ctx, alist) {\n  return ctx.random.Shuffle(alist)[0];\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_order(G, ctx) {\n  let orders = G.finished.filter(x => !x.exhausted);\n  if (orders.length > 0) {\n    let order = choice(ctx, orders);\n    order.exhausted = true;\n    return order;\n  }\n  else {\n    return undefined;\n  }\n}\n\nexport function reinforce_field(G, ctx) {\n  let card = choice(ctx, G.field.filter(x => (!(x.exhausted||[\"诗怀雅\"].includes(x.name)))));\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function add_vulnerable(G, ctx, amount) {\n  let enemy = choice(ctx, G.efield);\n  if (enemy) {\n    enemy.vulnerable = (enemy.vulnerable || 0) + amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\", \"霜叶\", \"夜莺\", \"白金\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  let cured = card.dmg;\n  card.dmg = 0;\n\n  return cured;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg = Math.max(card.dmg - amount, 0);\n    // if (card.dmg < 0) {\n      // card.hp -= card.dmg;\n      // card.dmg = 0;\n    // }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  // sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        G.score += 1;\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk < 0) { \n      enemy.atk = 0;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n  let rng = new PRNG(deck_data);\n  let alter_art = (rng.random() <= 0.33);\n  if (alter_art) {\n    console.log(\"Got some alter!\");\n  }\n  else {\n    console.log(\"No alter here.\");\n  }\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        for (let j=0; j<amount; j++) {\n            let new_card = {\n              ...target_card,\n              material: i % 3,\n            };\n\n            if (alter_art) {\n              let altered = ALTER_ARTS[new_card.name];\n              if (altered) {\n                new_card.old_illust = new_card.illust;\n                new_card.illust = altered;\n                new_card.was_enemy = true;\n                new_card.name += \"(异画)\";\n              }\n            }\n\n            deck.push(new_card);\n        }\n      }\n    }\n  }\n\n  // Limit alter art\n  if (alter_art) {\n    for (let card of deck) {\n      if (card.old_illust && rng.random() <= 0.33) {\n        card.illust = card.old_illust;\n        card.was_enemy = false;\n        card.name = card.name.slice(0, card.name.length-4);\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  G.another_deck = ctx.random.Shuffle(G.deck);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n  // console.log(\"Seed:\", seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  console.log(\"Previews edeck:\", edeck);\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  edeck = rng.shuffle(edeck);  // Shuffle this at first\n  deck = rng.shuffle(deck);\n  odeck = [...rng.shuffle(odeck), ...rng.shuffle(odeck)];\n\n  edeck = edeck.slice(0, 22);\n\n  // console.log(\"Edeck:\", edeck);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(30)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onUseCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n\n  G.onPayCost = [];\n  G.onDropCard = [];\n\n  G.onUseOrder = [];\n\n  G.onEnemyOut = [];\n}\n\nfunction setup_turn_states(G, ctx) {\n  G.has_discarded = false;\n}\n\nfunction setupRoguelikeBattle(G, ctx, relics) {\n  G.relics = relics.map(x => ({...x}));\n\n  for (let r of G.relics) {\n    r.onBattleBegin && r.onBattleBegin(G, ctx, r);\n  }\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    // G.finished = [default_order];\n    G.finished = [];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 12;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n    G.hand_limit = 8;\n\n    G.relics = [];\n    G.extra_gain = 0;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    // G.diff_cnt = 0;\n    G.diff_queue = [];\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  // G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  G.picks = mod_slice(G.another_deck, G.round_num*5, 5);\n\n  // Add special card every turn to ensure there is a required card in that stage\n  // if (G.round_num >= 3) {\n  let special_card_name = choice(ctx, (G.round_num >= 3)? pick_scorers : pick_vanguards);\n  let special_card = G.CARDS.find(x => x.name == special_card_name);\n  if (special_card) {\n    G.picks[2] = {...special_card, material: ctx.random.Die(3)-1};\n  }\n  // }\n\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = [1,1,1,2,2][idx] || 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nexport function summon(G, ctx, card, self) {\n  let idx = G.field.indexOf(self) + 1;\n  if (card) {\n    let new_card = init_card_state(G, ctx, {...card});\n    G.field.splice(idx, 0, new_card);\n    new_card.exhausted = false;\n  }\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\nfunction receive_diff(G, ctx, diff) {\n  G.score += diff.score;\n  G.danger += diff.danger;\n  G.materials = vector_sum(G.materials, diff.materials);\n  G.efield.map((enemy, idx) => {\n    enemy.dmg += diff.efield_dmg[idx] || 0;\n    enemy.hp += diff.efield_hp[idx] || 0;\n  });\n}\n\nfunction emit_diff(G, ctx, optimizer) {\n  G.diff_queue = G.diff_queue.slice(1);\n  console.log(\"Dequeue\", G.diff_queue);\n}\n\nexport function get_desc(card) {\n  return  <span>\n    <span style={{fontSize:\"120%\"}}>\n      {card.atk}/{card.hp} &nbsp;\n      {ICONS.mine}{card.mine} &nbsp;\n      {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n    </span>\n    <br/>\n    {card.desc||\"\"}\n    <br/>\n    <span style={{\n      display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n    }}>\n      <i>\n      部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      </i>\n      <br/>\n    </span>\n    ({_.times(card.reinforce, ()=>material_icons[card.material || 0])}: {card.reinforce_desc||\"\"})\n    <br />\n    <i>{card.quote||\"\"}</i>\n  </span>;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n    setupRoguelikeBattle,\n    receive_diff,\n    emit_diff,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        // draw(G, ctx);\n        if (G.deck.length > 0) {\n          G.hand.unshift(G.deck.pop());\n        } \n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n        sort_finished(G, ctx);\n\n        setup_events(G, ctx);\n        setup_turn_states(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield, ...G.relics]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n        \n        if (G.enemy_hp_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 2;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      // if (G.deck.length == 0) {\n      //   return {\n      //     win: false,\n      //     reason: \"牌库被抽光\",\n      //   };\n      // }\n      if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: \"114514\",\n\n  plugins: [\n    {\n      name: \"diff\",\n      fnWrap: (fn) => (G, ctx, ...args) => {\n        if (typeof args[0] == \"object\" && \"is_diff\" in args[0]) {\n          return fn(G, ctx, ...args);\n        }\n        else {\n          let {score: prev_score, danger: prev_danger, materials: prev_materials, efield: prev_efield} = G;\n          let new_G = {...fn(G, ctx, ...args)};\n          let {score, danger, materials, efield} = new_G;\n          // Send diff whatever when move\n          let diff = {\n            is_diff: true,\n            score: score - prev_score,\n            danger: danger - prev_danger,\n            materials: vector_diff(materials, prev_materials),\n            efield_dmg: vector_diff(efield.map(e=>e.dmg), prev_efield.map(e=>e.dmg)),\n            efield_hp: vector_diff(efield.map(e=>e.hp), prev_efield.map(e=>e.hp)),\n          }\n          // let diff_cnt = new_G.diff_cnt;\n          let span_diff = [diff.score, diff.danger, ...diff.materials, ...diff.efield_dmg];\n          if (G.stage == \"player\") {\n            span_diff = [...span_diff, ...diff.efield_hp];\n          }\n          if (_.sum(span_diff.map(x => Math.abs(x))) != 0) {\n            // diff_cnt += 1;\n            // console.log(\"Diff:\", diff);\n            // new_G.diff_cnt = diff_cnt;\n            // new_G.diff = diff;\n            new_G.diff_queue = [...new_G.diff_queue, diff];\n            console.log(\"Enqueue\", new_G.diff_queue);\n          }\n          return new_G;\n        }\n      }\n    }\n  ],\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 0.6,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2.5)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 200},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -25, -25, {duration:105}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((![0, -24, -98].includes(props.cardState.dmg)) && props.cardState.setShaking) {\n    // if (props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\" style={{border:(props.selected)?\"4px solid #096dd9\":\"4px solid grey\"}} onClick={props.handleClick}>\n    <img className=\"type-filter-img\" src={props.illust} />\n  </div>\n);\n\nexport const TypeFilterContainer = (props) => (\n  <div className=\"type-filter-container\">\n    {props.filters.map(filter_ => <TypeFilter {...filter_} />)}\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS, smaller_icons } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>{smaller_icons[parseInt(action[2])]}强化</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    display: (completed == undefined)? \"none\" : \"\",\n\n    height: '9.8%',\n    width: '100%',\n    backgroundColor: \"#bfbfbf\",\n    borderRadius: '50px',\n\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${Math.min(completed*100, 100)}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right',\n    transition: 'width 0.25s ease-in-out',\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}></span>\n      </div>\n    </div>\n  );\n};\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n    <ProgressBar bgcolor=\"#1890ff\" completed={props.completed} />\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\n\nfunction Tag(props) {\n  // let bg_color = \"#c5c5c5\";\n  let bg_color = \"#434343\";\n  if (props.selected) {\n    bg_color = \"#0098dc\";\n  }\n  if (props.locked) {\n    bg_color = \"#096dd9\";\n  }\n\n  return <div className=\"tag\" style={{backgroundColor: bg_color}} onClick={props.handleClick} >\n    <img className=\"tag-img\" src={props.src} >\n    </img>\n  </div>\n}\n\nexport const TagSelection = (props) => {\n  // let tbody = [];\n\n  // for (let i=0; i<props.tags.length; i+=3) {\n  //   let row = [];\n  //   let row_tags = props.tags.slice(i, i+3);\n  //   for (let tag of row_tags) {\n  //     let borderColor = \"black\";\n  //     if (tag.selected) {\n  //       borderColor = \"red\";\n  //     }\n  //     if (tag.locked) {\n  //       borderColor = \"#1E90FF\";\n  //     }\n  //     row.push(\n  //       <td \n  //         onClick={props.handleClick(props.tags.indexOf(tag))}\n  //       >\n  //         <div className=\"tag\">\n  //         <img \n  //           className=\"tag-img\" \n  //           src={tag.src}\n  //           style={{\n  //           borderColor: borderColor,\n  //         }} \n  //         ></img>\n  //         </div>\n  //       </td>\n  //     );\n  //   }\n  //   tbody.push(<tr>{row}</tr>);\n  // }\n\n  return (\n    <div className=\"tag-selection\" >\n      {/* <table>\n        <tbody>{tbody}</tbody>\n      </table> */}\n      {props.tags.map((tag, idx) => <Tag {...tag} handleClick={props.handleClick(idx)} />)}\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (\n          <li \n            className=\"tag-desc\"\n            style={{\n              color: (props.just_selected == tag)? \"#096dd9\" : \"black\",\n            }}\n          >\n            {tag.desc}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        {/* <br/> */}\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-util-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-util-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 刚好20张, 且同名卡不超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-util-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-util-button\"\n        >\n          换个卡组\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-util-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n    </form>\n      <br/>\n      <button onClick={props.handleToggle} className=\"lock-seed-button\">\n        {props.locked? \"解除锁定\":\"锁定种子\"}\n      </button>\n      <br/>\n      <div style={{color: \"#096dd9\", display: (props.locked)?undefined:\"none\"}}>种子已锁定</div>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\nimport { get_desc } from './Game';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  // let desc = [card.desc];\n\n  // if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n  //   desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  // }\n\n  // return desc;\n\n  return (card.mine != undefined)? get_desc(card) : \"\";\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"upgrade-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick} additionalStyle={{marginTop: \"1%\"}}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { addBoss, enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"https://i.postimg.cc/XNQSRt18/img-tags-0.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4;\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/fyT43vym/img-tags-1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/hvCkV7Qw/img-tags-2.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/sXJdDLj3/img-tags-3.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/NMtvttwN/img-tags-4.png\",\n    desc: \"可同时部署的干员数-1\",\n    level: 1,\n    challenge: true,\n    unstackable: true,\n    extra_challenge: true,\n    effect(G, ctx){\n      G.field_limit -= 1;\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/hGTRNjNz/img-tags-5.png\",\n    desc: \"敌方牌库减少40%的牌\",\n    level: 2,\n    standard_level: 3,\n    unstackable: true,\n    extra_challenge: true,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0,14);\n    }\n  },\n  // {\n  //   src: \"https://i.postimg.cc/FHf4gGZx/img-tags-6.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  \n{\n    src: \"https://i.postimg.cc/fR6hHXqQ/img-tags-7.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    // stackable: true,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n{\n    src: \"https://i.postimg.cc/65bKvFd3/img-tags-8.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n// {\n//     src: \"https://i.postimg.cc/ZnVSjM2w/img-tags-9.png\",\n//     desc: \"强化干员需要消耗1点费用\",\n//     level: 2,\n//     challenge: true,\n//     // standard_level: 4,\n//     effect(G, ctx) {\n//       // for (let card of G.deck) {\n//       //   card.reinforce += 1;\n//       // }\n//       G.reinforce_need_cost = true;\n//     }\n//   },\n  \n{\n  src: \"https://i.postimg.cc/Y0p76Hn4/img-tags-10.png\",\n  desc: \"强化干员需要的材料数+1\",\n  level: 2,\n  effect(G, ctx) {\n    for (let card of G.deck) {\n      card.reinforce += 1;\n    }\n  }\n},\n\n  // {\n  //   src: \"https://i.postimg.cc/5N21jfQT/img-tags-11.png\",\n  //   desc: \"回合开始时，所有敌人获得+2生命值\",\n  //   level: 2,\n  //   standard_level: 4,\n  //   effect(G, ctx){\n  //     G.enemy_hp_grow = true;\n  //   }\n  // },\n\n  \n\n  // {\n  //   src: \"https://i.postimg.cc/wj36496L/img-tags-15.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  \n\n\n  \n\n  {\n    src: \"https://i.postimg.cc/KcNxZ1jt/img-tags-13.png\",\n    desc: \"所有干员采掘力-1\",\n    level: 2,\n    challenge: true,\n    unstackable: true,\n    advance: true,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        card.mine -= 1;\n        card.mine = Math.max(0, card.mine);\n      }\n    }\n  },\n\n  \n\n\n  \n\n  // {\n  //   src: \"https://i.postimg.cc/R0Hv9GJ0/img-tags-14.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n  // {\n  //   src: \"https://i.postimg.cc/wj36496L/img-tags-15.png\",\n  //   desc: \"可同时部署的干员数-3\",\n  //   level: 3,\n  //   challenge: true,\n  //   unstackable: true,\n  //   extra_challenge: true,\n  //   standard_level: 5,\n  //   effect(G, ctx){\n  //     G.field_limit -= 3;\n  //   }\n  // },\n  {\n    src: \"https://i.postimg.cc/W1KsQx3K/img-tags-16.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    unstackable: true,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  // {\n  //   src: \"https://i.postimg.cc/gkzcRvQM/img-tags-17.png\",\n  //   desc: \"所有干员攻击力-2\",\n  //   level: 3,\n  //   challenge: true,\n  //   unstackable: true,\n  //   effect(G, ctx) {\n  //     // G.goal += 28; // Because first turn gonna -4 too\n  //     // G.reduce_goal = true;\n  //     for (let card of G.deck) {\n  //       card.atk -= 2;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"https://i.postimg.cc/1t0PVtHh/img-tags-18.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    challenge: true,\n    stackable: true,\n    advance: true,\n    standard_level: 4,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"https://i.postimg.cc/MTJqGR1m/img-tags-19.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"https://i.postimg.cc/zXxzky1q/img-tags-20.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"https://i.postimg.cc/Wp6bh9WF/img-tags-21.png\",\n    desc: \"胜利所需分数+12\",\n    level: 3,\n    standard_level: 4,\n    stackable: true,\n    effect(G, ctx){\n      G.goal += 12;\n    }\n  },\n\n  {\n    src: \"https://i.postimg.cc/j2Xsm5wQ/img-tags-22.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 6,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  {\n    src: \"https://i.postimg.cc/7hDHK76Z/img-tags-23.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 4,\n    challenge: true,\n    unstackable: true,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"https://i.postimg.cc/7ZQLqfBK/img-tags-24.png\",\n    desc: \"增加Boss\\\"大泡普\\\"，胜利所需分数+10\",\n    level: 4,\n    challenge: true,\n    stackable: true,\n    standard_level: 5,\n    effect(G, ctx){\n      addBoss(G, ctx, \"大泡普\");\n      G.goal += 10;\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/TPzYWBvm/img-tags-25.png\",\n    desc: \"增加Boss\\\"锈锤战士\\\"，胜利所需分数+10\",\n    level: 4,\n    challenge: true,\n    stackable: true,\n    effect(G, ctx){\n      addBoss(G, ctx, \"锈锤战士\");\n      G.goal += 10;\n    }\n  },\n  {\n    src: \"https://i.postimg.cc/jjwS2tmt/img-tags-26.png\",\n    desc: \"胜利所需分数+24\",\n    level: 5,\n    challenge: true,\n    // stackable: true,\n    standard_level: 6,\n    effect(G, ctx) {\n      G.goal += 24;\n    }\n  },\n{\n    src: \"https://i.postimg.cc/4dp4vwX0/img-tags-27.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    unstackable: true,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n  \n  // {\n  //   src: \"https://i.postimg.cc/qv7Rf8Gt/img-tags-28.png\",\n  //   desc: \"干员以疲劳状态入场\",\n  //   level: 10,\n  //   unstackable: true,\n  //   effect(G, ctx){\n  //     G.exhausted_enter = true;\n  //   }\n  // },\n  \n];\n\nexport const final_tag = {\n  src: \"https://i.postimg.cc/yYjdrf04/img-tags-29.png\",\n  desc: \"增加Boss\\\"复仇者\\\"，胜利所需分数+100\",\n  level: 100,\n  effect(G, ctx){\n    addBoss(G, ctx, \"复仇者\");\n    G.goal += 100;\n  }\n};\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","export const result_images = [\n  [\"https://dadiaogames.gitee.io/images/imagebed/roguelike_ascension.jpg\", 75358644],\n  // [\"https://s3.ax1x.com/2020/12/01/DWcVIO.jpg\", 75358644],\n  // [\"https://s3.ax1x.com/2020/12/01/DWceiD.jpg\", 75576391],\n];\n\n// export const lose_image = \"https://s3.ax1x.com/2020/12/01/DWcmJe.png\";\nexport const lose_image = \"https://i.postimg.cc/5979BHJb/img-cards-74.png\";\n\nexport const relic_images = [\n  \"https://i.postimg.cc/1X35Mz10/img-assets-182.png\",\n  \"https://i.postimg.cc/G2QmkyVh/img-assets-183.png\",\n  \"https://i.postimg.cc/xCYdJRs4/img-assets-184.png\",\n  \"https://i.postimg.cc/9fyMQSB9/img-assets-185.png\",\n  \"https://i.postimg.cc/sgkxyy5y/img-assets-186.png\",\n  \"https://i.postimg.cc/8zJcqsJt/img-assets-187.png\",\n  \"https://i.postimg.cc/15zfrv9x/img-assets-188.png\",\n  \"https://i.postimg.cc/mZjP9vWN/img-assets-189.png\",\n  \"https://i.postimg.cc/kXhD1W42/img-assets-190.png\",\n  \"https://i.postimg.cc/XqjXh8dC/img-assets-191.png\",\n  \"https://i.postimg.cc/d35DKyjS/img-assets-192.png\",\n  \"https://i.postimg.cc/fLjJBFts/img-assets-193.png\",\n  \"https://i.postimg.cc/JhXyBtRG/img-assets-194.png\",\n  \"https://i.postimg.cc/50MX51tp/img-assets-195.png\",\n  \"https://i.postimg.cc/sgqQX5dk/img-assets-196.png\",\n  \"https://i.postimg.cc/y8k3sv5h/img-assets-197.png\",\n  \"https://i.postimg.cc/TYk5zZkY/img-assets-198.png\",\n  \"https://i.postimg.cc/MKZjrWmF/img-assets-199.png\",\n  \"https://i.postimg.cc/2j7ZwqhW/img-assets-200.png\",\n  \"https://i.postimg.cc/hvsQPwcs/img-assets-201.png\",\n  \"https://i.postimg.cc/rsMtTcXz/img-assets-202.png\",\n  \"https://i.postimg.cc/B6x1Rbzd/img-assets-203.png\",\n  \"https://i.postimg.cc/tT0xrWB3/img-assets-204.png\",\n  \"https://i.postimg.cc/bvSnH39Y/img-assets-205.png\",\n  \"https://i.postimg.cc/dVxdyzdS/img-assets-206.png\",\n  \"https://i.postimg.cc/4xdVnJK9/img-assets-207.png\",\n  \"https://i.postimg.cc/c1RQbkyr/img-assets-208.png\",\n  \"https://i.postimg.cc/VL4XYSNw/img-assets-209.png\",\n  \"https://i.postimg.cc/GhbkwPdz/img-assets-210.png\",\n  \"https://i.postimg.cc/1XrwVXcp/img-assets-211.png\",\n  \"https://i.postimg.cc/8cSLCMWp/img-assets-212.png\",\n  \"https://i.postimg.cc/9MTGVJDg/img-assets-213.png\",\n  \"https://i.postimg.cc/R02cjjZn/img-assets-214.png\",\n  \"https://i.postimg.cc/R0W7pM4B/img-assets-215.png\",\n  \"https://i.postimg.cc/jSg6hWVc/img-assets-216.png\",\n  \"https://i.postimg.cc/CxLHDG2d/img-assets-217.png\",\n  \"https://i.postimg.cc/Nfxk5JpW/img-assets-218.png\",\n  \"https://i.postimg.cc/02vC5RdY/img-assets-219.png\",\n  \"https://i.postimg.cc/Y06fNbkL/img-assets-220.png\",\n  \"https://i.postimg.cc/QN1brx5N/img-assets-221.png\",\n  \"https://i.postimg.cc/Rh5Lnjrz/img-assets-222.png\",\n  \"https://i.postimg.cc/XJygqnz8/img-assets-223.png\",\n  \"https://i.postimg.cc/xdZR9Xt8/img-assets-224.png\",\n  \"https://i.postimg.cc/Mpd5rPBy/img-assets-225.png\",\n  \"https://i.postimg.cc/FKzptybw/img-assets-226.png\",\n  \"https://i.postimg.cc/htSMsWXD/img-assets-227.png\",\n  \"https://i.postimg.cc/CLCmbLLr/img-assets-228.png\",\n  \"https://i.postimg.cc/5NWsHF1F/img-assets-229.png\",\n  \"https://i.postimg.cc/fW9HTv4N/img-assets-230.png\",\n  \"https://i.postimg.cc/fym52M7L/img-assets-231.png\",\n  \"https://i.postimg.cc/j5GZ4D7m/img-assets-232.png\",\n  \"https://i.postimg.cc/N0CNLJfg/img-assets-233.png\",\n  \"https://i.postimg.cc/j5WMfHLy/img-assets-234.png\",\n  \"https://i.postimg.cc/Pq53XsH3/img-assets-235.png\",\n  \"https://i.postimg.cc/T3GNs54X/img-assets-236.png\",\n  \"https://i.postimg.cc/MpD3JZCf/img-assets-237.png\",\n  \"https://i.postimg.cc/KvtsQDQN/img-assets-238.png\",\n  \"https://i.postimg.cc/zDscncwv/img-assets-239.png\",\n  \"https://i.postimg.cc/zB3cjmPb/img-assets-240.png\",\n  \"https://i.postimg.cc/fWtPSN91/img-assets-241.png\",\n  \"https://i.postimg.cc/FRqnCP2P/img-assets-242.png\",\n  \"https://i.postimg.cc/1Xq7kGSy/img-assets-243.png\",\n  \"https://i.postimg.cc/nL3WBVTf/img-assets-244.png\",\n  \"https://i.postimg.cc/9fmSDwdB/img-assets-245.png\",\n  \"https://i.postimg.cc/g2qQcHZJ/img-assets-246.png\",\n  \"https://i.postimg.cc/bwj4jBdW/img-assets-247.png\",\n  \"https://i.postimg.cc/SQ3wgs4y/img-assets-248.png\",\n  \"https://i.postimg.cc/QtnqxHmV/img-assets-249.png\",\n  \"https://i.postimg.cc/mkzycBpj/img-assets-250.png\",\n  \"https://i.postimg.cc/ZYCGPN17/img-assets-251.png\",\n  \"https://i.postimg.cc/FsSw84F0/img-assets-252.png\",\n  \"https://i.postimg.cc/prwYz4gH/img-assets-253.png\",\n  \"https://i.postimg.cc/TwP96rrZ/img-assets-254.png\",\n  \"https://i.postimg.cc/QMmbw6WQ/img-assets-255.png\",\n  \"https://i.postimg.cc/rwSgCyVY/img-assets-256.png\",\n  \"https://i.postimg.cc/FKNpPt1F/img-assets-257.png\",\n  \"https://i.postimg.cc/t402xnjx/img-assets-258.png\",\n  \"https://i.postimg.cc/QCH0ppCp/img-assets-259.png\",\n  \"https://i.postimg.cc/ZYMfJDsj/img-assets-260.png\",\n  \"https://i.postimg.cc/tJwDDYn8/img-assets-261.png\",\n  \"https://i.postimg.cc/hPQ2vbHn/img-assets-262.png\",\n  \"https://i.postimg.cc/XJ2sG2jj/img-assets-263.png\",\n  \"https://i.postimg.cc/pTV0dNtc/img-assets-264.png\",\n  \"https://i.postimg.cc/QMJ4s8vW/img-assets-265.png\",\n  \"https://i.postimg.cc/7Z7tsMV9/img-assets-266.png\",\n  \"https://i.postimg.cc/tRScYgJ3/img-assets-267.png\",\n  \"https://i.postimg.cc/mrsX0zps/img-assets-268.png\",\n  \"https://i.postimg.cc/zXycW1H9/img-assets-269.png\",\n  \"https://i.postimg.cc/zX4PFPn3/img-assets-270.png\",\n  \"https://i.postimg.cc/RhDp8gys/img-assets-271.png\",\n  \"https://i.postimg.cc/qRQ5cJLd/img-assets-272.png\",\n  \"https://i.postimg.cc/Y09yb5nL/img-assets-273.png\",\n  \"https://i.postimg.cc/Lst7XBg5/img-assets-274.png\",\n  \"https://i.postimg.cc/hGW6c3jN/img-assets-275.png\",\n  \"https://i.postimg.cc/ZRJQyB6c/img-assets-276.png\",\n  \"https://i.postimg.cc/8PYxnCVp/img-assets-277.png\",\n  \"https://i.postimg.cc/W1JxRP2M/img-assets-278.png\",\n  \"https://i.postimg.cc/8PcqH69X/img-assets-279.png\",\n  \"https://i.postimg.cc/NGp3m4Jr/img-assets-280.png\",\n  \"https://i.postimg.cc/rsn7TV09/img-assets-281.png\",\n  \"https://i.postimg.cc/ZnKXXBRR/img-assets-282.png\",\n  \"https://i.postimg.cc/C14WvHwX/img-assets-283.png\",\n  \"https://i.postimg.cc/cHWpM5Gf/img-assets-284.png\",\n  \"https://i.postimg.cc/Zq6kNz2T/img-assets-285.png\",\n  \"https://i.postimg.cc/3xs5WxLS/img-assets-286.png\",\n  \"https://i.postimg.cc/qvhHk3G6/img-assets-287.png\",\n  \"https://i.postimg.cc/651NJ0CN/img-assets-288.png\",\n  \"https://i.postimg.cc/285fKJbw/img-assets-289.png\",\n  \"https://i.postimg.cc/ZYHSjZRn/img-assets-290.png\",\n  \"https://i.postimg.cc/Hn61L0KX/img-assets-291.png\",\n  \"https://i.postimg.cc/vBLdJwtP/img-assets-292.png\",\n  \"https://i.postimg.cc/hjqBZtTz/img-assets-293.png\",\n  \"https://i.postimg.cc/D0vKFpC7/img-assets-294.png\",\n  \"https://i.postimg.cc/tg6bzxZG/img-assets-295.png\",\n  \"https://i.postimg.cc/t4YpYf9T/img-assets-296.png\",\n  \"https://i.postimg.cc/rw3cWJp9/img-assets-297.png\",\n  \"https://i.postimg.cc/28HCjmRM/img-assets-298.png\",\n  \"https://i.postimg.cc/dtQqK3XG/img-assets-299.png\",\n  \"https://i.postimg.cc/VsWYTn7Y/img-assets-300.png\",\n  \"https://i.postimg.cc/SRdkMbXX/img-assets-301.png\",\n  \"https://i.postimg.cc/VvmzvkNQ/img-assets-302.png\",\n  \"https://i.postimg.cc/G2kcbydx/img-assets-303.png\",\n  \"https://i.postimg.cc/XvBjDPPh/img-assets-304.png\",\n  \"https://i.postimg.cc/d1MsMBP0/img-assets-305.png\",\n  \"https://i.postimg.cc/sgNfmzT7/img-assets-306.png\",\n  \"https://i.postimg.cc/jS5dy24R/img-assets-307.png\",\n  \"https://i.postimg.cc/VL4kSnM7/img-assets-308.png\",\n  \"https://i.postimg.cc/tC9gC21Z/img-assets-309.png\",\n  \"https://i.postimg.cc/RhLVLnYZ/img-assets-310.png\",\n  \"https://i.postimg.cc/RC7FBj0x/img-assets-311.png\",\n  \"https://i.postimg.cc/HngkMtBN/img-assets-312.png\",\n  \"https://i.postimg.cc/FRcK16gc/img-assets-313.png\",\n  \"https://i.postimg.cc/W4x3NVrT/img-assets-314.png\",\n  \"https://i.postimg.cc/k52GPG2T/img-assets-315.png\",\n  \"https://i.postimg.cc/cL9CzwLK/img-assets-316.png\",\n  \"https://i.postimg.cc/0y2rZcPR/img-assets-317.png\",\n  \"https://i.postimg.cc/yYTkFwqy/img-assets-318.png\",\n  \"https://i.postimg.cc/dtFhZJf0/img-assets-319.png\",\n  \"https://i.postimg.cc/G3GBp4qN/img-assets-320.png\",\n  \"https://i.postimg.cc/Y06jDPvk/img-assets-321.png\",\n  \"https://i.postimg.cc/zvZVjNX0/img-assets-322.png\",\n  \"https://i.postimg.cc/TwWKg1GK/img-assets-323.png\",\n  \"https://i.postimg.cc/hGvz4M5b/img-assets-324.png\",\n  \"https://i.postimg.cc/Pq7LCYGG/img-assets-325.png\",\n  \"https://i.postimg.cc/GmqT16qm/img-assets-326.png\",\n  \"https://i.postimg.cc/SxyY3mLP/img-assets-327.png\",\n  \"https://i.postimg.cc/5NWC5BXb/img-assets-328.png\",\n  \"https://i.postimg.cc/bN02mZnb/img-assets-329.png\",\n  \"https://i.postimg.cc/WpkZJWb5/img-assets-330.png\",\n  \"https://i.postimg.cc/cCw8yH5p/img-assets-331.png\",\n  \"https://i.postimg.cc/LXrZbfvk/img-assets-332.png\",\n  \"https://i.postimg.cc/3Ryv19jJ/img-assets-333.png\",\n  \"https://i.postimg.cc/g0th31ZT/img-assets-334.png\",\n  \"https://i.postimg.cc/JhzJDRGX/img-assets-335.png\",\n  \"https://i.postimg.cc/mgwCgP2R/img-assets-336.png\",\n  \"https://i.postimg.cc/ncqqNdyX/img-assets-337.png\",\n  \"https://i.postimg.cc/bw81PxP3/img-assets-338.png\",\n  \"https://i.postimg.cc/y6gmy6nX/img-assets-339.png\",\n  \"https://i.postimg.cc/VvCXf45H/img-assets-340.png\",\n  \"https://i.postimg.cc/8k2hK808/img-assets-341.png\",\n  \"https://i.postimg.cc/26J4NgjZ/img-assets-342.png\",\n  \"https://i.postimg.cc/50jwGfJJ/img-assets-343.png\",\n  \"https://i.postimg.cc/MG607yrv/img-assets-344.png\",\n  \"https://i.postimg.cc/nL340C6T/img-assets-345.png\",\n  \"https://i.postimg.cc/6pLL4Hck/img-assets-346.png\",\n  \"https://i.postimg.cc/g2PHJ9Vy/img-assets-347.png\",\n  \"https://i.postimg.cc/h460kQh5/img-assets-348.png\",\n  \"https://i.postimg.cc/Qx7qhNTx/img-assets-349.png\",\n  \"https://i.postimg.cc/fWJKqfWd/img-assets-350.png\",\n  \"https://i.postimg.cc/8sgkGCg6/img-assets-351.png\",\n  \"https://i.postimg.cc/gJr2q5Kn/img-assets-352.png\",\n  \"https://i.postimg.cc/sxhfbhqz/img-assets-353.png\",\n  \"https://i.postimg.cc/bJMN6T6L/img-assets-354.png\",\n  \"https://i.postimg.cc/mrmr9RCv/img-assets-355.png\",\n  \"https://i.postimg.cc/65ZTmkxZ/img-assets-356.png\",\n  \"https://i.postimg.cc/x1SqD694/img-assets-357.png\",\n  \"https://i.postimg.cc/FHgz90Rs/img-assets-358.png\",\n  \"https://i.postimg.cc/Ls9XhhYk/img-assets-359.png\",\n  \"https://i.postimg.cc/T1z1P9gh/img-assets-360.png\",\n  \"https://i.postimg.cc/SQ3JVy3q/img-assets-361.png\",\n  \"https://i.postimg.cc/fytkZF36/img-assets-362.png\",\n  \"https://i.postimg.cc/k4hD095Q/img-assets-363.png\",\n  \"https://i.postimg.cc/1X35Mz10/img-assets-182.png\",\n  \"https://i.postimg.cc/G2QmkyVh/img-assets-183.png\",\n  \"https://i.postimg.cc/xCYdJRs4/img-assets-184.png\",\n  \"https://i.postimg.cc/9fyMQSB9/img-assets-185.png\",\n  \"https://i.postimg.cc/sgkxyy5y/img-assets-186.png\",\n  \"https://i.postimg.cc/8zJcqsJt/img-assets-187.png\",\n  \"https://i.postimg.cc/15zfrv9x/img-assets-188.png\",\n  \"https://i.postimg.cc/mZjP9vWN/img-assets-189.png\",\n  \"https://i.postimg.cc/kXhD1W42/img-assets-190.png\",\n  \"https://i.postimg.cc/XqjXh8dC/img-assets-191.png\",\n  \"https://i.postimg.cc/d35DKyjS/img-assets-192.png\",\n  \"https://i.postimg.cc/fLjJBFts/img-assets-193.png\",\n  \"https://i.postimg.cc/JhXyBtRG/img-assets-194.png\",\n  \"https://i.postimg.cc/50MX51tp/img-assets-195.png\",\n  \"https://i.postimg.cc/sgqQX5dk/img-assets-196.png\",\n  \"https://i.postimg.cc/y8k3sv5h/img-assets-197.png\",\n  \"https://i.postimg.cc/TYk5zZkY/img-assets-198.png\",\n  \"https://i.postimg.cc/MKZjrWmF/img-assets-199.png\",\n  \"https://i.postimg.cc/2j7ZwqhW/img-assets-200.png\",\n  \"https://i.postimg.cc/hvsQPwcs/img-assets-201.png\",\n  \"https://i.postimg.cc/rsMtTcXz/img-assets-202.png\",\n  \"https://i.postimg.cc/B6x1Rbzd/img-assets-203.png\",\n  \"https://i.postimg.cc/tT0xrWB3/img-assets-204.png\",\n  \"https://i.postimg.cc/bvSnH39Y/img-assets-205.png\",\n  \"https://i.postimg.cc/dVxdyzdS/img-assets-206.png\",\n  \"https://i.postimg.cc/4xdVnJK9/img-assets-207.png\",\n  \"https://i.postimg.cc/c1RQbkyr/img-assets-208.png\",\n  \"https://i.postimg.cc/VL4XYSNw/img-assets-209.png\",\n  \"https://i.postimg.cc/GhbkwPdz/img-assets-210.png\",\n  \"https://i.postimg.cc/1XrwVXcp/img-assets-211.png\",\n  \"https://i.postimg.cc/8cSLCMWp/img-assets-212.png\",\n  \"https://i.postimg.cc/9MTGVJDg/img-assets-213.png\",\n  \"https://i.postimg.cc/R02cjjZn/img-assets-214.png\",\n  \"https://i.postimg.cc/R0W7pM4B/img-assets-215.png\",\n  \"https://i.postimg.cc/jSg6hWVc/img-assets-216.png\",\n  \"https://i.postimg.cc/CxLHDG2d/img-assets-217.png\",\n  \"https://i.postimg.cc/Nfxk5JpW/img-assets-218.png\",\n  \"https://i.postimg.cc/02vC5RdY/img-assets-219.png\",\n  \"https://i.postimg.cc/Y06fNbkL/img-assets-220.png\",\n  \"https://i.postimg.cc/QN1brx5N/img-assets-221.png\",\n  \"https://i.postimg.cc/Rh5Lnjrz/img-assets-222.png\",\n  \"https://i.postimg.cc/XJygqnz8/img-assets-223.png\",\n  \"https://i.postimg.cc/xdZR9Xt8/img-assets-224.png\",\n  \"https://i.postimg.cc/Mpd5rPBy/img-assets-225.png\",\n  \"https://i.postimg.cc/FKzptybw/img-assets-226.png\",\n  \"https://i.postimg.cc/htSMsWXD/img-assets-227.png\",\n  \"https://i.postimg.cc/CLCmbLLr/img-assets-228.png\",\n  \"https://i.postimg.cc/5NWsHF1F/img-assets-229.png\",\n  \"https://i.postimg.cc/fW9HTv4N/img-assets-230.png\",\n  \"https://i.postimg.cc/fym52M7L/img-assets-231.png\",\n  \"https://i.postimg.cc/j5GZ4D7m/img-assets-232.png\",\n  \"https://i.postimg.cc/N0CNLJfg/img-assets-233.png\",\n  \"https://i.postimg.cc/j5WMfHLy/img-assets-234.png\",\n  \"https://i.postimg.cc/Pq53XsH3/img-assets-235.png\",\n  \"https://i.postimg.cc/T3GNs54X/img-assets-236.png\",\n  \"https://i.postimg.cc/MpD3JZCf/img-assets-237.png\",\n  \"https://i.postimg.cc/KvtsQDQN/img-assets-238.png\",\n  \"https://i.postimg.cc/zDscncwv/img-assets-239.png\",\n  \"https://i.postimg.cc/zB3cjmPb/img-assets-240.png\",\n  \"https://i.postimg.cc/fWtPSN91/img-assets-241.png\",\n  \"https://i.postimg.cc/FRqnCP2P/img-assets-242.png\",\n  \"https://i.postimg.cc/1Xq7kGSy/img-assets-243.png\",\n  \"https://i.postimg.cc/nL3WBVTf/img-assets-244.png\",\n  \"https://i.postimg.cc/9fmSDwdB/img-assets-245.png\",\n  \"https://i.postimg.cc/g2qQcHZJ/img-assets-246.png\",\n  \"https://i.postimg.cc/bwj4jBdW/img-assets-247.png\",\n  \"https://i.postimg.cc/SQ3wgs4y/img-assets-248.png\",\n  \"https://i.postimg.cc/QtnqxHmV/img-assets-249.png\",\n  \"https://i.postimg.cc/mkzycBpj/img-assets-250.png\",\n  \"https://i.postimg.cc/ZYCGPN17/img-assets-251.png\",\n  \"https://i.postimg.cc/FsSw84F0/img-assets-252.png\",\n  \"https://i.postimg.cc/prwYz4gH/img-assets-253.png\",\n  \"https://i.postimg.cc/TwP96rrZ/img-assets-254.png\",\n  \"https://i.postimg.cc/QMmbw6WQ/img-assets-255.png\",\n  \"https://i.postimg.cc/rwSgCyVY/img-assets-256.png\",\n  \"https://i.postimg.cc/FKNpPt1F/img-assets-257.png\",\n  \"https://i.postimg.cc/t402xnjx/img-assets-258.png\",\n  \"https://i.postimg.cc/QCH0ppCp/img-assets-259.png\",\n  \"https://i.postimg.cc/ZYMfJDsj/img-assets-260.png\",\n  \"https://i.postimg.cc/tJwDDYn8/img-assets-261.png\",\n  \"https://i.postimg.cc/hPQ2vbHn/img-assets-262.png\",\n  \"https://i.postimg.cc/XJ2sG2jj/img-assets-263.png\",\n  \"https://i.postimg.cc/pTV0dNtc/img-assets-264.png\",\n  \"https://i.postimg.cc/QMJ4s8vW/img-assets-265.png\",\n  \"https://i.postimg.cc/7Z7tsMV9/img-assets-266.png\",\n  \"https://i.postimg.cc/tRScYgJ3/img-assets-267.png\",\n  \"https://i.postimg.cc/mrsX0zps/img-assets-268.png\",\n  \"https://i.postimg.cc/zXycW1H9/img-assets-269.png\",\n  \"https://i.postimg.cc/zX4PFPn3/img-assets-270.png\",\n  \"https://i.postimg.cc/RhDp8gys/img-assets-271.png\",\n  \"https://i.postimg.cc/qRQ5cJLd/img-assets-272.png\",\n  \"https://i.postimg.cc/Y09yb5nL/img-assets-273.png\",\n  \"https://i.postimg.cc/Lst7XBg5/img-assets-274.png\",\n  \"https://i.postimg.cc/hGW6c3jN/img-assets-275.png\",\n  \"https://i.postimg.cc/ZRJQyB6c/img-assets-276.png\",\n  \"https://i.postimg.cc/8PYxnCVp/img-assets-277.png\",\n  \"https://i.postimg.cc/W1JxRP2M/img-assets-278.png\",\n  \"https://i.postimg.cc/8PcqH69X/img-assets-279.png\",\n  \"https://i.postimg.cc/NGp3m4Jr/img-assets-280.png\",\n  \"https://i.postimg.cc/rsn7TV09/img-assets-281.png\",\n  \"https://i.postimg.cc/ZnKXXBRR/img-assets-282.png\",\n  \"https://i.postimg.cc/C14WvHwX/img-assets-283.png\",\n  \"https://i.postimg.cc/cHWpM5Gf/img-assets-284.png\",\n  \"https://i.postimg.cc/Zq6kNz2T/img-assets-285.png\",\n  \"https://i.postimg.cc/3xs5WxLS/img-assets-286.png\",\n  \"https://i.postimg.cc/qvhHk3G6/img-assets-287.png\",\n  \"https://i.postimg.cc/651NJ0CN/img-assets-288.png\",\n  \"https://i.postimg.cc/285fKJbw/img-assets-289.png\",\n  \"https://i.postimg.cc/ZYHSjZRn/img-assets-290.png\",\n  \"https://i.postimg.cc/Hn61L0KX/img-assets-291.png\",\n  \"https://i.postimg.cc/vBLdJwtP/img-assets-292.png\",\n  \"https://i.postimg.cc/hjqBZtTz/img-assets-293.png\",\n  \"https://i.postimg.cc/D0vKFpC7/img-assets-294.png\",\n  \"https://i.postimg.cc/tg6bzxZG/img-assets-295.png\",\n  \"https://i.postimg.cc/t4YpYf9T/img-assets-296.png\",\n  \"https://i.postimg.cc/rw3cWJp9/img-assets-297.png\",\n  \"https://i.postimg.cc/28HCjmRM/img-assets-298.png\",\n  \"https://i.postimg.cc/dtQqK3XG/img-assets-299.png\",\n  \"https://i.postimg.cc/VsWYTn7Y/img-assets-300.png\",\n  \"https://i.postimg.cc/SRdkMbXX/img-assets-301.png\",\n  \"https://i.postimg.cc/VvmzvkNQ/img-assets-302.png\",\n  \"https://i.postimg.cc/G2kcbydx/img-assets-303.png\",\n  \"https://i.postimg.cc/XvBjDPPh/img-assets-304.png\",\n  \"https://i.postimg.cc/d1MsMBP0/img-assets-305.png\",\n  \"https://i.postimg.cc/sgNfmzT7/img-assets-306.png\",\n  \"https://i.postimg.cc/jS5dy24R/img-assets-307.png\",\n  \"https://i.postimg.cc/VL4kSnM7/img-assets-308.png\",\n  \"https://i.postimg.cc/tC9gC21Z/img-assets-309.png\",\n  \"https://i.postimg.cc/RhLVLnYZ/img-assets-310.png\",\n  \"https://i.postimg.cc/RC7FBj0x/img-assets-311.png\",\n  \"https://i.postimg.cc/HngkMtBN/img-assets-312.png\",\n  \"https://i.postimg.cc/FRcK16gc/img-assets-313.png\",\n  \"https://i.postimg.cc/W4x3NVrT/img-assets-314.png\",\n  \"https://i.postimg.cc/k52GPG2T/img-assets-315.png\",\n  \"https://i.postimg.cc/cL9CzwLK/img-assets-316.png\",\n  \"https://i.postimg.cc/0y2rZcPR/img-assets-317.png\",\n  \"https://i.postimg.cc/yYTkFwqy/img-assets-318.png\",\n  \"https://i.postimg.cc/dtFhZJf0/img-assets-319.png\",\n  \"https://i.postimg.cc/G3GBp4qN/img-assets-320.png\",\n  \"https://i.postimg.cc/Y06jDPvk/img-assets-321.png\",\n  \"https://i.postimg.cc/zvZVjNX0/img-assets-322.png\",\n  \"https://i.postimg.cc/TwWKg1GK/img-assets-323.png\",\n  \"https://i.postimg.cc/hGvz4M5b/img-assets-324.png\",\n  \"https://i.postimg.cc/Pq7LCYGG/img-assets-325.png\",\n  \"https://i.postimg.cc/GmqT16qm/img-assets-326.png\",\n  \"https://i.postimg.cc/SxyY3mLP/img-assets-327.png\",\n  \"https://i.postimg.cc/5NWC5BXb/img-assets-328.png\",\n  \"https://i.postimg.cc/bN02mZnb/img-assets-329.png\",\n  \"https://i.postimg.cc/WpkZJWb5/img-assets-330.png\",\n  \"https://i.postimg.cc/cCw8yH5p/img-assets-331.png\",\n  \"https://i.postimg.cc/LXrZbfvk/img-assets-332.png\",\n  \"https://i.postimg.cc/3Ryv19jJ/img-assets-333.png\",\n  \"https://i.postimg.cc/g0th31ZT/img-assets-334.png\",\n  \"https://i.postimg.cc/JhzJDRGX/img-assets-335.png\",\n  \"https://i.postimg.cc/mgwCgP2R/img-assets-336.png\",\n  \"https://i.postimg.cc/ncqqNdyX/img-assets-337.png\",\n  \"https://i.postimg.cc/bw81PxP3/img-assets-338.png\",\n  \"https://i.postimg.cc/y6gmy6nX/img-assets-339.png\",\n  \"https://i.postimg.cc/VvCXf45H/img-assets-340.png\",\n  \"https://i.postimg.cc/8k2hK808/img-assets-341.png\",\n  \"https://i.postimg.cc/26J4NgjZ/img-assets-342.png\",\n  \"https://i.postimg.cc/50jwGfJJ/img-assets-343.png\",\n  \"https://i.postimg.cc/MG607yrv/img-assets-344.png\",\n  \"https://i.postimg.cc/nL340C6T/img-assets-345.png\",\n  \"https://i.postimg.cc/6pLL4Hck/img-assets-346.png\",\n  \"https://i.postimg.cc/g2PHJ9Vy/img-assets-347.png\",\n  \"https://i.postimg.cc/h460kQh5/img-assets-348.png\",\n  \"https://i.postimg.cc/Qx7qhNTx/img-assets-349.png\",\n  \"https://i.postimg.cc/fWJKqfWd/img-assets-350.png\",\n  \"https://i.postimg.cc/8sgkGCg6/img-assets-351.png\",\n  \"https://i.postimg.cc/gJr2q5Kn/img-assets-352.png\",\n  \"https://i.postimg.cc/sxhfbhqz/img-assets-353.png\",\n  \"https://i.postimg.cc/bJMN6T6L/img-assets-354.png\",\n  \"https://i.postimg.cc/mrmr9RCv/img-assets-355.png\",\n  \"https://i.postimg.cc/65ZTmkxZ/img-assets-356.png\",\n  \"https://i.postimg.cc/x1SqD694/img-assets-357.png\",\n  \"https://i.postimg.cc/FHgz90Rs/img-assets-358.png\",\n  \"https://i.postimg.cc/Ls9XhhYk/img-assets-359.png\",\n  \"https://i.postimg.cc/T1z1P9gh/img-assets-360.png\",\n  \"https://i.postimg.cc/SQ3JVy3q/img-assets-361.png\",\n  \"https://i.postimg.cc/fytkZF36/img-assets-362.png\",\n  \"https://i.postimg.cc/k4hD095Q/img-assets-363.png\"\n ];\n \n export const relic_names = [\"乌萨斯列巴\",\n \"脱水仙人掌干\",\n \"风干大蕉果\",\n \"商队盒饭\",\n \"半盒沙虫罐头\",\n \"维多利亚军粮\",\n \"废旧地图\",\n \"单筒望远镜\",\n \"全息粉粉沙盒\",\n \"单人睡袋\",\n \"破烂帐篷\",\n \"萨米大“蜡烛”\",\n \"兔子棚屋\",\n \"噪音引擎\",\n \"豌豆花盆\",\n \"综合园艺成果\",\n \"炭化烤肉棒\",\n \"压缩糖砖\",\n \"易爆建材箱\",\n \"珠宝水果拼盘\",\n \"赤金的远征\",\n \"古旧钱币\",\n \"恐魔金像\",\n \"血钻\",\n \"小财神雕像\",\n \"“嘎呜”挂饰\",\n \"米格鲁的饼干\",\n \"一杯昏睡红茶\",\n \"古旧铸物\",\n \"地区行动方案\",\n \"全局作战文件\",\n \"人事部密信\",\n \"一份演讲稿\",\n \"突击协议扩充\",\n \"突击协议增援\",\n \"堡垒协议扩充\",\n \"堡垒协议增援\",\n \"远程协议扩充\",\n \"远程协议增援\",\n \"破坏协议扩充\",\n \"破坏协议增援\",\n \"熏黑的信号灯\",\n \"老式电报机\",\n \"无线通讯器\",\n \"幸运硬币\",\n \"手绘雪雉传单\",\n \"真理的书单\",\n \"教官的爱鞭\",\n \"咪波·运输型\",\n \"萨卡兹监工哨子\",\n \"忧伤的驮兽\",\n \"奇怪的$墨镜\",\n \"破片地雷\",\n \"《防身手册》\",\n \"芙蓉的健康餐\",\n \"牧兽的排泄物\",\n \"奇渊面具\",\n \"教母的信物\",\n \"锉刀\",\n \"废铁陷阱\",\n \"酸液源石虫\",\n \"迷迭香之拥\",\n \"无名诗集\",\n \"劣化组织\",\n \"“黑夜呢喃”\",\n \"《大静谧》\",\n \"小号黄色安全帽\",\n \"战壕沙袋\",\n \"防割断纤维背心\",\n \"古旧的蒸汽甲胄\",\n \"《打架手册》\",\n \"《独臂电锯》\",\n \"齿轮式外骨骼\",\n \"锈蚀银枪\",\n \"液压气瓶\",\n \"超弹力合金弹簧\",\n \"损坏的左轮弹巢\",\n \"显圣吊坠\",\n \"难闻的治疗粉\",\n \"难闻的止血剂\",\n \"急救药箱\",\n \"白垩色治疗针\",\n \"便宜食用盐\",\n \"辅助麻痹工具\",\n \"血腥链锯\",\n \"另一颗铆钉\",\n \"活性粉尘\",\n \"源石射灯\",\n \"源石环境发生器\",\n \"无主的萨克斯\",\n \"“文明的存续”\",\n \"手工小包\",\n \"*一点*加班费\",\n \"可露希尔的怜悯\",\n \"“日光灯”\",\n \"香草沙士汽水\",\n \"丰蹄能量饮料\",\n \"辣椒老妈\",\n \"脑力药片\",\n \"荒地龙舌兰\",\n \"摩根队长佳酿\",\n \"生命之水\",\n \"皇家利口酒\",\n \"钝爪-突破\",\n \"钝爪-典训\",\n \"钝爪-爆发\",\n \"钝爪-熟稔\",\n \"钝爪-振奋\",\n \"钝爪-百战\",\n \"折戟-突破\",\n \"折戟-典训\",\n \"折戟-锋刃\",\n \"折戟-浴血\",\n \"折戟-一夫当关\",\n \"折戟-破釜沉舟\",\n \"铁卫-突破\",\n \"铁卫-典训\",\n \"铁卫-侵掠\",\n \"铁卫-不动\",\n \"铁卫-推进\",\n \"铁卫-无锋\",\n \"残弩-突破\",\n \"残弩-百步穿杨\",\n \"残弩-典训\",\n \"残弩-采矿镭射枪\",\n \"残弩-交叉火力\",\n \"残弩-神速\",\n \"断杖-突破\",\n \"断杖-典训\",\n \"断杖-织法者\",\n \"断杖-咏唱\",\n \"断杖-凝神\",\n \"断杖-苦难巫咒\",\n \"支柱-突破\",\n \"支柱-典训\",\n \"支柱-次要战场\",\n \"支柱-勤奋\",\n \"支柱-破兵\",\n \"支柱-枯法\",\n \"医者-突破\",\n \"医者-典训\",\n \"医者-自医\",\n \"医者-强效试剂\",\n \"医者-妙手\",\n \"医者-理智固剂\",\n \"锈刃-突破\",\n \"锈刃-典训\",\n \"锈刃-处决\",\n \"锈刃-单兵\",\n \"锈刃-无人之境\",\n \"锈刃-神力\",\n \"突击协议-利刃\",\n \"突击协议-散兵\",\n \"堡垒协议-方阵\",\n \"堡垒协议-固守\",\n \"远程协议-遥击\",\n \"远程协议-克敌\",\n \"破坏协议-消除\",\n \"破坏协议-压制\",\n \"迷幻的藏宝图\",\n \"染血的传单\",\n \"辉煌工匠包\",\n \"Logos的骨笔\",\n \"无限续杯瓶\",\n \"左半边椰子壳\",\n \"右半边椰子壳\",\n \"倒转的怀表\",\n \"“手铳”\",\n \"沉重的铁皮箱\",\n \"漆黑的钥匙\",\n \"鸟卜探索仪\",\n \"超高级沙发\",\n \"立体投影仪\",\n \"一台旧冰箱\",\n \"个人避难所\",\n \"虚空发生器\",\n \"热水壶\",\n \"“坏家伙”来了！\",\n \"鬼血\",\n \"冰封的异爪\",\n \"巫王旋角\",\n \"浅海轻唱\"];","import React from 'react';\nimport _ from 'lodash';\nimport { choice, deal_random_damage, draw, gainMaterials, init_card_state, logMsg, ready_random_card, reinforce_card, reinforce_hand, summon } from './Game';\nimport { random_upgrade, delete_card, get_card_pick, get_relic, get_specific_card_pick } from './Roguelike';\nimport { UPGRADES } from './upgrades';\nimport { relic_images, relic_names } from './assets';\nimport { ready_order } from './orders';\n\nexport const RELICS = [\n  // {\n  //   name: \"可露希尔的怜悯\",\n  //   desc: \"跳过选牌时,额外获得10赏金\",\n  //   onSkipPick(S) {\n  //     S.gold += 10;\n  //   }\n  // },\n  {\n    name: \"乌萨斯列巴\",\n    desc: \"回合开始时，获得2张随机干员牌，并使其费用-2\",\n    onTurnBegin(G, ctx){\n      for (let i=0; i<2; i++) {\n        let card = {...choice(ctx, G.CARDS)};\n        card.cost -= 2;\n        G.hand.unshift(card);\n      }\n    }\n  },\n  {\n    name: \"超高级沙发\",\n    desc: \"可同时部署人数+1\",\n    onBattleBegin(G, ctx){\n      G.field_limit += 1;\n    }\n  },\n  {\n    name: \"锈刃-处决\",\n    desc: \"部署2费及以下的干员时，造成4点伤害\",\n    onTurnBegin(G, ctx){\n      G.onPlayCard.push((G, ctx, card) => {\n        if (card.cost <= 2) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },{\n    name: \"荒地龙舌兰\",\n    desc: \"每回合少获得1点费用，但获得3个材料\",\n    onTurnBegin(G, ctx){\n      G.costs -= 1;\n      gainMaterials(G, ctx, 3);\n    }\n  },{\n    name: \"一份演讲稿\",\n    desc: \"对局开始时，召唤1个4费干员\",\n    onBattleBegin(G, ctx){\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n      // summon(G, ctx, new_card, {});\n      G.field.push(init_card_state(G, ctx, {...new_card, hp:new_card.hp+1}));\n    }\n  },\n  {\n    name: \"人事部密信\",\n    desc: \"回合开始时，召唤1个随机干员的1/1复制\",\n    onTurnBegin(G, ctx){\n      let new_card = ctx.random.Shuffle(G.CARDS)[0];\n      // summon(G, ctx, new_card, {});\n      let played_card = init_card_state(G, ctx, {...new_card,\n        atk: 1,\n        hp: 2,\n        mine: 1,\n        cost: 1,\n      });\n      played_card.exhausted = false;\n      G.field.push(played_card);\n    }\n  },\n  {\n    name: \"生命之水\",\n    desc: \"回合开始时，强化1张手牌\",\n    onTurnBegin(G, ctx) {\n      reinforce_hand(G, ctx);\n    }\n  },\n\n  \n  {\n    name: \"地区行动方案\",\n    desc: \"起始获得额外1组材料，胜利所需分数+2\",\n    onBattleBegin(G, ctx){\n      for (let i=0; i<3; i++) {\n        G.materials[i] += 1;\n      }\n      G.goal += 2;\n    }\n  },\n  {\n    name: \"一杯昏睡红茶\",\n    desc: \"部署干员时，有25%概率额外触发1次“部署:”效果\",\n    onTurnBegin(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx, card) => {\n          if (ctx.random.D4() == 1 && (card.onPlay != undefined)) {\n            card.onPlay(G, ctx, card);\n            logMsg(G, ctx, `额外触发1次 ${card.name} 的部署效果`);\n          }\n        }\n      );\n    }\n  },\n  // {\n  //   desc: \"回合开始时，如果场上干员数达到了上限，则获得5分\",\n  //   onTurnBegin(G, ctx){\n  //     if (G.field.length == G.field_limit) {\n  //       G.score += 5;\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"综合园艺成果\",\n  //   desc: \"对战开始时,牌组里每有4张牌,就获得1分\",\n  //   onBattleBegin(G, ctx) {\n  //     G.score += Math.floor(G.deck.length / 4);\n  //   }\n  // },\n  {\n    name:\"风干大蕉果\", \n    desc:\"自选干员时，使选到的牌获得强化1\",\n    onPickCard(S, card) {\n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      reinforce.effect(card);\n      card.upgraded = true;\n    }\n  },\n  {\n    name:\"古旧钱币\", \n    desc:\"每次对战结束时,额外获得15赏金\",\n    onBattleEnd(S) {\n      S.gold += 15;\n    }\n  },\n  {\n    name:\"“嘎呜”挂饰\", \n    desc:\"达成满贯以上时,额外获得30赏金\",\n    onBattleEnd(S) {\n      if ((S.level_achieved - S.level_required) >= 4) {\n        S.gold += 30;\n      }\n    }\n  },\n  {\n    name:\"真理的书单\", \n    desc:\"使用: 随机升级5个干员\",\n    onUse(S) {\n      let msg = \"\";\n      for (let i=0; i<5; i++) {\n        msg += random_upgrade(S) + \"\\n\";\n      }\n      alert(msg);\n    }\n  },\n  {\n    name: \"手工小包\",\n    desc: \"达成满贯以上时，随机获得1个藏品\",\n    onBattleEnd(S){\n      if ((S.level_achieved - S.level_required) >= 4) {\n        let relic = S.rng.choice(S.RELICS);\n        console.log(relic.name);\n        S.relics.unshift({...relic});\n        alert(\"通过 手工小包 获得 \"+relic.name);\n      }\n    }\n  },\n  {\n    name:\"奇怪的$墨镜\", \n    desc:\"所有藏品的价格-10(最低为10)\",\n    // onBuyRelic(S, relic) {\n    //   S.gold += 5;\n    // }\n    onRefreshShop(S) {\n      for (let item of S.shop_items) {\n        if (item.is_relic) {\n          item.price = Math.max(item.price-10, 10);\n        }\n      }\n    }\n  },\n  // {\n  //   name:\"一份演讲稿\", \n  //   desc:\"购买藏品时,有概率随机升级1个干员\",\n  //   onBuyRelic(S, relic) {\n  //     if (S.rng.random() <= 0.5) {\n  //       random_upgrade(S);\n  //     }\n  //   }\n  // },\n  {\n    name:\"迷迭香之拥\", \n    desc:\"购买藏品时,有20%概率获得1个其复制\",\n    onBuyRelic(S, relic) {\n      if (S.rng.random() <= 0.2) {\n        S.relics.unshift({...relic});\n        alert(`获得${relic.name}的复制`);\n      }\n    }\n  },\n  {\n    name:\"咪波·运输型\", \n    desc:\"对局开始时费用+2\",\n    onBattleBegin(G, ctx) {\n      G.costs += 2;\n    }\n  },\n  {\n    name:\"芙蓉的健康餐\", \n    // desc:\"所有敌人获得-2/-0\",\n    desc:\"使用: 商店中增加2个\\\"删1张牌\\\"\",\n    onUse(S) {\n      S.shop_items.push(delete_card(S));\n      S.shop_items.push(delete_card(S));\n    }\n  },\n  {\n    name:\"全局作战文件\",\n    desc:\"使用: 商店中增加3个\\\"高级自选干员\\\"\",\n    onUse(S) {\n      let costs = S.rng.shuffle([2,3,4,5,16]).slice(0,3);\n      for (let cost of costs) {\n        S.shop_items.unshift(get_specific_card_pick(S, cost));\n      }\n    }\n  },\n  {\n    name:\"可露希尔的怜悯\",\n    desc:\"使用: 商店中增加4个藏品，并使增加的藏品价格-20\",\n    onUse(S) {\n      for (let i=0; i<4; i++) {\n        let relic = get_relic(S);\n        relic.price -= 20;\n        S.shop_items.push(relic);\n      }\n    }\n  },\n  {\n    name:\"压缩糖砖\", \n    // desc:\"胜利所需分数-4(最低为10)\",\n    desc:\"回合开始时，获得2分\",\n    onTurnBegin(G, ctx) {\n      // if (G.round_num == 1) {\n        // G.goal -= 4;\n        // G.goal = Math.max(G.goal, 10);\n      // }\n      G.score += 2;\n    }\n  },\n  {\n    name:\"香草沙士汽水\", \n    desc:\"每局首次使用干员时不会横置(可叠加)\",\n    onBattleBegin(G, ctx, self) {\n      self.used = false;\n    },\n    onTurnBegin(G, ctx, self) {\n      G.onUseCard.push(\n        (G, ctx, card) => {\n          console.log(G.relics.map(x=>({...x})));\n          let gas = G.relics.find(x => x.name == \"香草沙士汽水\" && (!x.used));\n          console.log({...gas});\n          if (gas && ~G.field.indexOf(card) && card.exhausted) {\n            card.exhausted = false;\n            gas.used = true;\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"倒转的怀表\", \n    desc:\"回合开始时，每有1点动乱就获得2分\",\n    onTurnBegin(G, ctx) {\n      G.score += 2 * G.danger;\n    }\n  },\n  // {\n  //   name:\"断杖-织法者\", \n  //   desc:\"回合开始时,敌人数量每多我方1个,就获得1个钢\",\n  //   onTurnBegin(G, ctx) {\n  //     let diff = G.efield.length - G.field.length;\n  //     if (diff > 0) {\n  //       G.materials[3] += diff;\n  //     }\n  //   }\n  // },\n  // {\n  //   name:\"米格鲁的饼干\", \n  //   desc:\"所有阻挡数至少为2的,阻挡数+2\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       if (x.block >= 2) {\n  //         x.block += 2;\n  //       }\n  //     });\n  //   }\n  // },\n  // {\n  //   name:\"断杖-咏唱\", \n  //   desc:\"所有采掘力至少为3的,<+2>\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       if (x.mine >= 3) {\n  //         x.mine += 2;\n  //       }\n  //     });\n  //   }\n  // },\n  {\n    name:\"铁卫-推进\", \n    desc:\" 阻挡数多于2的,阻挡数-1,但是+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.block >= 2) {\n          x.block -= 1;\n          x.atk += 4;\n          x.hp += 4;\n        }\n      });\n    }\n  },\n  // {\n  //   name:\"辉煌工匠包\", \n  //   desc:\" 所有干员 +3攻 <-1>\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       x.atk += 3;\n  //       x.mine = Math.max(x.mine - 1, 0);\n  //     });\n  //   }\n  // },\n  {\n    name:\"左半边椰子壳\", \n    desc:\" 所有干员+1费,+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost += 1;\n        x.atk += 4;\n        x.hp += 4;\n      });\n    }\n  },\n  {\n    name:\"右半边椰子壳\", \n    desc:\" 所有干员-1费,胜利所需分数+10\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost -= 1;\n      });\n      G.goal += 10;\n    }\n  },\n  {\n    name:\"摩根队长佳酿\", \n    desc:\"起始获得3个钢\",\n    onBattleBegin(G, ctx) {\n      G.materials[3] += 3;\n    }\n  },\n  // {\n  //   name:\"无线通讯器\",\n  //   desc:\"使用干员行动时，获得1分\",\n  //   onTurnBegin(G, ctx) {\n  //     G.onCardAct.push(\n  //       (G, ctx) => {\n  //         G.score += 1;\n  //       }\n  //     );\n  //   }\n  // },\n  // {\n  //   name:\"“坏家伙”来了！\", \n  //   desc:\"起始获得2个随机的强化3干员加入手牌\",\n  //   onBattleBegin(G, ctx) { \n  //     let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n  //     for (let i=0; i<2; i++) {\n  //       let card = {...choice(ctx, G.CARDS)};\n  //       reinforce.effect(card);\n  //       reinforce.effect(card);\n  //       reinforce.effect(card);\n  //       card.upgraded = true;\n  //       G.hand.unshift(card);\n  //     }\n  //   }\n  // },\n  {\n    name:\"残弩-采矿镭射枪\", \n    desc:\"所有干员获得 采掘:造成2点伤害\",\n    onTurnBegin(G, ctx) {\n      G.onCardMine.push(\n        (G, ctx) => {\n          deal_random_damage(G, ctx, 2);\n        }\n      );\n    }\n  },\n  {\n    name:\"断杖-突破\", \n    desc:\"所有干员获得 超杀:获得2个材料\",\n    onTurnBegin(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, card, enemy) => {\n          if (enemy.dmg > enemy.hp) {\n            gainMaterials(G, ctx, 2);\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"丰蹄能量饮料\", \n    desc:\"部署有\\\"行动:\\\"能力的干员时，有75%概率强化其1次\",\n    onTurnBegin(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx, card) => {\n          if (ctx.random.D4() > 1 && card.action) {\n            reinforce_card(G, ctx, card);\n          }\n        }\n      );\n    }\n  },\n  // {\n  //   name:\"锈刃-无人之境\", \n  //   desc:\"所有干员获得 部署:获得1分\",\n  //   onTurnBegin(G, ctx) {\n  //     G.onPlayCard.push(\n  //       (G, ctx) => {\n  //         G.score += 1;\n  //       }\n  //     );\n  //   }\n  // },\n  {\n    name:\"商队盒饭\",\n    desc:\"所有订单分数+1\",\n    onTurnBegin(G, ctx) {\n      for (let order of G.orders) {\n        order.score += 1;\n      }\n    }\n  },\n  {\n    name:\"热水壶\", \n    desc:\"使用: 变成手里一个藏品的复制\",\n    onUse(S) {\n      let relic = S.rng.choice(S.relics.filter(r => !r.used));\n      if (relic) {\n        S.relics.push({...relic});\n        alert(`变成 ${relic.name}`);\n      }\n    }\n  },\n  {\n    name:\"全息粉粉沙盒\", \n    desc:\"使用: 变成2个随机藏品\",\n    onUse(S) {\n      // let self = S.relics[0];\n      // S.relics = S.relics.slice(1);\n      for (let i=0; i<2; i++) {\n        let relic = S.rng.choice(S.RELICS);\n        S.relics.unshift({...relic});      \n      }\n      alert(`获得 ${S.relics[0].name} ${S.relics[1].name}`);\n    }\n  },\n].map(init_relic);\n\nexport function init_relic(relic) {\n  return {\n    ...relic,\n    illust: get_relic_img(relic),\n  };\n}\n\nexport function get_relic_img(relic) {\n  return relic_images[relic_names.indexOf(relic.name)];\n}","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick, generate_roguelike_deck, get_challenge_name, deck2str } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\nimport { final_tag, TAGS } from './tags';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Card.css';\nimport './Roguelike.css';\nimport './Competition.css';\nimport { ICONS } from './icons';\nimport { CARDS, heijiao_in_dream } from './cards';\nimport { UPGRADES } from './upgrades';\nimport { RELICS } from './relics';\nimport { lose_image, result_images } from './assets';\nimport { CardRow } from './Card';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到Roguelike模式“黑角的金针菇迷境”！\\n通关要求：完成9局对战；\\n每一局对战，都有要求的危机等级，成功完成该局对战，即可获得30赏金和1次升级，并进入下一局对战；\\n如果其中一次对局失败，则本次Roguelike旅程即宣告失败，胜败乃兵家常事，博士请重头再来；\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！每高1级，就会额外获得5赏金(最高40赏金)；\\n每高4级，在高8级之前，会奖励1次升级，在高8级之后，会奖励1个藏品；\\n如果比要求等级高4级，则会达成“满贯”，额外获得30赏金和1个藏品，并跳过1局对战；\\n如果比要求等级高8级，则会达成“大满贯”，额外获得60赏金和3个藏品！并跳过2局对战；`);\n}\n\nfunction weekly_introduction() {\n  alert(`欢迎来到周常挑战模式！\\n在这个模式中，你将在固定的牌组和牌序中，探索一套牌组的上限；\\n根据表现，你将会得到以下评级：\\n* 24级: S\\n* 32级: SS\\n* 40级: SSS`);\n}\n\nfunction reset_tags() {\n  return TAGS.map(x => ({...x}));\n}\n\nfunction setup_roguelike_mode(S) {\n  console.log(\"Roguelike mode reset\");\n  S.roguelike_mode = true;\n\n  S.rng = new PRNG(S.seed || Date());\n\n  init_tags_S2(S);\n  S.RELICS = RELICS.map(x => ({...x}));\n\n  S.Deck = [];\n  S.relics = [];\n  S.gold = 50;\n\n  S.scene_queue = [\"upgrade\", ..._.times(12, ()=>\"init_card\"), \"relic\"];\n  S.current_upgrades = [];\n  S.current_indexes = [];\n  S.current_relics = [];\n\n  S.game_count = 1;\n  S.level_required = 0;\n\n  S.central_idx = 0;\n\n  S.dream_count = 0;\n\n  // reset_card_picks(S);\n  reset_shop(S);\n}\n\nfunction select_deck(S, deck) {\n  S.Deck = deck;\n  reset_shop(S);\n}\n\nfunction end_roguelike_mode(S) {\n  S.roguelike_mode = false;\n  S.tags = reset_tags();\n  CARDS.map(preprocess_roguelike_card); // To prevent onPlayBonus pointer bug\n}\n\nfunction move_on(S) {\n  S.game_count += 1;\n  S.tags.splice(S.tags.length-1, 0, ...S.remained_tags.slice(0,2));\n  S.remained_tags = S.remained_tags.slice(2);\n\n  // S.scene_queue.unshift(\"pick\");\n  // S.scene_queue.unshift(\"upgrade\");\n\n  // if (S.difficulty == \"hard\") {\n  //   S.rng.choice(S.tags.filter(t => t.stackable && (!t.locked))).locked = true;\n  // }\n\n  if (S.difficulty == \"hard\" && S.game_count == 9) {\n    S.tags = [...S.tags, ..._.times(9, () => ({...final_tag}))];\n    for (let tag of S.tags) {\n      if (tag.level == 5) {\n        tag.locked = true;\n      }\n    }\n  }\n}\n\nfunction init_tags_S2(S) {\n  let tags = reset_tags();\n  let basic_tags = tags.slice(0, 15);\n  let repeat_tags = tags.filter(t => t.stackable).flatMap(t => _.times(3, ()=>({...t})));\n  let remained_tags = S.rng.shuffle(tags.filter(t => (!basic_tags.includes(t)) && t.level > 0));\n  let init_added_tags = remained_tags.filter(t => (t.standard_level <= 3));\n  init_added_tags.map(t => {if (t.standard_level <= 2) t.locked = true;});\n  S.tags = [...basic_tags, ...repeat_tags, ...init_added_tags].map(t => ({...t}));\n  S.remained_tags = remained_tags.filter(t => !init_added_tags.includes(t));\n}\n\nfunction init_tags(S) {\n  let tags = reset_tags();\n  let final_tag = tags[tags.length - 1];\n  // let init_tags = [...tags.slice(0,6), ...tags.filter((x,idx) => [6,7,9,10,12,13].includes(idx)), final_tag];\n  let init_tags = [...tags.slice(0,15), final_tag];\n  let remained_tags = S.rng.shuffle(tags.filter(t => (!init_tags.includes(t)) && t.level > 0));\n  S.tags = [...init_tags.slice(0,init_tags.length-1), ...remained_tags.slice(0,2), final_tag];\n  S.remained_tags = remained_tags.slice(2);\n}\n\nfunction reduce_basic_tags(tags, rng) {\n  // return tags.filter((x,idx) => !rng.choice([[6,7,8],[9,10,11],[12,13,14]]).includes(idx));\n  return [...tags.slice(0,6), ...rng.shuffle(tags.slice(6)).slice(0,6).sort((t1,t2) => tags.indexOf(t1)-tags.indexOf(t2))];\n}\n\nexport function choose_standard_tags(tags, current_standard_level) {\n    let new_tags = tags.map(t => ({...t}));\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [1,2,4,6,9,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 3) && [13].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 4) && [7,8].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 5) && [5,10,11,14].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      // if ((current_standard_level >= 6) && [7,8].includes(new_tags.indexOf(tag))) {\n        // tag.selected = true;\n      // }\n    }\n\n    // if (this.state.competition_mode) {\n    //   for (let tag of new_tags) {\n    //     if (tag.selected) {\n    //       tag.locked = true;\n    //     }\n    //   }\n    // }\n\n    return new_tags;\n}\n\nfunction setup_normal_challenge(tags, rng) {\n  for (let t of tags) {\n    if (t.standard_level <= 2 || [0,1,2,3,4,6,9,12].includes(tags.indexOf(t))) {\n      t.locked = true;\n    }\n  }\n  let challenge_tag = rng.choice(tags.filter(x => x.challenge));\n  challenge_tag.locked = true;\n  let locked_tags = tags.filter(x => x.locked && [2,3].includes(x.level));\n  let other_tags = tags.filter(x => !x.locked && [2,3].includes(x.level));\n  other_tags = rng.shuffle(other_tags).slice(0,3);\n  return [...tags.slice(0,12), ...locked_tags, ...other_tags];\n}\n\nfunction setup_exhausted_challenge(tags, rng) {\n  tags[0].locked = true;\n  tags[1].locked = true;\n  let final_tag = tags[tags.length-1];\n  final_tag.locked = true;\n  let basic_tags = tags.filter(x => x.level == 1);\n  let another_challenge_tag = rng.choice(tags.filter(x => x.level == 3));\n  another_challenge_tag.locked = true;\n  let advanced_tags = rng.shuffle(tags.filter(x => [2,3].includes(x.level) && x != another_challenge_tag)).slice(0,5);\n  return [...basic_tags, another_challenge_tag, ...advanced_tags, final_tag];\n}\n\nfunction setup_daily_tags(S) {\n  let rng = new PRNG(S.date);\n  let tags = reset_tags();\n\n  if (rng.random() <= 0.6) {\n    S.tags = setup_normal_challenge(tags, rng);\n    S.level_required = 24;\n  }\n  else {\n    S.tags = setup_exhausted_challenge(tags, rng);\n    S.level_required = 18;\n  }\n}\n\nfunction setup_weekly_tags(S) {\n  let tags = reset_tags();\n  // for (let t of tags) {\n  //   if (t.standard_level <= 2 || [0,3,4,6,9].includes(tags.indexOf(t))) {\n  //     t.locked = true;\n  //   }\n  // }\n  S.tags = choose_standard_tags(tags, 2);\n  S.tags.map(t => {if (t.selected) t.locked = true;});\n}\n\nfunction enter_daily_mode(S) {\n  S.daily_mode = true;\n  S.date = Date().slice(0,15);\n  // S.date = Math.random();\n  setup_daily_tags(S);\n}\n\nfunction end_daily_mode(S) {\n  S.daily_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction generate_weekly_challenges(S) {\n  let rng = new PRNG(S.week);\n  let challenges = [];\n  for (let i=0; i<1; i++) {\n    challenges.push(get_challenge_name(rng));\n  }\n  S.challenges = challenges;\n}\n\nfunction setup_weekly_challenge(S, idx) {\n  S.deck_mode = \"random\";\n  S.deck_name = S.challenges[idx].desc;\n  S.seed = S.challenges[idx].desc;\n  S.weekly_challenge_idx = idx + 1;\n  S.changer(\"tag\");\n}\n\nfunction enter_weekly_mode(S) {\n  S.weekly_mode = true;\n  let d = new Date();\n  S.week = d.getFullYear() * 10000 + (d.getMonth()+1) * 100 + d.getDate() - d.getDay();\n  generate_weekly_challenges(S);\n  setup_weekly_tags(S);\n  S.changer(\"weekly\");\n}\n\nfunction end_weekly_mode(S) {\n  S.weekly_mode = false;\n  S.tags = reset_tags();\n  S.changer(\"tag\");\n}\n\nfunction set_difficulty(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [12, 14, 16, 18, 22, 26, 30, 34, 45];\n\n  if (difficulty == \"easy\") {\n    S.levels = [8, 10, 12, 14, 18, 22, 26, 30, 40];\n  }\n\n  if (difficulty == \"hard\") {\n    S.levels = [15, 18, 21, 24, 30, 36, 42, 48, 60];\n  }\n\n  if ([\"medium\", \"hard\"].includes(difficulty)) {\n    S.tags[S.tags.length-1].locked = true;\n  }\n\n  if ([\"hard\"].includes(difficulty)) {\n    S.tags[0].locked = true;\n    S.tags[1].locked = true;\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction set_difficulty_S2(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [8, 12, 16, 20, 25, 30, 35, 40, 50];\n\n  if (difficulty == \"medium\") {\n    S.levels = [18, 22, 26, 30, 36, 42, 48, 55, 70];\n    S.tags = choose_standard_tags(S.tags, 2);\n  }\n\n  if (difficulty == \"hard\") {\n    // S.levels = [25, 30, 35, 40, 50, 60, 70, 80, 100];\n    // S.levels = [22, 27, 32, 38, 45, 52, 60, 70, 90];\n    S.levels = [24, 28, 32, 36, 40, 50, 60, 70, 90];\n    S.tags = choose_standard_tags(S.tags, 3);\n  }\n\n  // if ([\"medium\", \"hard\"].includes(difficulty)) {\n  //   for(let tag_idx of [0,3,4,6,9]) {\n  //     S.tags[tag_idx].locked = true;\n  //   }\n  // }\n\n  // if (difficulty == \"hard\") {\n  //   S.tags[12].locked = true; // EH: This is redundant, get \"set standard tags\" out\n  //   for (let t of S.tags) {\n  //     if (t.standard_level == 3) {\n  //       t.locked = true;\n  //     }\n  //   }\n  // }\n\n  // if (difficulty == \"easy\") {\n  //   for (let tag of S.tags) {\n  //     tag.locked = false;\n  //   }\n  // }\n\n  // S.tags.map(t => {if (t.selected) t.locked = true;});\n  for (let t of S.tags) {\n    if (t.selected) {\n      t.locked = true;\n    }\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction preprocess_roguelike_card(card) {\n  card.onPlayBonus = [];\n}\n\n// function setup_deck_selection(S) {\n//   let rng = S.rng;\n//   S.deck_names = _.times(3, ()=>rng.choice(CARDS.map(x=>x.name).filter(x => x != \"可露希尔\"))).map(x => x + \"·黑角\");\n//   S.deck_list = S.deck_names.map(generate_roguelike_deck).map(str2deck); // TODO: change the generator\n//   S.deck_list.map(deck => deck.map(preprocess_roguelike_card))\n// }\n\nfunction setup_deck_selection(S) {\n  S.Deck = str2deck(deck2str([\"黑角\", \"极境\", \"桃金娘\"]));\n  S.Deck.map(preprocess_roguelike_card);\n}\n\nfunction get_pick(S) {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card)).filter(card => card != undefined).map(card => ({...card, material:S.rng.randRange(3)})); // EH: Let material not be local solution, but global solution\n}\n\nfunction reset_card_picks(S) {\n  S.card_picks = _.times(3, ()=>get_pick(S));\n}\n\nfunction get_shop_item(S) {\n  // let rng = new PRNG(Math.random());\n  // let rng = S.rng;\n\n  let item_type = S.rng.randRange(100);\n  // console.log(item_type, \"item type\");\n\n  if (item_type <= 60) {\n    // TODO: change this to relic\n    return get_relic(S);\n  }\n  else if (item_type <= 85) {\n    // TODO: change this to upgrade\n    return get_upgrade(S);\n  }\n  else if (item_type <= 95) {\n    return get_card_pick(S);\n  }\n  else{\n    return delete_card(S);\n  }\n\n}\n\nfunction click_that_button(S) {\n  if (S.rng.randRange(100) <= 70 && S.gold >= 0) {\n    let value = S.rng.randRange(100);\n\n    if (value <= 20) {\n      alert(`喵喵喵~‍(=・ω・=)\\n(获得5赏金)`);\n      S.gold += 5;\n    }\n    else if (value <= 30) {\n      alert(`讨厌，不要点人家啦‍‍(╯°口°)╯(┴—┴\\n(失去50赏金)`)\n      S.gold -= 50;\n    }\n    else if (value == 40 || value == 41) {\n      alert(`这么喜欢点人家，给你点赏金好啦‍_(:з」∠)_\\n(获得50赏金)`);\n      S.gold += 50;\n    }\n    else if (value == 50 || value == 51 || value == 52) {\n      let relic = S.rng.choice(RELICS);\n      S.relics.unshift({...relic});\n      alert(`这么喜欢点人家，送你个小礼物好啦~(｀・ω・´)\\n(获得${relic.name})`);\n    }\n    else if (value == 60) {\n      alert(`‍其实，我超喜欢你的ε=ε=(ノ≧∇≦)ノ\\n(获得100赏金)`);\n      S.gold += 100;\n\n    }\n    else {\n      return;\n    }\n  }\n  else {\n    if (S.gold <= 0) {\n      alert(\"需要赏金为正时，按钮才会和你玩哦‍(=・ω・=)\");\n    }\n    else {\n      return;\n    }\n  }\n}\n\nfunction get_upgrade(S) {\n  let shop_item = {};\n\n  // Get upgrade\n  let upgrade = S.rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = S.rng.randRange(10) + 15;\n  // console.log(\"This deck\", S.Deck);\n  shop_item.indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"获得 \" + upgrade.desc;\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/up-arrow_2b06.png\";\n  shop_item.onBought = (S, idx) => {\n    let card = S.Deck[idx];\n    // console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n    if (card != undefined) {\n      upgrade.effect(card);\n      card.upgraded = true;\n      return true;\n    }\n    else {\n      return false;\n    }\n  };\n\n  return shop_item;\n}\n\nexport function get_card_pick(S) {\n  return {\n    name: \"自选干员\",\n    price: 0,\n    indexes: S.rng.shuffle(CARDS.slice(0, -1).map((x,idx)=>idx)).slice(0,6),\n    desc: \"从6个干员中，选择你最心仪的那一个\",\n    src: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/ok-hand_1f44c.png\",\n    is_pick: true,\n    onBought(S, idx) {\n      let card = CARDS[idx];\n      if (card) {\n        S.Deck.unshift({...card, material: S.rng.randRange(3)});\n        for (let r of S.relics) {\n          r.onPickCard && r.onPickCard(S, card);\n        }\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n  };\n}\n\nexport function get_init_card_pick(S) {\n  return {\n    name: \"初始自选干员\",\n    price: 0,\n    indexes: S.rng.shuffle(CARDS.slice(0, -1).map((x,idx)=>idx)).slice(0,3),\n    desc: \"从3个干员中，选择你最心仪的那一个\",\n    src: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/ok-hand_1f44c.png\",\n    is_pick: true,\n  };\n}\n\nfunction get_indexes_from_cost(cost) {\n  if (cost == 16) {\n    return CARDS.slice(0, CARDS.length-1).map((x,idx)=>(x.cost <= 1 || x.cost >= 6)?idx:undefined).filter(x => x != undefined);\n  }\n  else {\n    return CARDS.slice(0, CARDS.length-1).map((x,idx)=>(x.cost==cost)?idx:undefined).filter(x => x != undefined);\n  }\n}\n\nexport function get_specific_card_pick(S, cost) {\n  return {\n    name: `${cost}费自选干员`,\n    price: 0,\n    indexes: get_indexes_from_cost(cost),\n    desc: \"从N个干员中，选择你最心仪的那一个\",\n    src: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/ok-hand_1f44c.png\",\n    is_pick: true,\n    onBought(S, idx) {\n      let card = CARDS[idx];\n      if (card) {\n        S.Deck.unshift({...card, material: S.rng.randRange(3)});\n        for (let r of S.relics) {\n          r.onPickCard && r.onPickCard(S, card);\n        }\n      }\n      return true;\n    }\n  };\n}\n\n// function get_reinforceupgrade(S, rng) {\n//   let shop_item = {};\n\n//   // Get upgrade\n//   let upgrade = rng.choice(UPGRADES);\n//   shop_item.name = \"升级: \" + upgrade.name;\n//   shop_item.price = rng.randRange(20) + 20;\n//   console.log(\"This deck\", S.Deck);\n//   shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n//   shop_item.desc = \"获得 \" + upgrade.desc;\n//   shop_item.onBought = (S, idx) => {\n//     let card = S.Deck[idx];\n//     console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n//     if (card) {\n//       upgrade.effect(card);\n//     }\n//     card.upgraded = true;\n//   };\n\n//   return shop_item;\n// }\n\nfunction get_reinforced_card(S, rng) {\n  let shop_item = {};\n\n  // Get card\n  let card = {\n    ...rng.choice(CARDS),\n    material: rng.randRange(3),\n    upgraded: true,\n    onPlayBonus: [], // EH: this should be abstracted instead of write here again\n  };\n  let reinforce_time = rng.randRange(2) + 1;\n\n  shop_item.name = card.name + \"(强化\" + reinforce_time + \")\";\n  shop_item.price = rng.randRange(20) + 20 + (30+rng.randRange(20)) * (reinforce_time - 1);\n  shop_item.desc = card.desc;\n\n  let reinforce_once = UPGRADES.find(x => x.name == \"强化1\");\n  for (let i=0; i<reinforce_time; i++) {\n    reinforce_once.effect(card);\n  }\n\n  shop_item.onBought = (S) => {\n    S.Deck.unshift(card);\n    return true;\n  };\n\n  return shop_item;\n}\n\nexport function get_relic(S) {\n  let shop_item = {};\n  let relic = S.rng.choice(RELICS);\n\n  shop_item.name = relic.name;\n  shop_item.desc = relic.desc;\n  shop_item.price = 30 + S.rng.randRange(20);\n  shop_item.src = relic.illust;\n  shop_item.is_relic = true;\n\n  shop_item.onBought = (S) => {\n    let bought = {...relic};\n    console.log(\"Bought relic \", bought.name);\n\n    for (let r of [...S.relics]) {\n      r.onBuyRelic && r.onBuyRelic(S, bought, r);\n    }\n\n    S.relics.unshift(bought);\n    if (bought.onBought) {\n      bought.onBought(S);\n    }\n    return true;\n  }\n\n  return shop_item;\n}\n\nexport function delete_card(S) {\n  let shop_item = {};\n\n  shop_item.name = \"删1张牌\";\n  shop_item.price = 0;\n  shop_item.indexes = S.Deck.map((x,idx)=>idx);\n  shop_item.desc = \"\";\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/foot_dark-skin-tone_1f9b6-1f3ff_1f3ff.png\";\n  shop_item.onBought = (S, card_idx) => {\n    S.Deck = S.Deck.filter((x,idx) => (idx != card_idx));\n    return true;\n  }\n\n  return shop_item;\n}\n\n\nfunction payGold(S, amount) {\n  if (S.gold >= amount) {\n    S.gold -= amount;\n    return true;\n  }\n  else {\n    alert(\"剩余赏金不够\");\n    return false;\n  }\n}\n\nfunction buy(S, idx) {\n  let item = S.current_item;\n  let item_idx = S.current_item_idx;\n  if (payGold(S, item.price)) {\n    S.shop_items = S.shop_items.filter((x,idx) => idx != item_idx);\n    if (idx != undefined) {\n      console.log(\"The indexes are:\", S.current_item.indexes.map(x=>x));\n      console.log(\"The selected index is:\", idx);\n      console.log(\"The chosen index is:\", S.current_item.indexes[idx]);\n      let card_idx = S.current_item.indexes[idx];\n      item.onBought(S, card_idx);\n    }\n    else {\n      item.onBought(S);\n    }\n  }\n}\n\nfunction select_init_card(S, idx) {\n  let card = CARDS[S.current_item.indexes[idx]];\n  if (card) {\n    S.Deck.unshift({...card, material: S.rng.randRange(3)});\n    reset_shop(S);\n    proceed(S);\n  }\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(8, ()=>get_shop_item(S));\n\n  for (let r of S.relics) {\n    r.onRefreshShop && r.onRefreshShop(S);\n  }\n}\n\nfunction refresh_shop(S) {\n  if (payGold(S, 5)) {\n    reset_shop(S);\n  }\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.card_picks[idx], ...S.Deck];\n  S.card_picks = undefined;\n\n  for (let r of S.relics) {\n    r.onPickCards && r.onPickCards(S);\n  }\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n\n  for (let r of S.relics) {\n    r.onSkipPick && r.onSkipPick(S);\n  }\n}\n\nfunction enter_dream(S) {\n  S.dream_count += 1;\n  if (S.dream_count == 9) {\n    alert(\"已进入黑角梦境\");\n    S.Deck = _.times(10, () => heijiao_in_dream);\n    S.relics = [...S.RELICS];\n  }\n  S.gold = 5000;\n}\n\nexport function get_gold_gained(risk_level, level_required) {\n   let gold_gained = 30;\n\n    let level_diff = risk_level - level_required;\n    gold_gained += Math.min(level_diff * 5, 40);\n\n    // For slam, don't store them in variables, instead, calculate it on time\n    // So do plenty of other things\n    if (level_diff >= 4) {\n      gold_gained += 30;\n    }\n    if (level_diff >= 8) {\n      gold_gained += 30;\n    }\n\n    let slam_bonus = Math.floor((level_diff - 8) / 4) * 40;\n    if (slam_bonus > 0) {\n      gold_gained += slam_bonus;\n    }\n\n    return gold_gained;\n\n}\n\nfunction continue_run(S) {\n  // Resets go here\n  S.central_idx = 1;\n  // reset_shop(S);\n  reset_card_picks(S);\n\n  if (S.won) {\n    S.gold += get_gold_gained(S.level_achieved, S.level_required);\n  }\n\n  for (let r of [...S.relics]) {\n    r.onBattleEnd && r.onBattleEnd(S, r);\n  }\n\n  // S.scene_queue.unshift(\"pick\");\n  S.scene_queue.unshift(\"upgrade\");\n\n  // TODO: Reconstruct this part, into moveOn()\n  // S.game_count += 1;\n  move_on(S);\n\n  if ((S.level_achieved - S.level_required) >= 4) {\n    // S.game_count += 1;\n    move_on(S);\n    S.scene_queue.unshift(\"relic\");\n  }\n  if ((S.level_achieved - S.level_required) >= 8) {\n    // S.game_count += 1;\n    move_on(S);\n    S.scene_queue.unshift(\"relic\");\n    S.scene_queue.unshift(\"relic\");\n  }\n\n  let num_bonus = Math.floor((S.level_achieved - S.level_required) / 4);\n  let num_extra_relics = Math.max(num_bonus-2, 0);\n  let num_upgrades = Math.min(num_bonus, 2);\n  S.scene_queue = [\n    // ..._.times(num_extra_relics, ()=>\"relic\"), \n    ..._.times(num_upgrades, ()=>\"upgrade\"), \n    ...S.scene_queue\n  ];\n  // console.log(S.scene_queue);\n\n  S.game_count = Math.min(S.game_count, 9);\n  S.level_required = S.levels[S.game_count - 1];\n\n}\n\nfunction proceed(S) {\n  if (S.scene_queue.length == 0) {\n    S.changer(\"roguelike\");\n  }\n  else {\n    let scene = S.scene_queue.pop();\n    if (scene == \"upgrade\") {\n      S.current_upgrades = S.rng.shuffle(UPGRADES).slice(0,3);\n      S.current_indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n      S.changer(\"roguelike_deck_upgrade\");\n    }\n    else if (scene == \"pick\") {\n      S.current_item = get_card_pick(S);\n      S.changer(\"roguelike_shop\");\n    }\n    else if (scene == \"init_card\") {\n      S.current_item = get_init_card_pick(S);\n      S.changer(\"roguelike_shop\");\n    }\n    else if (scene == \"relic\") {\n      S.current_relics = S.rng.shuffle(RELICS).slice(0,3);\n      S.changer(\"roguelike_relic_selection\");\n    }\n  }\n}\n\nfunction upgrade_card(S) {\n  let upgrade = S.current_upgrades[S.upgrade_selected];\n  let card = S.Deck[S.current_indexes[S.selection_selected]];\n  if (upgrade != undefined && card != undefined) {\n    upgrade.effect(card);\n    card.upgraded = true;\n    proceed(S);\n  }\n}\n\nfunction pick_relic(S, idx) {\n  let relic = S.current_relics[idx];\n  if (relic) {\n    S.relics.unshift({...relic});\n    proceed(S);\n  }\n}\n\nfunction use_relic(S, idx) {\n  let relic = S.relics[idx];\n  if (relic && relic.onUse && (!relic.used)) {\n    relic.onUse(S);\n    relic.used = true;\n  }\n}\n\nexport function random_upgrade(S) {\n  let card = S.rng.choice(S.Deck);\n  let upgrade = S.rng.choice(UPGRADES);\n  upgrade.effect(card);\n  card.upgraded = true;\n  return `${card.name} is upgraded with ${upgrade.name}`;\n}\n\n\nexport function RoguelikeDeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"roguelike-deck-selection-title\">选择你的卡组</div>\n    <div className=\"roguelike-deck-selection\">\n      {props.decks.map(deck => <RoguelikeDeckRepr {...deck} />)}\n    </div>\n    </div>\n}\n\nfunction RoguelikeDeckRepr(props) {\n  return <div className=\"roguelike-deck-repr\" align=\"center\">\n    <div className=\"roguelike-deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <CardRow cards={str2deck(generate_roguelike_deck(props.deckName)).map(({cost, atk, hp, illust, was_enemy}) => ({[was_enemy?\"e_illust\":\"illust\"]: illust, cost, atk, hp}))} additionalStyle={{height: \"55%\", marginTop: \"1%\"}} />\n    <button className=\"roguelike-deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"roguelike-deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper desc\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.click_that_button}><span>卖萌按钮QwQ</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得{ICONS.gold}10</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\">\n    <div className=\"shop-item-img-container\"><img src={props.src} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <span className=\"shop-item-price\">{ICONS.gold}{props.price}</span>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    <button className=\"buy\" onClick={props.buy}>购买</button>\n  </div>\n}\n\nfunction Relic(props) {\n  return <div className=\"shop-item\">\n    <div className=\"shop-item-img-container\"><img src={props.illust} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    {(props.operation)?<button className=\"buy\" onClick={props.operation.effect}>{props.operation.name}</button>:\"\"}\n  </div>\n}\n\nexport function Relics(props) {\n  return <div className=\"board\" align=\"center\">\n    <div style={{marginTop:\"20%\", fontSize:\"110%\"}}>{(props.checking)?\"现有藏品\":\"选择一个藏品\"}</div>\n    <div className=\"relics\">\n      {props.relics.map((relic)=><Relic {...relic} />)}\n    </div>\n    <button className=\"continue-btn\" style={{marginTop: \"2%\"}} onClick={props.proceed} >{(props.checking)?\"返回\":\"跳过\"}</button>\n  </div>;\n}\n\nexport function Weekly(props) {\n  return <div className=\"board\" align=\"center\">\n    <div style={{marginTop:\"20%\", fontSize:\"110%\"}} onClick={props.click_title} >本周是{props.week}</div>\n    <div className=\"relics\">\n      {props.challenges.map((challenge)=><Relic {...challenge} />)}\n    </div>\n    <button className=\"weekly-btn\" style={{marginTop: \"2%\"}} onClick={props.back} >返回</button>\n    <button className=\"weekly-btn\" style={{marginTop: \"2%\"}} onClick={weekly_introduction} >周常模式介绍</button>\n  </div>;\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"shop-items\">    \n      {props.shop_items.map((item, idx) => <ShopItem {...item} buy={props.buy(idx)} />)}\n    </div>\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店({ICONS.gold}5)</button>\n  </div>\n\n}\n\nexport function Roguelike(props) {\n  return <div className=\"central\">\n    <div className=\"heijiao-container-2\">\n      <img src=\"https://i.postimg.cc/9QfnGMW5/img-cards-9.png\" className=\"heijiao-img-2\" />\n    </div>\n    <div className=\"counter-container\" align=\"center\">\n      <div className=\"battle-count-title\" >第<span className=\"battle-count\">{props.game_count || 1}</span>/<span onClick={props.enter_dream}>9</span>战</div>\n    </div>\n    <div className=\"roguelike-operations\">\n      <button onClick={props.enter_battle} className=\"roguelike-operation primary\">进入对战</button>\n      <button onClick={props.check_deck} className=\"roguelike-operation\">查看卡组</button>\n      <button onClick={props.check_relics} className=\"roguelike-operation\">查看藏品</button>\n    </div>\n  </div>\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"finish-pick\">你已经完成了选择</div>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport function RoguelikeEntry(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"entry\">欢迎来到集成战略模式<br/>“黑角的金针菇迷境”<br/>请选择难度</div>\n    <div className=\"difficulty-selection\">\n      {props.difficulties.map(selection => <button className=\"difficulty-button\" onClick={selection.handleClick}>{selection.name}</button>)}\n    </div>\n    <button className=\"introduce-button\" onClick={props.back}>返回</button>\n    <button className=\"introduce-button\" onClick={introduce_roguelike_mode}>集成战略模式介绍</button>\n  </div>\n}\n\nexport function ShowMeTheMoney(props) {\n  return <div className=\"gold-gained\">\n    {ICONS.gold}+{props.amount}\n  </div>\n\n}\n\nexport function ResultWin(props) {\n  let slam = \"\";\n  if (props.slam) {\n    slam = \"满贯！\";\n  }\n  if (props.grand_slam) {\n    slam = \"大满贯！\";\n  }\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务完成<br/>\n      第{props.game_count}/9战<br/>\n      要求等级: {props.level_required}<br/>\n      实际等级: {props.level_achieved}<br/>\n    </div>\n    <ShowMeTheMoney \n      amount = {props.gold_amount}\n    />\n    <div className=\"slam\">{slam}</div>\n    <button className=\"continue-btn primary\" onClick={props.continue} >继续</button>\n  </div>\n\n}\n\nexport function ResultLose(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务失败<br/>\n      第{props.game_count}/9战<br/>\n    </div>\n    <div className=\"result-quote\">\n      胜败乃兵家常事<br/>\n      博士请重新来过\n    </div>\n    <div className=\"lose-img-container\">\n      <img src={lose_image} className=\"lose-img\"></img>\n    </div>\n    <button className=\"endrun-btn\" onClick={props.continue}>结束游戏</button>\n  </div>\n}\n\nexport function FinalResult(props) {\n  let [src, p_id] = props.rng.choice(result_images);\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      <div className=\"ascension\">通关！</div>\n      完成难度: {props.difficulty}\n    </div>\n    <div className=\"result-img-container\">\n      <img className=\"result-img\" src={src} />\n    </div>\n    <div className=\"result-win-quote\">面对天灾，<br/>我们甚至秀得飞起</div>\n    {/* TODO: Add show deck and show relics */}\n  <button className=\"endrun-btn\" onClick={props.continue}>{props.endgame}</button>\n  <div className=\"illust-info\">图片p站id: {p_id}</div>\n  </div>\n\n\n}\n\nexport const roguelike = {\n  setup_roguelike_mode,\n  set_difficulty,\n  set_difficulty_S2,\n  setup_deck_selection,\n  select_deck,\n  select_init_card,\n\n  pick_cards,\n  skip_pick,\n  enter_dream,\n  buy,\n  reset_shop,\n  refresh_shop,\n  click_that_button,\n\n  continue_run,\n  end_roguelike_mode,\n  proceed,\n  upgrade_card,\n  pick_relic,\n  use_relic,\n\n  enter_daily_mode,\n  end_daily_mode,\n  setup_weekly_challenge,\n  generate_weekly_challenges,\n  enter_weekly_mode,\n  end_weekly_mode,\n};","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h2>明日方舟: 采掘行动 游戏规则</h2>\n  <br/><br/>\n  <a href=\"https://www.bilibili.com/video/BV1554y167ax\n\">2分钟视频教学(B站)</a>\n  <br/><br/>\n  游戏目标: 获得12分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员部署到场上，并消耗其费用(写在左上角)；<br/><br/>\n  <b>* 使用干员战斗:</b> 点击干员，然后点击敌人，接着点击“战斗”，该干员就会对敌人造成[攻击力]点伤害，若摧毁了敌人可获得1分；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘力为3，博士因此获得了{material_icons[0]}{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n    <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单能力:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得9分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺序执行任意次；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  <b>看到这里，只要你理解了部署、战斗、采掘，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就获得1点费用；<br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  * 完成危机等级-50  <br/>\n  * 在“周常挑战”中达到SS评级 <br/>\n  * 通关“黑角的金针菇迷境”整装待发难度  <br/>\n  * 使用自组卡组\"20 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"20 嘉维尔\"完成危机等级18  <br/>\n  * 使用自组卡组\"20 热水壶\"完成危机等级18  <br/>\n  * 完成危机等级40  <br/>\n  <br/><br/>\n  <h4>FAQ:</h4>\n  <b>Q: 这游戏为什么这么屑？</b><br/>\n  A: 大雕出品，必属精品；<br/>\n  <b>Q: {\"<+1>\"}是什么+1?</b><br/>\n  A: 你有没有觉得{\"<>\"}很像一个镐子？<br/>\n  <b>Q: “重置状态”是什么意思？</b><br/>\n  A: 边是黑的，就是重置状态，边是红的，就是横置状态，干员一回合只能动一次，边从黑色变成红色，就是动过了；<br/>\n  <b>Q: “超杀”是什么意思？</b><br/>\n  A: “超杀”全称为“战斗: 摧毁目标并造成额外伤害时”，属于“战斗:”效果的一种，比如5点攻击力打2血的，溢出了3点伤害，就会触发“超杀”效果；<br/>\n  <b>Q: 场面和手牌的上限都是多少？</b><br/>\n  A: 场面上限和手牌上限都是7，召唤类效果无视场面上限，获得手牌类效果(比如摄影车、清流)无视手牌上限;<br/>\n  <b>Q: 哪些干员无法被重置？</b><br/>\n  A: 雷蛇，白面鸮，艾雅法拉，能天使，温蒂，霜叶；<br/>\n  <b>Q: 为什么阿米娅强化1次之后，点击行动，会变成近卫阿米娅？</b><br/>\n  A: 游戏里还有更多的彩蛋等着你来发现~<br/>\n  <b>Q: 替换是什么意思？</b><br/>\n  A: 出场时会换掉敌人阵列中最后一个非精英敌人，是个好效果；<br/>\n  <b>Q: 为什么敌方牌库被抽完也算输？</b><br/>\n  A: 只有分数达标才算赢，别的都算输；<br/>\n  <b>Q: </b><br/>\n  A: <br/>\n  <b>Q: </b><br/>\n  A: <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\n\nimport './Board.css';\nimport './DeckConstruction.css';\nimport './Multiplayer.css';\n\nfunction show_multiplayer_intro() {\n  alert(\"欢迎来到多维合作模式！\\n这是一个要求二人联机游玩的模式，\\n在该模式中，合作双方将共享分数、动乱、敌方场面和材料，\\n其他资源(如费用、手牌、场面、订单)等均不共享，\\n所以商议好解场的次序和材料的使用，是获胜的关键！\");\n}\n\nexport function Multiplayer(props) {\n  return <div className=\"board\" style={{textAlign: 'center'}}>\n    <img className=\"multiplayer-img\" src=\"https://img.nga.178.com/attachments/mon_202101/26/-klbw3Q16o-808bZ14T3cSbn-8d.gif\"></img>\n    <div className=\"multiplayer-intro\">欢迎来到多维合作模式！</div>\n    <button className=\"multiplayer-btn\" onClick={props.create_room}>创建房间</button><br/>\n    <button  className=\"multiplayer-btn\" onClick={props.enter_room}>加入房间</button><br/>\n    <button className=\"multiplayer-back-btn\" onClick={props.back}>返回</button>\n    <button className=\"multiplayer-intro-btn\" onClick={show_multiplayer_intro}>合作模式介绍</button>\n  </div>\n}\n\nexport function CreateRoom(props) {\n  return <div className=\"board\" style={{textAlign: 'center'}}>\n    <div className=\"create-room-intro\">请选择难度</div>\n    <button className=\"difficulty-btn\" onClick={props.enter_difficulty(4)}>普通</button><br/>\n    <button className=\"difficulty-btn\" onClick={props.enter_difficulty(5)}>高压</button><br/>\n    <button className=\"difficulty-btn\" onClick={props.enter_difficulty(6)}>危急</button><br/>\n    <button className=\"multiplayer-back-btn\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function EnterRoom(props) {\n  return <div className=\"board\" style={{textAlign: 'center'}}>\n    <div style={{marginTop: \"45%\"}}>\n    <form>\n        请输入房间号:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button onClick={props.enter_room} className=\"multiplayer-btn\" style={{marginTop:\"20%\", padding:\"5%\"}} > 进入房间 </button><br/>\n      <button onClick={props.back} className=\"multiplayer-back-btn\" > 返回 </button>\n  </div>\n  </div>\n}\n\nexport function get_room_id(difficulty) {\n  let date = new Date();\n  return \"\" + (date.getMinutes()+10) + (date.getSeconds()+10) + difficulty + _.random(9);\n}","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport socketIOClient from 'socket.io-client';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilterContainer } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks, get_desc, get_blocker } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck, default_filter, FILTERS } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop, RoguelikeEntry, RoguelikeDeckSelection, Roguelike, ResultWin, ResultLose, FinalResult, get_gold_gained, Relics, Weekly, choose_standard_tags } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\nimport { CreateRoom, EnterRoom, get_room_id, Multiplayer } from './Multiplayer';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\n// const SOCKET_SERVER = \"http://localhost:3050\";\n// const SOCKET_SERVER = \"http://47.96.2.148:3050\"\nconst SOCKET_SERVER = \"http://165.232.168.197:3050\"\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n    this.process_relic_details = this.process_relic_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_relic_board = this.render_relic_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_shop_board = this.render_roguelike_shop_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n    this.render_roguelike_final_result_board = this.render_roguelike_final_result_board.bind(this);\n    this.render_roguelike_entry_board = this.render_roguelike_entry_board.bind(this);\n    this.render_roguelike_deck_upgrade_board = this.render_roguelike_deck_upgrade_board.bind(this);\n    this.render_roguelike_relic_selection_board = this.render_roguelike_relic_selection_board.bind(this);\n    this.render_roguelike_relic_check_board = this.render_roguelike_relic_check_board.bind(this);\n    this.render_weekly_board = this.render_weekly_board.bind(this);\n\n    this.render_multiplayer_board = this.render_multiplayer_board.bind(this);\n    this.render_create_room_board = this.render_create_room_board.bind(this);\n    this.render_enter_room_board = this.render_enter_room_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n    this.end_roguelike_mode = this.end_roguelike_mode.bind(this);\n    this.buy_item = this.buy_item.bind(this);\n\n    this.enter_daily_mode = this.enter_daily_mode.bind(this);\n\n    this.create_room = this.create_room.bind(this);\n    this.join_room = this.join_room.bind(this);\n    this.enter_multiplayer_mode = this.enter_multiplayer_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.reset_preview_deck = this.reset_preview_deck.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.end_game = this.end_game.bind(this);\n    this.turn_end = this.turn_end.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(produce((S) => action(S, ...args))), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      shop_selected: -1,\n      hand_choices: [false, false, false, false, false],\n      preview_filter: default_filter,\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_roguelike_result_board,\n      // DEFAULT\n      last_board: this.render_title_board,\n      changer: this.change_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`2 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n      lock_seed: false,\n\n      room_id: \"\",\n\n      checking: {},\n\n      scenario_finished: false,\n\n      dream_count: 0,\n\n      week: 0,\n      challenges: [],\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags, just_selected: new_tags[idx]});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n\n  reset_preview_deck() {\n    this.setState({\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n    });\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n      // reinforce_material: material_icons[card.material],\n      // material: 0,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    // EH: Reconstruct this, this is too procedure\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n      // reinforce_material: material_icons[card.material],\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      vulnerable: card.vulnerable? (\"↓\" + card.vulnerable) : undefined,\n      //cost: card.cost,\n      blocked: get_blocker(this.props.G, this.props.ctx, card)? ICONS.block : undefined,\n    }; \n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_relic_details(relic) {\n    return {\n      eo_illust_detailed: relic.illust,\n      desc: relic.desc,\n    };\n  }\n\n  render_relic_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.relics.map(this.process_relic_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      // name: card.name,\n      desc: get_desc(card),\n      // desc: (\n      //   <span>\n      //     <span style={{fontSize:\"120%\"}}>\n      //       {card.atk}/{card.hp} &nbsp;\n      //       {ICONS.mine}{card.mine} &nbsp;\n      //       {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n      //     </span>\n      //     <br/>\n      //     {card.desc||\"\"}\n      //     <br/>\n      //     <span style={{\n      //       display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n      //     }}>\n      //       <i>\n      //       部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      //       </i>\n      //       <br/>\n      //     </span>\n      //     ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n      //     <br />\n      //     <i>{card.quote||\"\"}</i>\n      //   </span>\n      // ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      // if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n      //   this.play_card();\n      // }\n      // else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      // }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  //CHANGE\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"mode_selection\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"relic\": this.render_relic_board,\n      \"roguelike_relic_selection\": this.render_roguelike_relic_selection_board,\n      \"roguelike_relic_check\": this.render_roguelike_relic_check_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_entry\": this.render_roguelike_entry_board,\n      \"roguelike_shop\": this.render_roguelike_shop_board,\n      \"roguelike_deck_upgrade\": this.render_roguelike_deck_upgrade_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n      \"roguelike_final_result\": this.render_roguelike_final_result_board,\n      \"weekly\": this.render_weekly_board,\n      \"multiplayer\": this.render_multiplayer_board,\n      \"create_room\": this.render_create_room_board,\n      \"enter_room\": this.render_enter_room_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n\n    // Other onBoardSet functions go here\n    if (new_board == \"preview\") {\n      this.setState({preview_filter: default_filter});\n    }\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.multiplayer_mode) {\n      seed = this.state.room_id;\n    }\n\n    if (this.state.competition_mode || this.state.roguelike_mode) {\n      deck = this.state.Deck;\n      if (this.state.roguelike_mode) {\n        seed += this.state.game_count\n      } \n      // : this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    if (this.state.roguelike_mode) {\n      // Setup other roguelike stuffs here\n      this.props.moves.setupRoguelikeBattle(this.state.relics);\n    }\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  turn_end() {\n    if (this.state.multiplayer_mode) {\n      this.socket.emit(\"turn end\", {});\n    }\n    this.props.moves.rest();\n    this.props.moves.enemyInit();\n    this.enemy_move(-this.props.G.num_enemies_out);\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else if (this.state.roguelike_mode) {\n      // Let results stuffs go to winning \n      // Set finishing stuffs here\n\n      this.change_board(\"roguelike_result\");\n      // this.roguelike.end_battle();\n    }\n    else if (this.state.multiplayer_mode) {\n      this.setState({multiplayer_mode: false});\n      this.socket.disconnect();\n      this.change_board(\"multiplayer\");\n    }\n    else{\n      this.change_board(\"tag\");\n      if (!(this.state.lock_seed || this.state.weekly_mode)) {\n        this.setState({seed: get_seed_name()});\n      }\n    }\n  }\n\n  end_roguelike_mode() {\n    this.roguelike.end_roguelike_mode();\n    this.setState({seed: get_seed_name()});\n    this.enter_roguelike_mode();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"updated\");\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // Diff\n    if (this.state.multiplayer_mode && (this.props.G.diff_queue.length > 0) && (!this.props.ctx.gameover)) {\n      // console.log(\"Data:\",this.props.G.diff_cnt, this.props.G.diff, this.props.G);\n      // console.log(\"Emit diff\", this.props.G.diff);\n      this.socket.emit(\"diff\", this.props.G.diff_queue[0]);\n      this.props.moves.emit_diff({is_diff: true});\n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      console.log(\"Get the result\");\n      this.setState({\n        scenario_finished: true,\n        won: result.win,\n        level_achieved: this.get_risk_level(),\n        extra_gain: this.props.G.extra_gain,\n      });\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 50 && risk_level < 60) {\n          grade = \"SSSS\";\n        }\n        else if (risk_level >= 60 && risk_level < 70) {\n          grade = \"SSSSS\";\n        }\n        else if (risk_level >= 70 && risk_level < 100) {\n          grade = \"SSSSSS\";\n        }\n        else {\n          grade = \"SSSSSSSSS\";\n        }\n        // console.log(\"Time to alert finish\");\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n${this.state.multiplayer_mode?`完成合作难度: ${[\"渣渣\", \"渣渣\", \"渣渣\", \"渣渣\", \"普通\", \"高压\", \"危急\"][parseInt(this.state.room_id[4])]}\\n`:\"\"}评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n${this.state.daily_mode?`完成每日挑战: ${this.state.date}\\n`:\"\"}地图种子: ${this.state.seed}\\n${this.state.weekly_mode?`完成周常挑战: ${this.state.week}挑战${this.state.weekly_challenge_idx}\\n`:\"\"}`);\n\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n\n\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n        \n      \n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={() => {this.reset_preview_deck();this.check_deck();}} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      \"每日挑战\": this.enter_daily_mode,\n           // \"Roguelike模式\": this.enter_roguelike_mode,\n      \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_filter(this.state.preview_deck).map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n      {/* <TypeFilterContainer \n        filters = {FILTERS.map(filter_ => ({\n          ...filter_,\n          selected: this.state.preview_filter == filter_.f,\n          handleClick: () => {\n            if (this.state.preview_filter == filter_.f) {\n              this.setState({preview_filter: default_filter});\n            }\n            else {\n              this.setState({preview_filter: filter_.f});\n            }\n          },\n        }))}\n      /> */}\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.slice(0,5).map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {\n        this.roguelike.select_deck(deck);\n        // this.change_board(\"roguelike\");\n        this.roguelike.proceed();\n      },\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n\n  create_room(difficulty) {\n    let room_id = get_room_id(difficulty);\n    alert(`创建成功！房间号为${room_id}`);\n    this.enter_multiplayer_mode(room_id);\n  }\n\n  join_room(room_id) {\n    this.enter_multiplayer_mode(room_id);\n  }\n\n  enter_multiplayer_mode(room_id) {\n    let difficulty = parseInt(room_id[4]) || 0;\n\n    // Set state\n    this.setState({\n      multiplayer_mode: true,\n      tags: choose_standard_tags(TAGS.map(x=>({...x})), difficulty),\n      room_id: room_id,\n    });\n\n    // Socket connect\n    this.socket = socketIOClient(SOCKET_SERVER, {\n      query: {room_id},\n      withCredentials: true,\n    });\n    this.socket.on(\"diff\", (data) => {\n      this.props.moves.receive_diff(data);\n      console.log(\"Receive diff\", data);\n    });\n    this.socket.on(\"turn end\", (data) => {\n      if (this.props.G.stage == \"player\") {\n        this.turn_end();\n      }\n    })\n\n    // Enter deck\n    this.change_board(\"deck\");\n  }\n\n  // finish_multiplayer_mode() {\n    // this.socket.disconnect();\n  // }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_entry\");\n  }\n  \n  enter_daily_mode() {\n    this.roguelike.enter_daily_mode();\n    this.change_board(\"tag\");\n  }\n\n  enter_difficulty(difficulty) {\n    this.roguelike.set_difficulty_S2(difficulty);\n    // this.change_board(\"roguelike_deck_selection\");\n    this.roguelike.proceed();\n  }\n\n  buy_item(idx) {\n    return () => {\n      let item = this.state.shop_items[idx];\n      this.setState({\n        current_item: item,\n        current_item_idx: idx,\n      });\n\n      if (item.indexes) {\n        this.change_board(\"roguelike_shop\");\n      }\n      else {\n        this.roguelike.buy();\n      }\n    };\n  }\n\n  render_roguelike_entry_board() {\n    let difficulties = [\n      {\n        name: \"欢乐云游\",\n        handleClick: () => this.enter_difficulty(\"easy\"),\n      },\n      {\n        name: \"整装待发\",\n        handleClick: () => this.enter_difficulty(\"medium\"),\n      },\n      {\n        name: \"苦难之路\",\n        handleClick: () => this.enter_difficulty(\"hard\"),\n      },\n    ];\n    return <RoguelikeEntry \n      difficulties = {difficulties}\n      back = {() => {this.roguelike.end_roguelike_mode();this.change_board(\"tag\");}}\n    />;\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <RoguelikeDeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} />\n// introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} \n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()} click_that_button={()=>this.roguelike.click_that_button()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} buy={this.buy_item} refresh_shop={this.roguelike.refresh_shop} />\n\n    const roguelike_main = <Roguelike \n      enter_battle = {() => this.change_board(\"tag\")}\n      enter_dream = {this.roguelike.enter_dream}\n      game_count = {this.state.game_count}\n      check_deck = {() => {this.setState({preview_deck:this.state.Deck});this.change_board(\"preview\");}}\n      check_relics = {() => {this.change_board(\"roguelike_relic_check\");}}\n    />;\n\n    const centrals = [roguelike_main, shop];\n\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_shop_board() {\n    // let cards = this.state.Deck.filter((x,idx) => this.state.current_item.indexes.includes(idx) && (idx < this.state.Deck.length));\n    let current_item = this.state.current_item;\n    let cards = (current_item.is_pick)? current_item.indexes.map(idx => CARDS[idx]) : current_item.indexes.map(idx => this.state.Deck[idx]).filter(x => x != undefined);\n    let selected_card = cards[this.state.shop_selected];\n    // console.log(cards);\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <div style={{marginTop: \"38.2%\", marginLeft: \"2%\"}}>{this.state.current_item.desc}</div>\n      <CardRow \n        cards = {cards.map(this.process_hand_data)}\n        handleClick = {(idx)=>()=>this.setState({shop_selected: idx})}\n        states = {this.state.current_item.indexes.map((x,idx) => ({selected: (idx==this.state.shop_selected)}))}\n        additionalStyle = {{marginTop: \"5%\"}}\n      />\n      <div style={{margin:\"5% 2% 5% 2%\", width:\"95%\", height:\"25%\", overflowY:\"hidden\"}}>\n        {selected_card && get_desc(selected_card)}\n      </div>\n      {(this.state.current_item.name != \"初始自选干员\")?(\n      <><button \n        className=\"preview-button\" \n        onClick={() => {\n          this.roguelike.buy(this.state.shop_selected);\n          this.roguelike.proceed();\n        }}\n      >\n        确认购买({ICONS.gold}{this.state.current_item.price})\n      </button>\n      <button className=\"preview-button\" onClick={this.roguelike.proceed}>返回</button>\n      </>):(<>\n      <button\n        className=\"preview-button\"\n        onClick={() => {\n          this.roguelike.select_init_card(this.state.shop_selected);\n        }}\n      >\n        加入牌组\n      </button>\n      </>)}\n    </div>);\n  }\n\n  render_roguelike_result_board() {\n    let level_diff = this.state.level_achieved - this.state.level_required;\n    let win = <ResultWin \n      game_count = {this.state.game_count}\n      level_required = {this.state.level_required}\n      level_achieved = {this.state.level_achieved}\n      gold_amount = {get_gold_gained(this.state.level_achieved, this.state.level_required)}\n      slam = {level_diff >= 4}\n      grand_slam = {level_diff >= 8}\n      continue = {() => {\n        let game_count = this.state.game_count;\n        this.roguelike.continue_run();\n        if (game_count < 9) {\n          // this.change_board(\"roguelike\");\n          this.roguelike.proceed();\n        }\n        else {\n          this.change_board(\"roguelike_final_result\");\n        }\n      }}\n    />\n    let lose = <ResultLose\n      game_count = {this.state.game_count}\n      continue = {this.end_roguelike_mode}\n    />\n    return this.state.won? win : lose;\n  }\n  \n  render_roguelike_final_result_board() {\n    let difficulty = {\n      easy: \"欢乐云游\",\n      medium: \"整装待发\",\n      hard: \"苦难之路\",\n    }[this.state.difficulty];\n    return <FinalResult \n      difficulty = {difficulty}\n      endgame = \"结束游戏\"\n      continue = {this.end_roguelike_mode}\n      rng = {this.state.rng || new PRNG(Math.random())}\n    />;\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_roguelike_deck_upgrade_board() {\n    return <DeckUpgrade \n    cards = {this.state.current_indexes.map(idx => this.state.Deck[idx]).map(this.process_hand_data)}\n    cardStates = {this.state.current_indexes.map((deck_idx, idx) => ({selected: idx == this.state.selection_selected}))}\n    selectedCard = {{...this.state.Deck[this.state.current_indexes[this.state.selection_selected]]}}\n    handleCardClick = {this.handle_selection_clicked}\n    upgrades = {this.state.current_upgrades.map(this.process_upgrade_data)}\n    upgradeStates = {this.state.current_upgrades.map(this.process_upgrade_state)}\n    selectedUpgrade = {{...this.state.current_upgrades[this.state.upgrade_selected]}}\n    handleUpgradeClick = {this.handle_upgrade_clicked}\n    handleClick = {this.roguelike.upgrade_card}\n    />;\n  }\n\n  render_roguelike_relic_selection_board() {\n    return <Relics \n      relics = {this.state.current_relics.map((relic,idx) => ({...relic, operation: {name: \"选择\", effect:()=>this.roguelike.pick_relic(idx)}}))}\n      proceed = {this.roguelike.proceed}\n    />;\n  }\n\n  render_roguelike_relic_check_board() {\n    return <Relics \n      relics = {this.state.relics.map((relic,idx) => ({...relic, operation: (relic.onUse)?{name: \"使用\", effect:() => this.roguelike.use_relic(idx)}:undefined})).filter(relic => !relic.used)}\n      proceed = {this.roguelike.proceed}\n      checking = {true}\n    />;\n  }\n\n  render_weekly_board() {\n    let setup = this.roguelike.setup_weekly_challenge;\n    let process_challenge = (challenge, idx) => {\n      return {\n        name: `挑战${idx+1}`,\n        ...challenge,\n        operation: {\n          name: \"挑战\",\n          effect() {\n            setup(idx);\n          }\n        },\n      };\n    };\n    return <Weekly \n      week = {this.state.week}\n      challenges = {this.state.challenges.map(process_challenge)}\n      back = {() => this.roguelike.end_weekly_mode()}\n      click_title={()=>{\n        console.log(\"Clicking title\");\n        this.state.dream_count = (this.state.dream_count + 1) || 1;\n        if (this.state.dream_count % 5 == 4) {\n          this.state.week += 1;\n          this.roguelike.generate_weekly_challenges();\n        }\n      }}\n    />\n  }\n\n  render_multiplayer_board() {\n    return <Multiplayer \n      create_room = {() => this.change_board(\"create_room\")}\n      enter_room = {() => this.change_board(\"enter_room\")}\n      back = {() => this.change_board(\"tag\")}\n    />;\n  }\n\n  render_create_room_board() {\n    return <CreateRoom \n      enter_difficulty = {(difficulty) => () => this.create_room(difficulty)}\n      back = {() => this.change_board(\"multiplayer\")}\n    />;\n  }\n\n  render_enter_room_board() {\n    return <EnterRoom \n      value = {this.state.room_id}\n      handleChange = {(e) => this.setState({room_id: e.target.value})}\n      enter_room = {() => this.join_room(this.state.room_id)}\n      back = {() => this.change_board(\"multiplayer\")}\n    />;\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            else {\n              this.turn_end();\n            }\n          }}\n        >\n          {this.props.ctx.gameover? <span>{ICONS.endgame}结束游戏</span>:<span>{ICONS.endturn}结束回合</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"105%\",\n            top: \"4%\",\n            left: \"88%\",\n            paddingTop: \"1.5%\",\n\n            display: (this.state.competition_mode || this.state.roguelike_mode || this.state.multiplayer_mode)?\"none\":\"\",\n          }}\n        >\n        {ICONS.reset}\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n          completed = {this.props.G.score / this.props.G.goal}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      难度速设: () => this.setState({\n        tags: choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      // 其他模式: () => this.change_board('mode_selection'),\n      // 每日挑战: this.enter_daily_mode,\n      // 周常挑战: () => this.roguelike.enter_weekly_mode(),\n      合作模式: () => this.change_board(\"multiplayer\"),\n      肉鸽模式: () => this.enter_roguelike_mode(),\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n    if (this.state.roguelike_mode) {\n      actions = {};\n\n      if (risk_level >= this.state.level_required) {\n        actions.进入游戏 = () => this.enter_game();\n      }\n    }\n\n    if (this.state.daily_mode) {\n      let end_daily_mode = () => {\n          this.roguelike.end_daily_mode();\n          this.change_board(\"tag\");\n        };\n      actions = {\n        返回: end_daily_mode ,\n      };\n\n      if (risk_level >= this.state.level_required) {\n        actions = {\n          进入游戏: () => this.change_board(\"deck\"),\n          返回: end_daily_mode,\n        };\n      }\n    }\n\n    if (this.state.weekly_mode) {\n      actions = {\n        进入游戏: this.enter_game,\n        返回: () => this.change_board(\"weekly\"),\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n          just_selected = {this.state.just_selected}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"#cf1322\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16 && (!(this.state.roguelike_mode || this.state.daily_mode)))? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 1% 2%\",\n            display:(this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          今天是: {this.state.date}\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 3% 2%\",\n            display:(this.state.roguelike_mode || this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          要求危机等级: {this.state.level_required}\n        </div>\n\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        // this.setState({\n          // preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.reset_preview_deck();\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n        handleToggle = {() => this.setState({lock_seed: !this.state.lock_seed})}\n        locked = {this.state.lock_seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n  seed: 114514,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}