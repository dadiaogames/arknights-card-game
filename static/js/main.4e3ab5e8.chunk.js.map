{"version":3,"sources":["icons.js","orders.js","cards.js","Game.js","enemies.js","upgrades.js","utils.js","DeckGenerator.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","Roguelike.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","food_icons","style","color","order_illust","material_icons","ready_order","G","ctx","from_card","random","Shuffle","finished","filter","x","exhausted","ready_other_orders","default_order","desc","effect","payCost","refreshOrder","advanced_orders","requirements","score","reward","advanced","field_selected","card","field","logMsg","name","length","atk","hp","colors","reduce","acc","val","console","log","times","_","min","ORDERS","cost","materials","harvest","costs","CARDS","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","power","achieve","deal_random_damage","onPlay","draw","onTurnBegin","onFight","exhaust_random_enemy","num_exhausted","efield","Math","enemy","dmg","new_card","deck","slice","idx","indexOf","splice","init_card_state","hand","gainMaterials","ready_random_card","cure","sort","y","cured","fully_restore","onPlayCard","push","onUseOrder","material","Die","payMaterials","is_rhine","unshift","num_finished","miners","Object","assign","fighters","map","actors","battlecries","floor","this","played","score_gained","onEnemyOut","was_enemy","discard","i","cards","extracted_attrs","skill_power","reinforce_skill","onCardMine","undefined","use_count","drop","danger","reinforce_hand","onRest","get_num_rest_cards","num_rest_cards","resters","num_cards","onOut","find","gravel","join","player","includes","reduce_enemy_atk","damaged_enemy","silent","miner","fighter","enemy2card","enemy_idx","e","texas","j","reinforce_card","BORROWS","generate_combined_card","blank_enemy","ENEMIES","self_copy","is_elite","high","deal_damage","unyielding","enraged","drawEnemy","goal","UPGRADES","is_init","onPlayBonus","odeck","map_object","fn","obj","new_obj","k","PRNG","seed","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","scorer","strategies","mini_sets","mini_set","get_random_card","rng","banned_cards","card_pool","choice","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","keys","c","deck_from_strategy","strategy","amount","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","generate_deck_s2","sets","deck_from_mini_sets","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","move","d1","d2","gained","use","out","exhausted_enter","limit_hand","pop","orders","sort_orders","sort_finished","order_id","edeck","enemy_exhausted_enter","surge","not_switch","switchEnemy","replace","reversed","time_points","effects","EFFECTS","title","reverse","unexhausted","reduced","exhausted_cards","prepared_cards","ready_times","clearField","f","str2deck","card_dict","item","arr2obj","card_data","target_card","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardFight","onCardAct","onCardReinforced","setup_scenario","ediscard","picks","max_danger","num_enemies_out","field_limit","playing","stage","round_num","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","AC","setup","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","played_card","insert_field","act","harder_reinforce","rest","rest_cards","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","max","get_blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","turn","onBegin","concat","refresh","refresh_picks","enemy_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","reduce_goal","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","display","EnterGame","divAlign","Panel","content","ScoreBoard","useState","MaterialDisplay","TagSelection","tbody","row","row_tags","tag","locked","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","process_selected_desc","margin","Competition","results","finalResult","fontSize","TAGS","tag_list","t","process_tags","standard_level","rhodes_training_mode","introduce_roguelike_mode","get_pick","selection","get_roguelike_pick","get_shop_item","shop_item","Pick","check_cards","pick_cards","GoldAmount","PickCards","skip_picks","ShopItem","buy","Shop","refresh_shop","shop_items","FinishPick","RoguelikeTabs","onSelect","roguelike","produce","setup_roguelike_mode","S","roguelike_mode","game_idx","central_idx","card_picks","get_card_picks","reset_shop","skip_pick","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_result_board","enter_competition_mode","upgrade_card","start_competition","enter_roguelike_mode","change_board","choose_tag","choose_standard_tags","get_risk_level","enter_game","check_deck","args","setState","state","hand_selected","efield_selected","order_selected","finished_selected","selection_selected","upgrade_selected","pick_selected","hand_choices","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","show_finished","checking","scenario_finished","branches","log_select","new_tags","current_standard_level","competition_mode","cardrow","illust_variants","icon","order_data","rhine","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","failed","overflow","centrals","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","快速设置","其他模式","返回标题","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"sOAOaA,G,MAAQ,CACnBC,QAAU,yBAAKC,IAAI,qGAAqGC,OAJtG,GAI2HC,UAAU,aAEvJC,IAAM,yBAAKH,IAAI,kFAAkFC,OAN/E,GAMoGC,UAAU,aAEhIE,KAAO,yBAAKJ,IAAI,qGAAqGC,OARnG,GAQwHC,UAAU,aAEpJG,IAAM,yBAAKL,IAAI,sFAAsFC,OAVnF,GAUwGC,UAAU,mBAEpII,KAAO,yBAAKN,IAAI,oGAAoGC,OAX7F,KAavBM,MAAQ,yBAAKP,IAAI,qGAAqGC,OAb/F,KAevBO,KAAO,yBAAKR,IAAI,8GAA8GC,OAfvG,KAiBvBQ,MAAO,yBAAKC,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,oEAAmE,0BAAMA,EAAE,sCAEvQC,KAAM,yBAAKT,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,mBAAkB,0BAAMA,EAAE,6BAErNE,WAAY,yBAAKV,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,8BAAUI,OAAO,qBAA8B,8BAAUA,OAAO,mBAEzPC,MAAO,yBAAKZ,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,oCAE5LK,OAAQ,yBAAKb,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,8DAAmE,0BAAMM,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAE/RC,MAAO,yBAAKlB,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,4BAAQY,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAAa,0BAAMP,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,WAE/PK,OAAQ,yBAAKtB,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,8BAAUI,OAAO,oBAA6B,0BAAMH,EAAE,+DAE3Oe,QAAS,yBAAKvB,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,iCAE9LgB,QAAS,yBAAKxB,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,sEAE9LiB,KAAM,yBAAKzB,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,4BAAQY,GAAG,KAAKC,GAAG,OAAOC,EAAE,MAAK,4BAAQF,GAAG,KAAKC,GAAG,OAAOC,EAAE,MAAK,0BAAMb,EAAE,yEAE7PkB,YAAa,yBAAK1B,MAAM,6BAA6BC,MAAM,KAAKV,OAAO,KAAKW,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAQ,0BAAMC,EAAE,+EAAoF,6BAASG,OAAO,8BAG3RgB,EAAa,CACxB,0BAAMC,MAAO,CAACC,MAAM,YAApB,UACA,0BAAMD,MAAO,CAACC,MAAM,YAApB,UACA,0BAAMD,MAAO,CAACC,MAAM,mBAApB,UACA,0BAAMD,MAAO,CAACC,MAAM,QAApB,WC5CWC,EAAe,qFAIfC,EAAiB,CAAC3C,EAAMC,QAASD,EAAMK,IAAKL,EAAMM,KAAMN,EAAMO,KA2BpE,SAASqC,EAAYC,EAAGC,EAAKC,GAClC,IAAIpC,EAAQmC,EAAIE,OAAOC,QAAQJ,EAAEK,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,aAAgBD,EAAEE,oBAAoC,GAAbP,OAAsB,GACnHpC,IACFA,EAAM0C,WAAY,GAIf,IAAME,EAAgB,CAC3BC,KAAM,wCACNC,OAF2B,SAEpBZ,EAAGC,GACJY,EAAQb,EAAGC,EAAK,IAClBa,GAAad,EAAGC,KAIhBc,EAAkB,CAAC,CACrBC,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRC,UAAU,EACVR,KAAO,uCACPC,OA9CJ,SAAoBZ,EAAGC,EAAKmB,GAC1B,IAAIC,EAAOrB,EAAEsB,MAAMF,GACnB,GAAKC,EAMHE,GAAOvB,EAAGC,EAAJ,iBAAcoB,EAAKG,KAAnB,2BANG,CACT,GAAsB,GAAlBxB,EAAEsB,MAAMG,OAAa,OACzBJ,EAAOrB,EAAEsB,MAAMtB,EAAEsB,MAAMG,OAAS,GAChCF,GAAOvB,EAAGC,EAAK,8HAKjBoB,EAAKK,KAAO,EACZL,EAAKM,IAAM,IA8CX,CACEX,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EAEPE,UAAU,EACVR,KAAO,iEAAcjB,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAvD,gBACPkB,OANF,SAMSZ,EAAGC,GACR,IAAI2B,EAAS5B,EAAEK,SAASwB,QAAO,SAACC,EAAIC,GAElC,OADGA,EAAInC,OAAS,IAAGkC,EAAIC,EAAInC,QAAQ,GAC5BkC,IACN,CAAC,EAAE,EAAE,IACRE,QAAQC,IAAIL,GACZ,IAAIM,EAAQC,IAAEC,IAAIR,GAClB5B,EAAEiB,OAAS,EAAIiB,KAKRG,EAAM,CACjB,CACErB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,mBACPwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEiB,OAAS,IAGjB,CACED,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,mBACPwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEiB,OAAS,IAIjB,CACED,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,mBACPwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEiB,OAAS,IAKjB,CACED,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8CAAUb,EAAe,GAAIA,EAAe,IAEnDc,OANF,SAMSZ,EAAGC,GACJY,EAAQb,EAAGC,EAAK,KAClBD,EAAEuC,UAAU,IAAM,KAIxB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8CAAUb,EAAe,GAAIA,EAAe,IAEnDc,OANF,SAMSZ,EAAGC,GACJY,EAAQb,EAAGC,EAAK,KAClBD,EAAEuC,UAAU,IAAM,KAKxB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8CAAUb,EAAe,GAAIA,EAAe,IAEnDc,OANF,SAMSZ,EAAGC,GACJY,EAAQb,EAAGC,EAAK,KAClBD,EAAEuC,UAAU,IAAM,KAKxB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,SAA2BA,EAAe,IACjDwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEuC,UAAU,IAAM,IAIxB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,SAA2BA,EAAe,IACjDwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEuC,UAAU,IAAM,IAKxB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,SAA2BA,EAAe,IACjDwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEuC,UAAU,IAAM,IAKxB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,+CAAWb,EAAe,IACjC0C,SAAS,EACT5B,OANF,SAMSZ,EAAGC,GACRD,EAAEuC,UAAU,IAAM,IAItB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,+CAAWb,EAAe,IACjC0C,SAAS,EACT5B,OANF,SAMSZ,EAAGC,GACRD,EAAEuC,UAAU,IAAM,IAItB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,+CAAWb,EAAe,IACjC0C,SAAS,EACT5B,OANF,SAMSZ,EAAGC,GACRD,EAAEuC,UAAU,IAAM,IAItB,CACEvB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,mBACPwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEyC,OAAS,IAGjB,CACEzB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,mBACPwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEyC,OAAS,IAIjB,CACEzB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,8BAAOb,EAAe,GAAtB,mBACPwC,KAAM,CAAC,EAAE,EAAE,EAAE,GACb1B,OANF,SAMSZ,EAAGC,GACND,EAAEyC,OAAS,IAyCjB,CACEzB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,2DACPF,oBAAoB,EACpBG,OAAQb,GAEV,CACEiB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,2DACPF,oBAAoB,EACpBG,OAAQb,GAEV,CACEiB,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBC,MAAO,EACPC,OAAQ,EACRP,KAAO,2DACPF,oBAAoB,EACpBG,OAAQb,IAvOO,OA0OdgB,EACAA,GCtTQ2B,EAAQ,CACnB,CACElB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,oFACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,oFACRhC,KAAM,oCACNqC,OATF,SASShD,EAAGC,EAAK6C,GACb,IAAIG,EAAQ,EAAI,EAAIH,EAAKI,MACzBlD,EAAEiB,OAASgC,EACX1B,GAAOvB,EAAGC,EAAJ,sDAAqBgD,EAArB,WAEFA,GAAS,IACXE,GAAQnD,EAAGC,EAAK,qBAAO,iEAAgB6C,IAG3CF,UAAW,EACXG,eAAgB,6BAGlB,CACEvB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,oFACRhC,KAAM,gDACNqC,OATF,SASShD,EAAGC,EAAK6C,GACbM,EAAmBpD,EAAGC,EAAK,EAAI,EAAI6C,EAAKI,QAE1CN,UAAW,EACXG,eAAgB,kBAGlB,CACEvB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,oFACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAO,oFACPC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,oFACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAM,2BACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,6FACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKnF,MAAQ,GAEfoF,eAAgB,QAGlB,CACEvB,KAAM,MACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,4DACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKnF,MAAQ,GAEfoF,eAAgB,QAGlB,CACEvB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,oFACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAM,eACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,2EACRC,UAAW,EACXC,YATF,SASc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,eACLc,KAAK,GACLZ,IAAI,GACJC,GAAG,GACHhE,KAAK,EACLC,MAAM,EACN+E,OAAO,2EACPC,UAAW,EAEXC,YAVF,SAUc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,EAEPmB,EAAKpB,KAAO,IACdyB,GAAQnD,EAAGC,EAAK,uCAAU,qDAAc6C,IAG5CC,eAAgB,SAGlB,CACEvB,KAAM,SACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+C,KAAM,oCACNgC,OAAQ,kEACRU,OATF,SASSrD,EAAGC,EAAK6C,GACbQ,EAAKtD,EAAGC,GACRqD,EAAKtD,EAAGC,IAEV2C,UAAW,EACXC,YAdF,SAcc7C,EAAGC,EAAK6C,GAClBQ,EAAKtD,EAAGC,GACRqD,EAAKtD,EAAGC,IAEV8C,eAAgB,uBAKlB,CACEvB,KAAM,qBACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAO,oFACPhC,KAAM,4FACN4C,YATF,SAScvD,EAAGC,EAAK6C,GACdA,EAAKlF,OAAS,IAChBkF,EAAKlF,MAAQ,IAGjBgB,OAdF,SAcSoB,EAAGC,EAAK6C,GACb9C,EAAEyC,OAAS,EAAI,EAAIK,EAAKI,MACpBJ,EAAKlF,MAAQ,IACfkF,EAAKlF,OAAS,IAGlBgF,UAAW,EACXG,eAAgB,yCAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,gDACLgC,OAAO,2EACPa,QATF,SASUxD,EAAGC,EAAK6C,GACd9C,EAAEyC,OAAS,EAAI,EAAIK,EAAKI,OAE1BN,UAAW,EACXG,eAAgB,yCAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,gDACLgC,OAAO,2EACPK,OATF,SASShD,EAAGC,EAAK6C,GACb9C,EAAEyC,OAAS,EAAI,EAAIK,EAAKI,OAE1BN,UAAW,EACXG,eAAgB,yCAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,gDACNgC,OAAO,2EACPC,UAAW,EAEXS,OAXF,SAWSrD,EAAGC,GACRD,EAAEyC,OAAS,GAGbI,YAfF,SAec7C,EAAGC,EAAK6C,GAClB9C,EAAEyC,OAAS,GAEbM,eAAgB,mCAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,qIACLgC,OAAO,oFACPK,OATF,SASShD,EAAGC,EAAK6C,GACb,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAKA,EAAEC,cAAY,GAC7Da,IACFrB,EAAEsB,MAAQtB,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAIA,GAAKc,KACnCrB,EAAEyC,OAAS,IAGfG,UAAW,EACXG,eAAgB,QAChBF,YAlBF,SAkBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,IAIf,CACEH,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,mLACLgC,OAAO,6FACPK,OATF,SASShD,EAAGC,EAAK6C,GACbW,GAAqBzD,EAAGC,GACxB,IAAIyD,EAAgB1D,EAAE2D,OAAOrD,QAAO,SAAAC,GAAC,OAAEA,EAAEC,aAAWiB,OACpDzB,EAAEyC,OAASmB,KAAKxB,IAAIsB,EAAe,IAErCd,UAAW,EACXC,YAfF,SAec7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,6GACNgC,OAAO,2EACPC,UAAW,EACXY,QAVF,SAUUxD,EAAGC,EAAK6C,EAAMe,GACpB,GAAIA,EAAMC,IAAMD,EAAMlC,GAAI,CACxB,IAAIsB,GAASY,EAAMC,IAAMD,EAAMlC,IAAM,EACrC3B,EAAEyC,OAASQ,EACX1B,GAAOvB,EAAGC,EAAJ,uBAAe6C,EAAKtB,KAApB,wBAA8ByB,EAA9B,uBAEFA,GAAS,GACXE,GAAQnD,EAAGC,EAAK,iCAAS,sEAAgB6C,KAI/CD,YArBF,SAqBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kEACLgC,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,GAKb,IAAIiB,EAAW/D,EAAEgE,KAAK,GACtBhE,EAAEgE,KAAOhE,EAAEgE,KAAKC,MAAM,GACtB,IAAIC,EAAMlE,EAAEsB,MAAM6C,QAAQrB,GAAQ,EAC9BiB,GACF/D,EAAEsB,MAAM8C,OAAOF,EAAK,EAAGG,EAAgBrE,EAAGC,EAAJ,eAAa8D,KAGhC,gBAAjBA,EAASvC,MACX2B,GAAQnD,EAAGC,EAAK,2BAAQ,mDAAY6C,IAGxCF,UAAW,EACXC,YA1BF,SA0Bc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAyBlB,CACEvB,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,6DACLgC,OAAO,6FACPU,OATF,SASSrD,EAAGC,EAAK6C,GAAO,IAAD,gBACF9C,EAAEsE,MADA,IACnB,2BAAyB,SAClBhC,MAAQ,GAFI,gCAKrBM,UAAW,EACXC,YAfF,SAec7C,EAAGC,EAAK6C,GACdA,EAAKO,QACPP,EAAKO,OAAOrD,EAAGC,GAEb6C,EAAKI,OAAS,GAChBC,GAAQnD,EAAGC,EAAK,2BAAQ,8CAAY6C,IAGxCC,eAAgB,kDAGlB,CACEvB,KAAM,eACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+C,KAAM,gDACNgC,OAAO,2EACPa,QATF,SASUxD,EAAGC,EAAK6C,GACdyB,EAAcvE,EAAGC,EAAK,EAAE,EAAE6C,EAAKI,QAEjCN,UAAW,EACXG,eAAgB,yCAIlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,sDACLgC,OAAO,2EACPa,QATF,SASUxD,EAAGC,EAAK6C,GACdM,EAAmBpD,EAAGC,EAAK,EAAI,EAAI6C,EAAKI,QAE1CN,UAAW,EACXG,eAAgB,kBAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kFACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GAAO,IAAD,gBACF9C,EAAEsB,OADA,IACnB,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,GAAQyB,IACVzB,EAAKK,KAAO,EACZL,EAAKM,IAAM,IAJI,gCAQrBiB,UAAW,EACXC,YAlBF,SAkBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,iFACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GAAO,IAAD,gBACF9C,EAAEsB,OADA,IACnB,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,GAAQyB,IACVzB,EAAK1D,MAAQ,IAHE,gCAOrBiF,UAAW,EACXC,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClBA,EAAKnF,MAAQ,GAEfoF,eAAgB,QAIlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,yEACLgC,OAAO,kEACPU,OATF,SASSrD,EAAGC,EAAK6C,GACbM,EAAmBpD,EAAGC,EAAK,GAC3BmD,EAAmBpD,EAAGC,EAAK,IAE7B2C,UAAW,EACXC,YAdF,SAcc7C,EAAGC,EAAK6C,GACdA,EAAKO,QACPP,EAAKO,OAAOrD,EAAGC,IAGZD,EAAEsE,KAAKH,QAAQrB,IAAUA,EAAKI,OAAS,GAC1CC,GAAQnD,EAAGC,EAAK,+BAAS,4EAAiB6C,IAG9CC,eAAgB,kDAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,kCACNgC,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUShD,EAAGC,EAAK6C,GACbA,EAAKpB,KAAO,EAAI,EAAIoB,EAAKI,MACzBJ,EAAKnB,IAAM,EAAI,EAAImB,EAAKI,OAE1BH,eAAgB,2BAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAO,2EACPC,UAAW,EACXjC,KAAM,uDACN6C,QAVF,SAUUxD,EAAGC,EAAK6C,EAAMe,GACpBA,EAAMnC,KAAO,GAEfmB,YAbF,SAac7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,kEAAeb,EAAe,IACpC6C,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GACb9C,EAAEuC,UAAU,IAAM,GAEpBK,UAAW,EACXC,YAbF,SAac7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,EACXmB,EAAKnF,MAAQ,GAEfoF,eAAgB,cAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,iDACLgC,OAAO,oFACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACbA,EAAKnB,IAAM,EAAI,EAAImB,EAAKI,OAE1BN,UAAW,EACXG,eAAgB,0CAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,qFACLgC,OAAO,kEACPU,OATF,SASSrD,EAAGC,EAAK6C,GAAO,IAAD,gBACF9C,EAAEsB,OADA,IACnB,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,GAAQyB,IACVzB,EAAKzD,OAAS,IAHC,gCAOrBgF,UAAW,EACXC,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClBA,EAAKlF,OAAS,GAEhBmF,eAAgB,wBAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,yIACLgC,OAAO,2EACPa,QATF,SASUxD,EAAGC,EAAK6C,EAAMe,GAChBA,EAAMrD,UACRqD,EAAMC,KAAOD,EAAMlC,GAGnBkC,EAAMrD,WAAY,GAGtBoC,UAAW,EACXC,YAlBF,SAkBc7C,EAAGC,EAAK6C,GAClBA,EAAKnB,IAAM,IAEboB,eAAgB,UA4BlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,GACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,6DACLgC,OAAO,2EACPK,OATF,SASShD,EAAGC,EAAK6C,GACb0B,GAAkBxE,EAAGC,EAAK6C,IAE5BU,QAZF,SAYUxD,EAAGC,EAAK6C,GACd0B,GAAkBxE,EAAGC,EAAK6C,IAE5BF,UAAW,EACXC,YAhBF,SAgBc7C,EAAGC,EAAK6C,GAClBA,EAAKnB,IAAM,IAEboB,eAAgB,UAsBlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,yEACLgC,OAAO,oFACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACb,IAAIiB,EAAW9D,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAGA,EAAE+B,MAAO,GAAGQ,EAAKI,OAAO,OAAO,GAChFgB,EAAMlE,EAAEsB,MAAM6C,QAAQrB,GAAQ,EAC9BiB,GACF/D,EAAEsB,MAAM8C,OAAOF,EAAK,EAAGG,EAAgBrE,EAAGC,EAAJ,eAAa8D,MAIvDnB,UAAW,EACXG,eAAgB,gDAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,2DACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GACb,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAGA,GAAGuC,MAAQ,GACxDzB,IACFA,EAAKK,KAAO,EACZL,EAAKM,IAAM,IAGfiB,UAAW,EACXC,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClB2B,GAAKzE,EAAGC,EAAK,IAEf8C,eAAgB,6DA2ClB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,8JACNgC,OAAO,2EACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,EAAK6C,ICxRZ,SAAuB9C,EAAGC,GAE/B,IAAIoB,EAAO,YAAIrB,EAAEsB,OAAOoD,MAAK,SAACnE,EAAEoE,GAC9B,OAAIpE,EAAEuD,KAAOa,EAAEb,IACNa,EAAEb,IAAMvD,EAAEuD,IAGVvD,EAAEoB,GAAGgD,EAAEhD,MAEf,GACH3B,EAAE4E,MAAQvD,EAAKyC,IACfzC,EAAKyC,IAAM,ED8QPe,CAAc7E,GACVA,EAAE4E,OAAS,IACb5E,EAAEiB,OAAS,EAAI6B,EAAKI,QAGxBH,eAAgB,6BAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,gDACLgC,OAAO,kEACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACbW,GAAqBzD,EAAGC,GACxBwD,GAAqBzD,EAAGC,IAE1B4C,YAbF,SAac7C,EAAGC,EAAK6C,GAClBA,EAAKtC,WAAY,GAEnBoC,UAAW,EACXG,eAAgB,4BA6BlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,uGACLgC,OAAO,4CACPU,OATF,SASSrD,EAAGC,EAAK6C,GACb,IAAIY,EAAgB1D,EAAE2D,OAAOrD,QAAO,SAAAC,GAAC,OAAEA,EAAEC,aAAWiB,OACpDzB,EAAEiB,OAAS,EAAIyC,EACXA,GAAiB,GACnBP,GAAQnD,EAAGC,EAAK,2BAAQ,oGAAqB6C,IAGjDF,UAAW,EACXC,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAIlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,yEACLgC,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACb,GAAIjC,EAAQb,EAAGC,EAAK,EAAI,EAAI6C,EAAKI,OAAQ,CACvC,IAAID,EAAQ,EAAI,EAAIH,EAAKI,MACzBlD,EAAEiB,OAASgC,EAEPA,GAAS,IACXE,GAAQnD,EAAGC,EAAK,iCAAS,2DAAe6C,KAI9CF,UAAW,EACXG,eAAgB,kDAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,2IACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,GACRD,EAAE8E,WAAWC,MACX,SAAC/E,EAAGC,GACFD,EAAEiB,OAAS,MAIjB4B,YAhBF,SAgBc7C,EAAGC,EAAK6C,GAClBA,EAAKO,OAAOrD,EAAGC,IAEjB2C,UAAW,EACXG,eAAgB,iDAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,gDACLgC,OAAO,2EACPK,OATF,SASShD,EAAGC,EAAK6C,GACb/C,EAAYC,EAAGC,GAAK,GACpBF,EAAYC,EAAGC,GAAK,IAEtB2C,UAAW,EACXC,YAdF,SAcc7C,EAAGC,EAAK6C,GAClB2B,GAAKzE,EAAGC,EAAK,IAEf8C,eAAgB,6DAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,qFACLgC,OAAO,oFACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACb0B,GAAkBxE,EAAGC,EAAK6C,GAC1B/C,EAAYC,EAAGC,IAEjB2C,UAAW,EACXC,YAdF,SAcc7C,EAAGC,EAAK6C,GAClB9C,EAAEyC,OAAS,GAEbM,eAAgB,mCAGlB,CACEvB,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,uJACLgC,OAAO,6FAYP/D,OApBF,SAoBSoB,EAAGC,GACRD,EAAEgF,WAAWD,MACX,SAAC/E,EAAGC,GACFmD,EAAmBpD,EAAGC,EAAK,OAIjC2C,UAAW,EACXC,YA5BF,SA4Bc7C,EAAGC,EAAK6C,GAClBA,EAAKnF,MAAQ,GAEfoF,eAAgB,QA4BlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,8IACNgC,OAAO,2EACPC,UAAW,EAEXS,OAXF,SAWSrD,EAAGC,GACR,IAAInC,EAAQ,GACRmH,EAAWhF,EAAIE,OAAO+E,IAAI,GAAK,EAC/BlE,EAAe,CAAC,EAAE,EAAE,EAAE,GAC1BA,EAAaiE,GAAY,EACzBnH,EAAM6C,KAAO,8BAAOb,EAAemF,GAAtB,uBACbnH,EAAM8C,OAAS,SAACZ,EAAEC,GACZkF,EAAanF,EAAGC,EAAKe,IACvBoC,EAAmBpD,EAAGC,EAAK,IAG/BnC,EAAMsH,UAAW,EACjBpF,EAAEK,SAASgF,QAAQvH,IAGrB+E,YA1BF,SA0Bc7C,EAAGC,GACbmD,EAAmBpD,EAAGC,EAAK,IAE7B8C,eAAgB,mCAmClB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,qGACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GACb,IAAIwC,EAAetF,EAAEK,SAASoB,OAC9BqB,EAAKpB,KAAO4D,EACZxC,EAAKnB,IAAM,EAAI2D,GAEjB1C,UAAW,EACXC,YAfF,SAec7C,EAAGC,EAAK6C,GAClBA,EAAKlF,OAAS,GAEhBmF,eAAgB,wBAGlB,CACEvB,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kGACLgC,OAAO,6FACPK,OATF,SASShD,EAAGC,EAAK6C,GACb,IAAK9C,EAAEsB,MAAM6C,QAAQrB,GAAO,qBACT9C,EAAEsB,OADO,IAC1B,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,EAAK2B,QAAW3B,EAAK2B,QAAUF,EAAKE,QACtC3B,EAAK2B,OAAOhD,EAAGC,EAAKoB,IAHE,iCAQ9BuB,UAAW,EACXC,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClB,IAAIyC,EAASvF,EAAEgE,KAAK1D,QAAO,SAAAC,GAAC,OAAIA,EAAEyC,UAClC,GAAIuC,EAAO9D,OAAS,EAAG,CACrB,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQmF,GAAQ,GACtCvF,EAAEsE,KAAKe,QAAQG,OAAOC,OAAO,GAAIpE,MAGrC0B,eAAgB,oEAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kGACLgC,OAAO,oFACPa,QATF,SASUxD,EAAGC,EAAK6C,EAAMe,GACpB,IAAK7D,EAAEsB,MAAM6C,QAAQrB,GAAO,CAAC,IAAD,gBACT9C,EAAEsB,OADO,IAC1B,2BAA0B,CAAC,IAAlBD,EAAiB,QACpBA,EAAKmC,SAAYnC,EAAKmC,SAAWV,EAAKU,SACxCnC,EAAKmC,QAAQxD,EAAGC,EAAKoB,EAAMwC,IAHL,iCAQ9BjB,UAAW,EACXC,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClB,IAAI4C,EAAW1F,EAAEgE,KAAK1D,QAAO,SAAAC,GAAC,OAAIA,EAAEiD,WACpC,GAAIkC,EAASjE,OAAS,EAAG,CACvB,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQsF,GAAU,GACxC1F,EAAEsE,KAAKe,QAAQG,OAAOC,OAAO,GAAIpE,MAGrC0B,eAAgB,oEAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kGACLgC,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,EAAMe,GACnB,IAAK7D,EAAEsB,MAAM6C,QAAQrB,GAAO,qBACT9C,EAAEsB,MAAMqE,KAAI,SAAApF,GAAC,OAAEA,MADN,IAC1B,2BAAoC,CAAC,IAA5Bc,EAA2B,QAC9BA,EAAKzC,QAAWyC,EAAKzC,QAAUkE,EAAKlE,QACtCyC,EAAKzC,OAAOoB,EAAGC,EAAKoB,IAHE,iCAQ9BuB,UAAW,EACXC,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClB,IAAI8C,EAAS5F,EAAEgE,KAAK1D,QAAO,SAAAC,GAAC,OAAIA,EAAE3B,UAClC,GAAIgH,EAAOnE,OAAS,EAAG,CACrB,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQwF,GAAQ,GACtC5F,EAAEsE,KAAKe,QAAQG,OAAOC,OAAO,GAAIpE,MAGrC0B,eAAgB,oEAElB,CACEvB,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,wGACLgC,OAAO,6FACPU,OATF,SASSrD,EAAGC,EAAK6C,GAAO,IAAD,gBACF9C,EAAEsE,KAAKqB,KAAI,SAAApF,GAAC,OAAEA,MADZ,IACnB,2BAAmC,CAAC,IAA3Bc,EAA0B,QAC7BA,EAAKgC,QAAWhC,EAAKgC,QAAUP,EAAKO,QACtChC,EAAKgC,OAAOrD,EAAGC,EAAKoB,IAHL,gCAOrBuB,UAAW,EACXC,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClB,IAAI+C,EAAc7F,EAAEgE,KAAK1D,QAAO,SAAAC,GAAC,OAAIA,EAAE8C,UACvC,GAAIwC,EAAYpE,OAAS,EAAG,CAC1B,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQyF,GAAa,GAC3C7F,EAAEsE,KAAKe,QAAQG,OAAOC,OAAO,GAAIpE,MAGrC0B,eAAgB,oEAGlB,CACEvB,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,uLACLgC,OAAO,6FACPK,OATF,SASShD,EAAGC,GACR,IAAIoB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,cAAa,GACjE,GAAIa,EAAM,CACRA,EAAKb,WAAY,EACjB,IAAIyC,EAAQW,KAAKkC,MAAMzE,EAAKK,IAAM,GAClC1B,EAAEiB,OAASgC,EACX1B,GAAOvB,EAAGC,EAAJ,4DAAsBgD,EAAtB,aAGVO,QAlBF,SAkBUxD,EAAGC,GACT8F,KAAK/C,OAAOhD,EAAGC,IAEjB2C,UAAW,EACXC,YAtBF,SAsBc7C,EAAGC,GACbD,EAAEiB,OAAS,GAEb8B,eAAgB,uBAIlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,sFACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GAEbA,EAAKpB,KADO,GAEZoB,EAAKkD,QAAS,EACdlD,EAAKS,YAAc,SAACvD,EAAGC,EAAK6C,GACtBA,EAAKkD,SACPlD,EAAKpB,KALG,GAMRoB,EAAKkD,QAAS,KAIpBpD,UAAW,EACXC,YArBF,SAqBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,iGACLgC,OAAO,kEACPa,QATF,SASUxD,EAAGC,EAAK6C,EAAMe,GACpB,GAAIA,EAAMC,IAAMD,EAAMlC,GAAI,CACxB,IAAIsB,EAAQY,EAAMC,IAAMD,EAAMlC,GAC1BsE,EAAerC,KAAKkC,MAAM7C,EAAQ,GACtCjD,EAAEiB,OAASgF,EACX1E,GAAOvB,EAAGC,EAAJ,uBAAe6C,EAAKtB,KAApB,wBAA8ByE,EAA9B,WACFA,GAAgB,GAClB9C,GAAQnD,EAAGC,EAAK,2BAAQ,oDAAa6C,KAI3CF,UAAW,EACXC,YArBF,SAqBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SA2BlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,uJACLgC,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,GAMb9C,EAAEkG,WAAWnB,MACX,SAAC/E,EAAGC,GACFD,EAAEiB,OAAS,MAIjB2B,UAAW,EACXC,YAtBF,SAsBc7C,EAAGC,EAAK6C,GAClBiD,KAAKnH,OAAOoB,EAAGC,EAAK6C,IAEtBC,eAAgB,iDAIlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAO,EACPuI,WAAW,EACXxF,KAAK,qMACLgC,OAAO,mEACPU,OAVF,SAUSrD,EAAGC,EAAK6C,GACbA,EAAKnB,IAAM,EACX3B,EAAEyC,OAAS,EACXzC,EAAEiB,OAAS,EAAIjB,EAAEoG,QAAQ9F,QAAO,SAAAC,GAAC,MAAe,sBAAVA,EAAEiB,QAAgBC,QAE1DmB,UAAW,EACXC,YAhBF,SAgBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAIlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,mGACLgC,OAAO,oFACPU,OATF,SASSrD,EAAGC,EAAK6C,GACb,IAAK,IAAIuD,EAAE,EAAGA,EAAG,GAAG,EAAEvD,EAAKI,OAASmD,IAClCjD,EAAmBpD,EAAGC,EAAK,IAG/B+C,OAdF,SAcShD,EAAGC,EAAK6C,GACb,IAAK,IAAIuD,EAAE,EAAGA,EAAG,GAAG,EAAEvD,EAAKI,OAASmD,IAClCjD,EAAmBpD,EAAGC,EAAK,IAG/BuD,QAnBF,SAmBUxD,EAAGC,EAAK6C,GACd,IAAK,IAAIuD,EAAE,EAAGA,EAAG,GAAG,EAAEvD,EAAKI,OAASmD,IAClCjD,EAAmBpD,EAAGC,EAAK,IAG/B2C,UAAW,EACXG,eAAgB,6BAKlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,oFACRC,UAAW,EACXjC,KAAM,wKACN0C,OAVF,SAUSrD,EAAGC,EAAK6C,GACb,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAEA,EAAE8C,WAAS,GAC3DhC,EAAKgC,OAAOrD,EAAGC,EAAK6C,GACH,sBAAbzB,EAAKG,MACPD,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,4CAAoCH,EAAKV,KAAzC,OAEVqC,OAhBF,SAgBShD,EAAGC,EAAK6C,GACb,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAEA,EAAEyC,WAAS,GAC3D3B,EAAK2B,OAAOhD,EAAGC,EAAK6C,GACH,sBAAbzB,EAAKG,MACPD,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,4CAAoCH,EAAKV,KAAzC,OAEV6C,QAtBF,SAsBUxD,EAAGC,EAAK6C,EAAMe,GACpB,IAAIxC,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAEA,EAAEiD,YAAU,GAC5DnC,EAAKmC,QAAQxD,EAAGC,EAAK6C,EAAMe,GACV,sBAAbxC,EAAKG,MACPD,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,4CAAoCH,EAAKV,KAAzC,OAEV/B,OA5BF,SA4BSoB,EAAGC,EAAK6C,GACb,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAEA,EAAE3B,WAAS,GAC3DyC,EAAKzC,OAAOoB,EAAGC,EAAK6C,GACH,sBAAbzB,EAAKG,MACPD,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,4CAAoCH,EAAKV,KAAzC,OAEVkC,YAlCF,SAkCc7C,EAAGC,EAAK6C,GAClB,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAEA,EAAEsC,gBAAc,GAChExB,EAAKwB,YAAY7C,EAAGC,EAAK6C,GACR,sBAAbzB,EAAKG,MACPD,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,4CAAoCH,EAAK0B,eAAzC,OAGVA,eAAgB,6EAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,uHACLgC,OAAO,oFACPU,OATF,SASSrD,EAAGC,GAER,IADA,IAAIqG,EAAQrG,EAAIE,OAAOC,QAAQJ,EAAE0C,OAAOuB,MAAM,EAAG,IACxCoC,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACtB,IAAIhF,EAAI,eAAOiF,EAAMD,IACrBhF,EAAKK,IAAM,EACXL,EAAKM,GAAK,EACVN,EAAK1D,KAAO,EACZ0D,EAAKiB,KAAO,EACZtC,EAAEsB,MAAMyD,KAAKV,EAAgBrE,EAAGC,EAAKoB,MAIzCuB,UAAW,EACXC,YAtBF,SAsBc7C,EAAGC,GACbD,EAAEiB,OAAS,GAEb8B,eAAgB,uBAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,4GACLgC,OAAO,2EACPU,OATF,SASSrD,EAAGC,GACR,IAAIqG,EAAQrG,EAAIE,OAAOC,QAAQJ,EAAE0C,OAAOuB,MAAM,EAAGjE,EAAEsE,KAAK7C,QACxDzB,EAAEsE,KAAOgC,EAAMX,KAAI,SAAApF,GAAC,sBAASA,OAE/ByC,OAbF,SAaShD,EAAGC,GACR8F,KAAK1C,OAAOrD,EAAGC,IAEjB2C,UAAW,EACXC,YAjBF,SAiBc7C,EAAGC,GACb8F,KAAK1C,OAAOrD,EAAGC,IAEjB8C,eAAgB,kFAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,+FACLgC,OAAO,oFACPU,OATF,SASSrD,EAAGC,EAAK6C,GAOb9C,EAAEsB,MAAQtB,EAAEsB,MAAMqE,KANA,SAACtE,GACjB,IAAI0C,EAAW9D,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAKA,EAAEyC,QAAUzC,EAAEiD,SAAWjD,EAAE3B,WAAU,GAExF2H,EAAkB,CAAE/E,KADsEuC,EAAxFvC,KACwBb,KADgEoD,EAAlFpD,KACwBgC,OAD0DoB,EAA5EpB,OAC0BK,OADkDe,EAApEf,OAC0BQ,QAD0CO,EAA5DP,QAC2B5E,OADiCmF,EAAnDnF,OAC0BgE,UADyBmB,EAA3CnB,UAC6BG,eADcgB,EAAhChB,eACkCF,YADFkB,EAAhBlB,aAE9E,OAAO,2BAAIxB,GAASkF,OAIxB3D,UAAW,EACXG,eAAgB,iFAChBF,YApBF,SAoBc7C,EAAGC,GACb8F,KAAK1C,OAAOrD,EAAGC,KAInB,CACEuB,KAAM,kCACNc,KAAM,EACNZ,IAAK,EACLC,GAAI,EACJhE,KAAM,EACNC,MAAO,EACP+E,OAAQ,4CAERhC,KAAK,0TAEL0C,OAXF,SAWSrD,EAAGC,EAAK6C,GACbA,EAAK0D,YAAc,EACnB,IAAIC,EAAkB,SAACzG,EAAGC,EAAK6C,GAC7BA,EAAK0D,aAAe1D,EAAK0D,aAAe,GAAK,EAC7C1D,EAAKnC,KAAL,yEAA4B,EAAEmC,EAAK0D,YAAnC,qJAAwE,EAAE5C,KAAKkC,MAAMhD,EAAK0D,YAAY,GAAtG,iHAEF1D,EAAKlE,OAAS,SAACoB,EAAGC,EAAK6C,GACrB,IAAK,IAAIuD,EAAE,EAAGA,EAAG,EAAEvD,EAAK0D,YAAcH,IACpCjD,EAAmBpD,EAAGC,EAAK,GAE7BD,EAAE0G,WAAW3B,MAAK,SAAC/E,EAAGC,GAASD,EAAEiB,OAAS,EAAI2C,KAAKkC,MAAMhD,EAAK0D,YAAc,MAC5E1D,EAAKlE,YAAS+H,EACd7D,EAAKE,YAAS2D,EACd7D,EAAKU,aAAUmD,EACf7D,EAAKnC,KAAO,IAEdmC,EAAKE,OAASyD,EACd3D,EAAKU,QAAUiD,GAEjB7D,UAAW,EACXG,eAAgB,QAChBF,YAhCF,SAgCc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,IAIf,CACEH,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,+EAAkBb,EAAe,GAAjC,kCACN6C,OAAO,2EACPK,OATF,SASShD,EAAGC,EAAK6C,GACTqC,EAAanF,EAAGC,EAAK,CAAC,EAAE,EAAE,EAAE,MAC9B6C,EAAKtC,WAAY,EAEjBsC,EAAK8D,UAAY9D,EAAK8D,WAAa,EACnC9D,EAAK8D,WAAa,EAEd9D,EAAK8D,WAAa,GACpBzD,GAAQnD,EAAGC,EAAK,qBAAO,sEAAgB6C,KAI7CU,QArBF,SAqBUxD,EAAGC,EAAK6C,GACdiD,KAAK/C,OAAOhD,EAAGC,EAAK6C,IAEtBS,YAxBF,SAwBcvD,EAAGC,EAAK6C,GAClBA,EAAK8D,UAAY,GAEnBhE,UAAW,EACXG,eAAgB,aAChBF,YA7BF,SA6Bc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,EACXmB,EAAKnF,MAAQ,IAGjB,CACE6D,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kEAAeb,EAAe,GAA9B,6BACL6C,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACTqC,EAAanF,EAAGC,EAAK,CAAC,EAAE,EAAE,EAAE,MAC9BD,EAAEiB,OAAS,EAAI,EAAI6B,EAAKI,QAG5BN,UAAW,EACXG,eAAgB,6BAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kEAAeb,EAAe,GAA9B,wCAAyCA,EAAemE,MAAM,EAAE,GAAhE,wCAA2EnE,EAAe,IAC/F6C,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACb9C,EAAEuC,UAAU,IAAM,EAAIvC,EAAEuC,UAAU0B,MAAM,EAAE,GAAGS,OAAO,IAEtD9B,UAAW,EACXG,eAAgB,kCAChBF,YAdF,SAcc7C,EAAGC,EAAK6C,GAClB9C,EAAEyC,OAAS,IAGf,CACEjB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kEAAeb,EAAe,GAA9B,iCACL6C,OAAO,2EACPU,OATF,SASSrD,EAAGC,EAAK6C,GACbA,EAAKpB,KAAO1B,EAAEuC,UAAU,GACxBO,EAAKnB,IAAM3B,EAAEuC,UAAU,IAEzBK,UAAW,EACXC,YAdF,SAcc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,mHACLgC,OAAO,2EACP/D,OATF,SASSoB,EAAGC,EAAK6C,GACT9C,EAAEsE,KAAK7C,OAAS,IAClBoF,GAAK7G,EAAGC,GACRmD,EAAmBpD,EAAGC,EAAK,EAAE6C,EAAKI,OAClCJ,EAAKtC,WAAY,IAGrBoC,UAAW,EACXG,eAAgB,kBAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,oCACLgC,OAAO,2EACPK,OATF,SASShD,EAAGC,GACR4G,GAAK7G,EAAGC,GACR4G,GAAK7G,EAAGC,IAEV2C,UAAW,EACXG,eAAgB,OAChBF,YAfF,SAec7C,EAAGC,EAAK6C,GAClBA,EAAKnF,MAAQ,IAIjB,CACE6D,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,gFACNgC,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUShD,EAAGC,EAAK6C,GACb9C,EAAE8G,QAAU,GAEdtD,QAbF,SAaUxD,EAAGC,EAAK6C,GACd9C,EAAE8G,QAAU,GAEdzD,OAhBF,SAgBSrD,EAAGC,EAAK6C,GACb9C,EAAE8G,QAAU,GAEdjE,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClB9C,EAAE8G,QAAU,GAEd/D,eAAgB,yCAuBlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kEAAeb,EAAemE,MAAM,EAAE,GAAtC,mCACLtB,OAAO,oFACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACb9C,EAAEiB,OAAS,EAAIjB,EAAEuC,UAAU0B,MAAM,EAAE,GAAGS,OAAO,IAE/C7B,YAbF,SAac7C,EAAGC,GACbwE,GAAKzE,EAAGC,EAAK,IAEf8C,eAAgB,6DAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,8FACLgC,OAAO,kEACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACbA,EAAKS,YAAc,SAACvD,EAAGC,EAAK6C,GACfjC,EAAQb,EAAGC,EAAK,KAO/B4C,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAKlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,6DACNgC,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUShD,EAAGC,EAAK6C,GACbiE,GAAe/G,EAAGC,IAEpBuD,QAbF,SAaUxD,EAAGC,EAAK6C,GACdiE,GAAe/G,EAAGC,IAEpB4C,YAhBF,SAgBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,gDACNgC,OAAO,2EACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,EAAK6C,GACb,IAAK,IAAIuD,EAAE,EAAGA,EAAEvD,EAAKI,MAAM,EAAGmD,IAC5BU,GAAe/G,EAAGC,IAGtB8C,eAAgB,6BA8ClB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,uIACNgC,OAAO,oFACPC,UAAW,EACXoE,OAVF,SAUShH,EAAGC,EAAK6C,GACbM,EAAmBpD,EAAGC,EAAK,EAAI,EAAIgH,GAAmBjH,EAAGC,GAAO,EAAI6C,EAAKI,QAE3EH,eAAgB,kBAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,qGACNgC,OAAO,2EACPC,UAAW,EACXoE,OAVF,SAUShH,EAAGC,EAAK6C,GACb,IAAIoE,EAAiBD,GAAmBjH,EAAGC,GAC3C6C,EAAKpB,KAAOwF,EACZpE,EAAKnB,IAAMuF,GAEbrE,YAfF,SAec7C,EAAGC,EAAK6C,GAClBA,EAAKlF,OAAS,GAEhBmF,eAAgB,wBAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,uGACNgC,OAAO,2EACPC,UAAW,EACXoE,OAVF,SAUShH,EAAGC,EAAK6C,GACb,IAAIoE,EAAiBD,GAAmBjH,EAAGC,GAC3CD,EAAEiB,OAASiG,GAEbrE,YAdF,SAcc7C,EAAGC,EAAK6C,GAClB9C,EAAEyC,OAAS,GAEbM,eAAgB,mCAyBlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,kGACNgC,OAAO,2EACPqE,OATF,SASShH,EAAGC,EAAK6C,GACb,IAAK9C,EAAEsB,MAAM6C,QAAQrB,GAAO,CAAC,IAAD,gBACT9C,EAAEsB,MAAMqE,KAAI,SAAApF,GAAC,OAAEA,MADN,IAC1B,2BAAoC,CAAC,IAA5Bc,EAA2B,QAC9BA,EAAK2F,QAAW3F,EAAK2F,QAAUlE,EAAKkE,QACtC3F,EAAK2F,OAAOhH,EAAGC,EAAKoB,IAHE,iCAQ9BuB,UAAW,EACXC,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClB,IAAIqE,EAAUnH,EAAEgE,KAAK1D,QAAO,SAAAC,GAAC,OAAIA,EAAEyG,UACnC,GAAIG,EAAQ1F,OAAS,EAAG,CACtB,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQ+G,GAAS,GACvCnH,EAAEsE,KAAKe,QAAQG,OAAOC,OAAO,GAAIpE,MAGrC0B,eAAgB,oEAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,sIACNgC,OAAO,kEACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,EAAK6C,GACb,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAKA,GAAGuC,IAASvC,EAAEC,cAAa,GAC1Ea,IACFA,EAAKyC,KAAO,EACZ9D,EAAEiB,OAAS,EACPI,EAAKyC,KAAOzC,EAAKM,KAInB3B,EAAEsB,MAAQtB,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAIA,GAAKc,KACnCrB,EAAEoG,QAAF,CAAa/E,GAAb,mBAAsBrB,EAAEoG,WAS1BtD,EAAK8D,WAAa9D,EAAK8D,WAAa,GAAK,EACnB,GAAlB9D,EAAK8D,WACPzD,GAAQnD,EAAGC,EAAK,2CAAW,0DAAc6C,KAI/CD,YAnCF,SAmCc7C,EAAGC,EAAK6C,GAClBA,EAAKtC,WAAY,GAEnBuC,eAAgB,4BAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,+HACNgC,OAAO,oFACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,EAAK6C,GACb,IAAIsE,EAAYpH,EAAEsE,KAAK7C,OACvBzB,EAAEoG,QAAF,sBAAgBpG,EAAEoG,SAAlB,YAA8BpG,EAAEsE,OAChCtE,EAAEsE,KAAO,GACTtE,EAAEiB,OAASmG,EACX7F,GAAOvB,EAAGC,EAAJ,sDAAqBmH,EAArB,WAEFA,GAAa,IACfjE,GAAQnD,EAAGC,EAAK,yCAAY,6EAAkB6C,IAGlDD,YArBF,SAqBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,+FACNgC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACb9C,EAAEsE,KAAF,sBAAatE,EAAEoG,SAAf,YAA2BpG,EAAEsE,OAC7BtE,EAAEoG,QAAU,IAOdvD,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClB2B,GAAKzE,EAAGC,EAAK,IAEf8C,eAAgB,6DAElB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,oCACNgC,OAAO,oFACPC,UAAW,EACXI,OAVF,SAUShD,EAAGC,EAAK6C,GACbQ,EAAKtD,EAAGC,GACRqD,EAAKtD,EAAGC,IAEV8C,eAAgB,sBAChBF,YAfF,SAec7C,EAAGC,GACb,IAAK,IAAIoG,EAAE,EAAGA,EAAE,EAAGA,IACjB/C,EAAKtD,EAAGC,KAKd,CACEuB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,oCACNgC,OAAO,oFACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,GACRD,EAAEiB,OAAS,GAEb4B,YAbF,SAac7C,EAAGC,EAAK6C,GAClB9C,EAAEiB,OAAS,GAEb8B,eAAgB,uBAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,iDACNgC,OAAO,oFACPC,UAAW,EACXyE,MAVF,SAUQrH,EAAGC,EAAK6C,GACZ,IAAIiB,EAAW/D,EAAE0C,MAAM4E,MAAK,SAAA/G,GAAC,MAAc,sBAAVA,EAAEiB,QACnCxB,EAAEsB,MAAMyD,KAAKV,EAAgBrE,EAAGC,EAAJ,eAAa8D,MAE3ClB,YAdF,SAcc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,sEACNgC,OAAO,kEACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACbA,EAAKpB,KAAO,EACZoB,EAAKgB,KAAO,EAEZhB,EAAKkD,QAAS,EACdlD,EAAKS,YAAc,SAACvD,EAAGC,EAAK6C,GACtBA,EAAKkD,SACPlD,EAAKpB,KAAO,EACRoB,EAAKgB,IAAM,IACbhB,EAAKgB,IAAM,GAERhB,EAAKnB,GAAKmB,EAAKgB,KAAQ,IAC1BhB,EAAKtC,WAAY,GAEnBsC,EAAKkD,QAAS,KAIpBnD,YA5BF,SA4Bc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SA8BlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,qEACNgC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GAEbA,EAAKnF,MAAQ,EACbmF,EAAKkD,QAAS,EACdlD,EAAKS,YAAc,SAACvD,EAAGC,EAAK6C,GACtBA,EAAKkD,SACPlD,EAAKnF,MAAQ,EACbmF,EAAKkD,QAAS,KAIpBnD,YArBF,SAqBc7C,EAAGC,EAAK6C,GAClBA,EAAKnF,MAAQ,GAEfoF,eAAgB,QAGlB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,kEACRC,UAAW,EACXjC,KAAM,yCAYN0G,MArBF,SAqBQrH,EAAGC,EAAK6C,GACZ,IAAIyE,EAASvH,EAAE0C,MAAM4E,MAAK,SAAA/G,GAAC,MAAc,UAAVA,EAAEiB,QACjCxB,EAAEsE,KAAKe,QAAP,eAAmBkC,KAErB1E,YAzBF,SAyBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,SACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,gDACNgC,OAAO,kEACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GAIbW,GAAqBzD,EAAGC,IAE1B4C,YAhBF,SAgBc7C,EAAGC,EAAK6C,GAClB9C,EAAEiB,OAAS,GAEb8B,eAAgB,uBAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,2HACNgC,OAAO,2EACPC,UAAW,EACXyE,MAVF,SAUQrH,EAAGC,EAAK6C,GACZ,IAAIzB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEoG,SAASkB,MAAK,SAAA/G,GAAC,OAAIA,EAAE8C,UACrDrD,EAAEsE,KAAKe,QAAQhE,IAEjBwB,YAdF,SAcc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,4DACNgC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACb,IADmB,EACfwD,EAAQrG,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAEA,EAAEsC,gBAAcoB,MAAM,EAAG,GADvD,cAEFqC,GAFE,IAEnB,2BAAwB,CAAC,IAAhBjF,EAAe,QAClByB,GACFzB,EAAKwB,YAAY7C,EAAGC,EAAK6C,IAJV,8BAOnBvB,GAAOvB,EAAGC,EAAJ,uBAAeqG,EAAMX,KAAI,SAAApF,GAAC,OAAIA,EAAEiB,QAAMgG,KAAK,KAA3C,qCAER3E,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAGlB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,4EACNgC,OAAO,oFACPC,UAAW,EACXY,QAVF,SAUUxD,EAAGC,EAAK6C,EAAMe,GAChBA,EAAMC,IAAMD,EAAMlC,KACpBmB,EAAKgB,IAAM,EACXhB,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,IAGfkB,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,6HACNgC,OAAO,oFACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,EAAK6C,GACb,IAAI2E,EAASxH,EAAIE,OAAOC,QAAQJ,EAAEsE,KAAKhE,QAAO,SAAAC,GAAC,OAAKA,EAAE8C,SAAW,CAAC,gBAAMqE,SAASnH,EAAEiB,UAAS,GACxFiG,IACFA,EAAOpE,OAAOrD,EAAGC,EAAKwH,GACtBlG,GAAOvB,EAAGC,EAAJ,uBAAewH,EAAOjG,KAAtB,sCAGVqB,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClBQ,EAAKtD,EAAGC,GACRqD,EAAKtD,EAAGC,IAEV8C,eAAgB,uBAIlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,0EACLgC,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUShD,EAAGC,EAAK6C,GAcb6E,GAAiB3H,EAAGC,EAAK,GACzB0H,GAAiB3H,EAAGC,EAAK,IAE3B4C,YA3BF,SA2Bc7C,EAAGC,EAAK6C,GAClB9C,EAAEyC,OAAS,GAEbM,eAAgB,mCAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,8EACNgC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACb,IAAI8E,EAAgB3H,EAAIE,OAAOC,QAAQJ,EAAE2D,OAAOrD,QAAO,SAAAC,GAAC,OAAKA,EAAEuD,IAAM,GAAKvD,EAAEuD,IAAMvD,EAAEoB,OAAM,GACtFiG,IAIFA,EAAc9D,IAAM8D,EAAcjG,KAGtCkB,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClBM,EAAmBpD,EAAGC,EAAK,IAE7B8C,eAAgB,mCAsBlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,gMACNgC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACb9C,EAAEsB,MAAMqE,KAAI,SAAAtE,GACNA,EAAKb,YACPa,EAAKb,WAAY,EACjBa,EAAK1D,KAAO,ECn0Ef,SAAgB0D,GACrBA,EAAKgC,YAASsD,EACdtF,EAAK2B,YAAS2D,EACdtF,EAAKmC,aAAUmD,EACftF,EAAKzC,YAAS+H,EACdtF,EAAK2F,YAASL,EACdtF,EAAKgG,WAAQV,EACbtF,EAAKV,KAAO,GD6zEJkH,CAAOxG,QAIbwB,YAnBF,SAmBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAK,kEAAeb,EAAemE,MAAM,EAAE,GAAtC,yCACLtB,OAAO,2EACPC,UAAW,EACXhE,OAVF,SAUSoB,EAAGC,EAAK6C,GACTqC,EAAanF,EAAGC,EAAK,CAAC,EAAE,EAAE,EAAE,MAC9BD,EAAEyC,OAAS,IAGfI,YAfF,SAec7C,EAAGC,EAAK6C,GAClB9C,EAAEyC,OAAS,GAEbM,eAAgB,mCAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,gKACNgC,OAAO,2EACPC,UAAW,EACXI,OAVF,SAUShD,EAAGC,EAAK6C,GACb,IAAIgF,EAAQ7H,EAAIE,OAAOC,QAAQJ,EAAEsE,KAAKhE,QAAO,SAAAC,GAAC,OAAKA,EAAEyC,SAAW,CAAC,gBAAM0E,SAASnH,EAAEiB,UAAS,GACvFsG,GACFA,EAAM9E,OAAOhD,EAAGC,EAAK6C,GACrBvB,GAAOvB,EAAGC,EAAJ,uBAAe6H,EAAMtG,KAArB,qCAGND,GAAOvB,EAAGC,EAAK,6EAGnBuD,QApBF,SAoBUxD,EAAGC,EAAK6C,GACd,IAAIiF,EAAU9H,EAAIE,OAAOC,QAAQJ,EAAEsE,KAAKhE,QAAO,SAAAC,GAAC,OAAKA,EAAEiD,UAAY,CAAC,gBAAMkE,SAASnH,EAAEiB,UAAS,GAC1FuG,GACFA,EAAQvE,QAAQxD,EAAGC,EAAK6C,GACxBvB,GAAOvB,EAAGC,EAAJ,uBAAe8H,EAAQvG,KAAvB,qCAGND,GAAOvB,EAAGC,EAAK,6EAGnB4C,YA9BF,SA8Bc7C,EAAGC,EAAK6C,GAClBQ,EAAKtD,EAAGC,IAEV8C,eAAgB,uBAKlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,8EACNgC,OAAO,2EACPC,UAAW,EACXS,OAVF,SAUSrD,EAAGC,EAAK6C,GACT9C,EAAEsB,MAAMG,OAAS,IACnBzB,EAAEsB,MAAMtB,EAAEsB,MAAMG,OAAO,GAAK+D,OAAOC,OAAO,GAAIxF,EAAIE,OAAOC,QAAQJ,EAAEsB,MAAM2C,MAAM,EAAEjE,EAAEsB,MAAMG,OAAO,IAAI,MAGxGoB,YAfF,SAec7C,EAAGC,EAAK6C,GAClB9C,EAAEsE,KAAKe,QAAQ2C,GAAWhI,EAAGC,KAE/B8C,eAAgB,2DAuBlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,uHACNgC,OAAO,2EACPa,QATF,SASUxD,EAAGC,EAAK6C,EAAMe,GAEpB,IADA,IAAIoE,EAAYjI,EAAE2D,OAAOQ,QAAQN,GACjC,MAAc,CAAC7D,EAAE2D,OAAOsE,EAAU,GAAIjI,EAAE2D,OAAOsE,EAAU,IAAzD,eAA8D,CAAzD,IAAIC,EAAC,KACJA,IACFA,EAAEpE,KAAOhB,EAAKpB,OAIpBkB,UAAW,EACXC,YAlBF,SAkBc7C,EAAGC,EAAK6C,GAClBM,EAAmBpD,EAAGC,EAAK,IAE7B8C,eAAgB,mCA0BlB,CACEvB,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+C,KAAM,4FACNgC,OAAO,6FACPC,UAAW,EAEXY,QAXF,SAWUxD,EAAGC,EAAK6C,EAAMe,GACpB,IAQIK,EAAMlE,EAAE2D,OAAOQ,QAAQN,GAC3B7D,EAAE2D,OAAOO,GATS,CAChB1C,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRmB,IAAK,EACLtD,WAAW,IAMfqC,YAxBF,SAwBc7C,EAAGC,EAAK6C,GAClB,IAAIqF,EAAQnI,EAAE0C,MAAM4E,MAAK,SAAA/G,GAAC,MAAe,4BAAVA,EAAEiB,QACjC2G,EAAMnF,YAAS2D,EACfwB,EAAMxH,KAAO,GACbX,EAAEsB,MAAMyD,KAAKV,EAAgBrE,EAAGC,EAAJ,eAAakI,KAErCrF,EAAKI,OAAS,GAChBC,GAAQnD,EAAGC,EAAK,mDAAY,kFAAkB6C,IAGlDC,eAAgB,wEAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,2EACRC,UAAW,EACXjC,KAAM,gDAEN0C,OAXF,SAWSrD,EAAGC,EAAK6C,GACb0B,GAAkBxE,EAAGC,EAAK6C,IAG5BD,YAfF,SAec7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,GAEboB,eAAgB,SA+BlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,2EACRC,UAAW,EACXjC,KAAM,yGAEN/B,OAXF,SAWSoB,EAAGC,EAAK6C,GACb,IADoB,IAAD,WACVuD,GACP,IAAIhF,EAAOrB,EAAEsB,MAAM+E,GACftC,EAAW9D,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAGA,EAAE+B,MAAOjB,EAAKiB,KAAK,GAAGQ,EAAKI,OAAO,OAAO,GAC9F,GAAIa,EAAU,CACZ/D,EAAEsB,MAAM8C,OAAOiC,EAAG,EAAGhC,EAAgBrE,EAAGC,EAAJ,eAAa8D,KACjD,IAAK,IAAIqE,EAAE,EAAGA,EAAE/G,EAAK6B,MAAOkF,IAC1BC,GAAerI,EAAGC,EAAKD,EAAEsB,MAAM+E,IAEjCrG,EAAEsB,MAAM+E,GAAG7F,UAAYa,EAAKb,YARvB6F,EAAE,EAAGA,EAAErG,EAAEsB,MAAMG,OAAQ4E,IAAM,EAA7BA,IAYXtD,eAAgB,wBAElB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,GACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,2EACRC,UAAW,EACXjC,KAAM,2FACN/B,OAVF,SAUSoB,EAAGC,EAAK6C,GACb,IAAIzB,EAAI,eAAOpB,EAAIE,OAAOC,QAAQJ,EAAE0C,OAAO,IAC3C1C,EAAEsE,KAAKe,QAAQhE,GACf,IAAK,IAAIgF,EAAE,EAAGA,EAAG,EAAEvD,EAAKI,MAAQmD,IAC9BgC,GAAerI,EAAGC,EAAKoB,IAG3B0B,eAAgB,6BAGlB,CACEvB,KAAK,eACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,2EACRC,UAAW,EACXjC,KAAM,2FACN0C,OAVF,SAUSrD,EAAGC,EAAK6C,GACb9C,EAAEsE,KAAKe,QAAP,eAAmBpF,EAAIE,OAAOC,QAAQkI,GAAS,MAEjD1J,OAbF,SAaSoB,EAAGC,EAAK6C,GACb9C,EAAEsE,KAAKe,QAAP,eAAmBpF,EAAIE,OAAOC,QAAQkI,GAAS,MAEjDvF,eAAgB,gEAChBF,YAjBF,SAiBc7C,EAAGC,EAAK6C,GAClB9C,EAAEsE,KAAKe,QAAP,eAAmBpF,EAAIE,OAAOC,QAAQkI,GAAS,OAInD,CACE9G,KAAK,2BACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,4CACRC,UAAW,EACXjC,KAAM,mCACN0C,OAVF,SAUSrD,EAAGC,GACR,IAAK,IAAIoG,EAAE,EAAGA,EAAE,EAAGA,IACjBrG,EAAEsE,KAAKe,QAAQkD,GAAuBvI,EAAGC,KAG7C8C,eAAgB,qBAChBF,YAhBF,SAgBc7C,EAAGC,GACbD,EAAEsE,KAAKe,QAAQkD,GAAuBvI,EAAGC,OAMlCqI,EAAU,CAiDrB,CACE9G,KAAK,2BACLc,KAAK,EACLZ,IAAI,IACJC,GAAG,KACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,yIACRwD,WAAW,EACXvD,UAAW,EACXjC,KAAM,gDACN0C,OAXF,SAWSrD,EAAGC,EAAK6C,GACT9C,EAAEsB,MAAMG,OAAS,EACnBzB,EAAEsB,MAAQtB,EAAEsB,MAAM2C,MAAM,GAGxBjE,EAAEsB,MAAQtB,EAAEsB,MAAM2C,MAAM,EAAGjE,EAAEsB,MAAMG,OAAO,IAG9CsB,eAAgB,gDAChBF,YApBF,SAoBc7C,EAAGC,EAAK6C,GAClB9C,EAAEsE,KAAKe,QAAP,eAAmBvC,MA8BvB,CACEtB,KAAK,qBACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,iEACRC,UAAW,EACXuD,WAAW,EACXxF,KAAM,iFACN0C,OAXF,SAWSrD,EAAGC,EAAK6C,GACb,IAAI0F,EAAc,CAChBhH,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRmB,IAAK,EACLtD,WAAW,GAEbR,EAAE2D,OAAOoB,KAAT,eAAkByD,IAClBxI,EAAE2D,OAAOoB,KAAT,eAAkByD,KAEpBzF,eAAgB,QAChBF,YAxBF,SAwBc7C,EAAGC,EAAK6C,GAClBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,IAIf,CACEH,KAAK,iCACLc,KAAK,EACLZ,IAAI,EACJC,GAAG,EACHhE,KAAK,EACLC,MAAM,EACN+E,OAAQ,kDACRwD,WAAW,EACXvD,UAAW,EACXjC,KAAM,qKACN4C,YAXF,SAWcvD,EAAGC,EAAK6C,GAClB,IAAIoB,EAAMlE,EAAEsE,KAAKH,QAAQrB,IACpBoB,IACHlE,EAAEsE,KAAKJ,GAAP,2BAAkBjE,EAAIE,OAAOC,QAAQJ,EAAE0C,OAAO,IAA9C,IAAkDa,YAAaT,EAAKS,YAAaR,eAAgBD,EAAKC,eAAgBoD,WAAU,MAGpIpD,eAAgB,qEAChBF,YAlBF,SAkBc7C,EAAGC,EAAK6C,GAClBA,EAAKS,YAAYvD,EAAGC,EAAK6C,MEv6FpB2F,GF66FiB/F,EAAMiD,KAAI,SAAApF,GAAC,kBAASA,EAAEiB,SAAQgG,KAAK,ME76F1C,CACnB,CACEhG,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,6FAEV,CACEnB,KAAM,iCACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,uHACRhC,KAAM,2DACN0C,OANF,SAMSrD,EAAGC,EAAK6C,GACb,IAAIe,EAAQ5D,EAAIE,OAAOC,QAAQJ,EAAE2D,QAAQ,GACzCE,EAAMnC,KAAO,EACbmC,EAAMlC,IAAM,IAGhB,CACEH,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,4FACRhC,KAAM,mHACN/B,OANF,SAMSoB,EAAGC,EAAK6C,GACb,IAAIzB,EAAOrB,EAAEsB,MAAMtB,EAAEsB,MAAMG,OAAO,GAC9BJ,IACFA,EAAKyC,KAAOhB,EAAKpB,OAIvB,CACEF,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,4FACRhC,KAAM,eACN0C,OANF,SAMSrD,EAAGC,EAAK6C,GACbA,EAAKtC,WAAY,IAGrB,CACEgB,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRhC,KAAM,+DACN0C,OANF,SAMSrD,EAAGC,EAAK6C,GACb,IAAI4F,EAAS,2BAAO5F,GAAP,IAAapB,IAAI,EAAGC,GAAG,IACpC3B,EAAE2D,OAAOS,OAAOpE,EAAE2D,OAAOlC,OAAO,EAAG,EAAGiH,KAG1C,CACElH,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,uHACRhC,KAAM,eACNgI,UAAU,GAEZ,CACEnH,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRhC,KAAM,kEACNqC,OANF,SAMShD,EAAGC,GACRD,EAAE8G,QAAU,IAGhB,CACEtF,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,4FACRhC,KAAM,gIACN/B,OANF,SAMSoB,EAAGC,EAAK6C,GACb,IAAI8F,EAAO5I,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAgB,GAAXA,EAAE3C,SAC9BgL,EAAKnH,OAAS,IAChBxB,EAAIE,OAAOC,QAAQwI,GAAM,GAAG9E,KAAOhB,EAAKpB,OAI9C,CACEF,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRhC,KAAM,0EACN0C,OANF,SAMSrD,EAAGC,GACRA,EAAIE,OAAOC,QAAQJ,EAAE2D,QAAQ,GAAGjC,KAAO,IAG3C,CACEF,KAAM,2BACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,8GACRgG,UAAU,EACVhI,KAAM,0IACN/B,OAPF,SAOSoB,EAAGC,EAAK6C,GACb,IADmB,EACf8F,EAAO5I,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAgB,GAAXA,EAAE3C,SADf,cAEFqC,EAAIE,OAAOC,QAAQwI,GAAM3E,MAAM,EAAE,IAF/B,IAEnB,2BAAsD,SAC/CH,KAAOhB,EAAKpB,KAHA,iCAQvB,CACEF,KAAM,iCACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,uHACRhC,KAAM,qHACN0G,MANF,SAMQrH,EAAGC,EAAK6C,GACZ,IAAIoB,EAAMlE,EAAEsB,MAAMG,OAAS,EACvBzB,EAAEsB,MAAM4C,KACV2E,EAAY7I,EAAGC,EAAK,QAASiE,EAAKpB,EAAKpB,IAAI,GAC3CH,GAAOvB,EAAGC,EAAJ,+CAAmBD,EAAEsB,MAAM4C,GAAK1C,KAAhC,8BAA2CsB,EAAKpB,IAAI,EAApD,0BAKZ,CACEF,KAAM,2BACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,gIACRhC,KAAM,iCACNmI,YAAY,GAGd,CACEtH,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRhC,KAAM,eACNoI,SAAS,GAGX,CACEvH,KAAM,qBACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,qGACRhC,KAAM,0FACNgI,UAAU,EACVI,SAAS,EACTvF,QARF,SAQUxD,EAAGC,EAAK6C,EAAMzB,GAChBA,EAAKyC,IAAMzC,EAAKM,KAClB3B,EAAE8G,QAAU,KAKlB,CACEtF,KAAM,qBACNmB,OAAQ,qGACRjB,KAAM,EACNC,GAAI,GAQN,CACEH,KAAM,iCACNmB,OAAQ,uHACRjB,KAAM,EACNC,GAAI,GACJhB,KAAM,eACNgI,UAAU,GAQZ,CACEnH,KAAM,iCACNmB,OAAQ,mIACRjB,KAAM,EACNC,GAAI,EACJhB,KAAM,4FACNgI,UAAU,EACVtB,MAPF,SAOQrH,EAAGC,EAAK6C,GAAO,IAAD,gBACD9C,EAAEsB,OADD,IAClB,2BAA0B,SACnBwC,KAAO,GAFI,iCAOtB,CACEtC,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,4FACRhC,KAAM,gDACN0G,MANF,SAMQrH,EAAGC,EAAK6C,GACZ0B,GAAkBxE,EAAGC,EAAK6C,KAI9B,CACEtB,KAAM,2BACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,8GACRhC,KAAM,oCACN0G,MANF,SAMQrH,EAAGC,EAAK6C,GACZ9C,EAAEiB,OAAS,IAIf,CACEO,KAAM,uCACNE,IAAK,EACLC,GAAI,EACJgH,UAAU,EACVhG,OAAQ,gIACRhC,KAAM,oCACN0G,MAPF,SAOQrH,EAAGC,EAAK6C,GACZ9C,EAAEiB,OAAS,IAIf,CACEO,KAAM,eACNE,IAAK,EACLC,GAAI,EACJgB,OAAQ,uHACRhC,KAAM,sDACN/B,OANF,SAMSoB,EAAGC,EAAK6C,GACbkG,GAAUhJ,EAAGC,IAEfsD,YATF,SAScvD,EAAGC,EAAK6C,GACdA,EAAKpB,IAAM,IACboB,EAAKpB,IAAM,KAKjB,CACEF,KAAM,uCACNE,KAAM,EACNC,GAAI,EACJgH,UAAU,EACVhG,OAAQ,yIACRhC,KAAM,yEACN0G,MAPF,SAOQrH,EAAGC,EAAK6C,GACZ9C,EAAEiJ,MAAQ,MCjQHC,EAAW,CACtB,CACE1H,KAAM,QACNb,KAAM,uBACNC,OAHF,SAGSS,GACLA,EAAKK,KAAO,IAUhB,CACEF,KAAM,QACNb,KAAM,QACNC,OAHF,SAGSS,GACLA,EAAKK,KAAO,EACZL,EAAKM,IAAM,IAIf,CACEH,KAAM,WACNb,KAAM,6BACNC,OAHF,SAGSS,GACLA,EAAKiB,MAAQ,IAIjB,CACEd,KAAM,uBACNb,KAAM,uBACNC,OAHF,SAGSS,GACLA,EAAKzD,MAAQyD,EAAKzD,OAAS,EAC3ByD,EAAKzD,OAAS,IAIlB,CACE4D,KAAM,eACNb,KAAM,yFACNC,OAHF,SAGSS,GACLA,EAAK8H,SAAU,EACS,iBAAb9H,EAAKV,KACdU,EAAKV,MAAQ,kBAGbU,EAAKV,KAAO,CAACU,EAAKV,KAAM,oBAQ9B,CACEa,KAAM,UACNb,KAAM,iDACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACbrB,EAAEiB,OAAS,OAoBnB,CACEO,KAAM,gBACNb,KAAM,6DACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACbkD,EAAcvE,EAAGC,EAAK,QAM9B,CACEuB,KAAM,gBACNb,KAAM,iDACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACbiC,EAAKtD,EAAGC,GACRqD,EAAKtD,EAAGC,QAMhB,CACEuB,KAAM,gBACNb,KAAM,6DACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACb+B,EAAmBpD,EAAGC,EAAK,QAMnC,CACEuB,KAAM,gBACNb,KAAM,6DACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACbgH,GAAerI,EAAGC,EAAKoB,QAM/B,CACEG,KAAM,4BACNb,KAAM,6DACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACb0F,GAAe/G,EAAGC,GAClB8G,GAAe/G,EAAGC,QAM1B,CACEuB,KAAM,sBACNb,KAAM,uIACNC,OAHF,SAGSS,GAELA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACb,IAAI0C,EAAW9D,EAAIE,OAAOC,QAAQJ,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAW,GAARA,EAAE+B,SAAW,GAC9DyB,KACFA,EAAWM,EAAgBrE,EAAGC,EAAJ,eAAa8D,KAC9BpC,GAAK,EACd3B,EAAEsB,MAAMyD,KAAKhB,SAOzB,CACIvC,KAAM,iCACNb,KAAM,kFACNC,OAHJ,SAGWS,GAELA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACb,GAAIA,EAAM,CACR,IAAI0C,EAAW/D,EAAE0C,MAAM4E,MAAK,SAAA/G,GAAC,OAAIA,EAAEiB,MAAQH,EAAKG,SAChDuC,EAAWM,EAAgBrE,EAAGC,EAAJ,eAAa8D,KAC9BrC,IAAM,EACfqC,EAASpC,GAAK,EACdoC,EAASpG,KAAO,EAChBoG,EAASzB,KAAO,EAChByB,EAASb,MAAQ,EACjBlD,EAAEsB,MAAMyD,KAAKhB,SAOzB,CACEvC,KAAM,eACNb,KAAM,uGACNC,OAHF,SAGSS,GAELA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACb,IAAI0C,EAAW/D,EAAE0C,MAAM4E,MAAK,SAAA/G,GAAC,OAAIA,EAAEiB,MAAQH,EAAKG,QAC5CuC,GACF/D,EAAEsE,KAAKe,QAAQtB,QAoBvB,CACEvC,KAAM,gBACNb,KAAM,qFACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAYrE,KAAK,CACpBvD,KAAMuE,KAAKvE,KACXZ,OAFoB,SAEbZ,EAAGC,EAAKoB,GACbrB,EAAEK,SAAS0E,KAAX,eAAoB9E,EAAIE,OAAOC,QAAQJ,EAAEqJ,OAAO,UAmBxD,CACE7H,KAAM,eACNb,KAAM,qEACNC,OAHF,SAGSS,GACLA,EAAK+H,YAAL,sBAAuB/H,EAAK+H,aAA5B,YAA4C/H,EAAK+H,iB,cCjQhD,SAASE,EAAWC,EAAIC,GAC7B,IAAIC,EAAU,GAEd,IAAK,IAAIC,KAAKF,EACZC,EAAQC,GAAKH,EAAGC,EAAIE,GAAIA,GAG1B,OAAOD,EAiBF,IAAME,EAAb,WACE,WAAYC,GAIV,GAJiB,oBACjB7D,KAAK6D,KAAOA,EAEZ7D,KAAKhE,IAAM,EACQ,iBAAR6H,EACT,IAAK,IAAIvD,EAAE,EAAGA,EAAEuD,EAAKnI,OAAQ4E,IAC3BN,KAAKhE,KAAO6H,EAAKC,WAAWxD,QAI9BN,KAAKhE,IAAM6H,EAXjB,qDAmBI,IAAIrJ,EAA2B,IAAvBqD,KAAKkG,IAAI/D,KAAKhE,OAClBgI,EAASxJ,EAAIqD,KAAKkC,MAAMvF,GAE5B,OADAwF,KAAKhE,KAAO,EACLgI,IAtBX,gCAyBYxJ,GACR,OAAOqD,KAAKkC,MAAMvF,EAAIwF,KAAK5F,YA1B/B,6BA6BS6J,GACL,IAAIC,EAAMD,EAAIvI,OACd,OAAOuI,EAAIjE,KAAKmE,UAAUD,MA/B9B,8BAkCUjG,GAMN,IALA,IAAImG,EAAQnG,EAAKC,MAAM,GACnBmG,EAAWpG,EAAKvC,OAChB4I,EAAW,EACXC,EAAW,IAAIC,MAAMH,GAElBA,GAAU,CACf,IAAII,EAAaJ,EAAWrE,KAAK5F,SAAY,EAC7CmK,EAASD,KAAcF,EAAMK,GAC7BL,EAAMK,GAAaL,IAAQC,GAG7B,OAAOE,MA9CX,KCpBMG,EAAW,4vBAAoKC,MAAM,KAErLC,EAAQ,4QAA0DD,MAAM,KAyBxEE,EAAM,+KAsRNC,EAAa,CA9OR,qgBA4BE,mWAiBC,wXAoBH,6YAyDC,uPAcD,qXAyEG,8hBA+BRC,EAAY,CAAC,iEAClB,iEACA,oEACA,yGACA,2FACA,uDACA,uEACA,6DACA,yDACA,qEAEA,yDACA,mDACA,iDACA,iDACA,8DACA,+BACA,0DAEA,mDACA,0DAEA,2CACA,oGAEA,6EAEA,yDACA,2FACA,sHACA,yDACA,2FACA,qHACA,2EACA,8EACA,kFACA,gFACA,6CACA,2CACA,yBACA,qCACA,+BACA,2CACA,2CACA,2CACA,6CACA,sFACA,qIAEA,wDACA,iDACA,2CACA,iFACCnF,KAAI,SAAAoF,GAAQ,OAAIA,EAASL,MAAM,KAAKpK,QAAO,SAAAe,GAAI,MAAY,IAARA,QAGrD,SAAS2J,EAAgBC,GACvB,IAAIC,EAAe,CAAC,SAAK,4BACrBC,EAAYzI,EAAMpC,QAAO,SAAAC,GAAC,OAAM2K,EAAaxD,SAASnH,EAAEiB,SAC5D,OAAOyJ,EAAIG,OAAOD,GAAW3J,KAGxB,SAAS6J,IACd,IAAIJ,EAAM,IAAItB,EAAK/F,KAAKzD,UACxB,MAAO,IAAM8K,EAAIG,OAAOX,GAAY,IAAMO,EAAgBC,GAGrD,SAASK,IACd,IAAIL,EAAM,IAAItB,EAAK/F,KAAKzD,UACxB,OAAO8K,EAAIG,OAAOT,GAASY,OAAOC,aAAa,GAAGP,EAAIf,UAAU,KAG3D,SAASuB,EAAgBR,EAAKzJ,EAAMkK,EAAQC,GACjD,IAAIC,EAAQF,EAIZ,OAHIC,IACFC,GAASX,EAAIf,UAAUyB,EAASD,EAAS,IAEpC,CAACE,EAAOpK,GA4BjB,SAASqK,EAAS7H,GAChB,IADsB,EAClB8H,EAAS,GADS,cAGL9H,GAHK,IAGtB,2BAAuB,CAAC,IAAf3C,EAAc,QACjByK,EAAOzK,GACTyK,EAAOzK,IAAS,EAGhByK,EAAOzK,GAAQ,GARG,8BAatB,OADYmE,OAAOuG,KAAKD,GAAQpH,OACnBiB,KAAI,SAAAqG,GAAC,gBAAOF,EAAOE,GAAd,YAAoBA,MAAKxE,KAAK,MAYlD,SAASyE,EAAmBC,EAAUC,EAAQlB,GAC5C,IADiD,EAC7CjH,EAAO,GADsC,cAEnCkI,EAASxB,MAAM,OAFoB,IAEjD,2BAAoC,CAAC,IAC/BrJ,EAD8B,QACrBqJ,MAAM,KACnB1G,EAAKe,KAAK0G,EAAgBR,EAAK5J,EAAK,GAAI+K,SAAS/K,EAAK,IAAK+K,SAAS/K,EAAK,OAJ1B,8BAOjD,OADA2C,EAAOiH,EAAIoB,QA5Cb,SAAkBrC,GAChB,IADqB,EACjBhG,EAAO,GADU,cAGJgG,GAHI,IAGrB,2BACE,IADqB,IAAd3I,EAAa,QACXgF,EAAE,EAAGA,EAAEhF,EAAK,GAAIgF,IACvBrC,EAAKe,KAAK1D,EAAK,IALE,8BASrB,OAAO2C,EAmCYsI,CAAStI,IAAOC,MAAM,EAAGkI,GAmBvC,SAASI,EAAiBC,GAC/B,IAAIxI,EAAO,GACPiH,EAAM,IAAItB,EAAK6C,GAGnBxI,EAAI,sBAAOA,GAAP,YAAgBiI,EAncH,iGAmcqC,EAAGhB,KACzDjH,EAAI,sBAAOA,GAAP,YAAgBiI,EA9bH,+EA8bqC,EAAGhB,KACzDjH,EAAI,sBAAOA,GAAP,YAAgBiI,EAAmBrB,EAAQ,EAAGK,KAQlD,IALA,IAAIiB,EAAWjB,EAAIG,OAAOP,GAItB4B,EAAa,IAHjBzI,EAAI,sBAAOA,GAAP,YAAgBiI,EAAmBC,EAAU,GAAIjB,MAG1BxJ,OAClB4E,EAAE,EAAGA,EAAEoG,EAAYpG,IAC1BrC,EAAKe,KAAKiG,EAAgBC,IAG5B,OAAOY,EAAS7H,GAGX,SAAS0I,EAAiBF,GAC/B,IAAIxI,EAAO,GACPiH,EAAM,IAAItB,EAAK6C,GAGnBxI,EAAI,sBAAOA,GAAP,YAAgBiI,EAzdH,iGAydqC,EAAGhB,KACzDjH,EAAI,sBAAOA,GAAP,YAAgBiI,EApdH,+EAodqC,EAAGhB,KACzDjH,EAAI,sBAAOA,GAAP,YAAgBiI,EAAmBrB,EAAQ,EAAGK,KAOlD,IADA,IAAIwB,EAAa,IAHjBzI,EAAI,sBAAOA,GAAP,YA/CN,SAA6BmI,EAAQlB,GACnC,IADwC,EACpCjH,EAAO,GACP2I,EAAO1B,EAAIoB,QAAJ,sBAAgBvB,GAAhB,YAA8BA,KAFD,cAInB6B,GAJmB,IAIxC,2BAA2B,CAAC,IAAnB5B,EAAkB,QAEzB,IADA/G,EAAI,sBAAOA,GAAP,YAAgB+G,KACXtJ,QAAU0K,EACjB,OAPoC,8BAWxC,OAAOlB,EAAIoB,QAAQrI,GAAMC,MAAM,EAAGkI,GAoCdS,CAAoB,GAAI3B,MAGjBxJ,OAClB4E,EAAE,EAAGA,EAAEoG,EAAYpG,IAC1BrC,EAAKe,KAAKiG,EAAgBC,IAG5B,OAAOY,EAAS7H,GAGX,SAAS6I,EAAcL,GAG5B,OAFU,IAAI7C,EAAK6C,GACErM,SAAW,IAAOuM,EAAmBH,GACzCC,GAGZ,SAASM,EAAYC,GAC1B,IAAIC,EAAUD,EAAUrC,MAAM,MAAM/E,KAAI,SAAApF,GAAC,OAAE6L,SAAS7L,EAAEmK,MAAM,KAAK,OAC7DuC,EAAQF,EAAUrC,MAAM,MAAM/E,KAAI,SAAApF,GAAC,OAAGA,EAAEmK,MAAM,KAAK,MACvDsC,EAAUA,EAAQ1M,QAAO,SAAAC,GAAC,OAAK2M,MAAM3M,MACrC,IAAI4M,EAAY,YAAO,IAAIC,IAAIH,IAC/B,GAAIA,EAAMxL,QAAU0L,EAAa1L,OAC/B,OAAO,EAGT,IADA,IACA,MADmB,CAAC,2BAAQ,UAC5B,eAA+B,CAA1B,IAAIJ,EAAI,KACX,GAAI4L,EAAMvF,SAASrG,GACjB,OAAO,EAX0B,oBAcvB2L,GAduB,IAcrC,2BAAuB,CACrB,GADqB,QACb,EACN,OAAO,GAhB0B,8BAoBrC,QADgB7K,IAAEkL,IAAIL,GACN,IJ9gBX,SAASM,EAAKtN,EAAGC,EAAKsN,EAAIC,EAAItJ,GACnC,IAAI7C,EAAOrB,EAAEuN,GAAInJ,OAAOF,GAAO,EAAG,GAAG,GAErC,OADAlE,EAAEwN,GAAIzI,KAAK1D,GACJA,EAGF,SAASR,EAAQb,EAAGC,EAAKqC,GAC9B,OAAItC,EAAEyC,OAASH,GACbtC,EAAEyC,OAASH,GACJ,IAIPf,GAAOvB,EAAGC,EAAK,6BACR,GAIJ,SAASsE,EAAcvE,EAAGC,EAAK2L,GAGpC,IAFA,IAAI6B,EAAS,GAEJpH,EAAE,EAAGA,EAAEuF,EAAOvF,IAAK,CAC1B,IAAIpB,EAAWhF,EAAIE,OAAO+E,IAAI,GAAG,EACjClF,EAAEuC,UAAU0C,IAAa,EACzBwI,EAAO1I,KAAKE,GAGdjF,EAAEyN,OAASA,EAGN,SAAStI,EAAanF,EAAGC,EAAKe,GAEnC,IADA,IAAIiC,EAAQ,EACHoD,EAAE,EAAGA,EAAE,EAAGA,IACbrG,EAAEuC,UAAU8D,GAAKrF,EAAaqF,KAChCpD,GAASjC,EAAaqF,GAAKrG,EAAEuC,UAAU8D,IAI3C,GAAIrG,EAAEuC,UAAU,GAAKU,EAEnB,OADA1B,GAAOvB,EAAGC,EAAK,6BACR,EAIP,IAAK,IAAIoG,EAAE,EAAGA,EAAE,EAAGA,IACjBrG,EAAEuC,UAAU8D,IAAMrF,EAAaqF,GAE3BrG,EAAEuC,UAAU8D,GAAK,IACnBrG,EAAEuC,UAAU,IAAMvC,EAAEuC,UAAU8D,GAC9BrG,EAAEuC,UAAU8D,GAAK,GAMrB,OAFArG,EAAEyN,OAAS,IAEJ,EAIX,SAASC,EAAI1N,EAAGC,EAAKoB,GACnB,OAAKA,EAAKb,YACRa,EAAKb,WAAY,GACV,GA0BX,SAASmN,EAAI3N,EAAGC,EAAK+D,EAAME,GACzB,IAAI7C,EAAOrB,EAAEgE,GAAME,GAEnBoJ,EAAKtN,EAAGC,EAAK+D,EADU,SAARA,EAAmB,UAAY,WAClBE,GAC5B3C,GAAOvB,EAAGC,EAAJ,UAAYoB,EAAKG,KAAjB,wBACFH,EAAKgG,OACPhG,EAAKgG,MAAMrH,EAAGC,EAAKoB,GAIhB,SAASwH,EAAY7I,EAAGC,EAAK+D,EAAME,EAAKJ,GAC7C,IAAIzC,EAAOrB,EAAEgE,GAAME,GAEf7C,IAEFA,EAAKyC,IAAMzC,EAAKyC,KAAO,EACvBzC,EAAKyC,KAAOA,EACZvC,GAAOvB,EAAGC,EAAJ,UAAYoB,EAAKG,KAAjB,wBAA2BsC,EAA3B,uBAEFzC,EAAKyC,KAAOzC,EAAKM,KAInBN,EAAKb,WAAY,IAKhB,SAAS4C,EAAmBpD,EAAGC,EAAKkM,GACzC,IAAItI,EAAQ5D,EAAIE,OAAOC,QAAQJ,EAAE2D,OAAOrD,QAAO,SAAAC,GAAC,OAAKA,EAAEuD,IAAMvD,EAAEoB,OAAM,GACrE,GAAIkC,EAAO,CACT,IAAIK,EAAMlE,EAAE2D,OAAOQ,QAAQN,GAC3BgF,EAAY7I,EAAGC,EAAK,SAAUiE,EAAKiI,IAoBhC,SAAS9H,EAAgBrE,EAAGC,EAAKoB,GAOtC,OANAA,EAAKyC,IAAM,EACXzC,EAAK6B,MAAQ7B,EAAK6B,OAAS,OACNyD,GAAjBtF,EAAK4D,WACP5D,EAAK4D,SAAYhF,EAAIE,OAAO+E,IAAI,GAAK,GAEvC7D,EAAKb,UAAYR,EAAE4N,gBACZvM,EAGF,SAASiC,EAAKtD,EAAGC,GAElBD,EAAE6N,YAAe7N,EAAEsE,KAAK7C,QAAU,EACpCF,GAAOvB,EAAGC,EAAK,oDAIbD,EAAEgE,KAAKvC,OAAS,GAClBzB,EAAEsE,KAAKe,QAAQrF,EAAEgE,KAAK8J,OAInB,SAASjH,GAAK7G,EAAGC,GACtB,IAAIiE,EAAMjE,EAAIE,OAAO+E,IAAIlF,EAAEsE,KAAK7C,QAAU,GACrCyC,GACHlE,EAAEsE,KAAKF,OAAOF,EAAK,GAoFhB,SAASpD,GAAad,EAAGC,GAC9BD,EAAE+N,OAAS9N,EAAIE,OAAOC,QAAQJ,EAAEqJ,OAAOpF,MAAM,EAAG,GAIlD,SAAqBjE,GACnBA,EAAE+N,OAAS/N,EAAE+N,OAAOrJ,MAAK,SAACnE,EAAEoE,GAC1B,OAAIA,EAAExD,WAAaZ,EAAEY,UAAkB,GAClCwD,EAAExD,UAAYZ,EAAEY,SAAiB,EAC/BZ,EAAES,aAAamD,QAAQ,GAAKQ,EAAE3D,aAAamD,QAAQ,MAP5D6J,CAAYhO,GAWd,SAASiO,GAAcjO,GACrBA,EAAEK,SAAWL,EAAEK,SAASqE,MAAK,SAACnE,EAAEoE,GAAH,OAAQpE,EAAE2N,SAASvJ,EAAEuJ,YAsD7C,SAASlF,GAAUhJ,EAAGC,GAC3B,GAAID,EAAEmO,MAAM1M,OAAS,EAAG,CACtB,IAAIoC,EAAQyJ,EAAKtN,EAAGC,EAAK,QAAS,UAKlC,GAJA4D,EAAMrD,UAAYR,EAAEoO,sBACpBvK,EAAMC,IAAM,EACZD,EAAMkF,QAAUlF,EAAMkF,UAAW,EACjCxH,GAAOvB,EAAGC,EAAJ,UAAY4D,EAAMrC,KAAlB,kBACFqC,EAAM8E,SAAU,CAClB,IAAI0F,EAcH,SAAqBrO,EAAGC,GAC7B,GAAID,EAAEsO,WACJ,OAAO,EAGT,IAAIrE,EAAMjK,EAAE2D,OAAOlC,OACPzB,EAAE2D,OAAOsG,EAAI,GACVjK,EAAE2D,OAAOsG,EAAI,IAe1BjK,EAAE2D,OAAOS,OAAO6F,EAAI,EAAG,GAGzB,OAAO,EAvCSsE,CAAYvO,GACpB6D,EAAMR,SAAWgL,GACnBxK,EAAMR,OAAOrD,EAAGC,EAAK4D,QAInBA,EAAMR,QACRQ,EAAMR,OAAOrD,EAAGC,EAAK4D,IAmCtB,SAASmE,GAAWhI,EAAGC,GAC5B,IAAI4D,EAAQ2B,OAAOC,OAAO,GAAIxF,EAAIE,OAAOC,QAAQJ,EAAEmO,OAAO,IAmB1D,MAJyB,iBAdzBtK,EAAK,2BACAA,GADA,IAEHsC,WAAW,EACX7D,KAAM,EACN3E,KAAM,EACNC,MAAO,EACPgF,UAAW,EACXG,eAAgB,QAChBkC,SAAUhF,EAAIE,OAAO+E,IAAI,GAAG,EAC5BrC,YAAa,SAAC7C,EAAGC,EAAK6C,GACpBA,EAAKpB,KAAO,EACZoB,EAAKnB,IAAM,MAGEhB,OACfkD,EAAMlD,KAAOkD,EAAMlD,KAAK6N,QAAQ,eAAM,gBACtC3K,EAAMlD,KAAOkD,EAAMlD,KAAK6N,QAAQ,eAAM,iBAEjC3K,EAGF,SAAS0E,GAAuBvI,EAAGC,GACxC,IAAIoB,EAAO,CACToN,UAAU,EACVnM,KAAMrC,EAAIE,OAAO+E,IAAI,IAAI,EACzBxD,IAAKzB,EAAIE,OAAO+E,IAAI,IAAI,EACxBvD,GAAI1B,EAAIE,OAAO+E,IAAI,IACnBvH,KAAMsC,EAAIE,OAAO+E,IAAI,GACrBtH,MAAOqC,EAAIE,OAAO+E,IAAI,GAAG,EACzBtC,UAAW,EACXqC,SAAUhF,EAAIE,OAAO+E,IAAI,GAAG,EAC5BvE,KAAM,IAGJ+N,EAAc,CAChB,CAAC,iBAAQ,UACT,CAAC,iBAAQ,UACT,CAAC,iBAAQ,WACT,CAAC,iBAAQ,UACT,CAAC,iBAAQ,UAEXA,EAAczO,EAAIE,OAAOC,QAAQsO,GAAazK,MAAM,EAAE,GAGtD,IAFA,IAAI0K,EAAU1O,EAAIE,OAAOC,QAAQJ,EAAE4O,SAE1BvI,EAAE,EAAGA,EAAE,EAAGA,IACjBhF,EAAKV,KAAKoE,KAAV,UAAkB2J,EAAYrI,GAAG,IAAjC,OAAsCsI,EAAQtI,GAAG,KACjDhF,EAAKqN,EAAYrI,GAAG,IAAMsI,EAAQtI,GAAG,GAEvChF,EAAKV,KAAO,CAACU,EAAKV,KAAK,GAAI,6BAAOU,EAAKV,KAAK,IAE5CU,EAAK0B,eAAiB4L,EAAQ,GAAG,GACjCtN,EAAKwB,YAAc8L,EAAQ,GAAG,GAE9B,IAAIE,EAAQ5O,EAAIE,OAAOC,QAAQJ,EAAE0C,OAAO,GAOxC,OANArB,EAAKG,KAAOqN,EAAMrN,KAAKkJ,MAAM,IAAIoE,UAAUtH,KAAK,IAC/B,KAAbnG,EAAKG,OACPH,EAAKG,KAAO,KAEdH,EAAKsB,OAASkM,EAAMlM,OAEbtB,EAkCF,SAASgH,GAAerI,EAAGC,EAAKoB,GACrCA,EAAK6B,MAAQ7B,EAAK6B,OAAS,EAC3B7B,EAAK6B,OAAS,EACV7B,EAAKwB,aACPxB,EAAKwB,YAAY7C,EAAGC,EAAKoB,GAItB,SAAS4F,GAAmBjH,EAAGC,GACpC,OAAOD,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAMA,EAAEC,aAAYiB,OAoCtC,SAASsF,GAAe/G,EAAGC,GAChC,IAAIoB,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEsE,MAAM,GAElCjD,GACFgH,GAAerI,EAAGC,EAAKoB,GAIpB,SAASoC,GAAqBzD,EAAGC,GACtC,IAAI8O,EAAc/O,EAAE2D,OAAOrD,QAAO,SAAAC,GAAC,QAAOA,EAAEC,WAAWD,EAAEuI,eACrDiG,EAAYtN,OAAS,IACvBxB,EAAIE,OAAOC,QAAQ2O,GAAa,GAAGvO,WAAY,GAI5C,SAASmH,GAAiB3H,EAAGC,EAAKkM,GACvC,IAAI6C,EAAU/O,EAAIE,OAAOC,QAAQJ,EAAE2D,QAAQ,GACvCqL,IACFA,EAAQtN,KAAOyK,GAIZ,SAAS3H,GAAkBxE,EAAGC,EAAK6C,GACxC,IAAImM,EAAkBjP,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAKA,EAAEC,WAAcD,GAAKuC,KAC5DoM,EAAiBD,EAAgB3O,QAAO,SAAAC,GAAC,OAAM,CAACuC,EAAKtB,KAAM,eAAM,qBAAO,2BAAQ,qBAAO,eAAM,gBAAMkG,SAASnH,EAAEiB,SAIlH,GAH+B,GAA1ByN,EAAgBxN,QAA0C,GAAzByN,EAAezN,QACnDF,GAAOvB,EAAGC,EAAK,oGAEbiP,EAAezN,OAAS,EAAG,CAC7B,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQ8O,GAAgB,GAE9C,GADA7N,EAAK8N,YAAc9N,EAAK8N,aAAe,EACnC9N,EAAK8N,aAAe,EAEtB,YADA5N,GAAOvB,EAAGC,EAAJ,UAAYoB,EAAKG,KAAjB,gDAGRH,EAAKb,WAAY,EACjBa,EAAK8N,aAAe,EACpB5N,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,QAmBvB,SAASiD,GAAKzE,EAAGC,EAAKkM,GAE3B,IAAI9K,EAAO,YAAIrB,EAAEsB,OAAOoD,MAAK,SAACnE,EAAEoE,GAC9B,OAAIpE,EAAEuD,KAAOa,EAAEb,IACNa,EAAEb,IAAMvD,EAAEuD,IAGVvD,EAAEoB,GAAGgD,EAAEhD,MAEf,GAQH,OAPIN,IACFA,EAAKyC,KAAOqI,EACR9K,EAAKyC,IAAM,IACbzC,EAAKM,IAAMN,EAAKyC,IAChBzC,EAAKyC,IAAM,IAGRzC,EAgET,SAAS+N,GAAWpP,EAAGC,GACrB,IAD0C,IAAhBqB,EAAe,uDAAT,QACvB+E,EAAErG,EAAEsB,GAAOG,OAAO,EAAG4E,GAAG,EAAGA,IAAK,CACvC,IAAIhF,EAAOrB,EAAEsB,GAAO+E,GACpB,GAAIhF,EAAKM,GAAKN,EAAKyC,KAAO,IACxB6J,EAAI3N,EAAGC,EAAKqB,EAAO+E,GACN,UAAT/E,GAAmB,CAAC,IAAD,gBACPtB,EAAEkG,YADK,IACrB,2BAA4B,CAAC,IAApBmJ,EAAmB,QAC1BA,EAAErP,EAAGC,IAFc,iCAuCtB,SAASqP,GAASvC,GAKvB,IAJA,IAAIwC,EG7qBC,SAAiBvF,GACtB,IAD2B,EACvBP,EAAU,GADa,cAGVO,GAHU,IAG3B,2BAAsB,CAAC,IAAdwF,EAAa,QACpB/F,EAAQ+F,EAAKhO,MAAQgO,GAJI,8BAO3B,OAAO/F,EHsqBSgG,CAAQ/M,GACpBsB,EAAO,GAEPsC,EAAQyG,EAAUrC,MAAM,MACnBrE,EAAE,EAAGA,EAAEC,EAAM7E,OAAQ4E,IAAK,CACjC,IACIqJ,EADOpJ,EAAMD,GACIqE,MAAM,KAC3B,GAAIgF,EAAUjO,QAAU,EAAG,CACzB,IAAI0K,EAASC,SAASsD,EAAU,KAAO,EACnCC,EAAcJ,EAAUG,EAAU,IAEtC,GAAIC,EAAa,CAEfA,EAAY1K,SAAWoB,EAAI,EAC3B,IAAK,IAAI+B,EAAE,EAAGA,EAAE+D,EAAQ/D,IACpBpE,EAAKe,KAAKS,OAAOC,OAAO,GAAIkK,MAMtC,OAAO3L,EAkCF,SAASzC,GAAOvB,EAAGC,EAAK2P,GAC7B5P,EAAE6P,SAASxK,QAAQuK,GAOd,SAASzM,GAAQnD,EAAGC,EAAK6P,EAAkBC,EAAkB1O,GAC9DA,IAASrB,EAAEgQ,aAAa3O,EAAKG,QAC/ByO,MAAM,6BAAD,OAAUH,EAAV,aAA+BC,IACpC/P,EAAEgQ,aAAa3O,EAAKG,OAAQ,GAWhC,SAAS0O,GAAalQ,EAAGC,GACvBD,EAAE8E,WAAa,GACf9E,EAAE0G,WAAa,GACf1G,EAAEmQ,YAAc,GAChBnQ,EAAEoQ,UAAY,GACdpQ,EAAEqQ,iBAAmB,GACrBrQ,EAAEgF,WAAa,GACfhF,EAAEkG,WAAa,GAGV,SAASoK,GAAetQ,EAAGC,GAC9BD,EAAEsE,KAAO,GACTtE,EAAEsB,MAAQ,GAEVtB,EAAEgE,KAAO,GAIThE,EAAEmO,MAAQ,GACVnO,EAAEqJ,MAAQ,GAEVrJ,EAAE2D,OAAS,GACX3D,EAAEoG,QAAU,GACZpG,EAAEuQ,SAAW,GAEbvQ,EAAE+N,OAAS,GACX/N,EAAEK,SAAW,CAACK,GAEdV,EAAEwQ,MAAQ,GAEVxQ,EAAEyC,MAAQ,EACVzC,EAAEuC,UAAY,CAAC,EAAG,EAAG,EAAG,GAExBvC,EAAEiB,MAAQ,EACVjB,EAAE8G,OAAS,EACX9G,EAAEiJ,KAAO,GACTjJ,EAAEyQ,WAAa,EACfzQ,EAAE0Q,gBAAkB,EACpB1Q,EAAE2Q,YAAc,EAEhBT,GAAalQ,GAEbA,EAAE4N,iBAAkB,EACpB5N,EAAEoO,uBAAwB,EAE1BpO,EAAE6P,SAAW,CAAC,8EACd7P,EAAEgQ,aAAe,GAEjBhQ,EAAE4Q,SAAU,EACZ5Q,EAAEyN,OAAS,GACXzN,EAAE6Q,MAAQ,SACV7Q,EAAE8Q,UAAY,EAEd9Q,EAAE0C,MAAQA,EAAMuB,MAAM,GACtB,IAAIiH,EAAe,CAAC,4BACpBlL,EAAE0C,MAAQ1C,EAAE0C,MAAMpC,QAAO,SAAAC,GAAC,OAAK2K,EAAaxD,SAASnH,EAAEiB,SACvD,IA9CmC,EA8C/BmN,EAAU,GA9CqB,cA+CrBjM,EAAMpC,QAAO,SAAAC,GAAC,MAAqB,iBAAVA,EAAEI,MAAgC,4BAAVJ,EAAEiB,SA/C9B,IA+CnC,2BAAoF,CAAC,IAA5EwK,EAA2E,QAC9ErL,EAAOqL,EAAErL,KAAK+J,MAAM,KAAKzG,MAAM,GAAGuD,KAAK,IACvCwE,EAAE3I,QACJsL,EAAQ5J,KAAK,CAACpE,EAAMqL,EAAE3I,SAEpB2I,EAAEhJ,QACJ2L,EAAQ5J,KAAK,CAACpE,EAAMqL,EAAEhJ,SAEpBgJ,EAAEpN,QACJ+P,EAAQ5J,KAAK,CAACpE,EAAMqL,EAAEpN,UAxDS,8BA2DnCoB,EAAE4O,QAAUD,EAGZ3M,QAAQC,IAAI,4BAiDhB,SAAS8O,GAAmB/Q,EAAGC,GAI7BD,EAAEgR,WAAa/Q,EAAIE,OAAOC,QAAQJ,EAAEiR,MACpCjR,EAAEkR,SAAWjR,EAAIE,OAAOC,QAAQ8I,GAAUjF,MAAM,EAAE,GAGlDjE,EAAEmR,cAAgB,EACdnR,EAAEmR,cAAgB,IACpBnR,EAAEoR,kBAAmB,GAelB,IAAMC,GAAK,CAChBC,MA1JK,SAAerR,GAClB,IAAMD,EAAI,GAGV,OAFAsQ,GAAetQ,EAAGC,GAEXD,GAwJTuR,MAAO,CACLjB,kBACAkB,SAxMJ,SAAkBxR,EAAGC,EAAKwR,GACxBjM,OAAOC,OAAOzF,EAAGyR,GAGjB,IAAK,IAAIpL,EAAE,EAAGA,EAAErG,EAAE0R,cAAerL,IAC/BpG,EAAIE,OAAOwR,MAoMXC,QAjxBG,SAAiB5R,EAAGC,EAAK4R,GAAO,IAAD,gBACtBA,GADsB,IACpC,2BAAoB,SAChBjR,OAAOZ,EAAGC,IAFsB,gCAkxBlC6R,gBA/PJ,SAAyB9R,EAAGC,GAAK,oBAEbD,EAAEmO,OAFW,IAE/B,2BAA2B,CAAC,IAAnBtK,EAAkB,QACrBA,EAAMnC,IAAM,IACdmC,EAAMnC,IAAM,IAJe,8BAS/B,IAAK,IAAI2E,EAAE,EAAGA,EAAE,EAAGA,IACjB/C,EAAKtD,EAAGC,GAGV,IAAK,IAAIoG,EAAE,EAAGA,EAAE,EAAGA,IACjB2C,GAAUhJ,EAAGC,GAGfa,GAAad,EAAGC,GAEhB+B,QAAQC,IAAI,kBACZjC,EAAE4Q,SAAU,EACZ3Q,EAAI8R,OAAOC,WA2OTC,SAhvBG,SAAkBjS,EAAGC,EAAKiS,GAC/B,IAAIC,EAAYnS,EAAEsE,KAAKhE,QAAO,SAACC,EAAG2D,GAAJ,OAAYgO,EAAQhO,MAElD,GADAlE,EAAEsE,KAAOtE,EAAEsE,KAAKhE,QAAO,SAACC,EAAG2D,GAAJ,OAAagO,EAAQhO,MACxClE,EAAEsE,KAAK7C,OAAS,EAAG,CAErB,IADA,IAAI2Q,EAAW,EAAIpS,EAAEsE,KAAK7C,OACjB4E,EAAI,EAAGA,EAAI+L,EAAU/L,IAC5B/C,EAAKtD,EAAGC,GAEVD,EAAEgE,KAAO/D,EAAIE,OAAOC,QAAX,sBAAuBJ,EAAEgE,MAAzB,YAAkCmO,KAI7CnS,EAAEsE,KAAF,sBAAatE,EAAEgE,KAAK1D,QAAO,SAAAe,GAAI,OAAIA,EAAK8H,YAAxC,YAAqDnJ,EAAEsE,QAquBrDhB,OACA9E,KAvtBJ,SAAcwB,EAAGC,EAAKiE,GACpB,IAAI7C,EAAOrB,EAAEsE,KAAKJ,GAOlB,GAAIrD,EAAQb,EAAGC,EAAKoB,EAAKiB,MAAO,CAG9BtC,EAAEsE,KAAKF,OAAOF,EAAK,GACnB,IAAImO,EAxBD,SAAsBrS,EAAGC,EAAKoB,EAAM6C,GACzC,GAAIlE,EAAEsB,MAAMG,OAASzB,EAAE2Q,YAAa,CAClC,IAAI2B,EAAcjO,EAAgBrE,EAAGC,EAAJ,eAAaoB,IAE9C,OADArB,EAAEsB,MAAM8C,OAAOF,GAAOlE,EAAEsB,MAAMG,OAAQ,EAAG6Q,GAClCA,EAIP,OADA/Q,GAAOvB,EAAGC,EAAK,iEACR,EAgBQsS,CAAavS,EAAGC,EAAKoB,GACpC,GAAIgR,EAAU,CACZ9Q,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,OADd,oBAEExB,EAAE8E,YAFJ,IAEZ,2BAA4B,EAC1BuK,EAD0B,SACxBrP,EAAGC,EAAKoB,IAHA,8BAQZ,GAHIgR,EAAShP,QACXgP,EAAShP,OAAOrD,EAAGC,EAAKoS,GAEtBA,EAASjJ,YAAa,CAAC,IAAD,gBACNiJ,EAASjJ,aADH,IACxB,2BAAwC,SAChCxI,OAAOZ,EAAGC,EAAKoS,IAFC,qCAO1BrS,EAAEyC,OAASpB,EAAKiB,KAChBtC,EAAEsE,KAAKS,KAAK1D,KA2rBd1D,KAtrBJ,SAAcqC,EAAGC,EAAKiE,GACpB,IAAI7C,EAAOrB,EAAEsB,MAAM4C,GAEnB,GAAIwJ,EAAI1N,EAAGC,EAAKoB,IAAqB,UAAXrB,EAAE6Q,MAAoB,CAC9CtM,EAAcvE,EAAGC,EAAKoB,EAAK1D,MAC3B4D,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,kBACFH,EAAK2B,QACP3B,EAAK2B,OAAOhD,EAAGC,EAAKoB,GAJwB,oBAMhCrB,EAAE0G,YAN8B,IAM9C,2BAA4B,EAC1B2I,EAD0B,SACxBrP,EAAGC,EAAKoB,IAPkC,iCAorB9CmR,IAvdJ,SAAaxS,EAAGC,EAAKiE,GACnB,IAAI7C,EAAOrB,EAAEsB,MAAM4C,GAEfwJ,EAAI1N,EAAGC,EAAKoB,IAAqB,UAAXrB,EAAE6Q,QAC1BtP,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,kBACNH,EAAKzC,OAAOoB,EAAGC,EAAKoB,KAmdpBuB,UAnbG,SAAmB5C,EAAGC,EAAKiE,GAChC,IAAI7C,EAAOrB,EAAEsB,MAAM4C,GACflD,EAAe,CAAC,EAAE,EAAE,EAAE,GAG1B,GAFAA,EAAaK,EAAK4D,UAAY5D,EAAKuB,UAE/B5C,EAAEyS,mBACO5R,EAAQb,EAAGC,EAAK,GAEzB,OAIAkF,EAAanF,EAAGC,EAAKe,IACvBqH,GAAerI,EAAGC,EAAKoB,IAuavBqR,KApcG,SAAc1S,EAAGC,GAItB,IAHA,IAAI0S,EAAa3S,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAMA,EAAEC,aACrC0G,EAAiByL,EAAWlR,OAEvB4E,EAAE,EAAGA,EAAEa,EAAgBb,IAC5B/C,EAAKtD,EAAGC,GACRD,EAAEyC,OAAS,EANY,oBASVkQ,GATU,IAS3B,2BAA6B,CAAC,IAArBtR,EAAoB,QACvBA,EAAK2F,QACP3F,EAAK2F,OAAOhH,EAAGC,EAAKoB,IAXG,gCAqczBuR,SA3qBJ,SAAkB5S,EAAGC,EAAK4S,EAAM9Q,GAC9B/B,EAAE6S,GAAQ9Q,GA2qBRjB,gBACAgS,YA7oBJ,SAAqB9S,EAAGC,EAAKiE,GAC3B,IAAIpG,EAAQkC,EAAE+N,OAAO7J,GAEjBiB,EAAanF,EAAGC,EAAKnC,EAAMkD,gBAC7BhB,EAAEiB,OAASnD,EAAMmD,WACG0F,GAAhB7I,EAAMoD,SACRlB,EAAEuC,UAAUzE,EAAMoD,SAAW,GAE/BlB,EAAEK,SAAS0E,KAAX,eAAoB/E,EAAE+N,OAAO3J,OAAOF,EAAK,GAAG,KAC5C3C,GAAOvB,EAAGC,EAAK,4BACfgO,GAAcjO,KAooBd+S,SA1nBJ,SAAkB/S,EAAGC,EAAKiE,EAAK9C,EAAgB4R,GAC7C,IAAIlV,EAAQkC,EAAEK,SAAS6D,GAEvB,GAAIwJ,EAAI1N,EAAGC,EAAKnC,UAA0B6I,GAAd7I,EAAMwE,MAAuB6C,EAAanF,EAAGC,EAAKnC,EAAMwE,OAAS,CAC3FxE,EAAM8C,OAAOZ,EAAGC,EAAKmB,EAAgB4R,GADsD,oBAE7EhT,EAAEgF,YAF2E,IAE3F,2BAA4B,EAC1BqK,EAD0B,SACxBrP,EAAGC,EAAKnC,IAH+E,iCAwnB3F0E,QAhnBJ,SAAiBxC,EAAGC,GAClB,IADuB,EACnBgT,EAAiBjT,EAAEK,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEiC,WADvB,cAELyQ,GAFK,IAEvB,2BAAkC,CAAC,IAA1BnV,EAAyB,QAC5B4P,EAAI1N,EAAGC,EAAKnC,IACdA,EAAM8C,OAAOZ,EAAGC,IAJG,gCAinBrB+I,aACArK,MArfJ,SAAeqB,EAAGC,EAAKiT,EAAMC,GAC3B,GAAID,EAAO,GAAKA,GAAQlT,EAAEsB,MAAMG,QAAU0R,EAAO,GAAKA,GAAQnT,EAAE2D,OAAOlC,OACrEO,QAAQC,IAAI,oBADd,CAKA,IAAIZ,EAAOrB,EAAEsB,MAAM4R,GACfrP,EAAQ7D,EAAE2D,OAAOwP,GAErB,GAAIzF,EAAI1N,EAAGC,EAAKoB,IAAqB,UAAXrB,EAAE6Q,MAAoB,CAC9CtP,GAAOvB,EAAGC,EAAJ,uBAAeoB,EAAKG,KAApB,kBACNqH,EAAY7I,EAAGC,EAAK,SAAUkT,EAAM9R,EAAKK,KACrCL,EAAKmC,SACPnC,EAAKmC,QAAQxD,EAAGC,EAAKoB,EAAMwC,GAJiB,oBAMhC7D,EAAEmQ,aAN8B,IAM9C,2BAA6B,EAC3Bd,EAD2B,SACzBrP,EAAGC,EAAKoB,EAAMwC,IAP4B,kCA6e9CuL,cACAgE,UAxVJ,SAAmBpT,EAAGC,GACpBmP,GAAWpP,EAAGC,EAAK,UACnBD,EAAE6Q,MAAQ,SAuVRwC,UApVG,SAAmBrT,EAAGC,EAAKiE,GAChC,IAAIL,EAAQ7D,EAAE2D,OAAOO,GAErB,GAAIwJ,EAAI1N,EAAGC,EAAK4D,GAEd,GAAIA,EAAMjF,SAAYiF,EAAMkF,QAC1BlF,EAAMjF,OAAOoB,EAAGC,EAAK4D,GACrBtC,GAAOvB,EAAGC,EAAJ,UAAY4D,EAAMrC,KAAlB,oDAGH,CACH,IAAI8R,EA1hBH,SAAqBtT,EAAGC,EAAK4D,GAClC,IAAIK,EAAMlE,EAAE2D,OAAOQ,QAAQN,GACvB0P,EAAkB,EAEtB,IAAY,GAARrP,EACF,OAAO,EALgC,oBAQ3BlE,EAAEsB,OARyB,IAQzC,2BAAuB,CAAC,IAAf0K,EAAc,QAErB,IADAuH,GAAmB3P,KAAK4P,IAAI,EAAGxH,EAAEpO,OAAO,IAClBsG,EACpB,OAAO8H,GAX8B,8BAezC,OAAO,EA2gBWyH,CAAYzT,EAAGC,EAAK4D,GAC9B6P,EAAc1T,EAAEsB,MAAM6C,QAAQmP,GAElC,IAAoB,GAAhBI,EACF7K,EAAY7I,EAAGC,EAAK,QAASyT,EAAa7P,EAAMnC,KAChDH,GAAOvB,EAAGC,EAAJ,UAAY4D,EAAMrC,KAAlB,mBAA4B8R,EAAQ9R,KAApC,oCACFqC,EAAML,SACRK,EAAML,QAAQxD,EAAGC,EAAK4D,EAAOyP,QAK/B,GAAIzP,EAAMkF,SACR,GAAI/I,EAAEsB,MAAMG,OAAS,EAAG,CACtB,IAAIJ,EAAOpB,EAAIE,OAAOC,QAAQJ,EAAEsB,MAAMhB,QAAO,SAAAC,GAAC,OAAGA,EAAEoB,GAAGpB,EAAEuD,QAAO,GAC3D6P,EAAW3T,EAAEsB,MAAM6C,QAAQ9C,GAC3BA,IACFwH,EAAY7I,EAAGC,EAAK,QAAS0T,EAAU9P,EAAMnC,KACzCmC,EAAML,SACRK,EAAML,QAAQxD,EAAGC,EAAK4D,EAAOxC,IAGjCE,GAAOvB,EAAGC,EAAJ,6BAAgB4D,EAAMrC,KAAtB,0CAIRxB,EAAE8G,QAAU,EACZvF,GAAOvB,EAAGC,EAAJ,UAAY4D,EAAMrC,KAAlB,oCACFqC,EAAMb,QACRa,EAAMb,OAAOhD,EAAGC,EAAK4D,KA6S7BtC,UACAqS,UA9LJ,SAAmB5T,EAAGC,EAAK2P,GACzB5P,EAAE6P,SAAS,GAAKD,GA8LdiE,uBAlGJ,SAAgC7T,EAAGC,GAAe,IAAVgR,EAAS,uDAAJ,GAC3CjR,EAAEiR,KAAOA,GAkGP6C,qBAzEJ,SAA8B9T,EAAGC,EAAK8T,GACpC5R,IAAED,MAAM6R,EAAc9T,EAAIE,OAAOwR,IACjC3R,EAAEgU,UAAY,GACdhU,EAAEiU,WAAa9R,IAAED,MAAM,EAAGmJ,GAE1B,IADA,IAAI6I,EAAkB,CAACxH,EAAkBA,EAAkBH,GAClDlG,EAAE,EAAGA,EAAE,EAAGA,IACjBrG,EAAEgU,UAAUjP,KAAKuK,GAAS4E,EAAgB7N,GAAGrG,EAAEiU,WAAW5N,MAE5DrG,EAAEmR,aAAe,IAkEfgD,YA9DJ,SAAqBnU,EAAGC,EAAKiE,GAC3BlE,EAAEiR,KAAOjR,EAAEgU,UAAU9P,GADW,oBAEflE,EAAEiR,MAFa,IAEhC,2BAAyB,SAClB7H,YAAc,IAHW,8BAKhC2H,GAAmB/Q,EAAGC,IA0DpB8Q,sBACAqD,QA1CJ,SAAiBpU,EAAGC,EAAK0T,EAAUU,GACjC,IAAIhT,EAAOrB,EAAEgR,WAAW2C,GACpBS,EAAUpU,EAAEkR,SAASmD,GACrBhT,GAAQ+S,IACVA,EAAQxT,OAAOS,GACfA,EAAKiT,UAAW,GAGlBtU,EAAEiR,KAAOjR,EAAEgR,YAmCTxR,KAnGG,SAAcQ,EAAGC,EAAKiE,GAC3B,IAAI7C,EAAOrB,EAAEwQ,MAAMtM,GAEf7C,GACE8D,EAAanF,EAAGC,EAAKoB,EAAKkT,SAC5BvU,EAAEwQ,MAAMpM,OAAOF,EAAK,GACpBlE,EAAEsE,KAAKe,QAAQhE,MAgGnBmT,KAAM,CACJC,QADI,SACIzU,EAAGC,GACT,GAAID,EAAE4Q,QAAS,CACb5O,QAAQC,IAAI,iBACZV,GAAOvB,EAAGC,EAAK,4BACfD,EAAE6Q,MAAQ,SACV7Q,EAAE8Q,WAAa,EAvSvB,SAAiB9Q,EAAGC,GAAM,IAAD,gBACN,GAAGyU,OAAO1U,EAAEsB,MAAOtB,EAAE2D,OAAQ3D,EAAEK,WADzB,IACvB,2BAA2D,SACpDG,WAAY,GAFI,+BAySjBmU,CAAQ3U,GACRsD,EAAKtD,EAAGC,GACRa,GAAad,EAAGC,GAChBD,EAAEyC,OAAS,EAtGZ,SAAuBzC,EAAGC,GAC/BD,EAAEwQ,MAAQvQ,EAAIE,OAAOC,QAAQJ,EAAEgE,MAAMC,MAAM,EAAG,GAO9CjE,EAAEwQ,MAAQxQ,EAAEwQ,MAAM7K,KANF,SAACnG,EAAM0E,GACrB,IAAIqQ,EAAQ,CAAC,EAAG,EAAG,EAAG,GAGtB,OADAA,EADkBtU,EAAIE,OAAO+E,IAAI,GAAK,GACjBtB,KAAKkC,MAAM5B,EAAM,GAAK,EACpC,2BAAI1E,GAAX,IAAiB+U,aAiGbK,CAAc5U,EAAGC,GAEjBiQ,GAAalQ,GAEb,oCAAqBA,EAAEsE,MAAvB,YAAgCtE,EAAEsB,OAAlC,YAA4CtB,EAAE2D,SAA9C,eAAuD,CAAlD,IAAItC,EAAI,KACXA,EAAK8N,YAAc,EACf9N,EAAKkC,aACPlC,EAAKkC,YAAYvD,EAAGC,EAAKoB,GAI7B,GAAIrB,EAAE6U,YAAc7U,EAAE8Q,UAAY,EAChC,oCAAsB9Q,EAAEmO,OAAxB,YAAkCnO,EAAE2D,SAApC,eAA6C,CAAxC,IAAIE,EAAK,KACZA,EAAMnC,KAAO,EACbmC,EAAMlC,IAAM,EAIhB,GAAmB,GAAf3B,EAAE8Q,WAAkB9Q,EAAE8U,cACxB,oCAAsB9U,EAAEmO,OAAxB,YAAkCnO,EAAE2D,SAApC,eAA6C,CAA/B,KACNhC,IAAM,EAQhB,GAJmB,GAAf3B,EAAE8Q,WAAkB9Q,EAAE+U,WACxB/U,EAAEoO,uBAAwB,GAGT,GAAfpO,EAAE8Q,WAAkB9Q,EAAEgV,cACxB,oCAAsBhV,EAAEmO,OAAxB,YAAkCnO,EAAE2D,SAApC,eAA6C,CAAxC,IAAIE,EAAK,KACZA,EAAMnC,KAAO,EACbmC,EAAMlC,IAAM,EAQhB,GAJmB,GAAf3B,EAAE8Q,WAAkB9Q,EAAEiV,kBACxBjV,EAAE0Q,iBAAmB,GAGnB1Q,EAAEkV,IAAK,CACT,IAAK,IAAI7O,EAAErG,EAAEsB,MAAMG,OAAO,EAAG4E,GAAG,EAAGA,IACjCwC,EAAY7I,EAAGC,EAAK,QAASoG,EAAG,GAElC+I,GAAWpP,EAAGC,EAAK,SAIjBD,EAAE6N,YAAc7N,EAAEsE,KAAK7C,OAAS,IAClCzB,EAAEoG,QAAF,sBAAgBpG,EAAEoG,SAAlB,YAA8BpG,EAAEsE,KAAKL,MAAM,KAC3CjE,EAAEsE,KAAOtE,EAAEsE,KAAKL,MAAM,EAAG,IAGvBjE,EAAE8G,OAAS,IACb9G,EAAE8G,OAAS,GAGT9G,EAAEmV,cACJnV,EAAEiJ,MAAQ,KAKhBmM,MA1EI,SA0EEpV,EAAGC,GACPmP,GAAWpP,EAAGC,EAAK,WAOvBoV,MArHgB,SAqHVrV,EAAGC,GACP,GAAID,EAAE4Q,QAAS,CACb,GAAqB,GAAjB5Q,EAAEgE,KAAKvC,OACT,MAAO,CACL6T,KAAK,EACLC,OAAQ,kCAGP,GAAsB,GAAlBvV,EAAEmO,MAAM1M,OACf,MAAO,CACL6T,KAAK,EACLC,OAAQ,8CAGP,GAAIvV,EAAE8G,QAAU9G,EAAEyQ,WACrB,MAAO,CACL6E,KAAK,EACLC,OAAQ,wCAGP,GAAIvV,EAAEiB,OAASjB,EAAEiJ,KACpB,MAAO,CACLqM,KAAK,KAMb1L,UAAMjD,G,6DKxiCD,SAAS6O,GAAU5E,EAAS6E,GAAkD,IAAtCC,EAAqC,uDAA7B,EAAGC,EAA0B,uDAAlB,EAAGC,EAAe,uCAAPR,EAAO,uCAC9ES,EAAa,CACftV,EAAG,EACHoE,EAAG,GAEDmR,EAAW,CACbvV,EAAGmV,EACH/Q,EAAGgR,GAP6E,EAUrEI,aAAU,CACrBC,KAAMH,EACNI,GAAKrF,EAAU,CAACkF,EAAUD,GAAcA,EACxCD,SACA5O,OAJqB,WAKf4J,IACF6E,GAAW,GACXL,GAASA,QAPV7U,EAV6E,EAU7EA,EAAGoE,EAV0E,EAU1EA,EAYR,MAAO,CACLuR,UAAWC,aAAY,CAAC5V,EAAEoE,IAAI,SAACpE,EAAEoE,GAAH,0BAAoBpE,EAApB,eAA4BoE,EAA5B,WCvBlC,IAAMyR,GAAe,CACnBC,SAAU,WACVC,aAAc,MACdtY,MAAO,QACPV,OAAQ,QACRiZ,WAAY,4BAIP,SAASC,GAAOC,GAGrB,IAAIZ,EAAU,uCACTO,IACAK,EAAMC,UAFG,IAGZR,UAAW,WACXS,QAAS,IAUPC,EAAOb,aAAU,CACnBC,KAAMH,EACNI,GAAKQ,EAAM7F,QAVE,CAAC,CACd+F,QAAS,EACTT,UAAW,YAEb,CACEA,UAAW,aAKqBL,EAChC7O,OAHmB,WAIbyP,EAAM7F,SACR6F,EAAMhB,YAAW,IAGrBG,OAAQ,CAACiB,SAAU,OAEpB,OAAO,kBAAC,KAASC,IAAV,CACJvZ,UAAU,SACVoC,MAASiX,I,gBChCFG,GAAO,SAACN,GACnB,IAAIO,EAAoB,CACtBrU,OAAQ,GACRsU,SAAU,GACVC,SAAU,GACVC,SAAU,GACVxV,GAAI,GACJD,IAAK,GACL0V,aAAc,GACd9U,KAAM,GACNiS,MAAO,GACP8C,cAAe,GACfC,aAAc,GACdC,gBAAiB,GACjBvW,aAAc,GACdC,MAAO,IAGT,GAAIwV,EAAMe,UAAUhX,UAAW,CAE7B,IAAK,IAAIqS,KAAQmE,EACXnE,EAAKnL,SAAS,YAChBsP,EAAkBnE,GAAM4E,OAHL,qBAQzB,GAAIhB,EAAMe,UAAUE,SAClB,GAAIjB,EAAMe,UAAUhX,UAAW,CAE7B,IAAK,IAAIqS,KAAQmE,EACXnE,EAAKnL,SAAS,YAChBsP,EAAkBnE,GAAM4E,OAHI,yBAQ7B,CAEH,IAAK,IAAI5E,KAAQmE,GACXnE,EAAKnL,SAAS,WAAqB,gBAARmL,KAC7BmE,EAAkBnE,GAAM4E,OAHN,qBAKpBT,EAAkBhW,aAAayW,OALX,oBAsB1B,GAZIhB,EAAMe,UAAUG,UAClBX,EAAkBrV,GAAG/B,MAAQ,OAG3B6W,EAAMe,UAAUzO,UAClBiO,EAAkBtV,IAAI9B,MAAQ,UAE5B6W,EAAMe,UAAUlD,WAClB0C,EAAkB1U,KAAK1C,MAAQ,UAC/BoX,EAAkBzC,MAAMqD,YAAc,WAGpCnB,EAAMe,UAAU5X,OAAS,EAAG,CAC9B,IAAMA,EAAQ6W,EAAMe,UAAU5X,MACxBiY,EAAe,CAAC,UAAW,UAAW,kBAC5Cb,EAAkBM,aAAaM,YAAcC,EAAajY,GAC1DoX,EAAkBO,gBAAgBK,YAAcC,EAAajY,GAO/D,IAAIkY,EAAStC,GAAUiB,EAAMe,UAAUO,QAAStB,EAAMe,UAAUQ,YAAa,IAAK,GAAI,CAACnB,SAAS,KAAMJ,EAAMe,UAAUpC,OAStH,OAPA6C,qBAAU,WACHxB,EAAMe,UAAU1T,IAAM,GAAM2S,EAAMe,UAAUQ,YAC/CvB,EAAMe,UAAUQ,YAAW,KAG/B,CAACvB,EAAMe,UAAU1T,MAGf,yBACEvG,UAAU,OACV2a,QAAWzB,EAAM0B,YACjBxY,MAAS8W,EAAM2B,WAEf,kBAAC5B,GAAD,CACE5F,QAAW6F,EAAMe,UAAU5G,QAC3B6E,WAAcgB,EAAMe,UAAU/B,YAAc,aAC5CiB,SAAY,CAAC2B,IAAI,OAAQC,KAAK,UAEhC,kBAAC,KAASxB,IAAV,CAAcnX,MAAK,aAAG3B,MAAO,OAAQV,OAAQ,QAAWwa,IACvDtS,OAAOuG,KAAK0K,EAAM8B,MAAMjY,QAAO,SAAAkY,GAAG,YAAwB7R,GAAnB8P,EAAM8B,KAAKC,MAAoB7S,KAAI,SAAC8S,GAAD,OACzE,kBAAC,GAAD,CACEA,QAAWA,EACXC,MAASjC,EAAM8B,KAAKE,GACpBE,gBAAmB3B,EAAkByB,WASlCG,GAAO,SAACnC,GACnB,IAAIoC,EAASpC,EAAMgC,QAAQ/Q,SAAS,UAChCoR,EACF,yBACIvb,UAAakZ,EAAMgC,QACnBpb,IAAOoZ,EAAMiC,QAInB,OACE,yBACEnb,UAAa,QAAQkZ,EAAMgC,QAC3B9Y,MAAS8W,EAAMkC,iBAEbE,EAAUC,EAAUrC,EAAMiC,QAKrBK,GAAU,SAACtC,GAEtB,OACE,yBAAKlZ,UAAU,WAAWoC,MAAO8W,EAAMkC,iBACpClC,EAAMnQ,MAAMX,KAAI,SAACtE,EAAM6C,GAAP,OACf,kBAAC,GAAD,CACEqU,KAAMlX,EACNmW,UAAaf,EAAMuC,OAAQvC,EAAMuC,OAAO9U,GAAK,GAC7CiU,YAAc1B,EAAM0B,YAAe1B,EAAM0B,YAAYjU,GAAQ,KAE7DkU,UAAa3B,EAAM2B,iBAQhBa,GAAQ,SAACxC,GAAD,OACnB,yBAAKlZ,UAAU,gBAAgBoC,MAAO8W,EAAMkC,gBAAiBT,QAASzB,EAAM0B,aACvE3S,OAAOuG,KAAK0K,EAAMpV,MAAMsE,KAAI,SAAC8S,GAAD,OAC3B,kBAAC,GAAD,CACEA,QAAWA,EACXC,MAASjC,EAAMpV,KAAKoX,UAMjBS,GAAW,SAACzC,GAGvB,OACE,yBAAKlZ,UAAU,qBACZkZ,EAAMnQ,MAAMX,KAAI,SAACtE,EAAM6C,GAAP,OACf,kBAAC,GAAD,CACE7C,KAAQA,EACR8W,YAAe1B,EAAM0B,YAAY1B,EAAM0B,YAAYjU,QAAKyC,EACxDgS,gBAAmBlC,EAAM0C,iBAAiB1C,EAAM0C,iBAAiBjV,QAAKyC,SA2BnEyS,GAAY,SAAC3C,GACxB,OACE,yBAAKlZ,UAAU,aAAa8b,MAAM,UAChC,kBAAC,GAAD,CAAOhY,KAAMoV,EAAMpV,OACnB,4BAAQ9D,UAAU,uBAAuB2a,QAASzB,EAAM0B,aAAxD,8BCrMAmB,I,MAAoB,CACtBC,eAAIpc,EAAMsB,WACV+a,eAAIrc,EAAMwB,MACV8a,eAAItc,EAAMyB,OACV8a,eAAIvc,EAAMqB,KACVmb,eAAIxc,EAAM8B,MACV2a,eAAIzc,EAAMkC,OACVwa,eAAI1c,EAAMqC,OAeP,IAAMsa,GAAa,SAACrD,GACzB,OACE,yBAAKlZ,UAAU,cACZiI,OAAOuG,KAAK0K,EAAMsD,SAASpU,KAC1B,SAAC/G,GAAD,OACE,4BAAQsZ,QAASzB,EAAMsD,QAAQnb,GAASrB,UAAU,qBAjB5D,SAAwBqB,GACtB,OAAIA,EAAO8I,SAAS,gBACV,6CAAS5H,EAAesM,SAASxN,EAAO,MAG9C4G,OAAOuG,KAAKuN,IAAmB5R,SAAS9I,GAClC,8BAAO0a,GAAkB1a,GAASA,GAGrCA,EAQyEob,CAAepb,OAG3F,4BAAQrB,UAAU,oBAAoB2a,QAASzB,EAAMwD,UAAWta,MAAO,CAACua,QAAQzD,EAAMwD,UAAU,GAAG,SAAUX,GAAkBK,aAA/H,kBAKOQ,GAAY,SAAC1D,GACxB,OACE,yBAAKlZ,UAAU,aAAa8b,MAAO5C,EAAM2D,UACtC5U,OAAOuG,KAAK0K,EAAMsD,SAASpU,KAAI,SAAA/G,GAAM,OAAI,4BACxCrB,UAAY,aACZ2a,QAAWzB,EAAMsD,QAAQnb,IAExBA,Q,SCvCIyb,I,MAAQ,SAAC5D,GACpB,OAAQ,yBAAKlZ,UAAWkZ,EAAMgC,SAC3BhC,EAAM6D,WAIJ,SAASC,GAAW9D,GAAQ,IAAD,EACJ+D,oBAAS,GADL,oBAC3B5J,EAD2B,KAClB6E,EADkB,KAKhC,OAFAwC,qBAAU,kBAAMxC,GAAW,KAAO,CAACgB,EAAMxV,QAElC,yBAAKtB,MAAO,CAAC0W,SAAS,WAAY6D,QAAQ,iBAC/C,kBAAC1D,GAAD,CACE5F,QAASA,EACT6E,WAAYA,EACZiB,SAAU,CAAC2B,IAAK,QAASC,KAAK,WAJ3B,gBAMD7B,EAAMxV,MANL,IAMawV,EAAMxN,MAIrB,SAASwR,GAAgBhE,GAE9B,IAAIvS,EAAMuS,EAAMvS,IACZ0S,EAAOpB,GAAUiB,EAAM7F,QAAS6F,EAAMhB,WAAY,GAAI,GAAI,CAACoB,SAAU,MACzE,OACI,yBACElX,MAAO,CACLua,QAAS,eACTta,MAAO6W,EAAMhJ,OAAO/F,SAASxD,GAAM,OAAO,UAG5C,kBAAC,KAAS4S,IAAV,CACEnX,MAAK,aACH0W,SAAU,WACV6D,QAAS,gBACNtD,IAGJ9W,EAAeoE,IAbpB,IAeIuS,EAAMlU,UAAU2B,GAfpB,gB,UC/BOwW,GAAe,SAACjE,GAG3B,IAFA,IAAIkE,EAAQ,GAEHtU,EAAE,EAAGA,EAAEoQ,EAAM5E,KAAKpQ,OAAQ4E,GAAG,EAAG,CACvC,IADuC,EACnCuU,EAAM,GACNC,EAAWpE,EAAM5E,KAAK5N,MAAMoC,EAAGA,EAAE,GAFE,cAGvBwU,GAHuB,IAGvC,2BAA0B,CAAC,IAAlBC,EAAiB,QACpBlD,EAAc,QACdkD,EAAIpD,WACNE,EAAc,OAEZkD,EAAIC,SACNnD,EAAc,WAEhBgD,EAAI7V,KACF,wBACEmT,QAASzB,EAAM0B,YAAY1B,EAAM5E,KAAK1N,QAAQ2W,KAE9C,yBAAKvd,UAAU,OACf,yBACEA,UAAU,UACVF,IAAKyd,EAAIzd,IACTsC,MAAO,CACPiY,YAAaA,SApBkB,8BA2BvC+C,EAAM5V,KAAK,4BAAK6V,IAGlB,OACE,yBAAKrd,UAAU,iBACb,+BACE,+BAAQod,MAMHK,GAAU,SAACvE,GACtB,OACE,yBAAKlZ,UAAU,YACb,wBACEoC,MAAS,CACPsb,WAAY,MACZC,UAAW,OAGZzE,EAAM0E,cAAcxV,KAAI,SAACmV,GAAD,OAAU,wBAAIvd,UAAU,WAAWoC,MAAO,CAACC,MAAOkb,EAAIM,OAAO,EAAG,MAAM,UAAWN,EAAIna,YAMzG0a,GAAY,SAAC5E,GACxB,OACE,yBAAKlZ,UAAU,cAAf,4BACO,6BACL,0BAAMA,UAAU,oBAAoBkZ,EAAM6E,cC5DnCC,I,MAAmB,SAAC9E,GAC/B,OACE,yBAAKlZ,UAAU,qBACb,8BACE,6BADF,qCAEcuP,EAAY2J,EAAMiC,OAAO,2BAAO,2BAC5C,6BACA,8BACEA,MAAOjC,EAAMiC,MACb8C,SAAU/E,EAAMgF,aAChBle,UAAU,6BACVme,KAAM,GACNC,KAAM,MAGV,4BACEzD,QAASzB,EAAMmF,UACfre,UAAU,4BAFZ,4BAMA,4BACE2a,QAASzB,EAAMoF,WACfte,UAAU,4BAFZ,4BAMA,4BACE2a,QAAS,WACPjI,MAAM,iPAER1S,UAAU,4BAJZ,4BAQA,6BACA,6BACA,mKAKOue,GAAiB,SAACrF,GAC7B,OACE,yBAAKlZ,UAAU,mBACb,0EAEE,2BACEwe,KAAO,OACPrD,MAASjC,EAAMiC,MACf8C,SAAY/E,EAAMgF,aAClBle,UAAY,qBAGhB,4BACI2a,QAASzB,EAAMuF,WACfze,UAAU,4BAFd,wCAME,4BACE2a,QAASzB,EAAMmF,UACfre,UAAU,4BAFZ,4BAOF,+BAMO0e,GAAW,SAACxF,GAAD,OACtB,yBAAKlZ,UAAU,kBAAkBoC,MAAO,CAACub,UAAU,QACjD,8DAEI,2BACEa,KAAO,OACPrD,MAASjC,EAAMiC,MACf8C,SAAY/E,EAAMgF,aAClBle,UAAY,qBAGhB,4BACE2a,QAASzB,EAAMyF,KACf3e,UAAU,2BACVoC,MAAO,CAACwc,QAAQ,OAHlB,kBCrFOC,I,MAAc,SAAC3F,GAAD,OACzB,yBAAK9W,MAAO,CAAC0c,UAAW,SAAUnB,UAAU,QAC1C,wBAAI3d,UAAU,SAAd,sDACA,8CACM,uBAAG+e,KAAK,+CAAR,6BAEN,4BAAQ/e,UAAU,8BAA8B2a,QAASzB,EAAM8F,WAA/D,4BAAuF,6BACvF,4BAAQhf,UAAU,8BAA8B2a,QAASzB,EAAM+F,WAA/D,4BAAuF,6BACvF,4BAAQjf,UAAU,8BAA8B2a,QAASzB,EAAMmF,WAA/D,4BAAuF,gCAI9Ea,GAAgB,SAAChG,GAAD,OAC3B,yBAAK9W,MAAO,CAAC0c,UAAW,SAAUnB,UAAU,QACzC1V,OAAOuG,KAAK0K,EAAMsD,SAASpU,KAAI,SAAA/G,GAAM,OAAI,oCAAE,4BAAQrB,UAAU,wBAAwB2a,QAASzB,EAAMsD,QAAQnb,IAAUA,GAAgB,mC,YCV3I,SAAS8d,GAASjG,GAChB,OAAO,yBAAKlZ,UAAU,YAAY8b,MAAM,UACtC,yBAAK9b,UAAU,kBAAkBkZ,EAAMkG,UAAY,sDACnD,4BAAQpf,UAAU,mBAAmB2a,QAASzB,EAAMmF,WAApD,gBACA,4BAAQre,UAAU,mBAAmB2a,QAASzB,EAAMmG,YAApD,iBAcJ,SAASC,KACP5M,MAAM,08BAGD,SAAS6M,GAAcrG,GAC5B,OAAO,yBAAKlZ,UAAU,QAAQ8b,MAAM,UAClC,yBAAK9b,UAAU,wBAAwBkZ,EAAMsG,cAAc,6BAA3D,0DACCtG,EAAMhF,MAAM9L,KAAI,SAAA3B,GAAI,OAAI,kBAAC0Y,GAAa1Y,MACvC,6BACA,4BAAQzG,UAAU,wBAAwB2a,QAASzB,EAAMuG,WAAaH,IAA6BpG,EAAMwG,iBACzG,4BAAQ1f,UAAU,wBAAwB2a,QAASzB,EAAMyF,MAAzD,iBAIG,SAASgB,GAAYzG,GAC1B,OAAO,yBAAKlZ,UAAU,SACpB,kBAAC,GAAD,CAAS+I,MAAOmQ,EAAMvF,UAAY,GAAI8H,OAAQvC,EAAM0G,eAAiB,GAAIxE,gBAAiB,CAACuC,UAAW,OAAQ/C,YAAa1B,EAAM2G,qBACjI,yBAAK7f,UAAU,aAAakZ,EAAM4G,gBAAgB1c,KAAM,eAAK8V,EAAM4G,gBAAgB1c,KAAO,IAC1F,kBAAC,GAAD,CAAS2F,MAAOmQ,EAAMnQ,OAAS,GAAI0S,OAAQvC,EAAM6G,YAAc,GAAInF,YAAa1B,EAAM8G,kBACtF,yBAAKhgB,UAAU,aAAakZ,EAAM+G,cA7BtC,SAA+Bnc,GAC7B,IAAIV,EAAO,CAACU,EAAKV,MAMjB,OAJIU,EAAK+H,aAAgB/H,EAAK+H,YAAY3H,OAAS,GACjDd,EAAKoE,KAAL,YAAe1D,EAAK+H,YAAYzD,KAAI,SAAApF,GAAC,OAAIA,EAAEiB,QAAMgG,KAAK,KAAtD,MAGK7G,EAsB6C8c,CAAsBhH,EAAM+G,eAC9E,4BAAQjgB,UAAU,wBAAwBoC,MAAO,CAAC+d,OAAO,KAAMvB,QAAQ,QAASjE,QAASzB,EAAM0B,aAA/F,iBAIG,SAASwF,GAAYlH,GAC1B,OAAO,yBAAKlZ,UAAU,SACpB,yBAAKA,UAAU,UAAU8b,MAAM,UAC5B5C,EAAMmH,QAAQ,GADjB,WACiCnH,EAAMmH,QAAQ,GAD/C,WAC+DnH,EAAMmH,QAAQ,GAAG,6BAC7EnH,EAAMmH,QAAQ,GAFjB,WAEiCnH,EAAMmH,QAAQ,IAE/C,yBAAKrgB,UAAU,eAAe8b,MAAM,UAClC,0BAAM1Z,MAAO,CAACua,QAASzD,EAAMoH,aAAa,EAAG,GAAG,SAAhD,6BAA+D,yBAAKle,MAAO,CAACC,MAAO,UAAWke,SAAS,SAAUrH,EAAMoH,eAGzH,kBAAC,GAAD,CAAW9D,QAAStD,EAAMsD,QAASK,SAAS,YC4NzC,IAAM2D,GAnBb,SAAsBC,GACpB,IAD8B,EAC1BnM,EAAO,GADmB,cAGhBmM,GAHgB,IAG9B,2BAAwB,CAAC,IAAhBC,EAAe,QAGtB,GAFAA,EAAEvG,UAAW,EAEE,GAAXuG,EAAE7C,MACJ,IAAK,IAAI/U,EAAE,EAAGA,EAAE,EAAGA,IACjBwL,EAAK9M,KAAKS,OAAOC,OAAO,GAAIwY,SAI9BpM,EAAK9M,KAAKS,OAAOC,OAAO,GAAIwY,KAZF,8BAgB9B,OAAOpM,EAGWqM,CArRH,CACf,CACE7gB,IAAK,+CACLsD,KAAM,+CACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAEiJ,MAAQ,IAGd,CACE5L,IAAK,sDACLsD,KAAM,iEACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAEyQ,YAAc,IAGpB,CACEpT,IAAK,+CACLsD,KAAM,2DACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GAAM,IAAD,gBACKD,EAAEmO,OADP,IACb,2BAA2B,SACnBzM,KAAO,GAFF,iCAMjB,CACErE,IAAK,8CACLsD,KAAM,2DACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GAAM,IAAD,gBACKD,EAAEmO,OADP,IACb,2BAA2B,SACnBxM,IAAM,GAFD,iCAMjB,CACEtE,IAAK,sDACLsD,KAAM,sDACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAEmO,MAAQnO,EAAEmO,MAAMlK,MAAM,EAAGjE,EAAEmO,MAAM1M,OAAO,KAa9C,CACEpE,IAAK,qDACLsD,KAAM,8EACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAE+U,UAAW,IAIjB,CACE1X,IAAK,8CACLsD,KAAM,oFACNya,MAAO,EAEPxa,OALF,SAKSZ,EAAGC,GACRD,EAAE8U,eAAgB,IAItB,CACEzX,IAAK,kDACLsD,KAAM,wDACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GAAM,IAAD,gBACKD,EAAEmO,OADP,IACb,2BAA2B,CAAC,IAAnBtK,EAAkB,QACrBA,EAAM8E,WACR9E,EAAMnC,KAAO,EACbmC,EAAMlC,IAAM,IAJH,iCAmBjB,CACEtE,IAAK,qDACLsD,KAAM,iEACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GAAM,IAAD,gBACID,EAAEgE,MADN,IACb,2BAAyB,SAClBpB,WAAa,GAFP,iCAQjB,CACEvF,IAAK,sDACLsD,KAAM,2DACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAE2Q,aAAe,IAIrB,CACEtT,IAAK,0DACLsD,KAAM,uFACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAEuC,UAAY,CAAC,EAAE,EAAE,EAAE,KAIzB,CACElF,IAAK,yDACLsD,KAAM,+FACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GACRD,EAAEiV,iBAAkB,IAKxB,CACE5X,IAAK,kDACLsD,KAAM,iDACNya,OAAQ,GACRxa,OAJF,SAISZ,EAAGC,GACR,IAAI+D,EAAOhE,EAAEgE,KAAK2B,KAAI,SAAApF,GAAC,OAAEyH,GAAWhI,EAAGC,MACvCD,EAAEmO,MAAQlO,EAAIE,OAAOC,QAAQJ,EAAEgE,KAAK2B,KAAI,SAAApF,GAAC,kCAAOA,GAAP,IAAU2C,MAAM,QACzDlD,EAAEgE,KAAOA,EACThE,EAAEoe,sBAAuB,EAJZ,oBAMIpe,EAAEmO,OANN,IAMb,2BAA0B,CAAC,IAAlB9M,EAAiB,QACA,iBAAbA,EAAKV,OACdU,EAAKV,KAAOU,EAAKV,KAAK6N,QAAQ,eAAM,gBACpCnN,EAAKV,KAAOU,EAAKV,KAAK6N,QAAQ,eAAM,kBAT3B,iCA0BjB,CACEnR,IAAK,qDACLsD,KAAM,+CACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GAAM,IAAD,gBACKD,EAAEqJ,OADP,IACb,2BAA2B,SACnBpI,OAAS,GAFJ,iCAOjB,CACE5D,IAAK,kDACLsD,KAAM,oEACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAEiJ,MAAQ,GACVjJ,EAAEmV,aAAc,IAIpB,CACE9X,IAAK,uDACLsD,KAAM,sEACNya,MAAO,EACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAE0Q,iBAAmB,IAMzB,CACErT,IAAK,+CACLsD,KAAM,gFACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GACRD,EAAE6U,YAAa,IAInB,CACExX,IAAK,iDACLsD,KAAM,8FACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GACRD,EAAEkV,KAAM,IAMZ,CACE7X,IAAK,+CACLsD,KAAM,0CACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GACRD,EAAEiJ,MAAQ,KAId,CACE5L,IAAK,kDACLsD,KAAM,qEACNya,MAAO,EACP+C,eAAgB,EAChBvd,OALF,SAKSZ,EAAGC,GACRD,EAAEgV,eAAgB,IAKtB,CACE3X,IAAK,iDACLsD,KAAM,yDACNya,MAAO,GACPxa,OAJF,SAISZ,EAAGC,GACRD,EAAE4N,iBAAkB,M,MC9OnB,SAASyQ,KACdpO,MAAM,8VAoBR,SAASqO,KACP,OXmWK,WACL,IAAIrT,EAAM,IAAItB,EAAK/F,KAAKzD,UACpBoe,EAAYtT,EAAIG,OAAON,GAO3B,OANIyT,EAAU9c,OAAS,EACrB8c,EAAYA,EAAUta,MAAM,EAAG,GAExBsa,EAAU9c,OAAS,IAC1B8c,EAAYtT,EAAIoB,QAAJ,sBAAgBkS,GAAhB,YAA8BA,KAAYta,MAAM,EAAG,IAE1Dsa,EW5WAC,GAAqB7Y,KAAI,SAAAtE,GAAI,OAAIqB,EAAM4E,MAAK,SAAA/G,GAAC,OAAIA,EAAEiB,MAAQH,QAOpE,SAASod,KACP,IAAIC,EAAY,GAIZtK,EAHM,IAAIzK,EAAK/F,KAAKzD,UAGNiL,OAAOlC,GAIzB,OAHAwV,EAAUld,KAAO,iBAAS4S,EAAQ5S,KAClCkd,EAAUnK,MAAQ,GAEXmK,EA4BF,SAASC,GAAKlI,GACnB,OAAO,yBAAKlZ,UAAU,OAAO8b,MAAM,UACjC,6BACC5C,EAAMnQ,MAAMX,KAAI,SAAAtE,GAAI,OAAI,oCAAGA,EAAKG,KAAK,iCACtC,4BAAQjE,UAAU,cAAc2a,QAASzB,EAAMmI,aAA/C,gBACA,4BAAQrhB,UAAU,cAAc2a,QAASzB,EAAMoI,YAA/C,iBAIG,SAASC,GAAWrI,GACzB,OAAO,yBAAKlZ,UAAU,gBACpB,0BAAMA,UAAU,eAAeJ,EAAMU,KAAM4Y,EAAM5Y,OAG9C,SAASkhB,GAAUtI,GAExB,OAAO,yBAAKlZ,UAAU,UAAU8b,MAAM,UACpC,kBAACyF,GAAD,CAAYjhB,KAAM4Y,EAAM5Y,OACxB,4BAAQN,UAAU,gBAAgB2a,QAASzB,EAAM7B,eAAe,4DAAczX,EAAMU,KAApB,MAC/D4Y,EAAMjG,MAAM7K,KAAI,SAACW,EAAOpC,GAAR,OAAgB,kBAACya,GAAD,CAAMrY,MAAOA,EAAOsY,YAAa,kBAAMnI,EAAMmI,YAAY1a,IAAM2a,WAAY,kBAAMpI,EAAMoI,WAAW3a,SACnI,4BAAQ3G,UAAU,aAAa2a,QAASzB,EAAMuI,YAAY,6EAAgB7hB,EAAMU,QAIpF,SAASohB,GAASxI,GAChB,OAAO,yBAAKlZ,UAAU,YAAY8b,MAAM,UACtC,uBAAG9b,UAAU,kBAAkBkZ,EAAMjV,MACrC,uBAAGjE,UAAU,mBAAmBJ,EAAMU,KAAM4Y,EAAMlC,OAClD,4BAAQhX,UAAU,MAAM2a,QAASzB,EAAMyI,KAAvC,iBAIG,SAASC,GAAK1I,GACnB,OAAO,yBAAKlZ,UAAU,UAAU8b,MAAM,UACpC,kBAACyF,GAAD,CAAYjhB,KAAM4Y,EAAM5Y,OACxB,4BAAQN,UAAU,eAAe2a,QAASzB,EAAM2I,cAAhD,8BAAsEjiB,EAAMU,KAA5E,KACC4Y,EAAM4I,WAAW1Z,KAAI,SAAC6J,EAAMtL,GAAP,OAAe,kBAAC+a,GAAD,iBAAczP,EAAd,CAAoB0P,IAAK,kBAAMzI,EAAMyI,IAAIhb,WAK3E,SAASob,GAAW7I,GACzB,OAAO,yBAAKlZ,UAAU,UAAU8b,MAAM,UACpC,kBAACyF,GAAD,CAAYjhB,KAAM4Y,EAAM5Y,OACxB,wBAAIN,UAAU,eAAd,qDAIG,SAASgiB,GAAc9I,GAC5B,OAAO,yBAAKlZ,UAAU,iBAAiB8b,MAAM,UAC1C5C,EAAMzF,WAAWrL,KAAI,SAAC4Y,EAAWra,GAAZ,OAAoB,4BAAQ3G,UAAU,gBAAgB2a,QAAS,kBAAIzB,EAAM+I,SAAStb,KAAOqa,OAI5G,IAAMkB,GAAYnW,EAAWoW,KAAS,CAC3CC,qBArHF,SAA8BC,GAC5BA,EAAEC,gBAAiB,EAEnBD,EAAE/hB,KAAO,GACT+hB,EAAEE,SAAW,EAEbF,EAAEG,YAAc,EAelB,SAAwBH,GACtBA,EAAEI,WAAa7d,IAAED,MAAM,EAAGoc,IAd1B2B,CAAeL,GA6BjB,SAAoBA,GAClBA,EAAEP,WAAald,IAAED,MAAM,EAAGuc,IA7B1ByB,CAAWN,IA6GX9L,qBA1GF,SAA8B8L,GAC5BA,EAAE3L,WAAa9R,IAAED,MAAM,EAAGmJ,GAAe1F,KAAI,SAAApF,GAAC,OAAIA,EAAI,sBACtDqf,EAAE5L,UAAY4L,EAAE3L,WAAWtO,IAAI+G,GAAkB/G,IAAI2J,KAyGrDuP,WA7EF,SAAoBe,EAAG1b,GACrB0b,EAAE3O,KAAF,sBAAa2O,EAAE3O,MAAf,YAAwB2O,EAAEI,WAAW9b,KACrC0b,EAAEI,gBAAarZ,GA4EfwZ,UAzEF,SAAmBP,GACjBA,EAAEI,gBAAarZ,EACfiZ,EAAE/hB,MAAQ,MC9DCuiB,GAAQ,6BACnB,2GACA,6BAAK,6BAFc,uDAInB,6BAAK,6BAJc,yFAKH,6BAAK,6BACrB,2DANmB,uKAMyB,6BAAK,6BACjD,uEAPmB,uHAOmB,6BACtC,6NAAwCtgB,EAAe,GAAvD,SAA4DA,EAAe,GAA3E,sNAA0H,6BAAK,6BAC/H,sEATmB,0FASc,6BACjC,8aAAiF,6BAAK,6BACtF,sEAXmB,iGAWgB,6BACnC,mUAAgE,6BAAK,6BACrE,0DAbmB,8RAaiDA,EAAe,GAbhE,mGAamF,6BAAK,6BAC3G,0DAdmB,gKAcsB,6BACzC,iFAAeA,EAAe,GAA9B,qDAA4CA,EAAe,GAA3D,iEAA2EA,EAAe,GAA1F,sEAA0GA,EAAe,GAAzH,4EAA0IA,EAAe,GAAzJ,iEAAyKA,EAAe,GAAxL,gEAAuMA,EAAe,GAAtN,kEAAuOA,EAAe,GAAtP,qGAA4QA,EAAe,GAA3R,6JAA8T,6BAC9T,6BAhBmB,mJAiBK,6BACxB,6SAAoD,6BAlBjC,6FAkBqD,6BAAK,6BAlB1D,qTAmBqC,6BAnBrC,2OAoBuB,6BAAK,6BApB5B,0GAqBD,6BAAK,6BArBJ,qBAsBhB,0EAtBgB,mDAsBO,6BAAK,6BAtBZ,yDAuBV,qFAvBU,kUAuB4D,6BAAK,6BAvBjE,qXAwB8C,6BACjE,82BACA,6BAAK,6BA1Bc,uNA4BnB,6BA5BmB,mSA8BnB,6BAAK,6BACL,wDACA,6BAhCmB,6CAiCP,6BAjCO,6CAkCP,6BAlCO,oGAmCG,6BAnCH,oGAoCG,6BApCH,iHAqCM,6BArCN,qHAsCU,6BAtCV,0HAuCU,6BAvCV,mIAwCS,6BAxCT,wGAyCO,6BAzCP,wGA0CO,6BA1CP,6CA2CP,6BACZ,6BAAK,6BACL,wDACA,6BACA,sDAAkB,6BAClB,wEAAqB,6BACrB,kEAAoB,6BACpB,4DAAmB,6BACnB,4DAAmB,6BACnB,gEAAoB,6BACpB,4DAAmB,6BACnB,kEAAoB,6BAEpB,4DAAmB,6BACnB,sDAAkB,6BAClB,4EAAsB,6BACtB,0EAAuB,6BACvB,oFAAuB,8BCvCnBugB,GAAkB,CACtB/e,MAAO,GACPqC,OAAQ,GACRtD,SAAU,GACVkC,UAAW,IAGA+d,GAAb,oDAEE,WAAY7J,GAAO,IAAD,8BAChB,cAAMA,IAED8J,oBAAsB,EAAKA,oBAAoBC,KAAzB,iBAC3B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,iBAC5B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,iBAC7B,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,iBAC5B,EAAKI,wBAA0B,EAAKA,wBAAwBJ,KAA7B,iBAC/B,EAAKK,wBAA0B,EAAKA,wBAAwBL,KAA7B,iBAC/B,EAAKM,mBAAqB,EAAKA,mBAAmBN,KAAxB,iBAC1B,EAAKO,yBAA2B,EAAKA,yBAAyBP,KAA9B,iBAChC,EAAKQ,uBAAyB,EAAKA,uBAAuBR,KAA5B,iBAC9B,EAAKS,oBAAsB,EAAKA,oBAAoBT,KAAzB,iBAE3B,EAAKU,WAAa,EAAKA,WAAWV,KAAhB,iBAElB,EAAKW,kBAAoB,EAAKA,kBAAkBX,KAAvB,iBACzB,EAAKY,mBAAqB,EAAKA,mBAAmBZ,KAAxB,iBAC1B,EAAKa,mBAAqB,EAAKA,mBAAmBb,KAAxB,iBAC1B,EAAKc,oBAAsB,EAAKA,oBAAoBd,KAAzB,iBAC3B,EAAKe,oBAAsB,EAAKA,oBAAoBf,KAAzB,iBAC3B,EAAKgB,qBAAuB,EAAKA,qBAAqBhB,KAA1B,iBAC5B,EAAKiB,mBAAqB,EAAKA,mBAAmBjB,KAAxB,iBAC1B,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,iBAC3B,EAAKmB,sBAAwB,EAAKA,sBAAsBnB,KAA3B,iBAC7B,EAAKoB,uBAAyB,EAAKA,uBAAuBpB,KAA5B,iBAC9B,EAAKqB,wBAA0B,EAAKA,wBAAwBrB,KAA7B,iBAC/B,EAAKsB,qBAAuB,EAAKA,qBAAqBtB,KAA1B,iBAC5B,EAAKuB,sBAAwB,EAAKA,sBAAsBvB,KAA3B,iBAC7B,EAAKwB,kBAAoB,EAAKA,kBAAkBxB,KAAvB,iBACzB,EAAKyB,mBAAqB,EAAKA,mBAAmBzB,KAAxB,iBAE1B,EAAK0B,qBAAuB,EAAKA,qBAAqB1B,KAA1B,iBAC5B,EAAK2B,sBAAwB,EAAKA,sBAAsB3B,KAA3B,iBAC7B,EAAK4B,sBAAwB,EAAKA,sBAAsB5B,KAA3B,iBAE7B,EAAK6B,kBAAoB,EAAKA,kBAAkB7B,KAAvB,iBACzB,EAAK8B,4BAA8B,EAAKA,4BAA4B9B,KAAjC,iBAEnC,EAAK+B,eAAiB,EAAKA,eAAe/B,KAApB,iBACtB,EAAKgC,uBAAyB,EAAKA,uBAAuBhC,KAA5B,iBAC9B,EAAKiC,WAAa,EAAKA,WAAWjC,KAAhB,iBAClB,EAAKkC,WAAa,EAAKA,WAAWlC,KAAhB,iBAClB,EAAKmC,gBAAkB,EAAKA,gBAAgBnC,KAArB,iBAEvB,EAAKoC,UAAY,EAAKA,UAAUpC,KAAf,iBACjB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,iBAChB,EAAKsC,UAAY,EAAKA,UAAUtC,KAAf,iBACjB,EAAKuC,QAAU,EAAKA,QAAQvC,KAAb,iBACf,EAAKnY,eAAiB,EAAKA,eAAemY,KAApB,iBACtB,EAAKwC,aAAe,EAAKA,aAAaxC,KAAlB,iBACpB,EAAKyC,UAAY,EAAKA,UAAUzC,KAAf,iBACjB,EAAKvN,eAAiB,EAAKA,eAAeuN,KAApB,iBAEtB,EAAK0C,mBAAqB,EAAKA,mBAAmB1C,KAAxB,iBAC1B,EAAK2C,4BAA8B,EAAKA,4BAA4B3C,KAAjC,iBACnC,EAAK4C,mBAAqB,EAAKA,mBAAmB5C,KAAxB,iBAC1B,EAAK6C,kBAAoB,EAAKA,kBAAkB7C,KAAvB,iBACzB,EAAK8C,iBAAmB,EAAKA,iBAAiB9C,KAAtB,iBACxB,EAAK+C,kBAAoB,EAAKA,kBAAkB/C,KAAvB,iBACzB,EAAKgD,kBAAoB,EAAKA,kBAAkBhD,KAAvB,iBACzB,EAAKiD,qBAAuB,EAAKA,qBAAqBjD,KAA1B,iBAC5B,EAAKkD,sBAAwB,EAAKA,sBAAsBlD,KAA3B,iBAC7B,EAAKmD,qBAAuB,EAAKA,qBAAqBnD,KAA1B,iBAC5B,EAAKoD,4BAA8B,EAAKA,4BAA4BpD,KAAjC,iBACnC,EAAKqD,0BAA4B,EAAKA,0BAA0BrD,KAA/B,iBACjC,EAAKsD,yBAA2B,EAAKA,yBAAyBtD,KAA9B,iBAChC,EAAKuD,sCAAwC,EAAKA,sCAAsCvD,KAA3C,iBAC7C,EAAKwD,uBAAyB,EAAKA,uBAAuBxD,KAA5B,iBAC9B,EAAKyD,8BAAgC,EAAKA,8BAA8BzD,KAAnC,iBAErC,EAAK0D,uBAAyB,EAAKA,uBAAuB1D,KAA5B,iBAC9B,EAAKrM,YAAc,EAAKA,YAAYqM,KAAjB,iBACnB,EAAK2D,aAAe,EAAKA,aAAa3D,KAAlB,iBACpB,EAAK4D,kBAAoB,EAAKA,kBAAkB5D,KAAvB,iBAEzB,EAAK6D,qBAAuB,EAAKA,qBAAqB7D,KAA1B,iBAE5B,EAAK8D,aAAe,EAAKA,aAAa9D,KAAlB,iBACpB,EAAK+D,WAAa,EAAKA,WAAW/D,KAAhB,iBAClB,EAAKgE,qBAAuB,EAAKA,qBAAqBhE,KAA1B,iBAC5B,EAAKiE,eAAiB,EAAKA,eAAejE,KAApB,iBACtB,EAAKkE,WAAa,EAAKA,WAAWlE,KAAhB,iBAClB,EAAKmE,WAAa,EAAKA,WAAWnE,KAAhB,iBAClB,EAAKtE,KAAO,EAAKA,KAAKsE,KAAV,iBAEZ,EAAKf,UAAYnW,GAAW,SAAA1K,GAAM,OAAI,sCAAIgmB,EAAJ,yBAAIA,EAAJ,uBAAa,EAAKC,SAASjmB,EAAM,WAAN,GAAO,EAAKkmB,OAAZ,OAAsBF,QAAQnF,IAE/F,EAAKqF,MAAQ,CACXC,eAAgB,EAChB3jB,gBAAiB,EACjB4jB,iBAAkB,EAClBC,gBAAiB,EACjBC,mBAAoB,EACpBC,oBAAqB,EACrBC,kBAAmB,EACnBC,eAAgB,EAChBC,aAAc,EAAC,GAAO,GAAO,GAAO,GAAO,GAE3CC,OAAQ,GACRC,YAAY,EACZC,oBAAoB,EAEpB5U,MAAO,SAEP6U,WAAW,eAAKrF,IAEhBsF,MAAO,EAAKzC,mBAEZ0C,WAAY,EAAK1C,mBAEjBrR,KAAMkM,GAAKpY,KAAI,SAAApF,GAAC,sBAAOA,MACvB+a,WAAY,EACZ6C,eAAgB,EAEhB0H,UAAW,SACXrZ,UAAWnB,IACX0B,UAAWrK,EAAMuB,MAAM,EAAE,IAAI0B,KAAI,SAAApF,GAAC,kBAAOA,EAAEiB,SAAQgG,KAAK,MACxDse,aAAcpjB,EAAMiD,KAAI,SAAApF,GAAC,kCAAOA,GAAP,IAAU0E,SAASrB,KAAKkC,MAAoB,EAAdlC,KAAKzD,eAE5D4lB,eAAe,EAEfnc,KAAM0B,IAEN0a,SAAU,GAEVC,mBAAmB,GAGrB,EAAKC,SAAW,CACd5hB,KAAM,CACJoV,eAAI,EAAKkJ,WAEXthB,MAAO,CACLiY,eAAI,EAAKsJ,UAGXlf,OAAQ,CACN6V,eAAI,EAAKsJ,WAEX/U,OAAQ,CACN6L,eAAI,EAAKoJ,cAEX3iB,SAAU,CACRoZ,eAAI,EAAKwJ,WAGXzjB,KAAM,CACJqa,eAAI,kBAAM,EAAKpD,MAAMlF,MAAM/R,KAAK,EAAKslB,MAAMO,kBAI/C,EAAKc,WAAa,kBAAQ,EAAK1P,MAAMzW,EAAE6P,SAAS,GAAGnI,SAAS,gBAAO,EAAK+O,MAAMlF,MAAMqC,UAAY,EAAK6C,MAAMlF,MAAMhQ,QAxJjG,EAFpB,uDA6Ja2C,GAAM,IAAD,OACd,OAAO,WACL,IAAIkiB,EAAW,EAAKtB,MAAMjT,KAC1BuU,EAASliB,GAAKwT,UAAY0O,EAASliB,GAAKwT,SACxC,EAAKmN,SAAS,CAAChT,KAAMuU,OAjK3B,2CAqKuBvU,EAAMwU,GACzB,IADiD,EAC7CD,EAAQ,YAAOvU,GAD8B,cAGjCuU,GAHiC,IAGjD,2BAA0B,CAAC,IAAlBtL,EAAiB,QACpBA,EAAIqD,gBAAkBkI,IACxBvL,EAAIpD,UAAW,GAEZ2O,GAA0B,GAAM,CAAC,EAAE,GAAG3e,SAAS0e,EAASjiB,QAAQ2W,MACnEA,EAAIpD,UAAW,GAEZ2O,GAA0B,GAAM,CAAC,EAAE,EAAE,IAAI3e,SAAS0e,EAASjiB,QAAQ2W,MACtEA,EAAIpD,UAAW,IAX8B,8BAejD,GAAI3R,KAAK+e,MAAMwB,iBAAkB,CAAC,IAAD,gBACfF,GADe,IAC/B,2BAA0B,CAAC,IAAlBtL,EAAiB,QACpBA,EAAIpD,WACNoD,EAAIC,QAAS,IAHc,+BAQjC,OAAOqL,IA5LX,uCAmMI,OAHoBrgB,KAAK+e,MAAMjT,KAAKvR,QAAO,SAAA2d,GAAC,OAAKA,EAAEvG,UAAYuG,EAAElD,UAElClZ,QADjB,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAIqZ,QACQ,KAlMnD,mCAwMI,OADArV,KAAKue,aAAa,QACXve,KAAK+e,MAAMS,SAxMtB,kCA+MI,OAHAxf,KAAK0Q,MAAMlF,MAAM/S,KAAKuH,KAAK+e,MAAMC,eACjChf,KAAKwc,eAAe,QAASxc,KAAK0Q,MAAMzW,EAAEsB,MAAMG,QAAQ,GACxDsE,KAAK8e,SAAS,CAACE,eAAgB,IACxB,KA/MX,iCAsNI,OAHAhf,KAAK0Q,MAAMlF,MAAM5T,KAAKoI,KAAK+e,MAAM1jB,gBAEjC2E,KAAK8e,SAAS,CAACzjB,gBAAiB,IACzB,KAtNX,kCAgOI,OANA2E,KAAK0Q,MAAMlF,MAAM5S,MAAMoH,KAAK+e,MAAM1jB,eAAgB2E,KAAK+e,MAAME,iBAE7Djf,KAAK8e,SAAS,CACZzjB,gBAAiB,EACjB4jB,iBAAkB,IAEb,KAhOX,gCAuOI,OAHAjf,KAAK0Q,MAAMlF,MAAMiB,IAAIzM,KAAK+e,MAAM1jB,gBAChC2E,KAAKwc,eAAe,QAASxc,KAAK+e,MAAM1jB,gBAAgB,GACxD2E,KAAK8e,SAAS,CAACzjB,gBAAiB,IACzB,KAvOX,uCA6OI,OAFA2E,KAAK0Q,MAAMlF,MAAM3O,UAAUmD,KAAK+e,MAAM1jB,gBACtC2E,KAAK8e,SAAS,CAACzjB,gBAAiB,IACzB,KA7OX,qCAoPI,OAHA2E,KAAK0Q,MAAMlF,MAAMuB,YAAY/M,KAAK+e,MAAMG,gBAExClf,KAAK8e,SAAS,CAACI,gBAAiB,IACzB,KApPX,kCA2PI,OAHAlf,KAAK0Q,MAAMlF,MAAMwB,SAAShN,KAAK+e,MAAMI,kBAAmBnf,KAAK+e,MAAM1jB,eAAgB2E,KAAK+e,MAAME,iBAE9Fjf,KAAK8e,SAAS,CAACK,mBAAoB,IAC5B,KA3PX,uCAiQI,OAFAnf,KAAK0Q,MAAMlF,MAAM/O,UACjBuD,KAAK8e,SAAS,CAACK,mBAAoB,IAC5B,KAjQX,sCAoQkB7jB,GACd,OAAIA,EAAK8E,UACA,WAGA9E,EAAKoN,SACL,WAIA,WA9Qb,qCAkRiB8X,EAASriB,EAAKwU,GAC3B,IAAIgN,EAAU,eAAO3f,KAAK+e,MAAMY,YAChCA,EAAWa,GAASriB,GAAOwU,EAC3B3S,KAAK8e,SAAS,CAACa,iBArRnB,wCAwRoBrkB,GAAO,IAAD,EAClBsB,EAASoD,KAAK4c,gBAAgBthB,GAC9BkX,GAAI,oBACL5V,EAAStB,EAAKsB,QADT,qBAEDtB,EAAKK,KAFJ,oBAGFL,EAAKM,IAHH,sBAIAN,EAAKiB,MAJL,GASR,OAHIjB,EAAK6B,MAAQ,IACfqV,EAAKrV,MAAQ,SAAI7B,EAAK6B,OAEjBqV,IAnSX,yCAsSqBlX,EAAM6C,GACvB,MAAO,CACLwT,SAAW3R,KAAK+e,MAAMC,eAAiB7gB,EACvCoQ,SAAUjT,EAAKiT,SACfkS,gBAAiBnlB,EAAKmlB,mBA1S5B,8CA8S0BnlB,EAAM6C,GAC5B,MAAO,CACLwT,SAAW3R,KAAK+e,MAAMK,oBAAsBjhB,EAC5CoQ,SAAUjT,EAAKiT,YAjTrB,wCAqToBjT,GAGhB,IAHuB,IAAD,EAClBsB,EAASoD,KAAK4c,gBAAgBthB,GAC9BL,EAAe,GACVqF,EAAE,EAAGA,EAAE,EAAGA,IAGjB,IAFA,IAAIogB,EAAOtpB,EAAMqI,OAAOuG,KAAK5O,GAAOkJ,IAChC8F,EAAS9K,EAAKkT,MAAMlO,GACf+B,EAAE,EAAGA,EAAE+D,EAAQ/D,IACtBpH,EAAa+D,KAAK0hB,GAUtB,OAPQ,oBACL9jB,EAAStB,EAAKsB,QADT,qBAEDtB,EAAKK,KAFJ,oBAGFL,EAAKM,IAHH,uBAICX,GAJD,IA/TZ,yCAyUqBK,EAAM6C,GACvB,MAAO,CACLwT,SAAW3R,KAAK+e,MAAMO,eAAiBnhB,EACvCoQ,SAAUjT,EAAKiT,SACfkS,gBAAiBnlB,EAAKmlB,mBA7U5B,2CAiVuBnlB,GACnB,MAAO,CACL+V,aAAc,8BAAM,6BAAM/V,EAAKG,SAnVrC,4CAuVwBH,EAAM6C,GAC1B,MAAO,CACLwT,SAAW3R,KAAK+e,MAAMM,kBAAoBlhB,KAzVhD,yCA6VqB7C,GAAO,IAAD,EACnBsB,EAASoD,KAAK4c,gBAAgBthB,GAC9BkX,GAAI,oBACL5V,EAAStB,EAAKsB,QADT,qBAEDtB,EAAKK,KAFJ,oBAGDL,EAAKM,GAAKN,EAAKyC,KAHd,sBAIC,8BAAO3G,EAAMQ,KAAM0D,EAAK1D,OAJzB,GAYR,OANI0D,EAAKzD,MAAQ,IACf2a,EAAK3a,MAAS,8BAAOT,EAAMS,MAAOyD,EAAKzD,QAErCyD,EAAK6B,MAAQ,IACfqV,EAAKrV,MAAL,gBAAiB7B,EAAK6B,QAEjBqV,IA3WX,0CA8WsBlX,EAAM6C,GAAM,IAAD,OAC7B,MAAO,CACLwT,SAAW3R,KAAK+e,MAAM1jB,gBAAkB8C,EACxC1D,UAAWa,EAAKb,UAChBmX,QAAUtW,EAAKyC,IAAM,EACrB8M,QAAS7K,KAAK+e,MAAMY,WAAWpkB,MAAM4C,GACrCuR,WAAY,SAACiD,GAAD,OAAW,EAAK6J,eAAe,QAASre,EAAKwU,IACzD8N,gBAAiBnlB,EAAKmlB,mBArX5B,0CAyXsBnlB,GAAO,IAAD,EACpBsB,EAASoD,KAAK0Q,MAAMzW,EAAEoe,qBAAqB,SAAS,WACxD,OAAO,EAAP,kBACGzb,EAAStB,EAAKsB,QADjB,qBAEOtB,EAAKK,KAFZ,oBAGOL,EAAKM,GAAKN,EAAKyC,KAHtB,IA3XJ,2CAmYuBzC,EAAM6C,GAAM,IAAD,OAC9B,MAAO,CACLwT,SAAW3R,KAAK+e,MAAME,iBAAmB9gB,EACzC1D,UAAWa,EAAKb,UAChBmX,QAAUtW,EAAKyC,IAAM,EACrBA,IAAKzC,EAAKyC,IACViF,QAAS1H,EAAK0H,QACdgP,QAAShS,KAAK+e,MAAMY,WAAW/hB,OAAOO,GACtC8T,WAAY,SAACU,GAAD,OAAW,EAAK6J,eAAe,SAAUre,EAAKwU,IAC1DtD,MAAO,WAAO,EAAKqB,MAAMlF,MAAMnC,WAAW,UAAUpN,QAAQC,IAAI,aA5YtE,yCAgZqBZ,GAGjB,IADA,IAAIL,EAAe,GACVqF,EAAE,EAAGA,EAAE,EAAGA,IAGjB,IAFA,IAAIogB,EAAOtpB,EAAMqI,OAAOuG,KAAK5O,GAAOkJ,IAChC8F,EAAS9K,EAAKL,aAAaqF,GACtB+B,EAAE,EAAGA,EAAE+D,EAAQ/D,IACtBpH,EAAa+D,KAAK0hB,GAItB,IAAIC,EAAa,CACfxP,SAAU,wFAEVjW,MAAOI,EAAKJ,MACZqW,aAAcjW,EAAKV,KACnBK,aAAcA,GAOhB,YAJmB2F,GAAftF,EAAKH,SACPwlB,EAAWxlB,OAASpB,EAAeuB,EAAKH,SAGnCwlB,IAvaX,0CA0asBrlB,GAClB,MAAO,CACLqW,SAAW3R,KAAK+e,MAAMG,gBAAkBlf,KAAK0Q,MAAMzW,EAAE+N,OAAO5J,QAAQ9C,GACpEb,UAAWa,EAAKb,UAChBZ,MAAOyB,EAAKzB,SA9alB,4CAkbwByB,GACpB,MAAO,CACL6V,SAAU7V,EAAKslB,MnB9cO,2FmB8ce9mB,EACrC0X,gBAAiBlW,EAAKV,QArb5B,6CAybyBU,GACrB,MAAO,CACLqW,SAAW3R,KAAK+e,MAAMI,mBAAqBnf,KAAK0Q,MAAMzW,EAAEK,SAAS8D,QAAQ9C,GACzEb,UAAWa,EAAKb,UAChBZ,MAAOyB,EAAKzB,SA7blB,2CAkcuByB,GAAO,IAAD,EACrBsB,EAAStB,EAAK8E,UAAU,qBAAqB,kBAIjD,OAHI9E,EAAKoN,WACP9L,EAAS,KAAOA,GAEX,EAAP,kBACGA,EAAStB,EAAKsB,QADjB,+BAEiBtB,EAAKiB,MAFtB,sBAII,8BACE,0BAAM3C,MAAO,CAACme,SAAS,SACpBzc,EAAKK,IADR,IACcL,EAAKM,GADnB,QAEGxE,EAAMQ,KAAM0D,EAAK1D,KAFpB,QAGI0D,EAAKzD,MAAM,EAAK,8BAAOT,EAAMS,MAAOyD,EAAKzD,OAAiB,IAE9D,6BACCyD,EAAKV,MAAM,GACZ,6BACA,0BAAMhB,MAAO,CACXua,QAAU7Y,EAAK+H,aAAe/H,EAAK+H,YAAY3H,OAAS,EAAG,GAAG,SAE9D,wDACOJ,EAAK+H,aAAe/H,EAAK+H,YAAYvH,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAIP,KAAO,MAAM,KAEzF,8BAfJ,IAiBIW,IAAED,MAAMb,EAAKuB,WAAW,kBAAI9C,EAAeuB,EAAK4D,aAjBpD,KAiBkE5D,EAAK0B,gBAAgB,GAjBvF,IAkBE,6BACA,2BAAI1B,EAAKulB,OAAO,MAvBtB,IAvcJ,4CAoewBvlB,GACpB,MAAO,CACLwlB,mBAAoBxlB,EAAKsB,OACzBhC,KACE,8BACGU,EAAKK,IADR,IACcL,EAAKM,GACjB,6BACCN,EAAKV,MAAM,OA3etB,4CAifwBU,GACpB,MAAO,CACLwlB,mBAAoBhnB,EACpBc,KAAMU,EAAKV,QApfjB,iCAwfa0F,GAAI,Id/gBKygB,Ec+gBN,OACZ,GAAIzgB,EAAIN,KAAK0Q,MAAMzW,EAAE2D,OAAOlC,OAAQ,CAClC,IAAIslB,EAAa,IACb1gB,EAAI,EACNN,KAAK0Q,MAAMlF,MAAMvI,aAGbjD,KAAK0Q,MAAMzW,EAAE2D,OAAO0C,GAAG7F,YACzBumB,EAAa,IAEfhhB,KAAK0Q,MAAMlF,MAAM8B,UAAUhN,KdzhBbygB,Ec2hBVC,Ed1hBH,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASH,Oc0hB5BK,MAAK,WAAO,EAAKjG,WAAW7a,EAAE,WAGhDN,KAAK0Q,MAAM1E,OAAOC,YAvgBxB,0CA2gBsB9N,GAAM,IAAD,OACnB7C,EAAO0E,KAAK0Q,MAAMzW,EAAEsE,KAAKJ,GAC7B,OAAO,YAC4B,GAA7B,EAAK4gB,MAAMC,cACb,EAAKnC,aAGL,EAAKiC,SAAS,CACZE,cAAe7gB,EACf8hB,SAAU,EAAK9D,qBAAqB7gB,KAEtC,EAAKohB,WAAW,QAChB,EAAK0D,YAAL,CAAkB,gBAAM9kB,EAAKG,UAvhBrC,+CA4hB2B0C,GAAM,IAAD,OAC5B,OAAO,WACL,EAAK2gB,SAAS,CACZM,mBAAoBjhB,OA/hB5B,0CAmiBsBA,GAAM,IAAD,OACvB,OAAO,YAE4B,GAA7B,EAAK4gB,MAAMO,eACb,EAAK5O,MAAMlF,MAAM/R,KAAK0E,GACtB,EAAK2gB,SAAS,CAACQ,eAAgB,MAG/B,EAAKR,SAAS,CACZQ,cAAenhB,EACf8hB,SAAU,EAAK9D,qBAAqB,EAAKzL,MAAMzW,EAAEwQ,MAAMtM,MAEzD,EAAKue,WAAW,YA/iBxB,6CAmjByBve,GAAM,IAAD,OAC1B,OAAO,WACL,EAAK2gB,SAAS,CACZO,iBAAkBlhB,OAtjB1B,2CA2jBuBA,GAAM,IAAD,OACpB7C,EAAO0E,KAAK0Q,MAAMzW,EAAEsB,MAAM4C,GAC9B,OAAO,WACL,EAAK2gB,SAAS,CACZzjB,eAAgB8C,EAChB8hB,SAAU,EAAK9D,qBAAqB7gB,KAEtC,EAAK8kB,YAAL,CAAkB,gBAAM9kB,EAAKG,MAE7B,IAAI4lB,EAAa5hB,OAAOC,OAAO,GAAI,EAAKygB,SAAS5kB,OAE7C,EAAKmV,MAAMzW,EAAEsB,MAAM4C,GAAKtF,SAC1BwoB,EAAW,gBAAQ,EAAKrE,SAI1BqE,EAAW,eAAK/lB,EAAK4D,UAAY,EAAKoD,eAEtC,EAAKwc,SAAS,CAACU,OAAQjc,EAAW,EAAKkZ,uBAAwB4E,QA7kBrE,4CAilBwBljB,GAAM,IAAD,OACrB7C,EAAO0E,KAAK0Q,MAAMzW,EAAE2D,OAAOO,GAC/B,OAAO,WACL,EAAK2gB,SAAS,CACZG,gBAAiB9gB,EACjB8hB,SAAU,EAAK7D,sBAAsB9gB,KAEvC,EAAKohB,WAAW,UAChB,EAAK0D,YAAL,CAAkB,gBAAM9kB,EAAKG,SAzlBnC,2CA6lBuB0C,GAAM,IAAD,OACpB7C,EAAO0E,KAAK0Q,MAAMzW,EAAE+N,OAAO7J,GAC/B,OAAO,YAE6B,GAA9B,EAAK4gB,MAAMG,eACb,EAAKjC,gBAGL,EAAK6B,SAAS,CACZI,eAAgB/gB,EAChB8hB,SAAU,EAAK5D,sBAAsB/gB,KAEvC,EAAKohB,WAAW,UAChB,EAAK0D,YAAL,CAAkB,gCA1mB1B,8CA+mB0BjiB,GAAM,IAAD,OACvB7C,EAAO0E,KAAK0Q,MAAMzW,EAAEK,SAAS6D,GACjC,OAAO,YAEgC,GAAjC,EAAK4gB,MAAMI,kBACb,EAAKjC,aAGL,EAAK4B,SAAS,CACZK,kBAAmBhhB,EACnB8hB,SAAU,EAAK5D,sBAAsB/gB,KAEvC,EAAKohB,WAAW,YAChB,EAAK0D,YAAL,CAAkB,gCA5nB1B,8CAioB0BjiB,GAAM,IAAD,OAC3B,OAAO,WACL,IAAIgO,EAAU,EAAK4S,MAAMQ,aACzBpT,EAAQhO,IAAQgO,EAAQhO,GACxB,EAAK2gB,SAAS,CAACS,aAAcpT,OAroBnC,yCAyoBqBmV,GACjB,IACIC,EAAU,GAEdA,EAHoC,UAAxBvhB,KAAK+e,MAAMe,UAAwB,YAAc,aAG7CwB,EAAME,OAAO7O,MAC7B3S,KAAK8e,SAASyC,KA9oBlB,6CAipByB1oB,GAAS,IAAD,OAC7B,OAAO,WAAO,EAAK6jB,WAAW7jB,QAlpBlC,iCAqpBa2mB,GACY,iBAAVA,EACPxf,KAAK8e,SAAS,CACZU,OAAQjc,EAAWvD,KAAKyc,uBAAwBzc,KAAKmgB,SAASX,MAIlExf,KAAK8e,SAAS,CAACU,OAAQjc,EAAWvD,KAAKyc,uBAAwB+C,OA5pBrE,mCAiqBeiC,GACX,IAAMC,EAAS,CACb,MAAS1hB,KAAKmd,mBACd,MAASnd,KAAKod,4BACd,MAASpd,KAAKqd,mBACd,KAAQrd,KAAKsd,kBACb,IAAOtd,KAAKud,iBACZ,KAAQvd,KAAKwd,kBACb,KAAQxd,KAAKyd,kBACb,QAAWzd,KAAK0d,qBAChB,SAAY1d,KAAK2d,sBACjB,SAAY3d,KAAK4d,qBACjB,eAAkB5d,KAAK6d,4BACvB,aAAgB7d,KAAK8d,0BACrB,YAAe9d,KAAK+d,yBACpB,yBAA4B/d,KAAKge,sCACjC,UAAahe,KAAKie,uBAClB,iBAAoBje,KAAKke,+BAE3Ble,KAAK8e,SAAS,CAACe,WAAY7f,KAAK+e,MAAMa,QACtC5f,KAAK8e,SAAS,CAACc,MAAO8B,EAAOD,OArrBjC,mCAyrBIzhB,KAAKue,aAAa,aAzrBtB,6BA6rBIve,KAAK8e,SAAS,CAACc,MAAO5f,KAAK+e,MAAMc,eA7rBrC,mCAisBI,IAAI5hB,EAAO,GACP4F,EAAO7D,KAAK+e,MAAMlb,KAClB7D,KAAK+e,MAAMwB,kBACbtiB,EAAO+B,KAAK+e,MAAM7T,KAClBrH,GAAQ7D,KAAK+e,MAAMlH,QAAQnc,QAI3BuC,EAAOsL,GADkC,UAAxBvJ,KAAK+e,MAAMe,UAAwBhZ,EAAc9G,KAAK+e,MAAMtY,WAAazG,KAAK+e,MAAM/X,WAIvGhH,KAAK0Q,MAAMlF,MAAMC,SjBbd,SAAoBxN,EAAM4F,GAG/B,IAAIqB,EAAM,IAAItB,EAAKC,GAEf8d,EAAc,kBAAOjf,EAAQ9C,KAAI,SAAApF,GAAC,sBAAOA,OACzC4N,EAAQuZ,IAAchT,OAAOgT,KAC7Bre,EAAQhH,EAAOsD,KAAI,SAACpF,EAAE2D,GAAH,mBAAC,eAAa3D,GAAd,IAAiB2N,SAAShK,EAAKtE,MAAMqL,EAAIf,UAAU,QAQ1E,OANAlG,EAAOiH,EAAIoB,QAAQrI,GACnBmK,EAAQlD,EAAIoB,QAAQ8B,GACpB9E,EAAQ4B,EAAIoB,QAAQhD,GAIb,CAACrF,OAAMmK,MAFdA,EAAQA,EAAMlK,MAAM,EAAG,IAEFoF,QAAOqI,cAAczG,EAAIf,UAAU,KiBF5Byd,CAAW3jB,EAAM4F,IAC3C7D,KAAK0Q,MAAMlF,MAAMK,QAAQ7L,KAAK+e,MAAMjT,KAAKvR,QAAO,SAAA2d,GAAC,OAAKA,EAAEvG,UAAYuG,EAAElD,WACtEhV,KAAK0Q,MAAMlF,MAAMO,kBACjB/L,KAAK8e,SAAS,CAACS,aAAc,EAAC,GAAO,GAAO,GAAO,GAAO,KAC1Dvf,KAAKue,aAAa,cAhtBtB,iCAotBIve,KAAK0Q,MAAMmR,QACX7hB,KAAK8e,SAAS,CACZoB,mBAAmB,EACnBrc,KAAM0B,MAGJvF,KAAK+e,MAAMwB,iBACbvgB,KAAKue,aAAa,eAGlBve,KAAKue,aAAa,SA9tBxB,yCAkuBqBuD,EAAWC,GAE5B,IAAK,IAAIzhB,EAAE,EAAGA,EAAEN,KAAK0Q,MAAMzW,EAAEuC,UAAUd,OAAQ4E,IAAK,CAC9BN,KAAK0Q,MAAMzW,EAAEuC,UAAU8D,GAAKwhB,EAAU7nB,EAAEuC,UAAU8D,GAClD,GAClBN,KAAKwc,eAAe,YAAalc,GAAG,GAKxC,IAAI0D,EAAShE,KAAK0Q,MAAMxW,IAAI8nB,SAC5B,GAAIhe,IAAWhE,KAAK+e,MAAMmB,kBAAmB,CAC3ClgB,KAAK8e,SAAS,CAACoB,mBAAmB,IAClC,IAAI+B,EAAa,gIAEjB,GAAIje,EAAOuL,IAAK,CACd,IAAIgG,EAAavV,KAAK0e,iBAClBwD,EAAQ,IAGVA,EADE3M,EAAa,GAAKvV,KAAK0Q,MAAMzW,EAAEoe,qBACzB4J,EAED1M,GAAc,GAAKA,EAAa,EAC/B,IAEDA,GAAc,GAAKA,EAAa,GAC/B,IAEDA,GAAc,IAAMA,EAAa,GAChC,IAEDA,GAAc,IAAMA,EAAa,GAChC,IAEDA,GAAc,IAAMA,EAAa,GAChC,KAEDA,GAAc,IAAMA,EAAa,GAChC,MASA,SAGV,IAAIjc,EAAS0G,KAAK0Q,MAAMzW,EAAEoe,qBAAqB,2BAAO,2BACtDnO,MAAM,GAAD,OAAI5Q,EAAJ,mDAAuBic,EAAvB,2BAA0C2M,EAA1C,uCAAgF,UAAtBliB,KAAK+e,MAAMe,UAAoB9f,KAAK+e,MAAMtY,UAA1C,UAAuDM,EAAY/G,KAAK+e,MAAM/X,WAAW,eAAK,eAA9F,4BAA1D,uCAA6KhH,KAAK+e,MAAMlb,OACzL7D,KAAK+e,MAAMwB,kBACbvgB,KAAK8e,SAAS,CAACjH,QAAQ,GAAD,mBAAM7X,KAAK+e,MAAMlH,SAAjB,CAA0BtC,UAI/C,CACH,IAAI4M,EAASniB,KAAK0Q,MAAMzW,EAAEoe,qBAAqB,2BAAO,2BACtDnO,MAAM,GAAD,OAAIiY,EAAJ,2BAAmBne,EAAOwL,OAA1B,aAAqCxP,KAAK0Q,MAAMzW,EAAEoe,qBAAb,wBAAyC4J,EAAzC,MAAwD,GAA7F,qCAAwGjiB,KAAK+e,MAAMlb,OACpH7D,KAAK+e,MAAMwB,kBACbvgB,KAAK8e,SAAS,CAACjH,QAAQ,GAAD,mBAAM7X,KAAK+e,MAAMlH,SAAjB,CAA0B,UA/xB1D,2CAsyBwB,IAAD,OACnB,OAAO,yBAAKrgB,UAAU,SACpB,yBAAKF,IAAI,4CAA4CE,UAAU,cAC/D,kBAAC,GAAD,CAAagf,UAAW,kBAAI,EAAK+H,aAAa,QAAQ9H,UAAW,kBAAI,EAAK8H,aAAa,UAAU1I,UAAW7V,KAAK4e,gBAzyBvH,oDA8yBI,IAAM5K,EAAU,CAEd,2BAAQhU,KAAKme,uBAEb,eAAMne,KAAKmW,MAEb,OAAO,yBAAK3e,UAAU,SACpB,kBAAC,GAAD,CAAewc,QAASA,OArzB9B,2CAyzBwB,IAAD,OACnB,OAAO,yBAAKxc,UAAU,SACpB,yBAAKoC,MAAO,CACVrC,OAAQ,MACRU,MAAO,MACP0f,OAAO,KACPyK,SAAS,WAMR/H,IAEH,4BACElI,QAAS,kBAAI,EAAKoM,aAAa,UAC/B/mB,UAAU,kBAFZ,mBAv0BN,6CAi1BI,OAAQ,yBAAKA,UAAU,SACrB,kBAAC,GAAD,CACE+I,MAASP,KAAK+e,MAAMgB,aAAangB,IAAII,KAAKmc,wBAE5C,4BAAQ3kB,UAAU,iBAAiB2a,QAASnS,KAAKmW,MAAjD,mBAr1BN,8CA21B2B,IAAD,OAEtB,OAAQ,yBAAK3e,UAAU,QAAQoC,MAAO,CAAC0W,SAAS,aAC9C,0BAAM1W,MAAO,CAAC0W,SAAS,WAAYgC,IAAI,MAAOC,KAAK,OAAnD,0DACA,kBAAC,GAAD,CACEhS,MAASP,KAAK0Q,MAAMzW,EAAEsE,KAAKqB,IAAII,KAAKmc,sBACpC/J,YAAepS,KAAK8a,wBACpB1H,iBAAoBpT,KAAK+e,MAAMQ,aAAa3f,KAAI,SAAApF,GAAC,MAAK,CAACkX,OAAQlX,EAAE,oBAAoB,kBAEvF,4BACEhD,UAAU,iBACV2a,QAAS,WACP,EAAKzB,MAAMlF,MAAMU,SAAS,EAAK6S,MAAMQ,cACrC,EAAKhB,aAAa,UAJtB,+BAp2BN,wCAi3BoBtgB,EAAME,GAAM,IAAD,OAK3B,MAAO,CACLyY,SAAU5W,KAAK0Q,MAAMzW,EAAEiU,WAAW/P,GAClC0X,UANc,WACd,EAAKiJ,SAAS,CAACiB,aAAc9hB,IAC7B,EAAK2gB,cAKL/H,WAAY,WAAO,EAAKzI,YAAYjQ,OAz3B1C,kDA63B8BF,EAAME,GAAM,IAAD,OAKrC,MAAO,CACLyY,SAAU5W,KAAK+e,MAAM7Q,WAAW/P,GAChC0X,UANc,WACd,EAAKiJ,SAAS,CAACiB,aAAc9hB,IAC7B,EAAK2gB,cAKL/H,WAAY,WAAO,EAAKiI,SAAS,CAAC5T,KAAM,EAAK6T,MAAM9Q,UAAU9P,KAAO,EAAKogB,aAAa,iBAr4B5F,qCA24BIve,KAAK0Q,MAAMlF,MAAM6C,QAAQrO,KAAK+e,MAAMK,mBAAoBpf,KAAK+e,MAAMM,kBACnErf,KAAK0Q,MAAMlF,MAAMR,qBACjBhL,KAAK8e,SAAS,CAACM,oBAAqB,EAAGC,kBAAmB,IAEtDrf,KAAK0Q,MAAMzW,EAAEoR,kBACfrL,KAAKqe,sBAh5BX,+CAq5BIre,KAAK8e,SAAS,CAACyB,kBAAkB,IACjCvgB,KAAK0Q,MAAMlF,MAAMuC,qBAAqB3R,IAAEhC,OAAO,KAC/C4F,KAAKue,aAAa,oBAv5BtB,0CA25BIve,KAAK8e,SAAS,CAGZjH,QAAS,KAEX7X,KAAK8e,SAAS,CAAChT,KAAM9L,KAAKye,qBAAqBzG,GAAKpY,KAAI,SAAApF,GAAC,sBAAOA,MAAM,KACtEwF,KAAKue,aAAa,iBAj6BtB,kCAo6BcpgB,GACV6B,KAAK0Q,MAAMlF,MAAM4C,YAAYjQ,GAC7B6B,KAAKue,aAAa,kBAt6BtB,6CA06BIve,KAAK0Z,UAAUE,uBACf5Z,KAAK0Z,UAAU3L,uBACf/N,KAAKue,aAAa,8BA56BtB,oDA+6BiC,IAAD,OAM5B,OAAO,kBAACxH,GAAD,CAAerL,MAAO1L,KAAK0Q,MAAMzW,EAAEgU,UAAUrO,IAAII,KAAKsc,mBAAoBnG,KALtE,WACT,EAAKoI,aAAa,SAElB,EAAKO,SAAS,CAACyB,kBAAkB,KAE0DvJ,cAAc,oDAAYE,gBAAgB,2CAr7B3I,8DAw7B2C,IAAD,OAKtC,OAAO,kBAACH,GAAD,CAAerL,MAAO1L,KAAK+e,MAAM9Q,UAAUrO,IAAII,KAAKuc,6BAA8BpG,KAJ9E,WACT,EAAKoI,aAAa,SAClB,EAAKO,SAAS,CAAChF,gBAAgB,KAEoE9C,cAAc,4EAAgBE,gBAAgB,mDAAWD,UAAWqB,OA77B7K,+CAg8B4B,IAAD,OAYjB+J,EAAW,CAHEriB,KAAK+e,MAAM9E,WAAa,kBAACjB,GAAD,CAAWvO,MAAOzK,KAAK+e,MAAM9E,WAAYniB,KAAMkI,KAAK+e,MAAMjnB,KAAM+gB,YARvF,SAAC1a,GACnB,EAAK2gB,SAAS,CAACiB,aAAc,EAAKhB,MAAM9E,WAAW9b,KACnD,EAAKogB,aAAa,YAMiHzF,WAJlH,SAAC3a,GAClB,EAAKub,UAAUZ,WAAW3a,IAGiI8a,WAAY,kBAAI,EAAKS,UAAUU,eAAmB,kBAACb,GAAD,CAAYzhB,KAAMkI,KAAK+e,MAAMjnB,OAC/N,kBAACshB,GAAD,CAAMthB,KAAMkI,KAAK+e,MAAMjnB,KAAMwhB,WAAYtZ,KAAK+e,MAAMzF,cAGjE,OAAO,yBAAK9hB,UAAU,SACnB6qB,EAASriB,KAAK+e,MAAM/E,aACrB,kBAACR,GAAD,CACEvO,WAAY,CAAC,qBAAO,qBAAO,4BAC3BwO,SAAU,SAACtb,GAAS,EAAK2gB,SAAS,CAAC9E,YAAa7b,UAj9BxD,2GA49BI,OAAO,kBAACgZ,GAAD,CACL5W,MAASP,KAAK0Q,MAAMzW,EAAEgR,WAAWrL,IAAII,KAAKob,mBAAmBld,MAAM,EAAE,GACrEqZ,WAAcvX,KAAK0Q,MAAMzW,EAAEgR,WAAWrL,IAAII,KAAK8b,yBAC/CrE,aAAY,eAAQzX,KAAK0Q,MAAMzW,EAAEgR,WAAWjL,KAAK+e,MAAMK,qBACvD5H,gBAAmBxX,KAAKgb,yBACxB7P,SAAYnL,KAAK0Q,MAAMzW,EAAEkR,SAASvL,IAAII,KAAK+b,sBAC3C3E,cAAiBpX,KAAK0Q,MAAMzW,EAAEkR,SAASvL,IAAII,KAAKgc,uBAChD1E,gBAAe,eAAQtX,KAAK0Q,MAAMzW,EAAEkR,SAASnL,KAAK+e,MAAMM,mBACxDhI,mBAAsBrX,KAAKib,uBAC3B7I,YAAepS,KAAKoe,iBAr+B1B,iDAy+B8B,IAAD,OACrBpK,EAAU,CACX,2BAAQ,WACN,EAAK8K,SAAS,CAACiB,aAAc,EAAKhB,MAAM7T,MAAQ,EAAKwF,MAAMzW,EAAEiR,OAC7D,EAAKqT,aAAa,YAEpB,2BAAQ,WACN,EAAKO,SAAS,CAAC5T,KAAM,EAAK6T,MAAM7T,MAAQ,EAAKwF,MAAMzW,EAAEiR,OACrD,EAAKqT,aAAa,SAGlBzG,OAAclX,EAgBnB,OAfKZ,KAAK+e,MAAMlH,QAAQnc,QAAU,IAC/Boc,EAAc1b,IAAEkmB,KAAKtiB,KAAK+e,MAAMlH,QAAQlZ,MAAK,SAAC4jB,EAAEC,GAAH,OAAUA,EAAED,KAAIrkB,MAAM,EAAE,IACrE4Z,EAAc1b,IAAEqmB,MAAM3K,EAAa,GACnC9D,EAAU,CACR,2BAAQA,EAAQ0O,yBAChB,2BAAQ,WACN,EAAKnE,aAAa,SAClB,EAAKO,SAAS,CACZyB,kBAAkB,EAClBrV,UAAMtK,EACNkL,KAAMkM,GAAKpY,KAAI,SAAApF,GAAC,sBAASA,WAK3B,kBAAC,GAAD,CACNqd,QAAO,sBAAQ7X,KAAK+e,MAAMlH,SAAnB,YAA+Bzb,IAAED,MAAM,EAAE6D,KAAK+e,MAAMlH,QAAQnc,QAAQ,iBAAI,SAC/Eoc,YAAeA,EACf9D,QAAWA,MAvgChB,0CA2gCuB,IAAD,OAuBd2O,EAAgB,yBAAKrP,MAAM,UAC7B,uBAAG1Z,MAAO,CAACub,UAAU,OAClB,CAAC,EAAE,EAAE,EAAE,GAAGvV,KACP,SAACzB,GAAD,OAAS,kBAACuW,GAAD,CACP7J,QAAW,EAAKkU,MAAMY,WAAWnjB,UAAU2B,GAC3CuR,WAAc,SAACiD,GAAD,OAAW,EAAK6J,eAAe,YAAare,EAAKwU,IAC/DxU,IAAOA,EACPuJ,OAAU,EAAKgJ,MAAMzW,EAAEyN,OACvBlL,UAAa,EAAKkU,MAAMzW,EAAEuC,eAPlC,iBAWOwD,KAAK0Q,MAAMzW,EAAEyC,MAClB,6BACA,4BACElF,UAAU,sBACV2a,QAAS,WAAO,EAAK2M,SAAS,CAACW,YAAa,EAAKV,MAAMU,eAErDzf,KAAK+e,MAAMU,WAAa,8BAAOroB,EAAMW,MAAb,4BAAiC,8BAAOX,EAAMsC,YAAb,6BAE7D,4BACElC,UAAU,sBACVoC,MAAO,CACLua,QAA8B,SAApBnU,KAAK0Q,MAAMzW,EAAE6Q,OAAmB9K,KAAK0Q,MAAMxW,IAAI8nB,SAAoB,GAAT,QAEtE7P,QAAS,WACH,EAAKzB,MAAMxW,IAAI8nB,UACjB,EAAKY,WAEP,EAAKlS,MAAMlF,MAAMmB,OACjB,EAAK+D,MAAMlF,MAAM6B,YACjB,EAAK8N,YAAY,EAAKzK,MAAMzW,EAAE0Q,mBAG/B3K,KAAK0Q,MAAMxW,IAAI8nB,SAAU,yDAAW5qB,EAAMoC,SAAgB,yDAAWpC,EAAMmC,YAgB9EspB,EAAc,6BAChB,uBAAGjpB,MAAO,CAACub,UAAW,OAAtB,gBACMnV,KAAK0Q,MAAMzW,EAAE8G,OADnB,IAC4Bf,KAAK0Q,MAAMzW,EAAEyQ,WADzC,gBAGE,kBAAC8J,GAAD,CAAYtZ,MAAO8E,KAAK0Q,MAAMzW,EAAEiB,MAAOgI,KAAMlD,KAAK0Q,MAAMzW,EAAEiJ,OAC5D,6BACE,4BACEiP,QAAS,kBAAI,EAAKyQ,YAClBhpB,MAAS,CACP0W,SAAU,WACVyH,SAAU,OACVzF,IAAK,KACLC,KAAM,MAEN4B,QAAUnU,KAAK+e,MAAMwB,iBAAkB,OAAO,KARlD,UAcA,0BACEpO,QAAS,WAAKjI,MAAM,EAAKwG,MAAMzW,EAAE6P,SAAS5L,MAAM,EAAE,IAAIuD,KAAK,SAE1DzB,KAAK0Q,MAAMzW,EAAE6P,SAAS,MAKzBgZ,EACF,kBAAC,GAAD,CACEviB,MAASP,KAAK0Q,MAAMzW,EAAEsB,MAAMqE,IAAII,KAAKsb,oBACrCrI,OAAUjT,KAAK0Q,MAAMzW,EAAEsB,MAAMqE,IAAII,KAAKub,qBACtCnJ,YAAepS,KAAK0a,uBAIpBqI,EACF,kBAAC,GAAD,CACIxiB,MAASP,KAAK0Q,MAAMzW,EAAEsE,KAAKqB,IAAII,KAAKob,mBACpCnI,OAAUjT,KAAK0Q,MAAMzW,EAAEsE,KAAKqB,IAAII,KAAKqb,oBACrCjJ,YAAepS,KAAKwa,sBAItBwI,EACF,kBAAC,GAAD,CACEziB,MAASP,KAAK0Q,MAAMzW,EAAE+N,OAAOpI,IAAII,KAAK0b,oBACtCzI,OAAUjT,KAAK0Q,MAAMzW,EAAE+N,OAAOpI,IAAII,KAAK2b,qBACvCvJ,YAAepS,KAAK4a,qBACpBhI,gBAAmB,CAACrb,OAAQ,OAC5B8a,UAAa,CAAC9a,OAAQ,MAAO0rB,YAAY,QAIzCC,EAAoB,kBAAC,GAAD,CACtB3iB,MAASP,KAAK0Q,MAAMzW,EAAEK,SAASsF,IAAII,KAAK4b,uBACxC3I,OAAUjT,KAAK0Q,MAAMzW,EAAEK,SAASsF,IAAII,KAAK6b,wBACzCzJ,YAAepS,KAAK6a,wBACpBjI,gBAAmB,CAACrb,OAAQ,MAAO4d,UAAW,SAG5CgO,EAAgB,kBAAC,GAAD,CAClB5iB,MAASP,KAAK0Q,MAAMzW,EAAEwQ,MAAM7K,IAAII,KAAKic,mBACrChJ,OAAUjT,KAAK0Q,MAAMzW,EAAEwQ,MAAM7K,IAAII,KAAKkc,oBACtC9J,YAAepS,KAAKkb,oBACpBtI,gBAAmB,CAACrb,OAAQ,MAAO4d,UAAW,SAG5CiO,EACJ,oCAWIpjB,KAAK+e,MAAMiB,cAAekD,EAAiBC,GAI/C,OACE,yBAAK3rB,UAAU,SACb,kBAAC,GAAD,CACEkb,QAAU,aACV6B,QAAWsO,IAEb,kBAAC,GAAD,CACEtiB,MAASP,KAAK0Q,MAAMzW,EAAE2D,OAAOgC,IAAII,KAAKwb,qBACtCvI,OAAUjT,KAAK0Q,MAAMzW,EAAE2D,OAAOgC,IAAII,KAAKyb,sBACvCrJ,YAAepS,KAAK2a,sBACpB/H,gBAAmB,CAACuB,QAASnU,KAAK+e,MAAMU,WAAW,GAAG,UAEtDzf,KAAK+e,MAAMU,WAAaqD,EAAgBM,EAC1C,kBAAC,GAAD,CACEpP,QAAWhU,KAAK+e,MAAMS,OACtBtL,UAAqD,GAAvCzU,OAAOuG,KAAKhG,KAAK+e,MAAMS,QAAQ9jB,OAAWsE,KAAKyc,uBAAuBzc,KAAK2c,iBAAY/b,IAErGZ,KAAK+e,MAAMU,WAAa,GAAG,4BAAQjoB,UAAU,qBAAqB2a,QAAS,kBAAI,EAAK2M,SAAS,CAACkB,eAAgB,EAAKjB,MAAMiB,kBAAkBhgB,KAAK+e,MAAMiB,cAAc,iCAAQ,kCAC5KhgB,KAAK+e,MAAMU,WAAasD,EAAeC,EACzC,kBAAC,GAAD,CACEtQ,QAAU,eACV6B,QAAWoO,IAEb,yBAAKnrB,UAAU,gBACb,kBAAC,GAAD,CAAO8D,KAAM0E,KAAK+e,MAAMkB,eAhsClC,0CAusCuB,IAAD,OAClB,OACE,yBAAKzoB,UAAU,QAAQ8b,MAAM,UAC3B,kBAAC,GAAD,CACEhY,KAAM0E,KAAK+e,MAAMkB,SACjB7N,YAAa,kBAAI,EAAKmM,aAAa,cA5sC7C,yCAmtCsB,IAAD,OACbhJ,EAAavV,KAAK0e,iBAElB1K,EAAU,CACZqP,2BAAM,kBAAM,EAAK9E,aAAa,SAC9B+E,2BAAM,kBAAM,EAAKxE,SAAS,CACxBhT,KAAM,EAAK2S,qBAAqB,EAAKM,MAAMjT,KAAM,EAAKiT,MAAM3G,eAAe,GAC3EA,eAAgB,EAAK2G,MAAM3G,eAAiB,KAE9CmL,2BAAM,kBAAM,EAAKhF,aAAa,UAC9BiF,2BAAM,kBAAM,EAAKjF,aAAa,WAShC,OANIve,KAAK+e,MAAMwB,mBACbvM,EAAU,CACRqP,2BAAM,kBAAM,EAAK1E,gBAKnB,yBAAKnnB,UAAU,SACb,kBAAC,GAAD,CACEsU,KAAQ9L,KAAK+e,MAAMjT,KACnBsG,YAAepS,KAAKwe,aAEtB,kBAAC,GAAD,CACEpJ,cAAiBpV,KAAK+e,MAAMjT,KAAKvR,QAAO,SAAA2d,GAAC,OAAKA,EAAEvG,UAAYuG,EAAElD,YAEhE,kBAAC,GAAD,CACEO,WAAcA,IAEhB,6BACA,yBACE3b,MAAO,CACLC,MAAO,MACPqb,WAAY,KACZC,UAAW,MACXhB,QAASoB,GAAY,GAAK,GAAK,SALnC,wFAWA,kBAAC,GAAD,CACEvB,QAAWA,OA/vCrB,0CAswCuB,IAAD,OACdyP,EAAmB,kBAAC,GAAD,CACrB9Q,MAAS3S,KAAK+e,MAAMtY,UACpBiP,aAAgB1V,KAAK+a,mBACrB9E,WAAc,kBAAM,EAAK6I,SAAS,CAACrY,UAAUnB,OAC7CuQ,UAAa,WACX,EAAKiJ,SAAS,CAACiB,aAAcxW,GAASzC,EAAc,EAAKiY,MAAMtY,cAC/D,EAAKmY,gBAIL8E,EAAqB,kBAAC,GAAD,CACvB/Q,MAAS3S,KAAK+e,MAAM/X,UACpB0O,aAAgB1V,KAAK+a,mBACrBlF,UAAa,WACX,EAAKiJ,SAAS,CAACiB,aAAcxW,GAAS,EAAKwV,MAAM/X,aACjD,EAAK4X,cAEP9I,WAAc,WACZ,EAAKgJ,SAAS,CACZiB,aAAcpjB,EAAMiD,KAAI,SAAApF,GAAC,kCAAOA,GAAP,IAAU0E,SAASrB,KAAKkC,MAAoB,EAAdlC,KAAKzD,iBAC9D,EAAKwkB,gBAIT,OACE,yBAAKpnB,UAAU,SACb,kBAAC,KAAD,CACEiiB,SAAU,SAACtb,GAAD,OAAO,EAAK2gB,SAAS,CAACgB,UAAU,CAAC,SAAU,UAAU3hB,MAC/DwlB,cAAe,CAAC,SAAU,UAAUvlB,QAAQ4B,KAAK+e,MAAMe,WACvDlmB,MAAO,CAAC+d,OAAQ,KAAMpgB,OAAQ,OAE9B,kBAAC,KAAD,KACE,kBAAC,KAAD,iCACA,kBAAC,KAAD,mCAIsB,UAAxByI,KAAK+e,MAAMe,UAAwB2D,EAAkBC,EAEvD,kBAAC,GAAD,CACE1P,QAAW,CACTqP,2BAAM,kBAAM,EAAK1E,cACjBiF,2BAAM,kBAAM,EAAKrF,aAAa,aAC9BsF,2BAAM,kBAAM,EAAKtF,aAAa,cAlzC1C,6CAyzC0B,IAAD,OACrB,OAAQ,yBAAK/mB,UAAU,SACrB,kBAAC,GAAD,CACE2e,KAAQ,kBAAM,EAAKA,QACnBT,aAAgB,SAAC4L,GAAW,EAAKxC,SAAS,CAACjb,KAAMyd,EAAME,OAAO7O,SAC9DA,MAAS3S,KAAK+e,MAAMlb,UA9zC5B,+BAo0CI,OAAO7D,KAAK+e,MAAMa,YAp0CtB,GAA2BkE,IAAMC,WCrBlBC,GANHC,YAAO,CACjBC,KAAM5Y,GACNsU,MAAOrF,GACP4J,OAAO,ICGWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4e3ab5e8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"http://prts.wiki/images/b/b1/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E5%90%88%E7%BA%A6%E8%B5%8F%E9%87%91.png\" height={attr_icon_height} />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 9l-6 6 6 6\"/><path d=\"M20 4v7a4 4 0 0 1-4 4H5\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[G.field.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得+2/+1`);\n  }\n  card.atk += 2;\n  card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+2/+1</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n\n  {\n    requirements: [0,0,0,3],\n    score: 3, // More score because steel is not that easy to obtain\n    // reward: 3,\n    advanced: true,\n    desc: (<span>获得2分/每组{food_icons[0]}{food_icons[1]}{food_icons[2]}订单</span>),\n    effect(G, ctx) {\n      let colors = G.finished.reduce((acc,val)=>{\n        if(val.color >= 0) acc[val.color]+=1;\n        return acc;\n      }, [0,0,0]);\n      console.log(colors);\n      let times = _.min(colors);\n      G.score += 2 * times;\n    },\n  },  \n];\n  \nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2费</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.costs += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2费</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.costs += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2费</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.costs += 2;\n    },\n  },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>重置1订单</span>),\n    ready_other_orders: true,\n    effect: ready_order,\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>重置1订单</span>),\n    ready_other_orders: true,\n    effect: ready_order,\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>重置1订单</span>),\n    ready_other_orders: true,\n    effect: ready_order,\n  },\n\n  ...advanced_orders,\n  ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, insert_field, reduce_enemy_atk, silent\n} from './Game';\nimport { material_icons, ready_order } from './orders';\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:6, \n    hp:6, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 6;\n    },\n    reinforce_desc: \"+6/+6\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 9,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:16,\n    hp:16,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:2, \n    block:1, \n    desc:\"采掘: 摧毁场上1个重置状态的干员，并获得3点费用\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => !x.exhausted))[0];\n      if (card) {\n        G.field = G.field.filter(x => x != card);\n        G.costs += 3;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用(最多4点)\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += Math.min(num_exhausted, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 6) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少6点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:5, \n    atk:3, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+2>\", \n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      self.atk += 3 + 2 * self.power;\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc: <span>部署: 获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:2, \n    desc:\"行动: 获得+6生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n  {\n    name:\"年\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n  // {\n  //   name:\"斑点\", \n  //   cost:5, \n  //   atk:3, \n  //   hp:15, \n  //   mine:1, \n  //   block:2, \n  //   desc:\"行动: 使自己和左右两侧干员获得+4生命值\", \n  //   illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n  //   action(G, ctx, self) {\n  //     let self_idx = G.field.indexOf(self);\n  //     G.field.map((card, idx) => {\n  //       if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n  //         card.hp += 4;\n  //       }\n  //     });\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"完全治疗自己并获得+2生命值\",\n  //   onReinforce(G, ctx, self) {\n  //     self.dmg = 0;\n  //     self.hp += 2;\n  //   }\n  // },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  // {\n  //   name:\"芙蓉\", \n  //   cost:1, \n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 完全治疗1个干员\", \n  //   illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     fully_restore(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+6生命值\",\n  // },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n\n  },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      fully_restore(G, ctx);\n      if (G.cured >= 4) {\n        G.score += 2 + self.power;\n      }\n    },\n    reinforce_desc: \"再获得1分\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"皇帝\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得2分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += 2 * num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + 2 * self.power)) {\n        let delta = 6 + 3 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+2，得分+3\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:0, \n    desc:\"部署: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    onPlay(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce: 2,\n    reinforce_desc: \"触发1次\\\"部署\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，每使用1次订单，就造成3点伤害\",\n    illust:\"http://prts.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n    action(G, ctx) {\n      G.onUseOrder.push(\n        (G, ctx) => {\n          deal_random_damage(G, ctx, 3);\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  {\n    name:\"梅尔\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n    reinforce: 1,\n\n    onPlay(G, ctx) {\n      let order = {};\n      let material = ctx.random.Die(3) - 1;\n      let requirements = [0,0,0,0];\n      requirements[material] = 1;\n      order.desc = <span>{material_icons[material]}→5伤害</span>;\n      order.effect = (G,ctx) => {\n        if (payMaterials(G, ctx, requirements)) {\n          deal_random_damage(G, ctx, 5);\n        }\n      };\n      order.is_rhine = true;\n      G.finished.unshift(order);\n    },\n    \n    onReinforce(G, ctx) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n\n\n\n  \n  {\n    name:\"斑点\",\n    cost:6,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:2,\n    atk:4, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"采掘/战斗: 横置场上的1个干员，然后该干员每有2点攻击力，就获得1分\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    onMine(G, ctx) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      if (card) {\n        card.exhausted = true;\n        let delta = Math.floor(card.atk / 2);\n        G.score += delta;\n        logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n      }\n    },\n    onFight(G, ctx) {\n      this.onMine(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n\n  },\n  \n  {\n    name:\"灰喉\", \n    cost:4,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:0, \n    desc:\"部署: 获得+15攻击力直到回合结束\", \n    illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n    onPlay(G, ctx, self) {\n      let delta = 15;\n      self.atk += delta;\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= delta;\n          self.played = false;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 7) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少7分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  \n  // {\n  //   name:\"黑\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"超杀: 对其对位敌人造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let idx = G.field.indexOf(self);\n  //       if (~idx) {\n  //         let enemy = G.efield[idx];\n  //         if (enemy) {\n  //           enemy.dmg += 5 + 4 * self.power;\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"伤害+4\",\n  // },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E9%85%B8%E7%B3%96_1.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:1, \n    hp:1, \n    mine:1, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 立即获得目标生命+2，费用+1，然后弃牌堆里每有1个热水壶，就获得2分\", \n    illust:\"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\",\n    onPlay(G, ctx, self) {\n      self.hp += 2;\n      G.costs += 1;\n      G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onFight(G, ctx, self) {\n      for (let i=0; i<(3*(1+self.power)); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的部署效果 \\\"${card.desc}\\\"`);}\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的采掘效果 \\\"${card.desc}\\\"`);}\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的战斗效果 \\\"${card.desc}\\\"`);}\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的行动效果 \\\"${card.desc}\\\"`);}\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制(无视场面上限)\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  {\n    name:\"暴行\",\n    cost:2,\n    atk:4,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n    onPlay(G, ctx) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n      G.hand = cards.map(x => ({...x}));\n    },\n    onMine(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n    reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n\n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://s3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    // illust: \"https://s3.ax1x.com/2020/11/12/BvbhqA.png\",\n    desc: `行动: 造成6点伤害，重复2次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成6点伤害，重复${2+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/2)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      self.action = (G, ctx, self) => {\n        for (let i=0; i<(2+self.skill_power); i++) {\n          deal_random_damage(G, ctx, 6);\n        }\n        G.onCardMine.push((G, ctx) => {G.score += 1 + Math.floor(self.skill_power / 2);});\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      };\n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 6) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰6次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 3 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得3分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:1,\n    block:2,\n    desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n  {\n    name:\"棘刺\",\n    cost:4,\n    atk:4,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%A3%98%E5%88%BA_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"夜烟\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:6,\n    block:0,\n    desc:\"采掘: 弃2张牌\",\n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E7%83%9F_1.png\",\n    onMine(G, ctx) {\n      drop(G, ctx);\n      drop(G, ctx);\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+3>\",\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    }\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:5,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  // {\n  //   name:\"古米\",\n  //   cost:4,\n  //   atk:2,\n  //   hp:5,\n  //   mine:1,\n  //   block:2,\n  //   desc: \"部署: 强化所有手牌1次\",\n  //   illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let cards = [...G.hand];\n  //     for (let card of cards) {\n  //       reinforce_card(G, ctx, card);\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n  {\n    name:\"守林人\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n    illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n    },\n    reinforce_desc: \"伤害+3\",\n  },\n  {\n    name:\"霜叶\",\n    cost:2,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"休整: 每有1个休整中的干员，就获得+1/+1\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      self.atk += num_rest_cards;\n      self.hp += num_rest_cards;\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"锡兰\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 每有1个休整中的干员，就获得1分\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n    reinforce: 2,\n    onRest(G, ctx, self) {\n      let num_rest_cards = get_num_rest_cards(G, ctx);\n      G.score += num_rest_cards;\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  // {\n  //   name:\"诗怀雅\",\n  //   cost:4,\n  //   atk:4,\n  //   hp:5,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  //     if (player) {\n  //       player.onPlay(G, ctx, player);\n  //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  {\n    name:\"夜莺\",\n    cost:5,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n    onRest(G, ctx, self) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field.map(x=>x)) {\n          if (card.onRest && (card.onRest != self.onRest)) {\n            card.onRest(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let resters = G.deck.filter(x => x.onRest);\n      if (resters.length > 0) {\n        let card = ctx.random.Shuffle(resters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个重置状态的干员造成3点伤害，并获得3分\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      if (card) {\n        card.dmg += 3;\n        G.score += 3;\n        if (card.dmg >= card.hp) {\n          // let card_idx = G.field.indexOf(card);\n          // G.field.splice(card_idx, 1);\n          // G.discard.push(card);\n          G.field = G.field.filter(x => x != card);\n          G.discard = [card, ...G.discard];\n        }\n        // else {\n          // card.onMine = (G, ctx) => {G.score += 4};\n          // card.onFight = card.onMine;\n          // card.desc = \"采掘/战斗: 获得4分\";\n          // G.score += 3;\n        // }\n\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:6,\n    atk:4,\n    hp:5,\n    mine:2,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"使1个干员获得+6生命值\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸3张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<3; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:7,\n    atk:6,\n    hp:7,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得6分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 6;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  {\n    name:\"格拉尼\",\n    cost:4,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%A0%BC%E6%8B%89%E5%B0%BC_1.png\",\n    reinforce: 1,\n    onOut(G, ctx, self) {\n      let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n      G.field.push(init_card_state(G, ctx, {...new_card}));\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"白金\", \n  //   cost:3, \n  //   atk:4, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"采掘/战斗: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%87%91_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let card = ctx.random.Shuffle(G.field.filter(x => x != self))[0];\n  //     if (card) {\n  //       card.atk += 3;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   }\n  // },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得<+3>直到回合结束\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // gainMaterials(G, ctx, 3);\n      self.mine += 3;\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.mine -= 3;\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  \n  {\n    name:\"杰克\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"摧毁: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n    illust:\"http://prts.wiki/images/1/1d/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E5%85%8B_1.png\",\n    reinforce: 1,\n    onOut(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n      G.hand.unshift(card);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E6%A3%AE%E8%9A%BA_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: \"超杀: 完全治疗自己并获得+2/+2\",\n    illust:\"http://prts.wiki/images/4/48/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E6%8B%89%E6%A0%BC_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        self.dmg = 0;\n        self.atk += 2;\n        self.hp += 2;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸2张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 使2个敌人获得-4攻击力\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      reduce_enemy_atk(G, ctx, 4);\n      reduce_enemy_atk(G, ctx, 4);\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  {\n    name:\"四月\",\n    cost:4,\n    atk:3,\n    hp:1,\n    mine:0,\n    block:0,\n    desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n    illust:\"http://prts.wiki/images/2/2c/%E7%AB%8B%E7%BB%98_%E5%9B%9B%E6%9C%88_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.field.map(card => {\n        if (card.exhausted) {\n          card.exhausted = false;\n          card.mine = 0;\n          silent(card);\n        }\n      })\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  {\n    name:\"白雪\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果(视为自己触发)\",\n    illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n      if (miner) {\n        miner.onMine(G, ctx, self);\n        logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onFight(G, ctx, self) {\n      let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n      if (fighter) {\n        fighter.onFight(G, ctx, self);\n        logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 变成场上1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 1){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:1,\n  //   atk:6,\n  //   hp:6,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"部署: 翻开1张敌人牌\",\n  //   illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   onPlay(G, ctx) {\n  //     drawEnemy(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:8,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1 } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    card.dmg = card.dmg || 0;\n    card.dmg += dmg;\n    logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.limit_hand && (G.hand.length >= 5)) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function insert_field(G, ctx, card, idx) {\n  if (G.field.length < G.field_limit) {\n    let played_card = init_card_state(G, ctx, {...card});\n    G.field.splice(idx || G.field.length, 0, played_card);\n    return played_card;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    let inserted = insert_field(G, ctx, card);\n    if (inserted) {\n      logMsg(G, ctx, `部署 ${card.name}`);\n      for (let f of G.onPlayCard) {\n        f(G, ctx, card);\n      }\n      if (inserted.onPlay) {\n        inserted.onPlay(G, ctx, inserted);\n      }\n      if (inserted.onPlayBonus) {\n        for (let bonus of inserted.onPlayBonus) {\n          bonus.effect(G, ctx, inserted);\n        }\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.push(card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  G.orders = ctx.random.Shuffle(G.odeck).slice(0, 8);\n  sort_orders(G);\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>{\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction price_up(order) {\n  let new_requirements = order.requirements;\n  if (order.advanced) {\n    new_requirements[3] += 1;\n  }\n  else {\n    new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  }\n  return {...order, requirements: new_requirements};\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n\n    // let len = G.finished.length;\n    // if (len % 2 == 0 && len != 2) {\n    //   G.orders = G.orders.map(price_up);\n    //   G.odeck = G.odeck.map(price_up);\n    // }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      let surge = switchEnemy(G, ctx);\n      if (enemy.onPlay && !surge) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    else {\n      if (enemy.onPlay) {\n        enemy.onPlay(G, ctx, enemy);\n      }\n    }\n    \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  if (G.not_switch) {\n    return false;\n  }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher) {\n    G.efield.splice(len-2, 1);\n  }\n\n  return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.harder_reinforce) {\n    let paid = payCost(G, ctx, 2);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  G.cured = card.dmg;\n  card.dmg = 0;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg -= amount;\n    if (card.dmg < 0) {\n      card.hp -= card.dmg;\n      card.dmg = 0;\n    }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk < 0) { // Not <= because some is 0\n      enemy.atk = 1;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n  G.onUseOrder = [];\n  G.onEnemyOut = [];\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [default_order];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = Math.floor(idx / 2) + 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n\n        setup_events(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: -1,\n    hp: 4,\n    desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onOut(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+1/+4\",\n    desc: \"+1/+4\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 1;\n      card.hp += 4;\n    }\n  },\n\n  {\n    name: \"-2费\",\n    desc: \"部署费用-2\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 2;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"3分\",\n    desc: \"部署奖励:\\\"获得3分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 3;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2材料\",\n    desc: \"部署奖励:\\\"获得2个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 2);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2张牌\",\n    desc: \"部署奖励:\\\"摸2张牌\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          draw(G, ctx);\n          draw(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"4伤害\",\n    desc: \"部署奖励:\\\"造成4点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"手牌强化2\",\n    desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_hand(G, ctx);\n          reinforce_hand(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"召唤1个费用为2的干员并使其生命值降为1\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            new_card = init_card_state(G, ctx, {...new_card});\n            new_card.hp = 1;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n{\n    name: \"凯尔希之力\",\n    desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          if (card) {\n            let new_card = G.CARDS.find(x => x.name == card.name);\n            new_card = init_card_state(G, ctx, {...new_card});\n            new_card.atk = 1;\n            new_card.hp = 1;\n            new_card.mine = 1;\n            new_card.cost = 1;\n            new_card.power = 0;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let new_card = G.CARDS.find(x => x.name == card.name);\n        if (new_card) {\n          G.hand.unshift(new_card);\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"订单1\",\n    desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制\",\n    effect(card) {\n      card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n    }\n  },\n  \n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2\n惊蛰 0 1`;\n\nconst draw_vanguard = `芬 1 2\n清道夫 1 2\n调香师 0 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 2\n崖心 0 2\n食铁兽 0 1\n酸糖 0 1\n阿消 0 2\n普罗旺斯 0 1\n铃兰 0 1\n苏苏洛 0 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n皇帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n伊芙利特 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n伊芙利特 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n天火 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\nconst mini_sets = [' 风笛  白面鸮  温蒂  夜刀 ',\n ' 风笛  雷蛇  能天使  夜刀 ',\n ' 赫默  夜烟 12F  白面鸮 翎羽 ',\n ' 德克萨斯 德克萨斯 艾雅法拉 坚雷 阿消 ',\n ' 空  空  温蒂  波登可 皇帝 德克萨斯 ',\n ' 德克萨斯 可颂 可颂 ',\n ' 刻刀  刻刀  刻俄柏  波登可 ',\n ' 孑  孑  宴  翎羽  白面鸮 ',\n ' 拉普兰德  白雪  白雪 ',\n ' 拉普兰德  能天使  刻俄柏 ',\n//  ' 白金  末药  煌 ',\n ' 守林人  守林人  夜莺 ',\n ' 霜叶  凯尔希  杜宾 ',\n ' 能天使 陨星 陨星 ',\n ' 能天使 炎熔 炎熔 ',\n ' 能天使 蓝毒 陨星 酸糖 ',\n ' 柏喙  翎羽 ',\n ' 慕斯  银灰  赫默 初雪 ',\n//  ' 末药  银灰  初雪 ',\n ' 凯尔希  杜宾  天火 ',\n ' 年  米格鲁  米格鲁 红 ',\n//  ' 梓兰  梓兰  能天使 ',\n ' 梅尔 梅尔 赫默 ',\n ' 梅尔 赫默 白面鸮 伊芙利特  艾雅法拉 ',\n//  ' 赫默  稀音  梅尔 梅尔 史都华德  伊芙利特  塞雷娅 ',\n ' 艾雅法拉  能天使  雷蛇  雷蛇 ',\n//  ' 温蒂  白面鸮  桃金娘 ',\n ' 温蒂  白面鸮  食铁兽 ',\n ' 初雪  史都华德  赫默  白面鸮  崖心 ',\n ' 调香师  调香师  艾雅法拉  棘刺  清流   断罪者 ',\n ' 凯尔希 清流   断罪者 ',\n ' 铃兰  推进之王  芬 芬 红 红 热水壶 ',\n ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n ' 安洁莉娜 陈 陈 刻刀 波登可 ',\n ' 真理   阿米娅  雷蛇  艾雅法拉 ',\n ' 普罗旺斯  灰喉  巡林者 波登可 ',\n ' 苏苏洛 赫默 史都华德 波登可 ',\n ' 锡兰  锡兰  夜莺 ',\n ' 拉普兰德  真理 ',\n ' 陈  真理 ',\n ' 食铁兽  真理 ',\n ' 伊桑  真理 ',\n ' 斯卡蒂  斯卡蒂 ',\n ' 凯尔希  凯尔希 ',\n ' 安赛尔  安赛尔 ',\n ' 伊桑  狮蝎  狮蝎 ',\n ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n//  ' 酸糖 米格鲁 米格鲁 红 ',\n ' 棘刺 棘刺 调香师 芬 ',\n ' 闪灵 蛇屠箱 芙蓉 ',\n ' 阿 蛇屠箱 闪灵 ',\n ' 热水壶 热水壶 热水壶 热水壶 ',\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"砾\", \"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  deck = [...deck, ...deck_from_mini_sets(16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  let generator = (rng.random() > 0.25)? generate_deck_s2 : generate_deck_s1;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 290},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      let borderColor = \"black\";\n      if (tag.selected) {\n        borderColor = \"red\";\n      }\n      if (tag.locked) {\n        borderColor = \"#1E90FF\";\n      }\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: borderColor,\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  let desc = [card.desc];\n\n  if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n    desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  }\n\n  return desc;\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"card-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0, G.edeck.length-4);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"2回合后，所有敌人获得+4生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/c/cd/Global_tokencnt_2.png\",\n    desc: \"强化干员需要的材料数+1\",\n    level: 2,\n    effect(G, ctx) {\n      for (let card of G.deck) {\n        card.reinforce += 1;\n      }\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n    desc: \"可同时部署的干员数-3\",\n    level: 2,\n    effect(G, ctx){\n      G.field_limit -= 3;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/c/c5/Global_skillrecovery_1.png\",\n    desc: \"对局开始时，不再获得初始材料\",\n    level: 2,\n    effect(G, ctx){\n      G.materials = [0,0,0,0];\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f9/Enemy_diaman_2.png\",\n    desc: \"胜利所需分数+24，每回合-4\",\n    level: 3,\n    effect(G, ctx) {\n      G.goal += 28; // Because first turn gonna -4 too\n      G.reduce_goal = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 10,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Roguelike.css';\nimport { ICONS } from './icons';\nimport { CARDS } from './cards';\nimport { UPGRADES } from './upgrades';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到集成战略模式“黑角的金针菇迷境”！\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！\\n`);\n}\n\nfunction setup_roguelike_mode(S) {\n  S.roguelike_mode = true;\n\n  S.gold = 50;\n  S.game_idx = 1;\n\n  S.central_idx = 0;\n\n  get_card_picks(S);\n  reset_shop(S);\n}\n\nfunction setup_deck_selection(S) {\n  S.deck_names = _.times(3, get_deck_name).map(x => x + \"·黑角\");\n  S.deck_list = S.deck_names.map(generate_deck_s2).map(str2deck); // TODO: change the generator\n}\n\nfunction get_pick() {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card));\n}\n\nfunction get_card_picks(S) {\n  S.card_picks = _.times(3, get_pick);\n}\n\nfunction get_shop_item() {\n  let shop_item = {};\n  let rng = new PRNG(Math.random()); // It seems like set seed in PRNG setup does not work, it is so wired.\n\n  // Get upgrade\n  let upgrade = rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = 20;\n\n  return shop_item;\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(3, get_shop_item);\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.Deck, ...S.card_picks[idx]];\n  S.card_picks = undefined;\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.refresh_picks}><span>刷新选牌(10{ICONS.gold})</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得10{ICONS.gold}</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\" align=\"center\">\n    <p className=\"shop-item-name\">{props.name}</p>\n    <p className=\"shop-item-price\">{ICONS.gold}{props.price}</p>\n    <button className=\"buy\" onClick={props.buy}>查看</button>\n  </div>\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店(10{ICONS.gold})</button>\n    {props.shop_items.map((item, idx) => <ShopItem {...item} buy={() => props.buy(idx)} />)}\n  </div>\n\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <h2 className=\"finish-pick\">你已经完成了选择</h2>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport const roguelike = map_object(produce, {\n  setup_roguelike_mode,\n  setup_deck_selection,\n  pick_cards,\n  skip_pick,\n});","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘能力为2，博士因此获得了{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得4分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级20  <br/>\n  * 点\"所有敌人获得+2生命值\"3级并完成危机等级20  <br/>\n  * 点\"2回合后，所有敌人获得冲锋\"并完成危机等级20 <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(action(this.state, ...args)), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_competition_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    if (this.state.competition_mode) {\n      for (let tag of new_tags) {\n        if (tag.selected) {\n          tag.locked = true;\n        }\n      }\n    }\n\n    return new_tags;\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          <span style={{\n            display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n          }}>\n            <i>\n            部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n            </i>\n            <br/>\n          </span>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n        this.play_card();\n      }\n      else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"modes\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.competition_mode){\n      deck = this.state.Deck;\n      seed += this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n      seed: get_seed_name(),\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else{\n      this.change_board(\"tag\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        // else if (risk_level >= 22 && risk_level < 30) {\n        //   grade = \"SSSS\";\n        // }\n        // else if (risk_level >= 30 && risk_level < 50) {\n        //   grade = \"SSSSS\";\n        // }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      \"竞技模式\": this.enter_competition_mode,\n      // \"黑角的金针菇迷境\": this.enter_roguelike_mode,\n      \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.setState({Deck: this.state.deck_list[idx]});this.change_board(\"roguelike\");},\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: this.choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_deck_selection\");\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <DeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} back={back} welcome_title=\"欢迎来到黑角的金针菇迷境!\" introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} />\n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} />\n\n    const centrals = [card_picks, shop];\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"选牌区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_result_board() {\n\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          {this.props.ctx.gameover? <span>结束游戏{ICONS.endgame}</span>:<span>结束回合{ICONS.endturn}</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n\n            display: (this.state.competition_mode)?\"none\":\"\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      快速设置: () => this.setState({\n        tags: this.choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      其他模式: () => this.change_board(\"modes\"),\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        this.setState({\n          preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}