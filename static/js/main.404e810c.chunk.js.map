{"version":3,"sources":["avatars.js","utils.js","DeckGenerator.js","icons.js","orders.js","cards.js","Game.js","enemies.js","upgrades.js","alters.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","assets.js","relics.js","Roguelike.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["AVATARS","map_object","fn","obj","new_obj","k","mod_slice","arr","idx","cnt","len","length","from","slice","PRNG","seed","this","val","i","charCodeAt","x","Math","sin","result","floor","random","randRange","deck","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","classes","producers","solvers","miners","standers","defenders","supporters","scorers","randomizers","pick_scorers","pick_vanguards","cost_vanguard","scorer","supporter","strategies","mini_sets","map","mini_set","filter","card","get_random_card","rng","banned_cards","card_pool","CARDS","includes","name","choice","get_deck_name","get_challenge_name","desc","illust","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","Object","keys","sort","c","join","deck_from_strategy","strategy","amount","push","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","select_one_card","generate_deck_s2","deck_dict","sets","deck_from_mini_sets","reduce","acc","_","times","generate_roguelike_deck","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","style","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","reset","food_icons","color","smaller_icons","order_illust","material_icons","ready_order","G","ctx","from_card","Shuffle","finished","exhausted","ready_other_orders","advanced_orders","requirements","score","reward","advanced","effect","field_selected","field","logMsg","atk","hp","costs","colors","min","ORDERS","payCost","materials","cost","harvest","init_card","dmg","power","onPlayBonus","reinforce","onReinforce","self","reinforce_desc","onMine","delta","achieve","queen","find","assign","onPlay","deal_random_damage","white","draw","onTurnBegin","undefined","onFight","eliminate_field","exhaust_random_enemy","num_exhausted","efield","enemy","new_card","indexOf","splice","init_card_state","hand","gainMaterials","drop","ready_random_card","summon","cure","y","cured","fully_restore","onPlayCard","colored_orders","onCardFight","add_vulnerable","exhaust_order","payMaterials","order1","order2","was_enemy","extra_cards","generator","generate","unshift","fighters","actors","battlecries","score_gained","onEnemyOut","cards","extracted_attrs","skill_power","reinforce_skill","j","onCardMine","use_count","discard","danger","reinforce_hand","reinforce_field","num_cards","has_discarded","played","onOut","gravel","excess","max","player","damaged_enemy","cost_remained","meteorite","fever","mcard","miner","fighter","enemy_idx","e","is_boss","texas","wind","reinforce_card","generate_combined_card","heijiao_in_dream","blank_enemy","material","Die","values","default_filter","type_filter","type_","FILTERS","f","ENEMIES","self_copy","is_elite","high","deal_damage","unyielding","enraged","drawEnemy","BOSSES","UPGRADES","is_init","ALTER_ARTS","安洁莉娜","阿米娅","森蚺","陨星","孑","玫兰莎","陈","安比尔","波登可","move","d1","d2","onPayCost","gained","use","stage","onUseCard","get_blocker","blocked_enemies","out","total_dmg","vulnerable","exhausted_enter","user","hand_limit","pop","onDropCard","refreshOrder","orders","odeck","round_num","price_y","price_x","price_up","edeck","enemy_exhausted_enter","switcher","switchEnemy","addBoss","boss_name","boss","reversed","time_points","effects","EFFECTS","title","reverse","alist","unexhausted","exhausted_cards","prepared_cards","ready_times","clearField","str2deck","card_dict","item","arr2obj","alter_art","console","log","card_data","target_card","altered","old_illust","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardAct","onCardReinforced","onUseOrder","setup_scenario","ediscard","picks","goal","max_danger","num_enemies_out","field_limit","relics","extra_gain","playing","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","get_desc","fontSize","display","quote","AC","setup","moves","setDecks","decks","another_deck","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","bonus","play_card","act","reinforce_need_cost","rest","rest_cards","num_rest_cards","onRest","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","setupRoguelikeBattle","onBattleBegin","turn","onBegin","concat","refresh","special_card_name","special_card","refresh_picks","order_id","sort_finished","setup_turn_states","enemy_grow","enemy_hp_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","limit_hand","reduce_goal","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","TypeFilter","TypeFilterContainer","filters","filter_","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","EnterGame","divAlign","ProgressBar","bgcolor","completed","containerStyles","backgroundColor","bottom","fillerStyles","textAlign","transition","padding","fontWeight","Panel","content","ScoreBoard","useState","MaterialDisplay","Tag","bg_color","locked","TagSelection","tag","TagList","marginLeft","marginTop","selected_tags","just_selected","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","handleToggle","back","TitleScreen","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","margin","Competition","results","finalResult","final_tag","level","TAGS","tag_list","t","process_tags","challenge","unstackable","extra_challenge","standard_level","advance","stackable","replace","enemy2card","rhodes_training_mode","result_images","relic_images","relic_names","RELICS","played_card","onPickCard","S","onBattleEnd","level_achieved","level_required","onUse","random_upgrade","relic","onRefreshShop","shop_items","is_relic","onBuyRelic","delete_card","get_specific_card_pick","get_relic","used","gas","get_relic_img","introduce_roguelike_mode","weekly_introduction","reset_tags","move_on","game_count","remained_tags","difficulty","choose_standard_tags","current_standard_level","new_tags","setup_daily_tags","date","locked_tags","other_tags","setup_normal_challenge","basic_tags","another_challenge_tag","advanced_tags","setup_exhausted_challenge","generate_weekly_challenges","week","challenges","preprocess_roguelike_card","get_pick","selection","get_roguelike_pick","get_shop_item","item_type","shop_item","indexes","onBought","get_upgrade","get_card_pick","is_pick","get_indexes_from_cost","bought","payGold","reset_shop","get_gold_gained","gold_gained","level_diff","proceed","scene_queue","changer","scene","current_upgrades","current_indexes","current_item","get_init_card_pick","current_relics","RoguelikeDeckSelection","RoguelikeDeckRepr","GoldAmount","ShopItem","buy","Relic","operation","Relics","checking","Weekly","click_title","Shop","refresh_shop","Roguelike","enter_dream","enter_battle","check_deck","check_relics","RoguelikeTabs","onSelect","RoguelikeEntry","difficulties","ShowMeTheMoney","ResultWin","slam","grand_slam","gold_amount","continue","ResultLose","FinalResult","p_id","roguelike","setup_roguelike_mode","roguelike_mode","Date","repeat_tags","flatMap","init_added_tags","init_tags_S2","central_idx","dream_count","set_difficulty","levels","set_difficulty_S2","select_init_card","pick_cards","card_picks","onPickCards","skip_pick","onSkipPick","item_idx","current_item_idx","click_that_button","continue_run","reset_card_picks","won","num_bonus","num_extra_relics","end_roguelike_mode","upgrade_card","upgrade_selected","selection_selected","pick_relic","use_relic","enter_daily_mode","daily_mode","end_daily_mode","setup_weekly_challenge","deck_mode","weekly_challenge_idx","enter_weekly_mode","weekly_mode","getFullYear","getMonth","getDate","getDay","setup_weekly_tags","end_weekly_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_relic_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_relic_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_shop_board","render_roguelike_result_board","render_roguelike_final_result_board","render_roguelike_entry_board","render_roguelike_deck_upgrade_board","render_roguelike_relic_selection_board","render_roguelike_relic_check_board","render_weekly_board","enter_competition_mode","start_competition","enter_roguelike_mode","buy_item","change_board","reset_preview_deck","choose_tag","get_risk_level","enter_game","args","setState","produce","state","hand_selected","efield_selected","order_selected","finished_selected","pick_selected","shop_selected","hand_choices","preview_filter","branch","show_field","show_tag_selection","animations","board","last_board","preview_deck","show_finished","lock_seed","scenario_finished","branches","log_select","cardrow","illust_variants","icon","order_data","rhine","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","target","new_board","BOARDS","competition_mode","get_enemies","init_decks","prevProps","prevState","gameover","good_grade","grade","failed","overflow","enter_difficulty","shop","centrals","selected_card","overflowY","lose","easy","medium","hard","deck_idx","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","paddingTop","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","快速设置","周常挑战","肉鸽模式","返回标题","返回","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"6OAAaA,EACb,CAAC,CAAC,eAAM,0EACR,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,mCAAW,2GACZ,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,IAAK,yDACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,UAAW,+DACZ,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,SAAK,iEACN,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP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ACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,iEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,oEAGYC,GAAc,CAAC,iCAC5B,uCACA,iCACA,2BACA,uCACA,uCACA,2BACA,iCACA,uCACA,2BACA,2BACA,6CACA,2BACA,2BACA,2BACA,uCACA,iCACA,2BACA,iCACA,uCACA,iCACA,2BACA,2BACA,eACA,iCACA,uCACA,uCACA,uCACA,2BACA,uCACA,uCACA,iCACA,iCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,iCACA,iCACA,2BACA,uCACA,iCACA,iCACA,qCACA,6CACA,iCACA,kCACA,2BACA,uCACA,uCACA,uCACA,2BACA,iCACA,eACA,2BACA,iCACA,iCACA,2BACA,2BACA,uCACA,iCACA,6CACA,2BACA,6CACA,6CACA,uCACA,uCACA,uCACA,2BACA,2BACA,6CACA,6CACA,2BACA,uCACA,uCACA,2BACA,uCACA,iCACA,uCACA,2BACA,iCACA,2BACA,2BACA,6CACA,uCACA,6CACA,2BACA,mCACA,6CACA,iCACA,uCACA,uCACA,2BACA,2BACA,iCACA,uCACA,2BACA,iCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,8CACA,wCACA,4BACA,4BACA,4BACA,kCACA,4BACA,4BACA,wCACA,4BACA,4BACA,wCACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,4BACA,4BACA,4BACA,4BACA,wCACA,4BACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,uCACA,iCACA,iCACA,0BACA,iCACA,uCACA,uCACA,iCACA,2BACA,uCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,qBACA,mDACA,eACA,iCACA,2BACA,4BCriBYC,GAAS,CAQpB,CACEtjB,KAAM,iCACNI,KAAM,8HACNwI,YAHF,SAGc5C,EAAGC,GACb,IAAK,IAAI9I,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACtB,IAAIsC,EAAI,eAAOQ,GAAOgG,EAAKD,EAAElG,QAC7BL,EAAK+H,MAAQ,EACbxB,EAAEwD,KAAKqB,QAAQpL,MAIrB,CACEO,KAAM,iCACNI,KAAM,+CACNwX,cAHF,SAGgB5R,EAAGC,GACfD,EAAE0N,aAAe,IAGrB,CACE1T,KAAM,4BACNI,KAAM,qGACNwI,YAHF,SAGc5C,EAAGC,GACbD,EAAEiE,WAAW1I,MAAK,SAACyE,EAAGC,EAAKxG,GACrBA,EAAK+H,MAAQ,GACfiB,GAAmBzC,EAAGC,EAAK,QAIjC,CACAjG,KAAM,iCACNI,KAAM,qGACNwI,YAHA,SAGY5C,EAAGC,GACbD,EAAEkB,OAAS,EACXuC,GAAczD,EAAGC,EAAK,KAExB,CACAjG,KAAM,iCACNI,KAAM,6EACNwX,cAHA,SAGc5R,EAAGC,GACf,IAAImD,EAAWnD,EAAIvI,OAAOyI,QAAQH,EAAElG,MAAMN,QAAO,SAAAnC,GAAC,OAAW,GAARA,EAAEmK,SAAW,GAElExB,EAAEc,MA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","file":"static/js/main.404e810c.chunk.js","sourcesContent":["export const AVATARS = \n[[\"罗宾\", \"http://prts.wiki/images/1/1f/%E5%A4%B4%E5%83%8F_%E7%BD%97%E5%AE%BE.png\"],\n[\"卡夫卡\", \"http://prts.wiki/images/8/8d/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E5%A4%AB%E5%8D%A1.png\"],\n[\"山\", \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E5%B1%B1.png\"],\n[\"松果\", \"http://prts.wiki/images/5/5e/%E5%A4%B4%E5%83%8F_%E6%9D%BE%E6%9E%9C.png\"],\n[\"阿米娅(近卫)\", \"http://prts.wiki/images/5/5b/%E5%A4%B4%E5%83%8F_%E9%98%BF%E7%B1%B3%E5%A8%85%28%E8%BF%91%E5%8D%AB%29.png\"],\n[\"迷迭香\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E8%BF%B7%E8%BF%AD%E9%A6%99.png\"],\n[\"泥岩\", \"http://prts.wiki/images/0/06/%E5%A4%B4%E5%83%8F_%E6%B3%A5%E5%B2%A9.png\"],\n[\"絮雨\", \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E7%B5%AE%E9%9B%A8.png\"],\n[\"杰克\", \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%9D%B0%E5%85%8B.png\"],\n[\"瑕光\", \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E7%91%95%E5%85%89.png\"],\n[\"奥斯塔\", \"http://prts.wiki/images/4/49/%E5%A4%B4%E5%83%8F_%E5%A5%A5%E6%96%AF%E5%A1%94.png\"],\n[\"鞭刃\", \"http://prts.wiki/images/f/f8/%E5%A4%B4%E5%83%8F_%E9%9E%AD%E5%88%83.png\"],\n[\"泡泡\", \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E6%B3%A1%E6%B3%A1.png\"],\n[\"史尔特尔\", \"http://prts.wiki/images/e/e1/%E5%A4%B4%E5%83%8F_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94.png\"],\n[\"四月\", \"http://prts.wiki/images/d/d3/%E5%A4%B4%E5%83%8F_%E5%9B%9B%E6%9C%88.png\"],\n[\"薄绿\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E8%96%84%E7%BB%BF.png\"],\n[\"芳汀\", \"http://prts.wiki/images/6/6a/%E5%A4%B4%E5%83%8F_%E8%8A%B3%E6%B1%80.png\"],\n[\"森蚺\", \"http://prts.wiki/images/7/74/%E5%A4%B4%E5%83%8F_%E6%A3%AE%E8%9A%BA.png\"],\n[\"燧石\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E7%87%A7%E7%9F%B3.png\"],\n[\"特米米\", \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E7%89%B9%E7%B1%B3%E7%B1%B3.png\"],\n[\"酸糖\", \"http://prts.wiki/images/e/e9/%E5%A4%B4%E5%83%8F_%E9%85%B8%E7%B3%96.png\"],\n[\"棘刺\", \"http://prts.wiki/images/2/2a/%E5%A4%B4%E5%83%8F_%E6%A3%98%E5%88%BA.png\"],\n[\"安哲拉\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E5%AE%89%E5%93%B2%E6%8B%89.png\"],\n[\"孑\", \"http://prts.wiki/images/5/54/%E5%A4%B4%E5%83%8F_%E5%AD%91.png\"],\n[\"贾维\", \"http://prts.wiki/images/2/2a/%E5%A4%B4%E5%83%8F_%E8%B4%BE%E7%BB%B4.png\"],\n[\"蜜蜡\", \"http://prts.wiki/images/1/1d/%E5%A4%B4%E5%83%8F_%E8%9C%9C%E8%9C%A1.png\"],\n[\"稀音\", \"http://prts.wiki/images/c/c6/%E5%A4%B4%E5%83%8F_%E7%A8%80%E9%9F%B3.png\"],\n[\"铃兰\", \"http://prts.wiki/images/5/55/%E5%A4%B4%E5%83%8F_%E9%93%83%E5%85%B0.png\"],\n[\"断崖\", \"http://prts.wiki/images/e/ea/%E5%A4%B4%E5%83%8F_%E6%96%AD%E5%B4%96.png\"],\n[\"亚叶\", \"http://prts.wiki/images/b/b5/%E5%A4%B4%E5%83%8F_%E4%BA%9A%E5%8F%B6.png\"],\n[\"卡达\", \"http://prts.wiki/images/4/43/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E8%BE%BE.png\"],\n[\"早露\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%97%A9%E9%9C%B2.png\"],\n[\"莱恩哈特\", \"http://prts.wiki/images/0/03/%E5%A4%B4%E5%83%8F_%E8%8E%B1%E6%81%A9%E5%93%88%E7%89%B9.png\"],\n[\"苦艾\", \"http://prts.wiki/images/e/e9/%E5%A4%B4%E5%83%8F_%E8%8B%A6%E8%89%BE.png\"],\n[\"波登可\", \"http://prts.wiki/images/4/43/%E5%A4%B4%E5%83%8F_%E6%B3%A2%E7%99%BB%E5%8F%AF.png\"],\n[\"月禾\", \"http://prts.wiki/images/b/b6/%E5%A4%B4%E5%83%8F_%E6%9C%88%E7%A6%BE.png\"],\n[\"石棉\", \"http://prts.wiki/images/1/18/%E5%A4%B4%E5%83%8F_%E7%9F%B3%E6%A3%89.png\"],\n[\"W\", \"http://prts.wiki/images/d/d6/%E5%A4%B4%E5%83%8F_W.png\"],\n[\"温蒂\", \"http://prts.wiki/images/9/93/%E5%A4%B4%E5%83%8F_%E6%B8%A9%E8%92%82.png\"],\n[\"极境\", \"http://prts.wiki/images/9/97/%E5%A4%B4%E5%83%8F_%E6%9E%81%E5%A2%83.png\"],\n[\"THRM-EX\", \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_THRM-EX.png\"],\n[\"傀影\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E5%82%80%E5%BD%B1.png\"],\n[\"巫恋\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E5%B7%AB%E6%81%8B.png\"],\n[\"铸铁\", \"http://prts.wiki/images/8/84/%E5%A4%B4%E5%83%8F_%E9%93%B8%E9%93%81.png\"],\n[\"刻刀\", \"http://prts.wiki/images/2/2c/%E5%A4%B4%E5%83%8F_%E5%88%BB%E5%88%80.png\"],\n[\"断罪者\", \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%96%AD%E7%BD%AA%E8%80%85.png\"],\n[\"风笛\", \"http://prts.wiki/images/d/de/%E5%A4%B4%E5%83%8F_%E9%A3%8E%E7%AC%9B.png\"],\n[\"慑砂\", \"http://prts.wiki/images/e/e7/%E5%A4%B4%E5%83%8F_%E6%85%91%E7%A0%82.png\"],\n[\"柏喙\", \"http://prts.wiki/images/2/2f/%E5%A4%B4%E5%83%8F_%E6%9F%8F%E5%96%99.png\"],\n[\"宴\", \"http://prts.wiki/images/f/f4/%E5%A4%B4%E5%83%8F_%E5%AE%B4.png\"],\n[\"清流\", \"http://prts.wiki/images/1/19/%E5%A4%B4%E5%83%8F_%E6%B8%85%E6%B5%81.png\"],\n[\"刻俄柏\", \"http://prts.wiki/images/4/4a/%E5%A4%B4%E5%83%8F_%E5%88%BB%E4%BF%84%E6%9F%8F.png\"],\n[\"惊蛰\", \"http://prts.wiki/images/8/81/%E5%A4%B4%E5%83%8F_%E6%83%8A%E8%9B%B0.png\"],\n[\"年\", \"http://prts.wiki/images/9/9c/%E5%A4%B4%E5%83%8F_%E5%B9%B4.png\"],\n[\"阿\", \"http://prts.wiki/images/3/31/%E5%A4%B4%E5%83%8F_%E9%98%BF.png\"],\n[\"吽\", \"http://prts.wiki/images/4/41/%E5%A4%B4%E5%83%8F_%E5%90%BD.png\"],\n[\"雪雉\", \"http://prts.wiki/images/2/24/%E5%A4%B4%E5%83%8F_%E9%9B%AA%E9%9B%89.png\"],\n[\"煌\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E7%85%8C.png\"],\n[\"灰喉\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E7%81%B0%E5%96%89.png\"],\n[\"安比尔\", \"http://prts.wiki/images/f/ff/%E5%A4%B4%E5%83%8F_%E5%AE%89%E6%AF%94%E5%B0%94.png\"],\n[\"布洛卡\", \"http://prts.wiki/images/0/04/%E5%A4%B4%E5%83%8F_%E5%B8%83%E6%B4%9B%E5%8D%A1.png\"],\n[\"苇草\", \"http://prts.wiki/images/7/7a/%E5%A4%B4%E5%83%8F_%E8%8B%87%E8%8D%89.png\"],\n[\"莫斯提马\", \"http://prts.wiki/images/0/0b/%E5%A4%B4%E5%83%8F_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC.png\"],\n[\"槐琥\", \"http://prts.wiki/images/e/ed/%E5%A4%B4%E5%83%8F_%E6%A7%90%E7%90%A5.png\"],\n[\"拜松\", \"http://prts.wiki/images/b/b2/%E5%A4%B4%E5%83%8F_%E6%8B%9C%E6%9D%BE.png\"],\n[\"梅\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%A2%85.png\"],\n[\"微风\", \"http://prts.wiki/images/a/ad/%E5%A4%B4%E5%83%8F_%E5%BE%AE%E9%A3%8E.png\"],\n[\"伊桑\", \"http://prts.wiki/images/c/c1/%E5%A4%B4%E5%83%8F_%E4%BC%8A%E6%A1%91.png\"],\n[\"麦哲伦\", \"http://prts.wiki/images/4/4d/%E5%A4%B4%E5%83%8F_%E9%BA%A6%E5%93%B2%E4%BC%A6.png\"],\n[\"送葬人\", \"http://prts.wiki/images/d/da/%E5%A4%B4%E5%83%8F_%E9%80%81%E8%91%AC%E4%BA%BA.png\"],\n[\"炎客\", \"http://prts.wiki/images/d/d6/%E5%A4%B4%E5%83%8F_%E7%82%8E%E5%AE%A2.png\"],\n[\"红云\", \"http://prts.wiki/images/a/af/%E5%A4%B4%E5%83%8F_%E7%BA%A2%E4%BA%91.png\"],\n[\"坚雷\", \"http://prts.wiki/images/a/ab/%E5%A4%B4%E5%83%8F_%E5%9D%9A%E9%9B%B7.png\"],\n[\"赫拉格\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E8%B5%AB%E6%8B%89%E6%A0%BC.png\"],\n[\"星极\", \"http://prts.wiki/images/e/ee/%E5%A4%B4%E5%83%8F_%E6%98%9F%E6%9E%81.png\"],\n[\"桃金娘\", \"http://prts.wiki/images/9/9d/%E5%A4%B4%E5%83%8F_%E6%A1%83%E9%87%91%E5%A8%98.png\"],\n[\"黑\", \"http://prts.wiki/images/d/d4/%E5%A4%B4%E5%83%8F_%E9%BB%91.png\"],\n[\"格劳克斯\", \"http://prts.wiki/images/5/53/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E5%8A%B3%E5%85%8B%E6%96%AF.png\"],\n[\"锡兰\", \"http://prts.wiki/images/3/39/%E5%A4%B4%E5%83%8F_%E9%94%A1%E5%85%B0.png\"],\n[\"苏苏洛\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%8B%8F%E8%8B%8F%E6%B4%9B.png\"],\n[\"陈\", \"http://prts.wiki/images/c/cf/%E5%A4%B4%E5%83%8F_%E9%99%88.png\"],\n[\"诗怀雅\", \"http://prts.wiki/images/5/50/%E5%A4%B4%E5%83%8F_%E8%AF%97%E6%80%80%E9%9B%85.png\"],\n[\"格雷伊\", \"http://prts.wiki/images/f/fe/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E9%9B%B7%E4%BC%8A.png\"],\n[\"斑点\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E6%96%91%E7%82%B9.png\"],\n[\"泡普卡\", \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%B3%A1%E6%99%AE%E5%8D%A1.png\"],\n[\"斯卡蒂\", \"http://prts.wiki/images/5/53/%E5%A4%B4%E5%83%8F_%E6%96%AF%E5%8D%A1%E8%92%82.png\"],\n[\"格拉尼\", \"http://prts.wiki/images/2/29/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E6%8B%89%E5%B0%BC.png\"],\n[\"夜魔\", \"http://prts.wiki/images/a/a7/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E9%AD%94.png\"],\n[\"猎蜂\", \"http://prts.wiki/images/c/c2/%E5%A4%B4%E5%83%8F_%E7%8C%8E%E8%9C%82.png\"],\n[\"月见夜\", \"http://prts.wiki/images/b/b7/%E5%A4%B4%E5%83%8F_%E6%9C%88%E8%A7%81%E5%A4%9C.png\"],\n[\"空爆\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E7%A9%BA%E7%88%86.png\"],\n[\"暴行\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E6%9A%B4%E8%A1%8C.png\"],\n[\"银灰\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E9%93%B6%E7%81%B0.png\"],\n[\"塞雷娅\", \"http://prts.wiki/images/e/ee/%E5%A4%B4%E5%83%8F_%E5%A1%9E%E9%9B%B7%E5%A8%85.png\"],\n[\"星熊\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E6%98%9F%E7%86%8A.png\"],\n[\"夜莺\", \"http://prts.wiki/images/6/64/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E8%8E%BA.png\"],\n[\"闪灵\", \"http://prts.wiki/images/5/54/%E5%A4%B4%E5%83%8F_%E9%97%AA%E7%81%B5.png\"],\n[\"安洁莉娜\", \"http://prts.wiki/images/c/ca/%E5%A4%B4%E5%83%8F_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C.png\"],\n[\"艾雅法拉\", \"http://prts.wiki/images/c/cc/%E5%A4%B4%E5%83%8F_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89.png\"],\n[\"伊芙利特\", \"http://prts.wiki/images/e/ed/%E5%A4%B4%E5%83%8F_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9.png\"],\n[\"推进之王\", \"http://prts.wiki/images/b/ba/%E5%A4%B4%E5%83%8F_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B.png\"],\n[\"能天使\", \"http://prts.wiki/images/a/ad/%E5%A4%B4%E5%83%8F_%E8%83%BD%E5%A4%A9%E4%BD%BF.png\"],\n[\"食铁兽\", \"http://prts.wiki/images/d/dd/%E5%A4%B4%E5%83%8F_%E9%A3%9F%E9%93%81%E5%85%BD.png\"],\n[\"狮蝎\", \"http://prts.wiki/images/c/c5/%E5%A4%B4%E5%83%8F_%E7%8B%AE%E8%9D%8E.png\"],\n[\"空\", \"http://prts.wiki/images/5/58/%E5%A4%B4%E5%83%8F_%E7%A9%BA.png\"],\n[\"真理\", \"http://prts.wiki/images/e/e6/%E5%A4%B4%E5%83%8F_%E7%9C%9F%E7%90%86.png\"],\n[\"初雪\", \"http://prts.wiki/images/d/d7/%E5%A4%B4%E5%83%8F_%E5%88%9D%E9%9B%AA.png\"],\n[\"崖心\", \"http://prts.wiki/images/7/7d/%E5%A4%B4%E5%83%8F_%E5%B4%96%E5%BF%83.png\"],\n[\"守林人\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E5%AE%88%E6%9E%97%E4%BA%BA.png\"],\n[\"普罗旺斯\", \"http://prts.wiki/images/7/72/%E5%A4%B4%E5%83%8F_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF.png\"],\n[\"火神\", \"http://prts.wiki/images/f/f1/%E5%A4%B4%E5%83%8F_%E7%81%AB%E7%A5%9E.png\"],\n[\"可颂\", \"http://prts.wiki/images/a/ab/%E5%A4%B4%E5%83%8F_%E5%8F%AF%E9%A2%82.png\"],\n[\"雷蛇\", \"http://prts.wiki/images/f/f5/%E5%A4%B4%E5%83%8F_%E9%9B%B7%E8%9B%87.png\"],\n[\"红\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E7%BA%A2.png\"],\n[\"临光\", \"http://prts.wiki/images/1/1a/%E5%A4%B4%E5%83%8F_%E4%B8%B4%E5%85%89.png\"],\n[\"华法琳\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E5%8D%8E%E6%B3%95%E7%90%B3.png\"],\n[\"赫默\", \"http://prts.wiki/images/3/39/%E5%A4%B4%E5%83%8F_%E8%B5%AB%E9%BB%98.png\"],\n[\"梅尔\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E6%A2%85%E5%B0%94.png\"],\n[\"天火\", \"http://prts.wiki/images/f/fa/%E5%A4%B4%E5%83%8F_%E5%A4%A9%E7%81%AB.png\"],\n[\"阿米娅\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E9%98%BF%E7%B1%B3%E5%A8%85.png\"],\n[\"陨星\", \"http://prts.wiki/images/e/ea/%E5%A4%B4%E5%83%8F_%E9%99%A8%E6%98%9F.png\"],\n[\"白金\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%87%91.png\"],\n[\"蓝毒\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%93%9D%E6%AF%92.png\"],\n[\"幽灵鲨\", \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E5%B9%BD%E7%81%B5%E9%B2%A8.png\"],\n[\"拉普兰德\", \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7.png\"],\n[\"因陀罗\", \"http://prts.wiki/images/f/fe/%E5%A4%B4%E5%83%8F_%E5%9B%A0%E9%99%80%E7%BD%97.png\"],\n[\"芙兰卡\", \"http://prts.wiki/images/2/2b/%E5%A4%B4%E5%83%8F_%E8%8A%99%E5%85%B0%E5%8D%A1.png\"],\n[\"德克萨斯\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF.png\"],\n[\"凛冬\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E5%87%9B%E5%86%AC.png\"],\n[\"白面鸮\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%9D%A2%E9%B8%AE.png\"],\n[\"阿消\", \"http://prts.wiki/images/2/2f/%E5%A4%B4%E5%83%8F_%E9%98%BF%E6%B6%88.png\"],\n[\"地灵\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E5%9C%B0%E7%81%B5.png\"],\n[\"深海色\", \"http://prts.wiki/images/d/d1/%E5%A4%B4%E5%83%8F_%E6%B7%B1%E6%B5%B7%E8%89%B2.png\"],\n[\"古米\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E5%8F%A4%E7%B1%B3.png\"],\n[\"蛇屠箱\", \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E8%9B%87%E5%B1%A0%E7%AE%B1.png\"],\n[\"角峰\", \"http://prts.wiki/images/e/e4/%E5%A4%B4%E5%83%8F_%E8%A7%92%E5%B3%B0.png\"],\n[\"调香师\", \"http://prts.wiki/images/6/6a/%E5%A4%B4%E5%83%8F_%E8%B0%83%E9%A6%99%E5%B8%88.png\"],\n[\"嘉维尔\", \"http://prts.wiki/images/c/cc/%E5%A4%B4%E5%83%8F_%E5%98%89%E7%BB%B4%E5%B0%94.png\"],\n[\"末药\", \"http://prts.wiki/images/d/d9/%E5%A4%B4%E5%83%8F_%E6%9C%AB%E8%8D%AF.png\"],\n[\"暗索\", \"http://prts.wiki/images/d/dd/%E5%A4%B4%E5%83%8F_%E6%9A%97%E7%B4%A2.png\"],\n[\"砾\", \"http://prts.wiki/images/c/ce/%E5%A4%B4%E5%83%8F_%E7%A0%BE.png\"],\n[\"慕斯\", \"http://prts.wiki/images/f/fc/%E5%A4%B4%E5%83%8F_%E6%85%95%E6%96%AF.png\"],\n[\"艾丝黛尔\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E8%89%BE%E4%B8%9D%E9%BB%9B%E5%B0%94.png\"],\n[\"霜叶\", \"http://prts.wiki/images/2/29/%E5%A4%B4%E5%83%8F_%E9%9C%9C%E5%8F%B6.png\"],\n[\"缠丸\", \"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E7%BC%A0%E4%B8%B8.png\"],\n[\"杜宾\", \"http://prts.wiki/images/a/a1/%E5%A4%B4%E5%83%8F_%E6%9D%9C%E5%AE%BE.png\"],\n[\"红豆\", \"http://prts.wiki/images/b/bb/%E5%A4%B4%E5%83%8F_%E7%BA%A2%E8%B1%86.png\"],\n[\"清道夫\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%B8%85%E9%81%93%E5%A4%AB.png\"],\n[\"讯使\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E8%AE%AF%E4%BD%BF.png\"],\n[\"白雪\", \"http://prts.wiki/images/b/b4/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%9B%AA.png\"],\n[\"流星\", \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%B5%81%E6%98%9F.png\"],\n[\"杰西卡\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%9D%B0%E8%A5%BF%E5%8D%A1.png\"],\n[\"远山\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%BF%9C%E5%B1%B1.png\"],\n[\"夜烟\", \"http://prts.wiki/images/5/55/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E7%83%9F.png\"],\n[\"梓兰\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E6%A2%93%E5%85%B0.png\"],\n[\"史都华德\", \"http://prts.wiki/images/b/b3/%E5%A4%B4%E5%83%8F_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7.png\"],\n[\"安赛尔\", \"http://prts.wiki/images/9/94/%E5%A4%B4%E5%83%8F_%E5%AE%89%E8%B5%9B%E5%B0%94.png\"],\n[\"芙蓉\", \"http://prts.wiki/images/d/d3/%E5%A4%B4%E5%83%8F_%E8%8A%99%E8%93%89.png\"],\n[\"炎熔\", \"http://prts.wiki/images/f/fb/%E5%A4%B4%E5%83%8F_%E7%82%8E%E7%86%94.png\"],\n[\"安德切尔\", \"http://prts.wiki/images/f/f6/%E5%A4%B4%E5%83%8F_%E5%AE%89%E5%BE%B7%E5%88%87%E5%B0%94.png\"],\n[\"克洛丝\", \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E5%85%8B%E6%B4%9B%E4%B8%9D.png\"],\n[\"米格鲁\", \"http://prts.wiki/images/3/32/%E5%A4%B4%E5%83%8F_%E7%B1%B3%E6%A0%BC%E9%B2%81.png\"],\n[\"卡缇\", \"http://prts.wiki/images/8/87/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E7%BC%87.png\"],\n[\"玫兰莎\", \"http://prts.wiki/images/4/4b/%E5%A4%B4%E5%83%8F_%E7%8E%AB%E5%85%B0%E8%8E%8E.png\"],\n[\"翎羽\", \"http://prts.wiki/images/1/1f/%E5%A4%B4%E5%83%8F_%E7%BF%8E%E7%BE%BD.png\"],\n[\"香草\", \"http://prts.wiki/images/c/c8/%E5%A4%B4%E5%83%8F_%E9%A6%99%E8%8D%89.png\"],\n[\"芬\", \"http://prts.wiki/images/4/41/%E5%A4%B4%E5%83%8F_%E8%8A%AC.png\"],\n[\"12F\", \"http://prts.wiki/images/b/b7/%E5%A4%B4%E5%83%8F_12F.png\"],\n[\"杜林\", \"http://prts.wiki/images/2/24/%E5%A4%B4%E5%83%8F_%E6%9D%9C%E6%9E%97.png\"],\n[\"巡林者\", \"http://prts.wiki/images/9/93/%E5%A4%B4%E5%83%8F_%E5%B7%A1%E6%9E%97%E8%80%85.png\"],\n[\"黑角\", \"http://prts.wiki/images/f/f1/%E5%A4%B4%E5%83%8F_%E9%BB%91%E8%A7%92.png\"],\n[\"夜刀\", \"http://prts.wiki/images/b/b2/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E5%88%80.png\"],\n[\"Castle-3\", \"http://prts.wiki/images/8/82/%E5%A4%B4%E5%83%8F_Castle-3.png\"],];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport function mod_slice(arr, idx, cnt) {\n  let len = arr.length;\n  let from = idx % len;\n  return [...arr.slice(from, len), ...arr.slice(0, from)].slice(0, cnt);\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed || 0;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { AVATARS } from './avatars';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 金色普通 龙门粗口 蕾丝花边超短裙 泳装 充电宝 抛光 JK 洁哥不要 蕾丝花边超短裙 老婆 泳装\".split(\" \");\n\nconst SEEDS = \"龙门厕所 250区废墟 完整小道 旧街 中转坐 霜烤废墟 废铁峡谷 军械库北 风蚀矮天 荒废受厂 龙门厕所 荒废受厂 风蚀矮天\".split(\" \");\n\nexport const classes = {\n  producers: \"极境 讯使 香草 桃金娘 红豆 清道夫 德克萨斯 惊蛰 推进之王 芬 调香师 断崖 锡兰 豆苗\".split(\" \"),\n  solvers: \"克洛丝 巡林者 杰西卡 蓝毒 陨星 流星 空爆 能天使 W 陈 棘刺 史尔特尔 拉普兰德 刻刀 松果 刻俄柏 四月\".split(\" \"),\n  miners: \"史都华德 12F 阿米娅 炎熔 夜烟 远山 天火 星极 艾雅法拉\".split(\" \"),\n  standers: \"玫兰莎 芙兰卡 慕斯 柏喙 赫拉格 孑 宴 银灰 凛冬 卡达 阿米娅-近卫 机械水獭 末药 杜宾 森蚺 夜刀\".split(\" \"),\n  defenders: \"米格鲁 蛇屠箱 斑点 年 可颂 古米 雷蛇 泥岩 砾 摄影车 龙腾 星熊\".split(\" \"),\n  supporters: \"梓兰 红 诗怀雅 安洁莉娜 霜叶 薄绿 清流 翎羽 白面鸮 凯尔希 空 波登可 真理 巫恋 安比尔 温蒂 赫默 塞雷娅 夜莺 黑角\".split(\" \"),\n  scorers: \"阿消 崖心 食铁兽 雪雉 卡夫卡 铃兰 酸糖 普罗旺斯 闪灵 煌 阿 断罪者 伊芙利特 苏苏洛 大帝\".split(\" \"),\n  randomizers: \"斯卡蒂 图耶 热水壶 嘉维尔 迷迭香 风笛 安赛尔 微风 亚叶 伊桑 狮蝎 坚雷 暗索 可露希尔\".split(\" \"),\n};\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 杜林 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nexport const pick_scorers = \"阿米娅 阿消 崖心 雪雉 酸糖 煌 凯尔希 苏苏洛\".split(\" \");\n\nexport const pick_vanguards = \"极境 讯使 香草 桃金娘 豆苗 惊蛰 推进之王\".split(\" \");\n\nconst cost_vanguard =  `极境 1 2\n香草 1 1\n讯使 1 1\n桃金娘 1 2\n惊蛰 1 1\n推进之王 1 1\n豆苗 1 1`;\n\nconst draw_vanguard = `芬 1 2\n调香师 1 1\n锡兰 0 1\n清流 0 1`;\n\nconst scorer = `阿米娅 1 1\n崖心 1 1\n食铁兽 0 1\n酸糖 0 1\n普罗旺斯 0 1\n阿消 1 1\n阿米娅-近卫 0 1\n凯尔希 1 1\n伊芙利特 0 1\n雪雉 1 1\n卡夫卡 0 1\n铃兰 0 1\n阿 0 1`;\n\nconst miner =  `史都华德 1 1\n夜烟 1 1\n远山 1 1\n炎熔 1 1`;\n\nconst shooter = `棘刺 1 1\n陈 1 1\n银灰 1 1\nW 1 1\n卡达 1 1\n拉普兰德 0 1\n史尔特尔 1 1\n松果 1 1\n刻刀 1 1`;\n\nconst defender = `米格鲁 1 1\n蛇屠箱 0 1\n年 0 1\n龙腾 0 1\n摄影车 1 1`;\n\nconst supporter = `翎羽 1 1\n白面鸮 1 1\n雷蛇 0 1\n夜莺 1 1`;\n\nexport const solver_core = \"棘刺 陈 银灰 W 松果 刻刀 刻俄柏\".split(\" \");\nexport const scorer_core = \"阿米娅 阿消 崖心 雪雉 酸糖 铃兰 普罗旺斯 煌 凯尔希 伊芙利特\".split(\" \");\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 杜林 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n大帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n天火 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n天火 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n杜林 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\n// Maybe this should be rewrite to mini_sets_S2 with plenty of union sets\nconst mini_sets = [\n  //基本阿米娅单核\n  ' 阿米娅 雷蛇 艾雅法拉 ',\n  ' 阿米娅 夜烟 炎熔|史都华德|凯尔希 ',\n\n  //风笛套\n  ' 风笛 白面鸮 温蒂',\n  ' 风笛 夜刀|食铁兽 黑角|食铁兽 ',\n\n  //莱茵订单流\n  ' 赫默 赫默|白面鸮 凯尔希 ',\n\n  //火龙单核\n  ' 伊芙利特 赫默 史都华德|夜烟|炎熔 ',\n\n  //企鹅物流 有德狗爆费核心 有空大帝刷分核心 还有空德可颂的清场\n  ' 德克萨斯 德克萨斯 艾雅法拉 ',\n  ' 空 空 温蒂 波登可 大帝 ',\n  ' 德克萨斯 可颂 可颂 ',\n\n  //能天使核心各种 能陨速清场 能炎熔刷材料\n  // ' 能天使 陨星 蓝毒 炎熔 ',\n  // ' 能天使 陨星 拉普兰德 刻俄柏 ',\n\n  //陨星单核\n  ' 能天使 陨星 雷蛇 末药 ',\n\n  //狙击流\n  ' 空爆|清道夫|阿 摄影车|机械水獭 砾 ',\n\n  //艾雅法拉核心各种\n  // ' 艾雅法拉 杰西卡 柏喙 柏喙 ',\n  ' 艾雅法拉 巫恋 刻俄柏 巫恋|刻俄柏 ', // 易伤流\n\n  //安洁莉娜强力全套\n  ' 安洁莉娜 陈|翎羽 陈|诗怀雅 ',\n  // ' 安洁莉娜 推进之王 推进之王 森蚺|泥岩 ',\n\n  //送盾流\n  ' 年 米格鲁 米格鲁|摄影车 ',\n\n  //梅尔清场流\n  // ' 机械水獭 机械水獭 史都华德|远山|杜林 ',\n\n  //雷蛇引擎流\n  ' 艾雅法拉  能天使  雷蛇 白雪 ',\n\n  //温蒂引擎刷分流\n  ' 温蒂 白面鸮 食铁兽 ',\n\n  //崖心刷钢流\n  ' 星极 赫默|白面鸮 崖心 ',\n\n  //经典断罪者套\n  ' 调香师 调香师 艾雅法拉 棘刺 微风|棘刺 清流 断罪者 ',\n\n  //召唤回手套\n  ' 图耶 安赛尔 霜叶|薄绿 ',\n\n  //调香师单核\n  ' 棘刺|微风 棘刺|微风 调香师 芬|调香师 ',\n\n  //铃兰小家族\n  ' 铃兰 阿|空爆|清道夫|霜叶 摄影车|砾 ',\n\n  //波登可经典引擎战吼套\n  ' 波登可 白面鸮 温蒂 ',\n  //波登可全员增强\n  // ' 波登可 图耶 杜宾 杜宾 ',\n\n  //苏苏洛经典套\n  // ' 苏苏洛 杜林 卡达 波登可 ',\n\n  //消费流\n  // ' 阿消 夜烟 史尔特尔 惊蛰 ',\n\n  //史尔特尔\n  ' 史尔特尔 末药 酸糖 ',\n\n  //真理单核套路集合\n  // ' 凛冬 凛冬 真理 ',\n  ' 刻俄柏|陈 食铁兽|伊芙利特 真理 ',\n  // ' 伊桑 刻俄柏 芙兰卡 真理 ',\n\n  //经典强化\n  // ' 古米 古米|诗怀雅 ',\n\n  //超杀\n  ' 安比尔 天火|煌|迷迭香|白金 煌 ',\n\n  //绝对解场\n  ' 酸糖 拉普兰德 刻刀 ',\n\n  //刻刀别的配合\n  ' 刻刀 霜叶 ',\n\n  //整活套路\n  ' 斯卡蒂 斯卡蒂 森蚺 ',\n  // ' 图耶 亚叶 ',\n  ' 安赛尔 安赛尔|微风 微风 ',\n  ' 图耶 狮蝎 狮蝎 ',\n  ' 热水壶 热水壶 斯卡蒂 ',\n\n  //养巨怪套路\n  ' 安洁莉娜 波登可 森蚺 森蚺 ',\n  ' 安洁莉娜 极境 泥岩 ',\n\n  //卡夫卡\n  ' 卡夫卡 摄影车 安洁莉娜 ',\n  \n  //刻刀单核小套路\n  ' 刻刀 刻刀 刻俄柏 波登可 ',\n  //前期猛打小套路\n  // ' 孑 宴 孑|宴  翎羽 ',\n  //前期直接打爆 稳住直接持续\n  ' 孑 孑 史都华德 惊蛰 ',\n  //拉狗单核小套路\n  ' 拉普兰德  能天使  刻俄柏 ',\n  //柏喙小套路\n  ' 柏喙 翎羽 夜莺 ',\n  //银灰单核\n  ' 银灰 赫默|凯尔希 星极 ',\n  //清道夫小配合\n  // ' 清道夫 空爆 砾 摄影车 流星 ',\n  //闪灵小配合\n  // ' 闪灵 蛇屠箱 ',\n  //史尔特尔小配合\n  // ' 史尔特尔 米格鲁 空 ',\n  //阿米娅近卫小配合\n  ' 阿米娅-近卫 卡达 龙腾|机械水獭 ',\n\n  //W小配合\n  ' W 史都华德|夜烟|炎熔 ',\n\n  //安洁其他配合\n  ' 安洁莉娜 远山|杜宾 远山|红 ',\n\n  //苏苏洛\n  ' 苏苏洛 波登可 ',\n\n  //普罗旺斯\n  ' 普罗旺斯 巡林者 ',\n  //还有一个普罗旺斯泥岩的套路 然而这个套路一个问题在于 需要的牌太多了 这边尽可能都是小combo 不能是大的 但只有20张 所以加上也无妨\n  ' 普罗旺斯 泥岩 极境 安洁莉娜 波登可 霜叶|闪灵 ',\n\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n  // ' 阿 蛇屠箱 闪灵 ',\n  // ' 棘刺 棘刺 调香师 芬 ',\n  // ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n  // ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n  // ' 锡兰  锡兰  夜莺 ',\n  // ' 普罗旺斯  灰喉  巡林者 波登可 ',\n  // ' 安洁莉娜 陈 陈  波登可 ',\n  // ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n  // ' 梅尔 赫默 白面鸮 天火  艾雅法拉 ',\n  // ' 能天使 蓝毒 陨星 酸糖 ',\n  // ' 霜叶  图耶  杜宾 ',\n  // ' 守林人  守林人  夜莺 ',\n  //  ' 末药  银灰  初雪 ',\n  //  ' 梓兰  梓兰  能天使 ',\n  //  ' 赫默  稀音  梅尔 梅尔 史都华德  天火  塞雷娅 ',\n  //  ' 温蒂  白面鸮  桃金娘 ',\n  //  ' 白金  末药  煌 ',\n  //' 拉普兰德  白雪  白雪 ',\n  //  ' 酸糖 米格鲁 米格鲁 红 ',\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_challenge_name(rng) {\n  let card = rng.choice(AVATARS);\n  return {\n    desc:`${card[0]}在${rng.choice(SEEDS)}`, \n    illust:card[1],\n  };\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n\n  selection = selection.map(select_one_card(rng));\n\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nexport function deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport const select_one_card = rng => x => x.includes(\"|\")? rng.choice(x.split(\"|\")):x;\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 4, rng)];\n  // deck = [...deck, ...deck_from_strategy(scorer, 1, rng)];\n  // deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  // deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(supporter, 1, rng)];\n\n  // Strategy deck\n  // deck = [...deck, ...deck_from_mini_sets(12, rng)];\n  deck = [...deck, ...deck_from_mini_sets(9, rng)];\n\n  // Let diff goes\n  // console.log(\"deck before\", deck);\n  deck = deck.map(select_one_card(rng));\n  // console.log(\"deck after\", deck);\n\n  // No more than 2\n  let deck_dict = deck.reduce((acc, val) => ({...acc, [val]: (acc[val]+1)||1}), {})\n  for (let card in deck_dict) {\n    if (deck_dict[card] > 2) {\n      deck_dict[card] = 2;\n    }\n  }\n  deck = Object.keys(deck_dict).reduce((acc, val) => [...acc, ..._.times(deck_dict[val], ()=>val)], [])\n\n  // Random cards\n  let amount_add = 20 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_roguelike_deck(deck_name) {\n  let deck = [\"黑角\", \"极境\", \"桃金娘\", deck_name.slice(0,-3)];\n  // console.log(deck);\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(supporter, 1, rng)];\n  // console.log(deck);\n\n  // Random cards\n  let amount_add = 12 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  // let generator = (rng.random() > 0.05)? generate_deck_s2 : generate_deck_s1;\n  let generator = generate_deck_s2;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 20) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"http://prts.wiki/images/b/b1/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E5%90%88%E7%BA%A6%E8%B5%8F%E9%87%91.png\" style={{height: \"1.1em\"}} className=\"steel\" />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M12 19V6M5 12l7-7 7 7\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n\n  reset: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.2\"/></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];\n\nconst smaller_height = '1.1em';\nexport const smaller_icons = [\n  (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" style={{height:smaller_height}} className=\"material steel\" />),\n]","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[0];\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得+2/+1`);\n  }\n  card.atk += 2;\n  card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nfunction set_collection_order(G, ctx) {\n  let colors = G.finished.reduce((acc,val)=>{\n    if(val.color >= 0) acc[val.color]+=1;\n    return acc;\n  }, [0,0,0]);\n  // console.log(colors);\n  let times = _.min(colors);\n  G.score += 2 * times;\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+2/+1</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 1,\n    reward: 3,\n    desc: (<span>获得: 1费</span>),\n    advanced: true,\n    effect(G, ctx) {\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [1,1,1,0],\n    score: 1, \n    reward: 3,\n    advanced: true,\n    desc: (<span>2分/每组{food_icons.slice(0,3)}订单</span>),\n    effect: set_collection_order,\n  },\n  \n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   desc: (<span>重置1订单</span>),\n  //   advanced: true,\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n    \n];\n  \nexport const ORDERS = [\n  \n  {\n    requirements: [3,0,0,0],\n    score: 3,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 3,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 3,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 4,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 4,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 4,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>{material_icons[2]} → 2费</span>),\n  //   cost: [0,0,1,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 2费</span>),\n  //   cost: [1,0,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 2费</span>),\n  //   cost: [0,1,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n\n  // // {\n  //   requirements: [3,0,0,0],\n  //   score: 2, \n  //   reward: 2,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2, \n  //   reward: 0,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // }, \n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  \n  \n\n  ...advanced_orders,\n  // ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, reduce_enemy_atk, silent, summon, eliminate_field, reinforce_field, choice, add_vulnerable, play_card, exhaust_order\n} from './Game';\nimport { classes } from './DeckGenerator';\nimport { material_icons, ready_order } from './orders';\nimport { food_icons } from './icons';\n\nexport function init_card(card) {\n  return {\n    name: \"card\",\n    block: 0,\n    dmg: 0,\n    power: 0,\n    // material: rng.randRange(3),\n\n    onPlayBonus: [],\n\n    ...card,\n  };\n}\n\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 30) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得30分以上\", self);\n      }\n    },\n    action(G, ctx, self) {\n      if (self.power == 1) {\n        let queen = G.CARDS.find(x => x.name == \"阿米娅-近卫\");\n        Object.assign(self, queen);\n        self.onPlay(G, ctx, self);\n      }\n      else {\n        logMsg(G, ctx, \"只需要强化1次即可\");\n      }\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"芙兰卡\", \n  //   cost:4, \n  //   atk:6, \n  //   hp:6, \n  //   mine:3, \n  //   block:1, \n  //   illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n  //   reinforce: 2,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 6;\n  //     self.hp += 6;\n  //   },\n  //   reinforce_desc: \"+6/+6\",\n  // },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  // {\n  //   name: \"12F\",\n  //   cost: 5,\n  //   atk: 6,\n  //   hp: 4,\n  //   mine: 5,\n  //   block: 0,\n  //   illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n  //   reinforce: 2,\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 9,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let white = G.CARDS.find(x => x.name == \"白面鸮\");\n      Object.assign(self, white);\n      self.exhausted = false;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:16,\n    hp:16,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 50) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到50\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.block <= 0) {\n    //     self.block = 1;\n    //   }\n    // },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n        self.onTurnBegin = (G, ctx, self) => {\n          self.block += 1;\n          self.onTurnBegin = undefined;\n        };\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 摧毁场上1个(重置的)干员，并获得4点费用\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx, self) {\n      if (eliminate_field(G, ctx, self)) {\n        G.costs += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted;\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 10) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少10点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 5) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王5次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得1个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  // {\n  //   name:\"杜林\", \n  //   cost:3, \n  //   atk:2, \n  //   hp:1, \n  //   mine:2, \n  //   block:0, \n  //   desc:\"部署: 场上所有其他干员获得<+1>\", \n  //   illust:\"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     for (let card of G.field) {\n  //       if (card != self) {\n  //         card.mine += 1;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 2,\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 6)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少6次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+3/+3\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-4\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 4;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc: <span>采掘: 弃2张牌，获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.materials[3] += 2;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不够\");\n        // self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:2, \n    desc:\"行动: 获得+6生命值，本回合阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n      self.block += 1;\n      self.onTurnBegin = (G, ctx, self) => {\n        self.block -= 1;\n        self.onTurnBegin = undefined;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n// {\n//     name:\"斑点\", \n//     cost:4, \n//     atk:2, \n//     hp:12, \n//     mine:2, \n//     block:2, \n//     desc:\"行动: 完全治疗自己\", \n//     illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n//     action(G, ctx, self) {\n//       // let self_idx = G.field.indexOf(self);\n//       // G.field.map((card, idx) => {\n//       //   if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n//       //     card.hp += 4;\n//       //   }\n//       // });\n//       self.dmg = 0;\n//     },\n//     reinforce: 1,\n//     reinforce_desc: \"+0/+6\",\n//     onReinforce(G, ctx, self) {\n//       self.hp += 6;\n//     }\n//   },\n\n  // {\n  //   name:\"星熊\", \n  //   cost:4, \n  //   atk:4, \n  //   hp:10, \n  //   mine:2, \n  //   block:2, \n  //   desc:\"行动: 消耗1点费用，获得+2/+2和阻挡数+1，然后重置自己\", \n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   action(G, ctx, self) {\n  //     if (payCost(G, ctx, 1, true)) {\n  //       self.atk += 2;\n  //       self.hp += 2;\n  //       self.block += 1;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"阻挡数+1\",\n  // },\n  \n\n\n  {\n    name:\"年\", \n    cost:5, \n    atk:3, \n    hp:9, \n    mine:2, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n    \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  // {\n  //   name:\"芙蓉\", \n  //   cost:1, \n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 完全治疗1个干员\", \n  //   illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     fully_restore(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        // G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n        summon(G, ctx, new_card, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个(重置的)干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      let card = choice(ctx, G.field.filter(x => x!=self).filter(x => !x.exhausted));\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n  },\n  \n  // {\n  //   name:\"Lancet-2\", \n  //   cost:3,\n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 本回合下一次部署干员时，会额外部署1次\", \n  //   was_enemy: true,\n  //   illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let play_again = () => {\n  //       let played = false;\n  //       return (G, ctx, card_played, card) => {\n  //         if (!played) {\n  //           play_card(G, ctx, card);\n  //           played = true;\n  //         }\n  //       }};\n  //     G.onPlayCard.push(\n  //       play_again(),\n  //     );\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let cured = fully_restore(G, ctx);\n      if (cured >= 4) {\n        G.score += 2 + 2 * self.power;\n      }\n    },\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"大帝\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得1分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += num_exhausted;\n      if (num_exhausted >= 8) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少8个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + self.power, true)) {\n        let delta = 6 + 2 * self.power;\n        G.score += delta;\n\n        if (delta >= 40) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少40分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+1，得分+2\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    action(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce: 2,\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc: \"行动: 摧毁3个颜色相同的(重置的)订单，获得12分\",\n    illust:\"http://prts.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    action(G, ctx, self) {\n      for (let i=0; i<3; i++) {\n        let colored_orders = G.finished.filter(x => (!x.exhausted) && (x.color == i));\n        if (colored_orders.length >= 3) {\n          G.finished = G.finished.filter(x => !colored_orders.includes(x));\n          G.score += 12;\n          logMsg(G, ctx, \"获得12分\");\n          return;\n        }\n      }\n      self.exhausted = false;\n      logMsg(G, ctx, \"没有3个同色的订单\");\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得2分\",\n    onReinforce(G, ctx, self){\n      G.score += 2;\n    },\n  },\n\n  {\n    name:\"塞雷娅\",\n    cost:4,\n    atk:4,\n    hp:9,\n    mine:2,\n    block:2,\n    desc: \"行动: 本回合剩余时间内，使用其他干员战斗时，重置1个订单\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    action(G, ctx, self) {\n      G.onCardFight.push(\n        (G, ctx) => {\n          ready_order(G, ctx, true);\n        }\n      );\n    },\n    reinforce: 1,\n    reinforce_desc: \"使1个敌人获得易伤1\",\n    onReinforce(G, ctx, self){\n      add_vulnerable(G, ctx, 1);\n    },\n  },\n{\n    name:\"凯尔希\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 横置1个订单，并触发其能力2次\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onMine(G, ctx, self) {\n      let order = exhaust_order(G, ctx);\n      if (order) {\n        for (let i=0; i<(2+self.power); i++) {\n          if ((order.cost == undefined) || payMaterials(G, ctx, order.cost, true)) {\n            order.effect(G, ctx);\n          }\n        }\n      }\n      else {\n        logMsg(G, ctx, \"没有可横置的订单\");\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再触发1次\",\n  },\n{\n    name:\"松果\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署: 横置2个订单，摧毁1个敌人，如果2个订单颜色相同，则再摧毁1个\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E6%9D%BE%E6%9E%9C_1.png\",\n    onPlay(G, ctx, self) {\n      let order1 = exhaust_order(G, ctx);\n      let order2 = exhaust_order(G, ctx);\n      if (order1 != undefined && order2 != undefined) {\n        let times = (order1.color == order2.color)? 2 : 1;\n        for (let i=0; i<times; i++) {\n          let enemy = choice(ctx, G.efield.filter(x => x.hp > x.dmg));\n          enemy.dmg += enemy.hp;\n        }\n      }\n      else {\n        logMsg(G, ctx, \"没有足够的订单\");\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成4点伤害\",\n    onReinforce(G, ctx, self){\n      deal_random_damage(G, ctx, 4);\n    },\n  },\n  {\n    name:\"白金\",\n    cost:3,\n    atk:5,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"超杀: 横置1个订单，重置1个干员\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%87%91_1.png\",\n    reinforce: 1,\n    reinforce_desc: \"+2/+1\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp && exhaust_order(G, ctx)) {\n        ready_random_card(G, ctx, self);\n      }\n    },\n    onReinforce(G, ctx, self){\n      self.atk += 2;\n      self.hp += 1;\n    },\n  },\n{\n    name:\"豆苗\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: <span>采掘: 横置1个订单，如果该订单是<br/>{food_icons[0]}: 获得3点费用<br/>{food_icons[1]}: 摸2张牌，并使该牌费用-1<br/>{food_icons[2]}: 召唤手牌中1个干员的4/4复制</span>,\n    illust:\"http://prts.wiki/images/4/4b/%E7%AB%8B%E7%BB%98_%E8%B1%86%E8%8B%97_1.png\",\n    onMine(G, ctx, self) {\n      let order = exhaust_order(G, ctx);\n      if (order) {\n        if (order.color == 0) {\n          G.costs += 3;\n        }\n        else if (order.color == 1) {\n          draw(G, ctx);\n          draw(G, ctx);\n          G.hand[0].cost -= 1;\n          G.hand[1].cost -= 1;\n        }\n        else {\n          let card = choice(ctx, G.hand);\n          if (card) {\n            summon(G, ctx, {\n              ...card,\n              atk: 4,\n              hp: 4,\n              mine: 2,\n              cost: 3,\n            }, self);\n          }\n      }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"获得1点费用\",\n    onReinforce(G, ctx, self){\n      G.costs += 1;\n    },\n  },\n{\n    name:\"夜莺\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: <span>行动: 横置1个订单，如果该订单是<br/>{food_icons[0]}: 重置1个干员<br/>{food_icons[1]}: 横置2个敌人<br/>{food_icons[2]}: 触发场上1个干员的\"部署:\"效果(极境除外)</span>,\n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n    action(G, ctx, self) {\n      let order = exhaust_order(G, ctx);\n      if (order) {\n        if (order.color == 0) {\n          ready_random_card(G, ctx, self);\n        }\n        else if (order.color == 1) {\n          exhaust_random_enemy(G, ctx);\n          exhaust_random_enemy(G, ctx);\n        }\n        else {\n          let card = choice(ctx, G.field.filter(x => x.onPlay && x.name != \"极境\"));\n          if (card) {\n            card.onPlay(G, ctx, card);\n            logMsg(G, ctx, `触发 ${card.name} 的部署效果`);\n          }\n          else {\n            logMsg(G, ctx, \"没有合适的干员触发\");\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n    onReinforce(G, ctx, self){\n      cure(G, ctx, 6);\n    },\n  },\n  {\n    name:\"天火\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"超杀: 每造成2点额外伤害，就获得1个材料\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let times = Math.floor(delta / 2);\n        // for (let i=0; i<times; i++) {\n        //   let order = choice(ctx, G.finished.filter(x => !x.exhausted));\n        //   if (order) {\n        //     order.effect(G, ctx);\n        //     logMsg(G, ctx, [\"触发订单 \", order.desc]);\n        //   }\n        // }\n        gainMaterials(G, ctx, times);\n      }\n    },\n    // action(G, ctx) {\n    //   G.onUseOrder.push(\n    //     (G, ctx) => {\n    //       deal_random_damage(G, ctx, 3);\n    //     }\n    //   );\n    // },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+2/+1\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  // {\n  //   name:\"梅尔\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n  //   reinforce: 1,\n\n  //   onPlay(G, ctx) {\n  //     let order = {};\n  //     let material = ctx.random.Die(3) - 1;\n  //     let requirements = [0,0,0,0];\n  //     requirements[material] = 1;\n  //     order.desc = <span>{material_icons[material]}→5伤害</span>;\n  //     order.effect = (G,ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         deal_random_damage(G, ctx, 5);\n  //       }\n  //     };\n  //     order.is_rhine = true;\n  //     G.finished.unshift(order);\n  //   },\n    \n  //   onReinforce(G, ctx) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"摄影车\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个召唤物\\\"稀音\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/d/d5/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E7%A7%BB%E5%8A%A8%E6%91%84%E5%BD%B1%E5%99%A8.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, card, ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"稀音\\\"\",\n  },\n  \n  {\n    name:\"机械水獭\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个召唤物\\\"梅尔\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E6%9C%BA%E6%A2%B0%E6%B0%B4%E7%8D%AD.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), card.generator(ctx), ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"梅尔\\\"\",\n  },\n  \n  {\n    name:\"龙腾\",\n    was_enemy: true,\n    cost:2,\n    atk:2,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤3个\"麦哲伦\"</span>,\n    illust:\"http://prts.wiki/images/c/c9/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E9%BE%99%E8%85%BE.F.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let generator = extra_cards.find(x => x.name == \"麦哲伦\");\n        for (let i=0; i<3; i++) {\n          let card = generator.generate(ctx);\n          summon(G, ctx, {...card}, self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  \n  // {\n  //   name:\"斑点\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:6,\n  //   mine:2,\n  //   block:3,\n  //   desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n  //   illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let num_finished = G.finished.length;\n  //     self.atk += num_finished;\n  //     self.hp += 2 * num_finished;\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"阻挡数+1\",\n  // },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:4, \n    atk:6, \n    hp:3, \n    mine:1, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:4, \n    hp:6, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"采掘: 获得2分，然后横置1个干员，该干员每有2点攻击力，就再获得1分\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      if (card) {\n        card.exhausted = true;\n        let delta = Math.floor(card.atk / 2) + 2;\n        G.score += delta;\n        logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n      }\n      // let power = self.power;\n      // G.onPayCost.push(\n      //   (G, ctx, amount) => {\n      //     for (let i=0; i<amount; i++) {\n      //       deal_random_damage(G, ctx, 3 + power);\n      //     }\n      //   }\n      // );\n    },\n    reinforce: 2,\n    reinforce_desc: \"触发1次\\\"采掘:\\\"效果\",\n    onReinforce(G, ctx, self) {\n      this.onMine && this.onMine(G, ctx, self);\n    }\n  },\n  \n  // {\n  //   name:\"灰喉\", \n  //   cost:4,\n  //   atk:2, \n  //   hp:1, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 获得+15攻击力直到回合结束\", \n  //   illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let delta = 15;\n  //     self.atk += delta;\n  //     self.played = true;\n  //     self.onTurnBegin = (G, ctx, self) => {\n  //       if (self.played) {\n  //         self.atk -= delta;\n  //         self.played = false;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n\n  // },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 30) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少30分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:4,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"超杀: 每造成1点额外伤害，就摸1张牌\",\n  //   illust:\"http://prts.wiki/images/1/1b/%E7%AB%8B%E7%BB%98_%E6%96%AD%E5%B4%96_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let delta = enemy.dmg - enemy.hp;\n  //       for (let i=0; i<delta; i++) {\n  //         draw(G, ctx);\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  {\n    name:\"迷迭香\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"超杀: 召唤2个随机干员的2/2复制\",\n    illust:\"https://s3.ax1x.com/2020/11/26/Ddxxbt.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        for (let i=0; i<2; i++) {\n          let card = ctx.random.Shuffle(G.CARDS.filter(x => x.onMine || x.onFight || x.action))[0];\n          card = {...card};\n          card.atk = 2;\n          card.hp = 2;\n          card.mine = 1;\n          card.cost = 2;\n          summon(G, ctx, card, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"安比尔\",\n    cost:3,\n    atk:5,\n    hp:2,\n    mine:0,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，干员的\\\"超杀:\\\"效果将额外触发1次\",\n    illust:\"http://prts.wiki/images/3/3e/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%AF%94%E5%B0%94_1.png\",\n    action(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, self, enemy) => {\n          if (enemy.dmg > enemy.hp && ((typeof self.desc) == \"string\") && self.desc.includes(\"超杀\")) {\n            self.onFight && self.onFight(G, ctx, self, enemy);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n  // {\n  //   name:\"黑\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"超杀: 对其对位敌人造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let idx = G.field.indexOf(self);\n  //       if (~idx) {\n  //         let enemy = G.efield[idx];\n  //         if (enemy) {\n  //           enemy.dmg += 5 + 4 * self.power;\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"伤害+4\",\n  // },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E9%85%B8%E7%B3%96_1.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:3, \n    hp:3, \n    mine:2, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 变成1个随机干员\", \n    illust:\"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\",\n    onPlay(G, ctx, self) {\n      // self.hp += 2;\n      // G.costs += 1;\n      // G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n      let card = choice(ctx, G.CARDS.filter(c => c.onMine || c.onFight || c.action));\n      Object.assign(self, {...card, atk:self.atk, hp:self.hp, mine:self.mine, block:self.block, was_enemy:false})\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3+2*self.power); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复2次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的部署效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的采掘效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的战斗效果`, '\"', card.desc, '\"']);\n      }\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的行动效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);\n      }\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"图耶\",\n    cost:6,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制\",\n    illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E5%9B%BE%E8%80%B6_1.png\",\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS).filter(c => c.onMine || c.onFight || c.action || (c.cost >= 4));\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        // G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  // {\n  //   name:\"暴行\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:4,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n  //   illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n  //   onPlay(G, ctx) {\n  //     let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n  //     G.hand = cards.map(x => ({...x}));\n  //   },\n  //   onMine(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  // },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n  \n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://s3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    desc: `行动: 造成3点伤害，重复4次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成3点伤害，重复${4+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/3)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      \n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n      self.desc = this.desc;\n    },\n    action: (G, ctx, self) => {\n      let skill_power = self.skill_power || 1;\n        for (let i=0; i<(4+skill_power); i++) {\n          deal_random_damage(G, ctx, 3);\n        }\n        for (let j=0; j<Math.floor(skill_power/3 + 1); j++) {\n          G.onCardMine.push((G, ctx) => {\n            G.score += 1;\n          });\n        }\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:5,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 12) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰12次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 2 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n  {\n    name:\"雪雉\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:\"行动: 清除弃牌堆中的5张牌，获得6分\",\n    illust:\"http://prts.wiki/images/8/89/%E7%AB%8B%E7%BB%98_%E9%9B%AA%E9%9B%89_1.png\",\n    action(G, ctx, self) {\n      if (G.discard.length >= 5) {\n        G.discard = G.discard.slice(5);\n        G.score += 6 + 2 * self.power;\n        logMsg(G, ctx, `弃牌堆中还剩${G.discard.length}张`);\n      }\n      else {\n        logMsg(G, ctx, `弃牌堆中的牌数量不够(${G.discard.length}张)`);\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n\n  // {\n  //   name:\"初雪\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n  //   illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n  //   action(G, ctx, self) {\n  //     G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"获得2点费用\",\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  // },\n  // {\n  //   name:\"角峰\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:1,\n  //   block:2,\n  //   desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n  //   illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     self.atk += G.materials[3];\n  //     self.hp += G.materials[3];\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n  {\n    name:\"棘刺\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%A3%98%E5%88%BA_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n        self.use_count -= 1;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足 或 使用次数已达到上限\");\n      }\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 20;\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"夜烟\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:3,\n    block:0,\n    desc:\"采掘: 消耗2点费用，额外获得3个材料\",\n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E7%83%9F_1.png\",\n    onMine(G, ctx) {\n      if (payCost(G, ctx, 2, true)) {\n        gainMaterials(G, ctx, 3);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+1>\",\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    }\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:3,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        G.costs -= 2;\n        // let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗: 强化1张手牌\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    // onMine(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    // },\n    // onFight(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    //   let num_reinforced = G.hand.filter(x => (x.power > 0)).length;\n    //   G.costs += num_reinforced;\n    // },\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 强化1张手牌，重复2次\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再重复1次\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:2,\n    desc: \"采掘/战斗: 强化场上1个(重置的)干员\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name:\"诗怀雅\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"部署: 强化场上1个(重置的)干员，重复3次\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  //休整一家暂时退休\n  // {\n  //   name:\"守林人\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n  //   illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n  //   },\n  //   reinforce_desc: \"伤害+3\",\n  // },\n  {\n    name:\"霜叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 将场上1个(重置的)干员返回手牌\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    // onRest(G, ctx, self) {\n    //   let num_rest_cards = get_num_rest_cards(G, ctx);\n    //   self.atk += num_rest_cards;\n    //   self.hp += num_rest_cards;\n    // },\n    onMine(G, ctx, self) {\n      let card = choice(ctx, G.field.filter(x => !x.exhausted));\n      if (card) {\n        G.field = G.field.filter(x => x != card);\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  {\n    name:\"锡兰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 本回合剩余时间内，每打出1张牌，就摸1张牌\",\n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n    reinforce: 2,\n    // onRest(G, ctx, self) {\n    //   let num_rest_cards = get_num_rest_cards(G, ctx);\n    //   G.score += num_rest_cards;\n    // },\n    onMine(G, ctx, self) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          draw(G, ctx);\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  // // {\n  // //   name:\"诗怀雅\",\n  // //   cost:4,\n  // //   atk:4,\n  // //   hp:5,\n  // //   mine:1,\n  // //   block:1,\n  // //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  // //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  // //   reinforce: 1,\n  // //   onRest(G, ctx, self) {\n  // //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  // //     if (player) {\n  // //       player.onPlay(G, ctx, player);\n  // //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  // //     }\n  // //   },\n  // //   onReinforce(G, ctx, self) {\n  // //     self.atk += 2;\n  // //     self.hp += 2;\n  // //   },\n  // //   reinforce_desc: \"+2/+2\",\n  // // },\n  // {\n  //   name:\"夜莺\",\n  //   cost:5,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n  //   onRest(G, ctx, self) {\n  //     if (~G.field.indexOf(self)) {\n  //       for (let card of G.field.map(x=>x)) {\n  //         if (card.onRest && (card.onRest != self.onRest)) {\n  //           card.onRest(G, ctx, card);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     let resters = G.deck.filter(x => x.onRest);\n  //     if (resters.length > 0) {\n  //       let card = ctx.random.Shuffle(resters)[0];\n  //       G.hand.unshift(Object.assign({}, card));\n  //     }\n  //   },\n  //   reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  // },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 摧毁1个(重置的)干员，获得3分\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      // if (card) {\n      //   card.dmg += 3;\n      //   G.score += 3;\n      //   if (card.dmg >= card.hp) {\n      //     // let card_idx = G.field.indexOf(card);\n      //     // G.field.splice(card_idx, 1);\n      //     // G.discard.push(card);\n      //     G.field = G.field.filter(x => x != card);\n      //     G.discard = [card, ...G.discard];\n      //   }\n      //   // else {\n      //     // card.onMine = (G, ctx) => {G.score += 4};\n      //     // card.onFight = card.onMine;\n      //     // card.desc = \"采掘/战斗: 获得4分\";\n      //     // G.score += 3;\n      //   // }\n        if (eliminate_field(G, ctx, self)) {\n          G.score += 3;\n        }\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 12) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿12次以上\", self);\n        }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"行动: 弃掉所有手牌，然后每弃掉1张，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let num_cards = G.hand.length;\n      G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      G.hand = [];\n      G.score += num_cards;\n      logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n      G.has_discarded = true;\n\n      if (num_cards >= 17) {\n        achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      }\n\n      // G.onDropCard.push(\n      //   (G, ctx) => {\n      //     G.score += 1;\n      //   }\n      // );\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:6,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得5分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 5;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  // {\n  //   name:\"格拉尼\",\n  //   cost:4,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n  //   illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%A0%BC%E6%8B%89%E5%B0%BC_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n  //     G.field.push(init_card_state(G, ctx, {...new_card}));\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"月见夜\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:3, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"采掘/战斗: 如果你在本回合弃过手牌，则获得+3/+3\", \n  //   illust:\"http://prts.wiki/images/0/02/%E7%AB%8B%E7%BB%98_%E6%9C%88%E8%A7%81%E5%A4%9C_1.png\",\n  //   onMine(G, ctx, self) {\n  //     if (G.has_discarded) {\n  //       self.atk += 3;\n  //       self.hp += 3;\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n      // self.mine += 3;\n      // self.played = true;\n      // self.onTurnBegin = (G, ctx, self) => {\n      //   if (self.played) {\n      //     self.mine -= 3;\n      //     self.played = false;\n      //   }\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  {\n    name:\"卡夫卡\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:2,\n    block:1,\n    desc: \"部署: 如果场上干员数量多于敌人，则获得5分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E5%8D%A1%E5%A4%AB%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      if (G.field.length > G.efield.length) {\n        G.score += 5;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...CARDS.find(x => x.name == \"卡夫卡\")});\n    },\n    reinforce_desc: \"获得1张\\\"卡夫卡\\\"\",\n  },\n  \n\n  {\n    name:\"薄绿\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n    illust:\"http://prts.wiki/images/d/d8/%E7%AB%8B%E7%BB%98_%E8%96%84%E7%BB%BF_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n      if (card != undefined) {\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E6%A3%AE%E8%9A%BA_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    // onReinforce(G, ctx, self) {\n    //   self.atk += 2;\n    //   self.hp += 2;\n    // },\n    // reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:5,\n    hp:8,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得+1攻击力并治疗5点伤害\",\n    illust:\"http://prts.wiki/images/4/48/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E6%8B%89%E6%A0%BC_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let excess = Math.floor((enemy.dmg - enemy.hp) / 2);\n        self.atk += excess;\n        self.dmg = Math.max((self.dmg - excess * 5), 0);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n      else {\n        logMsg(G, ctx, \"没有合适的干员触发\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 使1个敌人获得易伤2，重复2次\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      // reduce_enemy_atk(G, ctx, 4);\n      // reduce_enemy_atk(G, ctx, 4);\n      for (let i=0; i<2+self.power; i++) {\n        add_vulnerable(G, ctx, 2);\n      }\n    },\n    // onReinforce(G, ctx, self) {\n    //   G.costs += 2;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  // {\n  //   name:\"四月\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:0,\n  //   block:0,\n  //   desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n  //   illust:\"http://prts.wiki/images/2/2c/%E7%AB%8B%E7%BB%98_%E5%9B%9B%E6%9C%88_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.field.map(card => {\n  //       if (card.exhausted) {\n  //         card.exhausted = false;\n  //         card.mine = 0;\n  //         silent(card);\n  //       }\n  //     })\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  //   reinforce_desc: \"+3/+1\",\n  // },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  // {\n  //   name:\"贾维\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:2,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"采掘: 弃2张牌，获得4点费用\",\n  //   illust:\"http://prts.wiki/images/2/2d/%E7%AB%8B%E7%BB%98_%E8%B4%BE%E7%BB%B4_1.png\",\n  //   onMine(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       G.costs += 4;\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"手牌不足\");\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n  {\n    name:\"泥岩\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:2,\n    block:2,\n    desc:\"部署: 消耗所有剩余费用，然后每消耗1点，就获得+3/+3\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E6%B3%A5%E5%B2%A9_1.png\",\n    onPlay(G, ctx, self) {\n      let cost_remained = G.costs;\n      self.atk += 3 * cost_remained;\n      self.hp += 3 * cost_remained;\n      G.costs = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"阻挡数+1\",\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n  },\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:5,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"行动: 弃2张牌，获得+2/+2，然后重置自己\",\n  //   illust:\"\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       self.atk += 2 + self.power;\n  //       self.hp += 2 + self.power;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"再获得+1/+1\",\n  // },\n  {\n    name:\"微风\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 弃2张牌，召唤1个费用为4的干员\",\n    illust:\"http://prts.wiki/images/e/e7/%E7%AB%8B%E7%BB%98_%E5%BE%AE%E9%A3%8E_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n        summon(G, ctx, new_card, self);\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤1个费用为2的干员\",\n    onReinforce(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      summon(G, ctx, new_card, self);\n    },\n  },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的1/1复制\",\n  //   illust:\"\",\n  //   onPlay(G, ctx, self) {\n  //   },\n  //   onMine(G, ctx, self) {\n  //   },\n  //   onFight(G, ctx, self, enemy) {\n  //   },\n  //   action(G, ctx, self) {\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  // },\n  {\n    name:\"亚叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤1个随机干员的6/6复制</span>,\n    illust:\"http://prts.wiki/images/5/5f/%E7%AB%8B%E7%BB%98_%E4%BA%9A%E5%8F%B6_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let card = ctx.random.Shuffle(G.CARDS.filter(x => x.onMine || x.onFight || x.action))[0];\n        card = {...card};\n        card.atk = 6;\n        card.hp = 6;\n        card.mine = 3;\n        card.cost = 5;\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },{\n    name:\"史尔特尔\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"超杀: 消耗1点费用，重置自己\",\n    illust:\"http://prts.wiki/images/0/0c/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94_1.png\",\n    onFight(G, ctx, self, enemy) {\n      // if (G.field.indexOf(self) == G.efield.indexOf(enemy) && payCost(G, ctx, 1)) {\n      //   self.exhausted = false;\n      // }\n      if (enemy.dmg > enemy.hp && payCost(G, ctx, 1, true)) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },\n  // {\n  //   name:\"流星\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:2,\n  //   mine:0,\n  //   block:0,\n  //   desc:\"部署: 造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/b/be/%E7%AB%8B%E7%BB%98_%E6%B5%81%E6%98%9F_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 5);\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"造成3点伤害\",\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  // },\n\n  {\n      name:\"空爆\",\n      cost:2,\n      atk:3,\n      hp:2,\n      mine:1,\n      block:0,\n      desc:\"采掘: 摧毁场上1个(重置的)干员，然后造成4点伤害，重复2次\",\n      illust:\"http://prts.wiki/images/8/87/%E7%AB%8B%E7%BB%98_%E7%A9%BA%E7%88%86_1.png\",\n      onMine(G, ctx, self) {\n        if (eliminate_field(G, ctx, self)) {\n          for (let i=0; i<(2+self.power); i++) {\n            deal_random_damage(G, ctx, 4);\n          }\n        }\n      },\n      action(G, ctx, self) {\n        if (self.power == 1) {\n          let meteorite = G.CARDS.find(x => x.name == \"陨星\");\n          Object.assign(self, meteorite);\n          self.action = undefined;\n        }\n        else {\n          logMsg(G, ctx, \"只需要强化1次即可\");\n          self.exhausted = false;\n        }\n      },\n      reinforce: 1,\n      reinforce_desc: \"再重复1次\",\n      // onReinforce(G, ctx, self) {\n      //   deal_random_damage(G, ctx, 3);\n      // },\n    },\n\n  {\n    name:\"卡达\",\n    cost:3,\n    atk:3,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:\"行动: 本回合剩余时间内，使用其他干员采掘时，重置自己\",\n    illust:\"http://prts.wiki/images/1/1a/%E7%AB%8B%E7%BB%98_%E5%8D%A1%E8%BE%BE_1.png\",\n    action(G, ctx, self) {\n      self.fever = true;\n      G.onCardMine.push(\n        (G, ctx, mcard) => {\n          for (let card of G.field) {\n            if (card.fever && (!mcard.fever)) {\n              card.exhausted = false;\n            }\n          }\n        }\n      );\n    },\n    onTurnBegin(G, ctx, self) {\n      self.fever = false;\n    },\n    reinforce: 2,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n  },\n\n  {\n    name:\"白雪\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果(视为自己触发)\",\n    illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n      if (miner) {\n        miner.onMine(G, ctx, self);\n        logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onFight(G, ctx, self) {\n      let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n      if (fighter) {\n        fighter.onFight(G, ctx, self);\n        logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n      }\n      else {\n        logMsg(G, ctx, \"未找到合适的干员触发效果\");\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n\n  // {\n  //   name:\"伊桑\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc: \"行动: 变成手牌中1个干员的复制\",\n  //   illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n  //   reinforce: 3,\n  //   action(G, ctx, self) {\n  //     // if (G.field.length > 1){\n  //     //   G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n  //     // }\n  //     let card = choice(ctx, G.hand);\n  //     if (card) {\n  //       Object.assign(self, card);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.hand.unshift(enemy2card(G, ctx));\n  //   },\n  //   reinforce_desc: \"将1张敌人牌加入手牌\",\n  // },\n  \n  {\n    name:\"W\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，造成4点伤害，重复4次</span>,\n\n    illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n    // onPlay(G, ctx) {\n    //   drawEnemy(G, ctx);\n    // },\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        for (let i=0; i<(4+self.power); i++) {\n          deal_random_damage(G, ctx, 4);\n        }\n      }\n    },\n    reinforce: 1,\n    // onReinforce(G, ctx, self) {\n      // self.atk += 3;\n      // self.hp += 3;\n    // },\n    reinforce_desc: \"再重复1次\",\n  },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+1/+1\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      if (!enemy.is_boss) {\n        G.efield[idx] = blank_enemy;\n      }\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      // G.field.push(init_card_state(G, ctx, {...texas}));\n      summon(G, ctx, {...texas}, self);\n\n      if (self.power >= 6) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署6个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n\n      if (self.power == 3) {\n        let wind = G.CARDS.find(x => x.name == \"风笛\");\n        if (~G.field.indexOf(self)) {\n          Object.assign(self, wind);\n        }\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  // {\n  //   name:\"暗索\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:2,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n  //   reinforce: 1,\n  //   desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n  //   onPlay(G, ctx, self) {\n  //     G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n  //   },\n  //   action(G, ctx, self) {\n  //     G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n  //   },\n  //   reinforce_desc: \"从另一个游戏里偷1张牌\",\n  //   onReinforce(G, ctx, self) {\n  //     G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n  //   }\n  // },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n].map(init_card);\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:4,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n].map(init_card);\n\nexport const heijiao_in_dream =  {\n    name:\"黑角\",\n    cost:1,\n    atk:8,\n    hp:8,\n    mine:4,\n    block:2,\n    onPlayBonus: [],\n    desc:\"部署: 获得5000分\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    onPlay(G, ctx) {\n      G.score += 5000;\n    },\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n};\n\nexport const extra_cards = [\n  {\n    name:\"稀音\",\n    cost:0,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    material:3,\n    desc:\"\",\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 3;\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name: \"梅尔\",\n    generator(ctx) {\n      let material = ctx.random.Die(3) - 1;\n      return {\n          name:\"梅尔\",\n          cost:1,\n          atk:3,\n          hp:2,\n          mine:2,\n          block:0,\n          material:3,\n          desc: <span>行动: 消耗1个{material_icons[material]}，造成6点伤害</span>,\n          illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n          reinforce: 1,\n      \n          action(G, ctx) {\n            let requirements = [0,0,0,0];\n            requirements[material] = 1;\n            if (payMaterials(G, ctx, requirements)) {\n                deal_random_damage(G, ctx, 6);\n            }\n          },\n          \n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n  {\n    name: \"麦哲伦\",\n    generate(ctx) {\n      let name = choice(ctx, \"麦迪文 麦当劳 麦当娜 麦克雷 麦旋风 麦克斯韦 张信哲 哥伦布 周杰伦 炎亚纶 拿破仑 达尔文 刘德华\".split(\" \"));\n      let values = choice(ctx, [\n        {\n          atk: 2,\n          hp: 2,\n          mine: 1,\n          block: 2,\n        },\n        {\n          atk: 4,\n          hp: 2,\n          mine: 0,\n          block: 1,\n        },\n        {\n          atk: 0,\n          hp: 2,\n          mine: 2,\n          block: 1,\n        },\n      ]);\n      return {\n          name,\n          ...values,\n          cost:1,\n          material:3,\n          illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n          reinforce: 1,\n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 5);\n          },\n          reinforce_desc: \"造成5点伤害\",\n        };\n    }\n  },\n    \n].map(init_card);\n\nexport const default_filter = x => x;\n\nconst type_filter = (type_,deck) => classes[type_].map(name => deck.find(card => card.name == name)).filter(card => card);\n\nexport const FILTERS = [\n  \n  {\n    illust: \"http://prts.wiki/images/thumb/8/82/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E5%85%88%E9%94%8B_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E5%85%88%E9%94%8B_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"producers\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/d/d1/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%8B%99%E5%87%BB_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%8B%99%E5%87%BB_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"solvers\", deck);\n    }\n  },\n  {\n    illust: \"http://prts.wiki/images/thumb/4/4d/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E6%9C%AF%E5%B8%88_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E6%9C%AF%E5%B8%88_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"miners\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/a/a9/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BF%91%E5%8D%AB_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BF%91%E5%8D%AB_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"standers\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/6/6f/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E9%87%8D%E8%A3%85_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E9%87%8D%E8%A3%85_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"defenders\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/f/f0/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BE%85%E5%8A%A9_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E8%BE%85%E5%8A%A9_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"supporters\", deck);\n    }\n  },\n\n  {\n    illust: \"http://prts.wiki/images/thumb/2/2a/%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%89%B9%E7%A7%8D_%E5%A4%A7%E5%9B%BE.png/120px-%E5%9B%BE%E6%A0%87_%E8%81%8C%E4%B8%9A_%E7%89%B9%E7%A7%8D_%E5%A4%A7%E5%9B%BE.png\",\n    f(deck) {\n      return type_filter(\"scorers\", deck);\n    }\n  },\n\n  {\n    illust: \"https://s3.ax1x.com/2020/12/08/r9iiyq.png\",\n    f(deck) {\n      return type_filter(\"randomizers\", deck);\n    }\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { BOSSES, ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1, solver_core, scorer_core, pick_scorers, pick_vanguards } from './DeckGenerator';\nimport { arr2obj, mod_slice, PRNG } from \"./utils\";\nimport { ICONS, food_icons } from \"./icons\";\nimport { ALTER_ARTS } from \"./alters\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost, from_card) {\n  if (G.costs >= cost) {\n    G.costs -= cost;\n\n    if (from_card) {\n      for (let f of G.onPayCost) {\n        f(G, ctx, cost);\n      }\n    }\n\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n\n    if (G.stage == \"player\") {\n      for (let f of G.onUseCard) {\n        f(G, ctx, card);\n      }\n    }\n\n    return true;\n  }\n\n  else {\n    if (G.stage == \"player\") {\n      logMsg(G, ctx, \"该卡已被横置(已使用过)，无法使用\");\n    }\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    let total_dmg = dmg + (card.vulnerable || 0);\n    card.dmg = (card.dmg || 0) + total_dmg;\n    logMsg(G, ctx, `${card.name} 受到${total_dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function eliminate_field(G, ctx, user) {\n  let card = ctx.random.Shuffle(G.field.filter(x => (!x.exhausted) && (x != user)))[0];\n  if (card) {\n    G.field = G.field.filter(x => x != card);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.hand.length >= G.hand_limit) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n  else {\n    if (G.deck.length > 0) {\n      G.hand.unshift(G.deck.pop());\n    } \n    else {\n      // G.danger += 1;\n      // logMsg(G, ctx, \"无牌可抽，增加1点动乱值\");\n      logMsg(G, ctx, \"无牌可抽\");\n    }\n  }\n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n\n    G.has_discarded = true;\n\n    for (let f of G.onDropCard) {\n      f(G, ctx);\n    }\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = [...G.hand.slice(0,5).filter((x, idx) => !choices[idx]), ...G.hand.slice(5)];\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Psudo-shuffle the deck\n  // let solver = G.deck.find(x => solver_core.includes(x.name)) || G.deck[0];\n  // let scorer = G.deck.find(x => scorer_core.includes(x.name)) || G.deck[1];\n  // G.deck = [...G.deck.filter(x => ![solver, scorer].includes(x)), scorer, solver];\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function play_card(G, ctx, card) {\n  if (G.field.length < G.field_limit) {\n    let inserted = init_card_state(G, ctx, {...card});\n    G.field = [...G.field, inserted];\n    if (inserted.onPlay) {\n      inserted.onPlay(G, ctx, inserted);\n    }\n    for (let bonus of (inserted.onPlayBonus || [])) {\n      if (bonus && (bonus.effect != undefined)) {\n        bonus.effect(G, ctx, inserted);\n      }\n    }\n    return inserted;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    logMsg(G, ctx, `部署 ${card.name}(剩余部署位: ${G.field_limit-G.field.length-1})`);\n    let inserted = play_card(G, ctx, card); // EH: What a strange abstraction, this should be changed\n    if (inserted) {\n      for (let f of G.onPlayCard) {\n        f(G, ctx, inserted, card);\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.unshift(card);\n    }\n  }\n\n  else {\n    logMsg(G, ctx, `费用不足，无法部署`);\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  // console.log(\"Orders:\", [...G.odeck], G.round_num);\n  // console.log(\"Picks:\", [...G.another_deck], G.round_num);\n  G.orders = mod_slice(G.odeck, G.round_num*8, 8);\n  G.orders = sort_orders(G.orders);\n}\n\nfunction sort_orders(orders) {\n  return orders.sort((x,y) => {\n    let price_y = _.sum(y.requirements);\n    let price_x = _.sum(x.requirements);\n    if (price_y != price_x) return price_x - price_y;\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\n// function sort_orders(G) {\n//   G.orders = G.orders.sort((x,y)=>{\n//     if (y.advanced && !x.advanced) return -1;\n//     if (!y.advanced && x.advanced) return 1;\n//     return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n//   });\n// }\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction price_up(order) {\n  // let new_requirements = order.requirements;\n  // if (order.advanced) {\n  //   new_requirements[3] += 1;\n  // }\n  // else {\n  //   new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  // }\n  // return {...order, requirements: new_requirements};\n  if (order.advanced) {\n    order.requirements[3] += 1;\n  }\n  else {\n    order.requirements = order.requirements.map(x => (x==0)?0:x+1);\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    // sort_orders(G);\n\n    if ([4,8].includes(G.finished.length)) {\n      G.orders.map(price_up);\n      G.odeck.map(price_up);\n    }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场(还剩${G.edeck.length}张)`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n      // if (enemy.onPlay && !surge) {\n      //   enemy.onPlay(G, ctx, enemy);\n      // }\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  \n  }\n}\n\nexport function addBoss(G, ctx, boss_name) {\n  let boss = {...BOSSES.find(x => x.name == boss_name)};\n\n  boss.exhausted = false;\n  if (boss.name == \"复仇者\") {\n    boss.dmg = -98;\n  }\n  else {\n    boss.dmg = -19;\n  }\n  G.efield.push(boss);\n}\n\nexport function switchEnemy(G, ctx) {\n  // if (G.not_switch) {\n  //   return false;\n  // }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher && (!switcher.is_elite)) {\n    G.efield.splice(len-2, 1);\n  }\n  else {\n    enemy.atk = Math.max(enemy.atk - 2, 1);\n    enemy.hp = Math.max(enemy.hp - 2, 1);\n  }\n\n  // return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    logMsg(G, ctx, \"请先选定场上干员后，再点击敌人和\\\"战斗\\\"\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n\n    for (let f of G.onCardAct) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      // draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.reinforce_need_cost) {\n    let paid = payCost(G, ctx, 1);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function choice(ctx, alist) {\n  return ctx.random.Shuffle(alist)[0];\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_order(G, ctx) {\n  let orders = G.finished.filter(x => !x.exhausted);\n  if (orders.length > 0) {\n    let order = choice(ctx, orders);\n    order.exhausted = true;\n    return order;\n  }\n  else {\n    return undefined;\n  }\n}\n\nexport function reinforce_field(G, ctx) {\n  let card = choice(ctx, G.field.filter(x => (!(x.exhausted||[\"诗怀雅\"].includes(x.name)))));\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function add_vulnerable(G, ctx, amount) {\n  let enemy = choice(ctx, G.efield);\n  if (enemy) {\n    enemy.vulnerable = (enemy.vulnerable || 0) + amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\", \"霜叶\", \"夜莺\", \"白金\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  let cured = card.dmg;\n  card.dmg = 0;\n\n  return cured;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg = Math.max(card.dmg - amount, 0);\n    // if (card.dmg < 0) {\n      // card.hp -= card.dmg;\n      // card.dmg = 0;\n    // }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  // sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk < 0) { \n      enemy.atk = 0;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n  let rng = new PRNG(deck_data);\n  let alter_art = (rng.random() <= 0.33);\n  if (alter_art) {\n    console.log(\"Got some alter!\");\n  }\n  else {\n    console.log(\"No alter here.\");\n  }\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        for (let j=0; j<amount; j++) {\n            let new_card = {\n              ...target_card,\n              material: i % 3,\n            };\n\n            if (alter_art) {\n              let altered = ALTER_ARTS[new_card.name];\n              if (altered) {\n                new_card.old_illust = new_card.illust;\n                new_card.illust = altered;\n                new_card.was_enemy = true;\n                new_card.name += \"(异画)\";\n              }\n            }\n\n            deck.push(new_card);\n        }\n      }\n    }\n  }\n\n  // Limit alter art\n  if (alter_art) {\n    for (let card of deck) {\n      if (card.old_illust && rng.random() <= 0.33) {\n        card.illust = card.old_illust;\n        card.was_enemy = false;\n        card.name = card.name.slice(0, card.name.length-4);\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  G.another_deck = ctx.random.Shuffle(G.deck);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = [...rng.shuffle(odeck), ...rng.shuffle(odeck)];\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(30)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onUseCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n\n  G.onPayCost = [];\n  G.onDropCard = [];\n\n  G.onUseOrder = [];\n\n  G.onEnemyOut = [];\n}\n\nfunction setup_turn_states(G, ctx) {\n  G.has_discarded = false;\n}\n\nfunction setupRoguelikeBattle(G, ctx, relics) {\n  G.relics = relics.map(x => ({...x}));\n\n  for (let r of G.relics) {\n    r.onBattleBegin && r.onBattleBegin(G, ctx, r);\n  }\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    // G.finished = [default_order];\n    G.finished = [];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 15;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n    G.hand_limit = 8;\n\n    G.relics = [];\n    G.extra_gain = 0;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  // G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  G.picks = mod_slice(G.another_deck, G.round_num*5, 5);\n\n  // Add special card every turn to ensure there is a required card in that stage\n  // if (G.round_num >= 3) {\n  let special_card_name = choice(ctx, (G.round_num >= 3)? pick_scorers : pick_vanguards);\n  let special_card = G.CARDS.find(x => x.name == special_card_name);\n  if (special_card) {\n    G.picks[2] = {...special_card, material: ctx.random.Die(3)-1};\n  }\n  // }\n\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = [1,1,1,2,2][idx] || 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nexport function summon(G, ctx, card, self) {\n  let idx = G.field.indexOf(self) + 1;\n  if (card) {\n    let new_card = init_card_state(G, ctx, {...card});\n    G.field.splice(idx, 0, new_card);\n    new_card.exhausted = false;\n  }\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\n\nexport function get_desc(card) {\n  return  <span>\n    <span style={{fontSize:\"120%\"}}>\n      {card.atk}/{card.hp} &nbsp;\n      {ICONS.mine}{card.mine} &nbsp;\n      {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n    </span>\n    <br/>\n    {card.desc||\"\"}\n    <br/>\n    <span style={{\n      display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n    }}>\n      <i>\n      部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      </i>\n      <br/>\n    </span>\n    ({_.times(card.reinforce, ()=>material_icons[card.material || 0])}: {card.reinforce_desc||\"\"})\n    <br />\n    <i>{card.quote||\"\"}</i>\n  </span>;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n    setupRoguelikeBattle,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n        sort_finished(G, ctx);\n\n        setup_events(G, ctx);\n        setup_turn_states(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield, ...G.relics]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n        \n        if (G.enemy_hp_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 2;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      // if (G.deck.length == 0) {\n      //   return {\n      //     win: false,\n      //     reason: \"牌库被抽光\",\n      //   };\n      // }\n      if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: 114514,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card, clearField, draw, gainMaterials, init_card_state\n } from \"./Game\";\n\nexport const ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"敌方能天使\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A5%9E%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"雪怪小队\",\n    atk: 3,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/0b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%9B%AA%E6%80%AA%E5%B0%8F%E9%98%9F.png\",\n    desc: \"摧毁: 摸2张牌\",\n    onOut(G, ctx) {\n      draw(G, ctx);\n      draw(G, ctx);\n    }\n  },\n  {\n    name: \"法术大师A2\",\n    atk: 4,\n    hp: 5,\n    illust: \"http://prts.wiki/images/2/2e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E5%A4%A7%E5%B8%88A2.png\",\n    desc: \"摧毁: 获得2个材料\",\n    onOut(G, ctx) {\n      gainMaterials(G, ctx, 2);\n    }\n  },\n\n  {\n    name: \"敌方风笛\",\n    atk: 5,\n    hp: 6,\n    illust: \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E7%A9%BF%E5%88%BA%E6%89%8B%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 打出牌库顶的1张牌\",\n    onOut(G, ctx) {\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      if (new_card != undefined) {\n        G.field.push(init_card_state(G, ctx, {...new_card}));\n      }\n    }\n  },\n\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 1,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n\n  {\n    name: \"乌萨斯刁民\",\n    atk: -3,\n    hp: 10,\n    illust: \"http://prts.wiki/images/3/35/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E4%B9%8C%E8%90%A8%E6%96%AF%E5%B9%B3%E6%B0%91.png\",\n    desc: \"摧毁: 获得2点费用\",\n    onOut(G, ctx) {\n      G.costs += 2;\n    }\n  },\n  {\n    name: \"冰爆源石虫\",\n    atk: -2,\n    hp: 1,\n    illust: \"http://prts.wiki/images/2/26/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%86%B0%E7%88%86%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 失去2点费用\",\n    onOut(G, ctx) {\n      G.costs -= 2;\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 3,\n    hp: 3,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  // {\n  //   name: \"复仇者\",\n  //   atk: 3,\n  //   hp: 6,\n  //   illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n  //   desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n  //   is_elite: true,\n  //   enraged: true,\n  //   onFight(G, ctx, self, card) {\n  //     if (card.dmg > card.hp) {\n  //       G.danger += 1;\n  //     }\n  //   },\n  // },\n  \n  // {\n  //   name: \"碎岩者\",\n  //   illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n  //   atk: -3,\n  //   hp: 8,\n  //   // onTurnBegin(G, ctx, self) {\n  //   //   if (self.atk <= 0) {\n  //   //     self.atk = 1;\n  //   //   }\n  //   // }\n  // },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  // {\n  //   name: \"酸液源石虫\",\n  //   illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n  //   atk: -1,\n  //   hp: 4,\n  //   desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n  //   is_elite: true,\n  //   onOut(G, ctx, self) {\n  //     for (let card of G.field) {\n  //       card.dmg += 1;\n  //     }\n  //   },\n  // },\n\n  {\n    name: \"拳手\",\n    atk: 5,\n    hp: 5,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 2,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  // {\n  //   name: \"狂暴宿主组长\",\n  //   atk: -2,\n  //   hp: 6,\n  //   is_elite: true,\n  //   illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n  //   desc: \"替换，摧毁: 胜利所需分数+4\",\n  //   onOut(G, ctx, self) {\n  //     G.goal += 4;\n  //   },\n  //   // onTurnBegin(G, ctx, self) {\n  //   //   if (self.atk <= 0) {\n  //   //     self.atk = 1;\n  //   //   }\n  //   // }\n  // },\n\n\n];\n\nexport const BOSSES = [\n  {\n    name: \"大泡普\",\n    atk: 4,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    enraged: true,\n    illust: \"https://dadiaogames.gitee.io/images/imagebed/bigbob.png\",\n    desc: <span>愤怒，超杀: 失去1点费用<br/>摧毁: 获得15分</span>,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.costs -= 1;\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 15;\n    }\n  },\n\n  {\n    name: \"锈锤战士\",\n    atk: 5,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%94%88%E9%94%A4%E6%88%98%E5%A3%AB.png\",\n    desc: <span>行动: 对最后部署的干员造成5点伤害<br/>摧毁: 获得15分</span>,\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n        if (card.dmg > card.hp) {\n          G.field = G.field.filter(x => x != card)\n        }\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 15;\n    }\n  },\n  {\n    name: \"复仇者\",\n    atk: 99,\n    hp: 1,\n    is_boss: true,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: <span>超杀: 增加1点动乱值<br/>摧毁: 获得80分</span>,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n    onOut(G, ctx) {\n      G.score += 80;\n    }\n  },\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks, summon } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+2/+4\",\n    desc: \"+2/+4\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 2;\n      card.hp += 4;\n    }\n  },\n\n  {\n    name: \"-1费\",\n    desc: \"部署费用-1\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 1;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"4分\",\n    desc: \"部署奖励:\\\"获得4分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 4;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"3材料\",\n    desc: \"部署奖励:\\\"获得3个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 3);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"3张牌\",\n  //   desc: \"部署奖励:\\\"摸3张牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         draw(G, ctx);\n  //         draw(G, ctx);\n  //         draw(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"6伤害\",\n    desc: \"部署奖励:\\\"造成6点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 6);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"手牌强化2\",\n  //   desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         reinforce_hand(G, ctx);\n  //         reinforce_hand(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"获得1张2费干员牌并使其费用变为0\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            // new_card = init_card_state(G, ctx, {...new_card});\n            // new_card.hp = 1;\n            // G.field.push(new_card);\n            G.hand.push({...new_card, cost: 0});\n          }\n        }\n    });\n  }\n},\n\n// {\n//   name: \"迷迭香之力\",\n//   desc: \"部署奖励:\\\"召唤1个随机干员的2/2复制\\\"\",\n//   effect(card) {\n//     card.onPlayBonus.push(\n//       {\n//         name: this.name,\n//         effect (G, ctx, self) {\n//         let card = ctx.random.Shuffle(G.CARDS)[0];\n//         card = {...card};\n//         card.atk = 2;\n//         card.hp = 2;\n//         card.mine = 1;\n//         card.cost = 2;\n//         summon(G, ctx, card, self);\n//     }});\n//   }\n// },\n\n// {\n//     name: \"凯尔希之力\",\n//     desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n//     effect(card) {\n//       // Maybe reconstruct this to call the skill of Ansel is better?\n//       card.onPlayBonus.push({\n//         name: this.name,\n//         effect(G, ctx, card) {\n//           if (card) {\n//             let new_card = G.CARDS.find(x => x.name == card.name);\n//             new_card = init_card_state(G, ctx, {...new_card});\n//             new_card.atk = 1;\n//             new_card.hp = 1;\n//             new_card.mine = 1;\n//             new_card.cost = 1;\n//             new_card.power = 0;\n//             G.field.push(new_card);\n//           }\n//         }\n//     });\n//   }\n// },\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌，并使其费用-1\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let name = card.name;\n        if (name.includes(\"异画\")) {\n          name = name.slice(0, name.length-4);\n        }\n        let new_card = G.CARDS.find(x => x.name == name);\n        if (new_card) {\n          G.hand.unshift({...new_card, cost: new_card.cost-1});\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"订单1\",\n  //   desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n  //       }\n  //     });\n  //   }\n  // },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制(最多500个)\",\n    effect(card) {\n      if (card.onPlayBonus && (card.onPlayBonus.length <= 500)) {\n        card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n      }\n    }\n  },\n  \n];","export const ALTER_ARTS = {\n  安洁莉娜: \"https://s3.ax1x.com/2020/11/28/D61oIH.png\",\n  阿米娅: \"https://s3.ax1x.com/2020/11/28/D61jL8.png\",\n  森蚺: \"https://s3.ax1x.com/2020/11/28/D615ZD.jpg\",\n  陨星: \"https://s3.ax1x.com/2020/11/28/D61Ide.jpg\",\n  // 安赛尔: \"https://s3.ax1x.com/2020/11/28/D61hqO.jpg\",\n  // 史尔特尔: \"https://s3.ax1x.com/2020/11/28/D617id.jpg\",\n  // 凛冬: \"https://s3.ax1x.com/2020/11/28/D61HJA.jpg\",\n  孑: \"https://s3.ax1x.com/2020/11/30/DWto8K.jpg\",\n  玫兰莎: \"https://s3.ax1x.com/2020/11/28/D61OQP.jpg\",\n  陈: \"https://s3.ax1x.com/2020/11/28/D61Xsf.jpg\",\n  安比尔: \"https://s3.ax1x.com/2020/11/28/D61qzt.jpg\",\n  波登可: \"https://s3.ax1x.com/2020/11/30/DWtbKe.png\",\n};","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 0.5,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2.5)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 200},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -25, -25, {duration:105}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n    // if (props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\" style={{border:(props.selected)?\"4px solid #096dd9\":\"4px solid grey\"}} onClick={props.handleClick}>\n    <img className=\"type-filter-img\" src={props.illust} />\n  </div>\n);\n\nexport const TypeFilterContainer = (props) => (\n  <div className=\"type-filter-container\">\n    {props.filters.map(filter_ => <TypeFilter {...filter_} />)}\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS, smaller_icons } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>{smaller_icons[parseInt(action[2])]}强化</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    display: (completed == undefined)? \"none\" : \"\",\n\n    height: '9.8%',\n    width: '100%',\n    backgroundColor: \"#bfbfbf\",\n    borderRadius: '50px',\n\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${Math.min(completed*100, 100)}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right',\n    transition: 'width 0.25s ease-in-out',\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}></span>\n      </div>\n    </div>\n  );\n};\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n    <ProgressBar bgcolor=\"#1890ff\" completed={props.completed} />\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\n\nfunction Tag(props) {\n  // let bg_color = \"#c5c5c5\";\n  let bg_color = \"#434343\";\n  if (props.selected) {\n    bg_color = \"#0098dc\";\n  }\n  if (props.locked) {\n    bg_color = \"#096dd9\";\n  }\n\n  return <div className=\"tag\" style={{backgroundColor: bg_color}} onClick={props.handleClick} >\n    <img className=\"tag-img\" src={props.src} >\n    </img>\n  </div>\n}\n\nexport const TagSelection = (props) => {\n  // let tbody = [];\n\n  // for (let i=0; i<props.tags.length; i+=3) {\n  //   let row = [];\n  //   let row_tags = props.tags.slice(i, i+3);\n  //   for (let tag of row_tags) {\n  //     let borderColor = \"black\";\n  //     if (tag.selected) {\n  //       borderColor = \"red\";\n  //     }\n  //     if (tag.locked) {\n  //       borderColor = \"#1E90FF\";\n  //     }\n  //     row.push(\n  //       <td \n  //         onClick={props.handleClick(props.tags.indexOf(tag))}\n  //       >\n  //         <div className=\"tag\">\n  //         <img \n  //           className=\"tag-img\" \n  //           src={tag.src}\n  //           style={{\n  //           borderColor: borderColor,\n  //         }} \n  //         ></img>\n  //         </div>\n  //       </td>\n  //     );\n  //   }\n  //   tbody.push(<tr>{row}</tr>);\n  // }\n\n  return (\n    <div className=\"tag-selection\" >\n      {/* <table>\n        <tbody>{tbody}</tbody>\n      </table> */}\n      {props.tags.map((tag, idx) => <Tag {...tag} handleClick={props.handleClick(idx)} />)}\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (\n          <li \n            className=\"tag-desc\"\n            style={{\n              color: (props.just_selected == tag)? \"#096dd9\" : \"black\",\n            }}\n          >\n            {tag.desc}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        {/* <br/> */}\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-util-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-util-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少20张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-util-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-util-button\"\n        >\n          换个卡组\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-util-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n    </form>\n      <br/>\n      <button onClick={props.handleToggle} className=\"lock-seed-button\">\n        {props.locked? \"解除锁定\":\"锁定种子\"}\n      </button>\n      <br/>\n      <div style={{color: \"#096dd9\", display: (props.locked)?undefined:\"none\"}}>种子已锁定</div>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\nimport { get_desc } from './Game';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  // let desc = [card.desc];\n\n  // if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n  //   desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  // }\n\n  // return desc;\n\n  return (card.mine != undefined)? get_desc(card) : \"\";\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"upgrade-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick} additionalStyle={{marginTop: \"1%\"}}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { addBoss, enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+3\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 3;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/c/c6/Global_forbidloc_1.png\",\n    desc: \"可同时部署的干员数-1\",\n    level: 1,\n    challenge: true,\n    unstackable: true,\n    extra_challenge: true,\n    effect(G, ctx){\n      G.field_limit -= 1;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少40%的牌\",\n    level: 2,\n    standard_level: 3,\n    unstackable: true,\n    extra_challenge: true,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(0,14);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  \n{\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    // stackable: true,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n{\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n// {\n//     src: \"http://prts.wiki/images/c/c7/Global_costrecovery_1.png\",\n//     desc: \"强化干员需要消耗1点费用\",\n//     level: 2,\n//     challenge: true,\n//     // standard_level: 4,\n//     effect(G, ctx) {\n//       // for (let card of G.deck) {\n//       //   card.reinforce += 1;\n//       // }\n//       G.reinforce_need_cost = true;\n//     }\n//   },\n  \n{\n  src: \"http://prts.wiki/images/c/cd/Global_tokencnt_2.png\",\n  desc: \"强化干员需要的材料数+1\",\n  level: 2,\n  effect(G, ctx) {\n    for (let card of G.deck) {\n      card.reinforce += 1;\n    }\n  }\n},\n\n  // {\n  //   src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n  //   desc: \"回合开始时，所有敌人获得+2生命值\",\n  //   level: 2,\n  //   standard_level: 4,\n  //   effect(G, ctx){\n  //     G.enemy_hp_grow = true;\n  //   }\n  // },\n\n  \n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  \n\n\n  \n\n  {\n    src: \"http://prts.wiki/images/c/c5/Global_skillrecovery_1.png\",\n    desc: \"所有干员采掘力-1\",\n    level: 2,\n    challenge: true,\n    unstackable: true,\n    advance: true,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        card.mine -= 1;\n        card.mine = Math.max(0, card.mine);\n      }\n    }\n  },\n\n  \n\n\n  \n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"可同时部署的干员数-3\",\n  //   level: 3,\n  //   challenge: true,\n  //   unstackable: true,\n  //   extra_challenge: true,\n  //   standard_level: 5,\n  //   effect(G, ctx){\n  //     G.field_limit -= 3;\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    unstackable: true,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/e/ee/Char_atkatkspeed_1.png\",\n  //   desc: \"所有干员攻击力-2\",\n  //   level: 3,\n  //   challenge: true,\n  //   unstackable: true,\n  //   effect(G, ctx) {\n  //     // G.goal += 28; // Because first turn gonna -4 too\n  //     // G.reduce_goal = true;\n  //     for (let card of G.deck) {\n  //       card.atk -= 2;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    challenge: true,\n    stackable: true,\n    advance: true,\n    standard_level: 4,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/6/6c/Enemy_attackradius_1.png\",\n    desc: \"胜利所需分数+12\",\n    level: 3,\n    standard_level: 4,\n    stackable: true,\n    effect(G, ctx){\n      G.goal += 12;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 4,\n    challenge: true,\n    unstackable: true,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/b/bd/Enemy_ghost_1.png\",\n    desc: \"增加Boss\\\"大泡普\\\"，胜利所需分数+10\",\n    level: 4,\n    challenge: true,\n    stackable: true,\n    effect(G, ctx){\n      addBoss(G, ctx, \"大泡普\");\n      G.goal += 10;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/f/f9/Enemy_faust_trapmod_3.png\",\n    desc: \"增加Boss\\\"锈锤战士\\\"，胜利所需分数+10\",\n    level: 4,\n    challenge: true,\n    stackable: true,\n    effect(G, ctx){\n      addBoss(G, ctx, \"锈锤战士\");\n      G.goal += 10;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/f/f9/Enemy_diaman_2.png\",\n    desc: \"胜利所需分数+20\",\n    level: 5,\n    challenge: true,\n    // stackable: true,\n    // standard_level: 5,\n    effect(G, ctx) {\n      G.goal += 20;\n    }\n  },\n{\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    unstackable: true,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以疲劳状态入场\",\n    level: 10,\n    unstackable: true,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n  \n];\n\nexport const final_tag = {\n  src: \"http://prts.wiki/images/0/04/Enemy_icebrk_1.png\",\n  desc: \"增加Boss\\\"复仇者\\\"，胜利所需分数+100\",\n  level: 100,\n  effect(G, ctx){\n    addBoss(G, ctx, \"复仇者\");\n    G.goal += 100;\n  }\n};\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","export const result_images = [\n  [\"https://dadiaogames.gitee.io/images/imagebed/roguelike_ascension.jpg\", 75358644],\n  // [\"https://s3.ax1x.com/2020/12/01/DWcVIO.jpg\", 75358644],\n  // [\"https://s3.ax1x.com/2020/12/01/DWceiD.jpg\", 75576391],\n];\n\n// export const lose_image = \"https://s3.ax1x.com/2020/12/01/DWcmJe.png\";\nexport const lose_image = \"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\";\n\nexport const relic_images = [\n  'http://prts.wiki/images/c/cf/%E6%94%B6%E8%97%8F%E5%93%81_1.png',\n  'http://prts.wiki/images/7/72/%E6%94%B6%E8%97%8F%E5%93%81_2.png',\n  'http://prts.wiki/images/9/99/%E6%94%B6%E8%97%8F%E5%93%81_3.png',\n  'http://prts.wiki/images/f/ff/%E6%94%B6%E8%97%8F%E5%93%81_4.png',\n  'http://prts.wiki/images/6/63/%E6%94%B6%E8%97%8F%E5%93%81_5.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_6.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_7.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_8.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_9.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_10.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_11.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_12.png',\n  'http://prts.wiki/images/2/2b/%E6%94%B6%E8%97%8F%E5%93%81_13.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_14.png',\n  'http://prts.wiki/images/5/5e/%E6%94%B6%E8%97%8F%E5%93%81_15.png',\n  'http://prts.wiki/images/e/ef/%E6%94%B6%E8%97%8F%E5%93%81_16.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_17.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_18.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_19.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_20.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_21.png',\n  'http://prts.wiki/images/a/aa/%E6%94%B6%E8%97%8F%E5%93%81_22.png',\n  'http://prts.wiki/images/0/05/%E6%94%B6%E8%97%8F%E5%93%81_23.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_24.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_25.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_26.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_27.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_28.png',\n  'http://prts.wiki/images/9/91/%E6%94%B6%E8%97%8F%E5%93%81_29.png',\n  'http://prts.wiki/images/0/0c/%E6%94%B6%E8%97%8F%E5%93%81_30.png',\n  'http://prts.wiki/images/7/70/%E6%94%B6%E8%97%8F%E5%93%81_31.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_32.png',\n  'http://prts.wiki/images/e/ec/%E6%94%B6%E8%97%8F%E5%93%81_33.png',\n  'http://prts.wiki/images/7/75/%E6%94%B6%E8%97%8F%E5%93%81_34.png',\n  'http://prts.wiki/images/9/9e/%E6%94%B6%E8%97%8F%E5%93%81_35.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_36.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_37.png',\n  'http://prts.wiki/images/a/ad/%E6%94%B6%E8%97%8F%E5%93%81_38.png',\n  'http://prts.wiki/images/3/3f/%E6%94%B6%E8%97%8F%E5%93%81_39.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_40.png',\n  'http://prts.wiki/images/f/fc/%E6%94%B6%E8%97%8F%E5%93%81_41.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_42.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_43.png',\n  'http://prts.wiki/images/f/fd/%E6%94%B6%E8%97%8F%E5%93%81_44.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_45.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_46.png',\n  'http://prts.wiki/images/4/4d/%E6%94%B6%E8%97%8F%E5%93%81_47.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_48.png',\n  'http://prts.wiki/images/f/f0/%E6%94%B6%E8%97%8F%E5%93%81_49.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_50.png',\n  'http://prts.wiki/images/5/5a/%E6%94%B6%E8%97%8F%E5%93%81_51.png',\n  'http://prts.wiki/images/0/0f/%E6%94%B6%E8%97%8F%E5%93%81_52.png',\n  'http://prts.wiki/images/f/fa/%E6%94%B6%E8%97%8F%E5%93%81_53.png',\n  'http://prts.wiki/images/7/74/%E6%94%B6%E8%97%8F%E5%93%81_54.png',\n  'http://prts.wiki/images/6/67/%E6%94%B6%E8%97%8F%E5%93%81_55.png',\n  'http://prts.wiki/images/d/de/%E6%94%B6%E8%97%8F%E5%93%81_56.png',\n  'http://prts.wiki/images/7/76/%E6%94%B6%E8%97%8F%E5%93%81_57.png',\n  'http://prts.wiki/images/0/03/%E6%94%B6%E8%97%8F%E5%93%81_58.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_59.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_60.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_61.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_62.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_63.png',\n  'http://prts.wiki/images/a/a4/%E6%94%B6%E8%97%8F%E5%93%81_64.png',\n  'http://prts.wiki/images/4/46/%E6%94%B6%E8%97%8F%E5%93%81_65.png',\n  'http://prts.wiki/images/2/27/%E6%94%B6%E8%97%8F%E5%93%81_66.png',\n  'http://prts.wiki/images/b/b5/%E6%94%B6%E8%97%8F%E5%93%81_67.png',\n  'http://prts.wiki/images/f/f7/%E6%94%B6%E8%97%8F%E5%93%81_68.png',\n  'http://prts.wiki/images/2/2f/%E6%94%B6%E8%97%8F%E5%93%81_69.png',\n  'http://prts.wiki/images/7/7b/%E6%94%B6%E8%97%8F%E5%93%81_70.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_71.png',\n  'http://prts.wiki/images/6/6b/%E6%94%B6%E8%97%8F%E5%93%81_72.png',\n  'http://prts.wiki/images/c/c1/%E6%94%B6%E8%97%8F%E5%93%81_73.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_74.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_75.png',\n  'http://prts.wiki/images/6/6f/%E6%94%B6%E8%97%8F%E5%93%81_76.png',\n  'http://prts.wiki/images/a/a1/%E6%94%B6%E8%97%8F%E5%93%81_77.png',\n  'http://prts.wiki/images/2/28/%E6%94%B6%E8%97%8F%E5%93%81_78.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_79.png',\n  'http://prts.wiki/images/c/c7/%E6%94%B6%E8%97%8F%E5%93%81_80.png',\n  'http://prts.wiki/images/9/9c/%E6%94%B6%E8%97%8F%E5%93%81_81.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_82.png',\n  'http://prts.wiki/images/3/38/%E6%94%B6%E8%97%8F%E5%93%81_83.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_84.png',\n  'http://prts.wiki/images/d/d5/%E6%94%B6%E8%97%8F%E5%93%81_85.png',\n  'http://prts.wiki/images/0/06/%E6%94%B6%E8%97%8F%E5%93%81_86.png',\n  'http://prts.wiki/images/5/50/%E6%94%B6%E8%97%8F%E5%93%81_87.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_88.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_89.png',\n  'http://prts.wiki/images/a/a3/%E6%94%B6%E8%97%8F%E5%93%81_90.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_91.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_92.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_93.png',\n  'http://prts.wiki/images/2/29/%E6%94%B6%E8%97%8F%E5%93%81_94.png',\n  'http://prts.wiki/images/a/a8/%E6%94%B6%E8%97%8F%E5%93%81_95.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_96.png',\n  'http://prts.wiki/images/0/0a/%E6%94%B6%E8%97%8F%E5%93%81_97.png',\n  'http://prts.wiki/images/f/f8/%E6%94%B6%E8%97%8F%E5%93%81_98.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_99.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_100.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_101.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_102.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_103.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_104.png',\n  'http://prts.wiki/images/2/23/%E6%94%B6%E8%97%8F%E5%93%81_105.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_106.png',\n  'http://prts.wiki/images/4/4a/%E6%94%B6%E8%97%8F%E5%93%81_107.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_108.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_109.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_110.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_111.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_112.png',\n  'http://prts.wiki/images/9/90/%E6%94%B6%E8%97%8F%E5%93%81_113.png',\n  'http://prts.wiki/images/c/ca/%E6%94%B6%E8%97%8F%E5%93%81_114.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_115.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_116.png',\n  'http://prts.wiki/images/5/58/%E6%94%B6%E8%97%8F%E5%93%81_117.png',\n  'http://prts.wiki/images/9/95/%E6%94%B6%E8%97%8F%E5%93%81_118.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_119.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_120.png',\n  'http://prts.wiki/images/b/bf/%E6%94%B6%E8%97%8F%E5%93%81_121.png',\n  'http://prts.wiki/images/c/cb/%E6%94%B6%E8%97%8F%E5%93%81_122.png',\n  'http://prts.wiki/images/a/a5/%E6%94%B6%E8%97%8F%E5%93%81_123.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_124.png',\n  'http://prts.wiki/images/f/f2/%E6%94%B6%E8%97%8F%E5%93%81_125.png',\n  'http://prts.wiki/images/1/15/%E6%94%B6%E8%97%8F%E5%93%81_126.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_127.png',\n  'http://prts.wiki/images/d/d6/%E6%94%B6%E8%97%8F%E5%93%81_128.png',\n  'http://prts.wiki/images/d/d4/%E6%94%B6%E8%97%8F%E5%93%81_129.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_130.png',\n  'http://prts.wiki/images/3/36/%E6%94%B6%E8%97%8F%E5%93%81_131.png',\n  'http://prts.wiki/images/9/9b/%E6%94%B6%E8%97%8F%E5%93%81_132.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_133.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_134.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_135.png',\n  'http://prts.wiki/images/4/48/%E6%94%B6%E8%97%8F%E5%93%81_136.png',\n  'http://prts.wiki/images/d/d1/%E6%94%B6%E8%97%8F%E5%93%81_137.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_138.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_139.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_140.png',\n  'http://prts.wiki/images/c/c6/%E6%94%B6%E8%97%8F%E5%93%81_141.png',\n  'http://prts.wiki/images/a/a7/%E6%94%B6%E8%97%8F%E5%93%81_142.png',\n  'http://prts.wiki/images/7/7c/%E6%94%B6%E8%97%8F%E5%93%81_143.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_144.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_145.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_146.png',\n  'http://prts.wiki/images/7/77/%E6%94%B6%E8%97%8F%E5%93%81_147.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_148.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_149.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_150.png',\n  'http://prts.wiki/images/5/56/%E6%94%B6%E8%97%8F%E5%93%81_151.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_152.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_153.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_154.png',\n  'http://prts.wiki/images/8/89/%E6%94%B6%E8%97%8F%E5%93%81_155.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_156.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_157.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_158.png',\n  'http://prts.wiki/images/5/51/%E6%94%B6%E8%97%8F%E5%93%81_159.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_160.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_161.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_162.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_163.png',\n  'http://prts.wiki/images/a/a9/%E6%94%B6%E8%97%8F%E5%93%81_164.png',\n  'http://prts.wiki/images/8/87/%E6%94%B6%E8%97%8F%E5%93%81_165.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_166.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_167.png',\n  'http://prts.wiki/images/1/14/%E6%94%B6%E8%97%8F%E5%93%81_168.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_169.png',\n  'http://prts.wiki/images/5/54/%E6%94%B6%E8%97%8F%E5%93%81_170.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_171.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_172.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_173.png',\n  'http://prts.wiki/images/7/79/%E6%94%B6%E8%97%8F%E5%93%81_174.png',\n  'http://prts.wiki/images/1/1f/%E6%94%B6%E8%97%8F%E5%93%81_175.png',\n  'http://prts.wiki/images/8/81/%E6%94%B6%E8%97%8F%E5%93%81_176.png',\n  'http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png',\n  'http://prts.wiki/images/b/b6/%E6%94%B6%E8%97%8F%E5%93%81_178.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_179.png',\n  'http://prts.wiki/images/e/e5/%E6%94%B6%E8%97%8F%E5%93%81_180.png',\n  'http://prts.wiki/images/2/22/%E6%94%B6%E8%97%8F%E5%93%81_181.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_182.png',\n  'http://prts.wiki/images/c/cf/%E6%94%B6%E8%97%8F%E5%93%81_1.png',\n  'http://prts.wiki/images/7/72/%E6%94%B6%E8%97%8F%E5%93%81_2.png',\n  'http://prts.wiki/images/9/99/%E6%94%B6%E8%97%8F%E5%93%81_3.png',\n  'http://prts.wiki/images/f/ff/%E6%94%B6%E8%97%8F%E5%93%81_4.png',\n  'http://prts.wiki/images/6/63/%E6%94%B6%E8%97%8F%E5%93%81_5.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_6.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_7.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_8.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_9.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_10.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_11.png',\n  'http://prts.wiki/images/8/84/%E6%94%B6%E8%97%8F%E5%93%81_12.png',\n  'http://prts.wiki/images/2/2b/%E6%94%B6%E8%97%8F%E5%93%81_13.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_14.png',\n  'http://prts.wiki/images/5/5e/%E6%94%B6%E8%97%8F%E5%93%81_15.png',\n  'http://prts.wiki/images/e/ef/%E6%94%B6%E8%97%8F%E5%93%81_16.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_17.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_18.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_19.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_20.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_21.png',\n  'http://prts.wiki/images/a/aa/%E6%94%B6%E8%97%8F%E5%93%81_22.png',\n  'http://prts.wiki/images/0/05/%E6%94%B6%E8%97%8F%E5%93%81_23.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_24.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_25.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_26.png',\n  'http://prts.wiki/images/a/ac/%E6%94%B6%E8%97%8F%E5%93%81_27.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_28.png',\n  'http://prts.wiki/images/9/91/%E6%94%B6%E8%97%8F%E5%93%81_29.png',\n  'http://prts.wiki/images/0/0c/%E6%94%B6%E8%97%8F%E5%93%81_30.png',\n  'http://prts.wiki/images/7/70/%E6%94%B6%E8%97%8F%E5%93%81_31.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_32.png',\n  'http://prts.wiki/images/e/ec/%E6%94%B6%E8%97%8F%E5%93%81_33.png',\n  'http://prts.wiki/images/7/75/%E6%94%B6%E8%97%8F%E5%93%81_34.png',\n  'http://prts.wiki/images/9/9e/%E6%94%B6%E8%97%8F%E5%93%81_35.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_36.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_37.png',\n  'http://prts.wiki/images/a/ad/%E6%94%B6%E8%97%8F%E5%93%81_38.png',\n  'http://prts.wiki/images/3/3f/%E6%94%B6%E8%97%8F%E5%93%81_39.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_40.png',\n  'http://prts.wiki/images/f/fc/%E6%94%B6%E8%97%8F%E5%93%81_41.png',\n  'http://prts.wiki/images/9/92/%E6%94%B6%E8%97%8F%E5%93%81_42.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_43.png',\n  'http://prts.wiki/images/f/fd/%E6%94%B6%E8%97%8F%E5%93%81_44.png',\n  'http://prts.wiki/images/e/e1/%E6%94%B6%E8%97%8F%E5%93%81_45.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_46.png',\n  'http://prts.wiki/images/4/4d/%E6%94%B6%E8%97%8F%E5%93%81_47.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_48.png',\n  'http://prts.wiki/images/f/f0/%E6%94%B6%E8%97%8F%E5%93%81_49.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_50.png',\n  'http://prts.wiki/images/5/5a/%E6%94%B6%E8%97%8F%E5%93%81_51.png',\n  'http://prts.wiki/images/0/0f/%E6%94%B6%E8%97%8F%E5%93%81_52.png',\n  'http://prts.wiki/images/f/fa/%E6%94%B6%E8%97%8F%E5%93%81_53.png',\n  'http://prts.wiki/images/7/74/%E6%94%B6%E8%97%8F%E5%93%81_54.png',\n  'http://prts.wiki/images/6/67/%E6%94%B6%E8%97%8F%E5%93%81_55.png',\n  'http://prts.wiki/images/d/de/%E6%94%B6%E8%97%8F%E5%93%81_56.png',\n  'http://prts.wiki/images/7/76/%E6%94%B6%E8%97%8F%E5%93%81_57.png',\n  'http://prts.wiki/images/0/03/%E6%94%B6%E8%97%8F%E5%93%81_58.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_59.png',\n  'http://prts.wiki/images/d/db/%E6%94%B6%E8%97%8F%E5%93%81_60.png',\n  'http://prts.wiki/images/7/71/%E6%94%B6%E8%97%8F%E5%93%81_61.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_62.png',\n  'http://prts.wiki/images/f/fb/%E6%94%B6%E8%97%8F%E5%93%81_63.png',\n  'http://prts.wiki/images/a/a4/%E6%94%B6%E8%97%8F%E5%93%81_64.png',\n  'http://prts.wiki/images/4/46/%E6%94%B6%E8%97%8F%E5%93%81_65.png',\n  'http://prts.wiki/images/2/27/%E6%94%B6%E8%97%8F%E5%93%81_66.png',\n  'http://prts.wiki/images/b/b5/%E6%94%B6%E8%97%8F%E5%93%81_67.png',\n  'http://prts.wiki/images/f/f7/%E6%94%B6%E8%97%8F%E5%93%81_68.png',\n  'http://prts.wiki/images/2/2f/%E6%94%B6%E8%97%8F%E5%93%81_69.png',\n  'http://prts.wiki/images/7/7b/%E6%94%B6%E8%97%8F%E5%93%81_70.png',\n  'http://prts.wiki/images/4/4e/%E6%94%B6%E8%97%8F%E5%93%81_71.png',\n  'http://prts.wiki/images/6/6b/%E6%94%B6%E8%97%8F%E5%93%81_72.png',\n  'http://prts.wiki/images/c/c1/%E6%94%B6%E8%97%8F%E5%93%81_73.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_74.png',\n  'http://prts.wiki/images/2/24/%E6%94%B6%E8%97%8F%E5%93%81_75.png',\n  'http://prts.wiki/images/6/6f/%E6%94%B6%E8%97%8F%E5%93%81_76.png',\n  'http://prts.wiki/images/a/a1/%E6%94%B6%E8%97%8F%E5%93%81_77.png',\n  'http://prts.wiki/images/2/28/%E6%94%B6%E8%97%8F%E5%93%81_78.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_79.png',\n  'http://prts.wiki/images/c/c7/%E6%94%B6%E8%97%8F%E5%93%81_80.png',\n  'http://prts.wiki/images/9/9c/%E6%94%B6%E8%97%8F%E5%93%81_81.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_82.png',\n  'http://prts.wiki/images/3/38/%E6%94%B6%E8%97%8F%E5%93%81_83.png',\n  'http://prts.wiki/images/d/d3/%E6%94%B6%E8%97%8F%E5%93%81_84.png',\n  'http://prts.wiki/images/d/d5/%E6%94%B6%E8%97%8F%E5%93%81_85.png',\n  'http://prts.wiki/images/0/06/%E6%94%B6%E8%97%8F%E5%93%81_86.png',\n  'http://prts.wiki/images/5/50/%E6%94%B6%E8%97%8F%E5%93%81_87.png',\n  'http://prts.wiki/images/4/4b/%E6%94%B6%E8%97%8F%E5%93%81_88.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_89.png',\n  'http://prts.wiki/images/a/a3/%E6%94%B6%E8%97%8F%E5%93%81_90.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_91.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_92.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_93.png',\n  'http://prts.wiki/images/2/29/%E6%94%B6%E8%97%8F%E5%93%81_94.png',\n  'http://prts.wiki/images/a/a8/%E6%94%B6%E8%97%8F%E5%93%81_95.png',\n  'http://prts.wiki/images/1/1a/%E6%94%B6%E8%97%8F%E5%93%81_96.png',\n  'http://prts.wiki/images/0/0a/%E6%94%B6%E8%97%8F%E5%93%81_97.png',\n  'http://prts.wiki/images/f/f8/%E6%94%B6%E8%97%8F%E5%93%81_98.png',\n  'http://prts.wiki/images/d/dd/%E6%94%B6%E8%97%8F%E5%93%81_99.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_100.png',\n  'http://prts.wiki/images/3/32/%E6%94%B6%E8%97%8F%E5%93%81_101.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_102.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_103.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_104.png',\n  'http://prts.wiki/images/2/23/%E6%94%B6%E8%97%8F%E5%93%81_105.png',\n  'http://prts.wiki/images/d/dc/%E6%94%B6%E8%97%8F%E5%93%81_106.png',\n  'http://prts.wiki/images/4/4a/%E6%94%B6%E8%97%8F%E5%93%81_107.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_108.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_109.png',\n  'http://prts.wiki/images/1/1e/%E6%94%B6%E8%97%8F%E5%93%81_110.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_111.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_112.png',\n  'http://prts.wiki/images/9/90/%E6%94%B6%E8%97%8F%E5%93%81_113.png',\n  'http://prts.wiki/images/c/ca/%E6%94%B6%E8%97%8F%E5%93%81_114.png',\n  'http://prts.wiki/images/7/78/%E6%94%B6%E8%97%8F%E5%93%81_115.png',\n  'http://prts.wiki/images/0/04/%E6%94%B6%E8%97%8F%E5%93%81_116.png',\n  'http://prts.wiki/images/5/58/%E6%94%B6%E8%97%8F%E5%93%81_117.png',\n  'http://prts.wiki/images/9/95/%E6%94%B6%E8%97%8F%E5%93%81_118.png',\n  'http://prts.wiki/images/4/40/%E6%94%B6%E8%97%8F%E5%93%81_119.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_120.png',\n  'http://prts.wiki/images/b/bf/%E6%94%B6%E8%97%8F%E5%93%81_121.png',\n  'http://prts.wiki/images/c/cb/%E6%94%B6%E8%97%8F%E5%93%81_122.png',\n  'http://prts.wiki/images/a/a5/%E6%94%B6%E8%97%8F%E5%93%81_123.png',\n  'http://prts.wiki/images/0/01/%E6%94%B6%E8%97%8F%E5%93%81_124.png',\n  'http://prts.wiki/images/f/f2/%E6%94%B6%E8%97%8F%E5%93%81_125.png',\n  'http://prts.wiki/images/1/15/%E6%94%B6%E8%97%8F%E5%93%81_126.png',\n  'http://prts.wiki/images/d/d2/%E6%94%B6%E8%97%8F%E5%93%81_127.png',\n  'http://prts.wiki/images/d/d6/%E6%94%B6%E8%97%8F%E5%93%81_128.png',\n  'http://prts.wiki/images/d/d4/%E6%94%B6%E8%97%8F%E5%93%81_129.png',\n  'http://prts.wiki/images/1/11/%E6%94%B6%E8%97%8F%E5%93%81_130.png',\n  'http://prts.wiki/images/3/36/%E6%94%B6%E8%97%8F%E5%93%81_131.png',\n  'http://prts.wiki/images/9/9b/%E6%94%B6%E8%97%8F%E5%93%81_132.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_133.png',\n  'http://prts.wiki/images/2/26/%E6%94%B6%E8%97%8F%E5%93%81_134.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_135.png',\n  'http://prts.wiki/images/4/48/%E6%94%B6%E8%97%8F%E5%93%81_136.png',\n  'http://prts.wiki/images/d/d1/%E6%94%B6%E8%97%8F%E5%93%81_137.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_138.png',\n  'http://prts.wiki/images/0/09/%E6%94%B6%E8%97%8F%E5%93%81_139.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_140.png',\n  'http://prts.wiki/images/c/c6/%E6%94%B6%E8%97%8F%E5%93%81_141.png',\n  'http://prts.wiki/images/a/a7/%E6%94%B6%E8%97%8F%E5%93%81_142.png',\n  'http://prts.wiki/images/7/7c/%E6%94%B6%E8%97%8F%E5%93%81_143.png',\n  'http://prts.wiki/images/3/39/%E6%94%B6%E8%97%8F%E5%93%81_144.png',\n  'http://prts.wiki/images/5/5f/%E6%94%B6%E8%97%8F%E5%93%81_145.png',\n  'http://prts.wiki/images/e/ea/%E6%94%B6%E8%97%8F%E5%93%81_146.png',\n  'http://prts.wiki/images/7/77/%E6%94%B6%E8%97%8F%E5%93%81_147.png',\n  'http://prts.wiki/images/3/31/%E6%94%B6%E8%97%8F%E5%93%81_148.png',\n  'http://prts.wiki/images/6/64/%E6%94%B6%E8%97%8F%E5%93%81_149.png',\n  'http://prts.wiki/images/1/17/%E6%94%B6%E8%97%8F%E5%93%81_150.png',\n  'http://prts.wiki/images/5/56/%E6%94%B6%E8%97%8F%E5%93%81_151.png',\n  'http://prts.wiki/images/6/60/%E6%94%B6%E8%97%8F%E5%93%81_152.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_153.png',\n  'http://prts.wiki/images/2/2a/%E6%94%B6%E8%97%8F%E5%93%81_154.png',\n  'http://prts.wiki/images/8/89/%E6%94%B6%E8%97%8F%E5%93%81_155.png',\n  'http://prts.wiki/images/1/13/%E6%94%B6%E8%97%8F%E5%93%81_156.png',\n  'http://prts.wiki/images/e/eb/%E6%94%B6%E8%97%8F%E5%93%81_157.png',\n  'http://prts.wiki/images/8/8a/%E6%94%B6%E8%97%8F%E5%93%81_158.png',\n  'http://prts.wiki/images/5/51/%E6%94%B6%E8%97%8F%E5%93%81_159.png',\n  'http://prts.wiki/images/9/97/%E6%94%B6%E8%97%8F%E5%93%81_160.png',\n  'http://prts.wiki/images/3/3a/%E6%94%B6%E8%97%8F%E5%93%81_161.png',\n  'http://prts.wiki/images/e/e6/%E6%94%B6%E8%97%8F%E5%93%81_162.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_163.png',\n  'http://prts.wiki/images/a/a9/%E6%94%B6%E8%97%8F%E5%93%81_164.png',\n  'http://prts.wiki/images/8/87/%E6%94%B6%E8%97%8F%E5%93%81_165.png',\n  'http://prts.wiki/images/1/19/%E6%94%B6%E8%97%8F%E5%93%81_166.png',\n  'http://prts.wiki/images/2/2e/%E6%94%B6%E8%97%8F%E5%93%81_167.png',\n  'http://prts.wiki/images/1/14/%E6%94%B6%E8%97%8F%E5%93%81_168.png',\n  'http://prts.wiki/images/c/cc/%E6%94%B6%E8%97%8F%E5%93%81_169.png',\n  'http://prts.wiki/images/5/54/%E6%94%B6%E8%97%8F%E5%93%81_170.png',\n  'http://prts.wiki/images/e/e4/%E6%94%B6%E8%97%8F%E5%93%81_171.png',\n  'http://prts.wiki/images/b/b3/%E6%94%B6%E8%97%8F%E5%93%81_172.png',\n  'http://prts.wiki/images/d/d0/%E6%94%B6%E8%97%8F%E5%93%81_173.png',\n  'http://prts.wiki/images/7/79/%E6%94%B6%E8%97%8F%E5%93%81_174.png',\n  'http://prts.wiki/images/1/1f/%E6%94%B6%E8%97%8F%E5%93%81_175.png',\n  'http://prts.wiki/images/8/81/%E6%94%B6%E8%97%8F%E5%93%81_176.png',\n  'http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png',\n  'http://prts.wiki/images/b/b6/%E6%94%B6%E8%97%8F%E5%93%81_178.png',\n  'http://prts.wiki/images/3/3b/%E6%94%B6%E8%97%8F%E5%93%81_179.png',\n  'http://prts.wiki/images/e/e5/%E6%94%B6%E8%97%8F%E5%93%81_180.png',\n  'http://prts.wiki/images/2/22/%E6%94%B6%E8%97%8F%E5%93%81_181.png',\n  'http://prts.wiki/images/0/0b/%E6%94%B6%E8%97%8F%E5%93%81_182.png'\n ];\n \n export const relic_names = ['乌萨斯列巴',\n '脱水仙人掌干',\n '风干大蕉果',\n '商队盒饭',\n '半盒沙虫罐头',\n '维多利亚军粮',\n '废旧地图',\n '单筒望远镜',\n '全息粉粉沙盒',\n '单人睡袋',\n '破烂帐篷',\n '萨米大“蜡烛”',\n '兔子棚屋',\n '噪音引擎',\n '豌豆花盆',\n '综合园艺成果',\n '炭化烤肉棒',\n '压缩糖砖',\n '易爆建材箱',\n '珠宝水果拼盘',\n '赤金的远征',\n '古旧钱币',\n '恐魔金像',\n '血钻',\n '小财神雕像',\n '“嘎呜”挂饰',\n '米格鲁的饼干',\n '一杯昏睡红茶',\n '古旧铸物',\n '地区行动方案',\n '全局作战文件',\n '人事部密信',\n '一份演讲稿',\n '突击协议扩充',\n '突击协议增援',\n '堡垒协议扩充',\n '堡垒协议增援',\n '远程协议扩充',\n '远程协议增援',\n '破坏协议扩充',\n '破坏协议增援',\n '熏黑的信号灯',\n '老式电报机',\n '无线通讯器',\n '幸运硬币',\n '手绘雪雉传单',\n '真理的书单',\n '教官的爱鞭',\n '咪波·运输型',\n '萨卡兹监工哨子',\n '忧伤的驮兽',\n '奇怪的$墨镜',\n '破片地雷',\n '《防身手册》',\n '芙蓉的健康餐',\n '牧兽的排泄物',\n '奇渊面具',\n '教母的信物',\n '锉刀',\n '废铁陷阱',\n '酸液源石虫',\n '迷迭香之拥',\n '无名诗集',\n '劣化组织',\n '“黑夜呢喃”',\n '《大静谧》',\n '小号黄色安全帽',\n '战壕沙袋',\n '防割断纤维背心',\n '古旧的蒸汽甲胄',\n '《打架手册》',\n '《独臂电锯》',\n '齿轮式外骨骼',\n '锈蚀银枪',\n '液压气瓶',\n '超弹力合金弹簧',\n '损坏的左轮弹巢',\n '显圣吊坠',\n '难闻的治疗粉',\n '难闻的止血剂',\n '急救药箱',\n '白垩色治疗针',\n '便宜食用盐',\n '辅助麻痹工具',\n '血腥链锯',\n '另一颗铆钉',\n '活性粉尘',\n '源石射灯',\n '源石环境发生器',\n '无主的萨克斯',\n '“文明的存续”',\n '手工小包',\n '*一点*加班费',\n '可露希尔的怜悯',\n '“日光灯”',\n '香草沙士汽水',\n '丰蹄能量饮料',\n '辣椒老妈',\n '脑力药片',\n '荒地龙舌兰',\n '摩根队长佳酿',\n '生命之水',\n '皇家利口酒',\n '钝爪-突破',\n '钝爪-典训',\n '钝爪-爆发',\n '钝爪-熟稔',\n '钝爪-振奋',\n '钝爪-百战',\n '折戟-突破',\n '折戟-典训',\n '折戟-锋刃',\n '折戟-浴血',\n '折戟-一夫当关',\n '折戟-破釜沉舟',\n '铁卫-突破',\n '铁卫-典训',\n '铁卫-侵掠',\n '铁卫-不动',\n '铁卫-推进',\n '铁卫-无锋',\n '残弩-突破',\n '残弩-百步穿杨',\n '残弩-典训',\n '残弩-采矿镭射枪',\n '残弩-交叉火力',\n '残弩-神速',\n '断杖-突破',\n '断杖-典训',\n '断杖-织法者',\n '断杖-咏唱',\n '断杖-凝神',\n '断杖-苦难巫咒',\n '支柱-突破',\n '支柱-典训',\n '支柱-次要战场',\n '支柱-勤奋',\n '支柱-破兵',\n '支柱-枯法',\n '医者-突破',\n '医者-典训',\n '医者-自医',\n '医者-强效试剂',\n '医者-妙手',\n '医者-理智固剂',\n '锈刃-突破',\n '锈刃-典训',\n '锈刃-处决',\n '锈刃-单兵',\n '锈刃-无人之境',\n '锈刃-神力',\n '突击协议-利刃',\n '突击协议-散兵',\n '堡垒协议-方阵',\n '堡垒协议-固守',\n '远程协议-遥击',\n '远程协议-克敌',\n '破坏协议-消除',\n '破坏协议-压制',\n '迷幻的藏宝图',\n '染血的传单',\n '辉煌工匠包',\n 'Logos的骨笔',\n '无限续杯瓶',\n '左半边椰子壳',\n '右半边椰子壳',\n '倒转的怀表',\n '“手铳”',\n '沉重的铁皮箱',\n '漆黑的钥匙',\n '鸟卜探索仪',\n '超高级沙发',\n '立体投影仪',\n '一台旧冰箱',\n '个人避难所',\n '虚空发生器',\n '热水壶',\n '“坏家伙”来了！',\n '鬼血',\n '冰封的异爪',\n '巫王旋角',\n '浅海轻唱'];","import React from 'react';\nimport _ from 'lodash';\nimport { choice, deal_random_damage, draw, gainMaterials, init_card_state, logMsg, ready_random_card, reinforce_card, reinforce_hand, summon } from './Game';\nimport { random_upgrade, delete_card, get_card_pick, get_relic, get_specific_card_pick } from './Roguelike';\nimport { UPGRADES } from './upgrades';\nimport { relic_images, relic_names } from './assets';\nimport { ready_order } from './orders';\n\nexport const RELICS = [\n  // {\n  //   name: \"可露希尔的怜悯\",\n  //   desc: \"跳过选牌时,额外获得10赏金\",\n  //   onSkipPick(S) {\n  //     S.gold += 10;\n  //   }\n  // },\n  {\n    name: \"乌萨斯列巴\",\n    desc: \"回合开始时，获得2张随机干员牌，并使其费用-1\",\n    onTurnBegin(G, ctx){\n      for (let i=0; i<2; i++) {\n        let card = {...choice(ctx, G.CARDS)};\n        card.cost -= 1;\n        G.hand.unshift(card);\n      }\n    }\n  },\n  {\n    name: \"超高级沙发\",\n    desc: \"可同时部署人数+1\",\n    onBattleBegin(G, ctx){\n      G.field_limit += 1;\n    }\n  },\n  {\n    name: \"锈刃-处决\",\n    desc: \"部署2费及以下的干员时，造成4点伤害\",\n    onTurnBegin(G, ctx){\n      G.onPlayCard.push((G, ctx, card) => {\n        if (card.cost <= 2) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },{\n    name: \"荒地龙舌兰\",\n    desc: \"每回合少获得1点费用，但获得3个材料\",\n    onTurnBegin(G, ctx){\n      G.costs -= 1;\n      gainMaterials(G, ctx, 3);\n    }\n  },{\n    name: \"一份演讲稿\",\n    desc: \"对局开始时，召唤1个2费干员\",\n    onBattleBegin(G, ctx){\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      // summon(G, ctx, new_card, {});\n      G.field.push(init_card_state(G, ctx, {...new_card, hp:new_card.hp+1}));\n    }\n  },\n  {\n    name: \"人事部密信\",\n    desc: \"回合开始时，召唤1个随机干员的1/2复制\",\n    onTurnBegin(G, ctx){\n      let new_card = ctx.random.Shuffle(G.CARDS)[0];\n      // summon(G, ctx, new_card, {});\n      let played_card = init_card_state(G, ctx, {...new_card,\n        atk: 1,\n        hp: 2,\n        mine: 1,\n        cost: 1,\n      });\n      played_card.exhausted = false;\n      G.field.push(played_card);\n    }\n  },\n  {\n    name: \"生命之水\",\n    desc: \"回合开始时，强化1张手牌\",\n    onTurnBegin(G, ctx) {\n      reinforce_hand(G, ctx);\n    }\n  },\n\n  \n  {\n    name: \"地区行动方案\",\n    desc: \"起始获得额外1组材料，胜利所需分数+2\",\n    onBattleBegin(G, ctx){\n      for (let i=0; i<3; i++) {\n        G.materials[i] += 1;\n      }\n      G.goal += 2;\n    }\n  },\n  {\n    name: \"一杯昏睡红茶\",\n    desc: \"部署干员时，有25%概率额外触发1次“部署:”效果\",\n    onTurnBegin(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx, card) => {\n          if (ctx.random.D4() == 1 && (card.onPlay != undefined)) {\n            card.onPlay(G, ctx, card);\n            logMsg(G, ctx, `额外触发1次 ${card.name} 的部署效果`);\n          }\n        }\n      );\n    }\n  },\n  // {\n  //   desc: \"回合开始时，如果场上干员数达到了上限，则获得5分\",\n  //   onTurnBegin(G, ctx){\n  //     if (G.field.length == G.field_limit) {\n  //       G.score += 5;\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"综合园艺成果\",\n  //   desc: \"对战开始时,牌组里每有4张牌,就获得1分\",\n  //   onBattleBegin(G, ctx) {\n  //     G.score += Math.floor(G.deck.length / 4);\n  //   }\n  // },\n  {\n    name:\"风干大蕉果\", \n    desc:\"自选干员时，使选到的牌获得强化1\",\n    onPickCard(S, card) {\n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      reinforce.effect(card);\n      card.upgraded = true;\n    }\n  },\n  {\n    name:\"古旧钱币\", \n    desc:\"每次对战结束时,额外获得15赏金\",\n    onBattleEnd(S) {\n      S.gold += 15;\n    }\n  },\n  {\n    name:\"“嘎呜”挂饰\", \n    desc:\"达成满贯以上时,额外获得30赏金\",\n    onBattleEnd(S) {\n      if ((S.level_achieved - S.level_required) >= 4) {\n        S.gold += 30;\n      }\n    }\n  },\n  {\n    name:\"真理的书单\", \n    desc:\"使用: 随机升级5个干员\",\n    onUse(S) {\n      let msg = \"\";\n      for (let i=0; i<5; i++) {\n        msg += random_upgrade(S) + \"\\n\";\n      }\n      alert(msg);\n    }\n  },\n  {\n    name: \"手工小包\",\n    desc: \"达成满贯以上时，随机获得1个藏品\",\n    onBattleEnd(S){\n      if ((S.level_achieved - S.level_required) >= 4) {\n        let relic = S.rng.choice(S.RELICS);\n        console.log(relic.name);\n        S.relics.unshift({...relic});\n        alert(\"通过 手工小包 获得 \"+relic.name);\n      }\n    }\n  },\n  {\n    name:\"奇怪的$墨镜\", \n    desc:\"所有藏品的价格-10(最低为10)\",\n    // onBuyRelic(S, relic) {\n    //   S.gold += 5;\n    // }\n    onRefreshShop(S) {\n      for (let item of S.shop_items) {\n        if (item.is_relic) {\n          item.price = Math.max(item.price-10, 10);\n        }\n      }\n    }\n  },\n  // {\n  //   name:\"一份演讲稿\", \n  //   desc:\"购买藏品时,有概率随机升级1个干员\",\n  //   onBuyRelic(S, relic) {\n  //     if (S.rng.random() <= 0.5) {\n  //       random_upgrade(S);\n  //     }\n  //   }\n  // },\n  {\n    name:\"迷迭香之拥\", \n    desc:\"购买藏品时,有20%概率获得1个其复制\",\n    onBuyRelic(S, relic) {\n      if (S.rng.random() <= 0.2) {\n        S.relics.unshift({...relic});\n        alert(`获得${relic.name}的复制`);\n      }\n    }\n  },\n  {\n    name:\"咪波·运输型\", \n    desc:\"对局开始时费用+2\",\n    onBattleBegin(G, ctx) {\n      G.costs += 2;\n    }\n  },\n  {\n    name:\"芙蓉的健康餐\", \n    // desc:\"所有敌人获得-2/-0\",\n    desc:\"使用: 商店中增加2个\\\"删1张牌\\\"\",\n    onUse(S) {\n      S.shop_items.push(delete_card(S));\n      S.shop_items.push(delete_card(S));\n    }\n  },\n  {\n    name:\"全局作战文件\",\n    desc:\"使用: 商店中增加3个\\\"高级自选干员\\\"\",\n    onUse(S) {\n      let costs = S.rng.shuffle([2,3,4,5,16]).slice(0,3);\n      for (let cost of costs) {\n        S.shop_items.unshift(get_specific_card_pick(S, cost));\n      }\n    }\n  },\n  {\n    name:\"可露希尔的怜悯\",\n    desc:\"使用: 商店中增加4个藏品，并使增加的藏品价格-20\",\n    onUse(S) {\n      for (let i=0; i<4; i++) {\n        let relic = get_relic(S);\n        relic.price -= 20;\n        S.shop_items.push(relic);\n      }\n    }\n  },\n  {\n    name:\"压缩糖砖\", \n    desc:\"胜利所需分数-4(最低为10)\",\n    onTurnBegin(G, ctx) {\n      if (G.round_num == 1) {\n        G.goal -= 4;\n        G.goal = Math.max(G.goal, 10);\n      }\n    }\n  },\n  {\n    name:\"香草沙士汽水\", \n    desc:\"每局首次使用干员时不会横置(可叠加)\",\n    onBattleBegin(G, ctx, self) {\n      self.used = false;\n    },\n    onTurnBegin(G, ctx, self) {\n      G.onUseCard.push(\n        (G, ctx, card) => {\n          console.log(G.relics.map(x=>({...x})));\n          let gas = G.relics.find(x => x.name == \"香草沙士汽水\" && (!x.used));\n          console.log({...gas});\n          if (gas && ~G.field.indexOf(card) && card.exhausted) {\n            card.exhausted = false;\n            gas.used = true;\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"倒转的怀表\", \n    desc:\"回合开始时,每有1点动乱就获得2分\",\n    onTurnBegin(G, ctx) {\n      G.score += 2 * G.danger;\n    }\n  },\n  // {\n  //   name:\"断杖-织法者\", \n  //   desc:\"回合开始时,敌人数量每多我方1个,就获得1个钢\",\n  //   onTurnBegin(G, ctx) {\n  //     let diff = G.efield.length - G.field.length;\n  //     if (diff > 0) {\n  //       G.materials[3] += diff;\n  //     }\n  //   }\n  // },\n  // {\n  //   name:\"米格鲁的饼干\", \n  //   desc:\"所有阻挡数至少为2的,阻挡数+2\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       if (x.block >= 2) {\n  //         x.block += 2;\n  //       }\n  //     });\n  //   }\n  // },\n  // {\n  //   name:\"断杖-咏唱\", \n  //   desc:\"所有采掘力至少为3的,<+2>\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       if (x.mine >= 3) {\n  //         x.mine += 2;\n  //       }\n  //     });\n  //   }\n  // },\n  {\n    name:\"铁卫-推进\", \n    desc:\" 阻挡数多于2的,阻挡数-1,但是+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        if (x.block >= 2) {\n          x.block -= 1;\n          x.atk += 4;\n          x.hp += 4;\n        }\n      });\n    }\n  },\n  // {\n  //   name:\"辉煌工匠包\", \n  //   desc:\" 所有干员 +3攻 <-1>\",\n  //   onBattleBegin(G, ctx) {\n  //     G.deck.map(x => {\n  //       x.atk += 3;\n  //       x.mine = Math.max(x.mine - 1, 0);\n  //     });\n  //   }\n  // },\n  {\n    name:\"左半边椰子壳\", \n    desc:\" 所有干员+1费,+4/+4\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost += 1;\n        x.atk += 4;\n        x.hp += 4;\n      });\n    }\n  },\n  {\n    name:\"右半边椰子壳\", \n    desc:\" 所有干员-1费,胜利所需分数+10\",\n    onBattleBegin(G, ctx) {\n      G.deck.map(x => {\n        x.cost -= 1;\n      });\n      G.goal += 10;\n    }\n  },\n  {\n    name:\"摩根队长佳酿\", \n    desc:\"起始获得2个钢\",\n    onBattleBegin(G, ctx) {\n      G.materials[3] += 2;\n    }\n  },\n  {\n    name:\"无线通讯器\",\n    desc:\"使用干员行动时，获得1分\",\n    onTurnBegin(G, ctx) {\n      G.onCardAct.push(\n        (G, ctx) => {\n          G.score += 1;\n        }\n      );\n    }\n  },\n  {\n    name:\"“坏家伙”来了！\", \n    desc:\"起始获得2个随机的强化3干员加入手牌\",\n    onBattleBegin(G, ctx) { \n      let reinforce = UPGRADES.find(x => x.name == \"强化1\");\n      for (let i=0; i<2; i++) {\n        let card = {...choice(ctx, G.CARDS)};\n        reinforce.effect(card);\n        reinforce.effect(card);\n        reinforce.effect(card);\n        card.upgraded = true;\n        G.hand.unshift(card);\n      }\n    }\n  },\n  {\n    name:\"残弩-采矿镭射枪\", \n    desc:\"所有干员获得 采掘:造成2点伤害\",\n    onTurnBegin(G, ctx) {\n      G.onCardMine.push(\n        (G, ctx) => {\n          deal_random_damage(G, ctx, 2);\n        }\n      );\n    }\n  },\n  {\n    name:\"断杖-突破\", \n    desc:\"所有干员获得 超杀:获得1个材料和1分\",\n    onTurnBegin(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, card, enemy) => {\n          if (enemy.dmg > enemy.hp) {\n            gainMaterials(G, ctx, 1);\n            G.score += 1;\n          }\n        }\n      );\n    }\n  },\n  {\n    name:\"丰蹄能量饮料\", \n    desc:\"部署有\\\"行动:\\\"能力的干员时，有75%概率强化其1次\",\n    onTurnBegin(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx, card) => {\n          if (ctx.random.D4() > 1 && card.action) {\n            reinforce_card(G, ctx, card);\n          }\n        }\n      );\n    }\n  },\n  // {\n  //   name:\"锈刃-无人之境\", \n  //   desc:\"所有干员获得 部署:获得1分\",\n  //   onTurnBegin(G, ctx) {\n  //     G.onPlayCard.push(\n  //       (G, ctx) => {\n  //         G.score += 1;\n  //       }\n  //     );\n  //   }\n  // },\n  {\n    name:\"商队盒饭\",\n    desc:\"所有订单分数+1\",\n    onTurnBegin(G, ctx) {\n      for (let order of G.orders) {\n        order.score += 1;\n      }\n    }\n  },\n  {\n    name:\"热水壶\", \n    desc:\"使用: 变成手里一个藏品的复制\",\n    onUse(S) {\n      let relic = S.rng.choice(S.relics.filter(r => !r.used));\n      if (relic) {\n        S.relics.push({...relic});\n        alert(`变成 ${relic.name}`);\n      }\n    }\n  },\n  {\n    name:\"全息粉粉沙盒\", \n    desc:\"使用: 变成2个随机藏品\",\n    onUse(S) {\n      // let self = S.relics[0];\n      // S.relics = S.relics.slice(1);\n      for (let i=0; i<2; i++) {\n        let relic = S.rng.choice(S.RELICS);\n        S.relics.unshift({...relic});      \n      }\n      alert(`获得 ${S.relics[0].name} ${S.relics[1].name}`);\n    }\n  },\n].map(init_relic);\n\nexport function init_relic(relic) {\n  return {\n    ...relic,\n    illust: get_relic_img(relic),\n  };\n}\n\nexport function get_relic_img(relic) {\n  return relic_images[relic_names.indexOf(relic.name)];\n}","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick, generate_roguelike_deck, get_challenge_name, deck2str } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\nimport { final_tag, TAGS } from './tags';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Card.css';\nimport './Roguelike.css';\nimport './Competition.css';\nimport { ICONS } from './icons';\nimport { CARDS, heijiao_in_dream } from './cards';\nimport { UPGRADES } from './upgrades';\nimport { RELICS } from './relics';\nimport { lose_image, result_images } from './assets';\nimport { CardRow } from './Card';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到Roguelike模式“黑角的金针菇迷境”！\\n通关要求：完成9局对战；\\n每一局对战，都有要求的危机等级，成功完成该局对战，即可获得30赏金和1次升级，并进入下一局对战；\\n如果其中一次对局失败，则本次Roguelike旅程即宣告失败，胜败乃兵家常事，博士请重头再来；\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！每高1级，就会额外获得5赏金(最高40赏金)；\\n每高4级，在高8级之前，会奖励1次升级，在高8级之后，会奖励1个藏品；\\n如果比要求等级高4级，则会达成“满贯”，额外获得30赏金和1个藏品，并跳过1局对战；\\n如果比要求等级高8级，则会达成“大满贯”，额外获得60赏金和3个藏品！并跳过2局对战；`);\n}\n\nfunction weekly_introduction() {\n  alert(`欢迎来到周常挑战模式！\\n在这个模式中，你将在固定的牌组和牌序中，探索一套牌组的上限；\\n根据表现，你将会得到以下评级：\\n* 24级: S\\n* 32级: SS\\n* 40级: SSS`);\n}\n\nfunction reset_tags() {\n  return TAGS.map(x => ({...x}));\n}\n\nfunction setup_roguelike_mode(S) {\n  console.log(\"Roguelike mode reset\");\n  S.roguelike_mode = true;\n\n  S.rng = new PRNG(S.seed || Date());\n\n  init_tags_S2(S);\n  S.RELICS = RELICS.map(x => ({...x}));\n\n  S.Deck = [];\n  S.relics = [];\n  S.gold = 50;\n\n  S.scene_queue = [\"upgrade\", ..._.times(8, ()=>\"init_card\"), \"relic\"];\n  S.current_upgrades = [];\n  S.current_indexes = [];\n  S.current_relics = [];\n\n  S.game_count = 1;\n  S.level_required = 0;\n\n  S.central_idx = 0;\n\n  S.dream_count = 0;\n\n  // reset_card_picks(S);\n  reset_shop(S);\n}\n\nfunction select_deck(S, deck) {\n  S.Deck = deck;\n  reset_shop(S);\n}\n\nfunction end_roguelike_mode(S) {\n  S.roguelike_mode = false;\n  S.tags = reset_tags();\n  CARDS.map(preprocess_roguelike_card); // To prevent onPlayBonus pointer bug\n}\n\nfunction move_on(S) {\n  S.game_count += 1;\n  S.tags.splice(S.tags.length-1, 0, ...S.remained_tags.slice(0,2));\n  S.remained_tags = S.remained_tags.slice(2);\n\n  // S.scene_queue.unshift(\"pick\");\n  // S.scene_queue.unshift(\"upgrade\");\n\n  // if (S.difficulty == \"hard\") {\n  //   S.rng.choice(S.tags.filter(t => t.stackable && (!t.locked))).locked = true;\n  // }\n\n  if (S.difficulty == \"hard\" && S.game_count == 9) {\n    S.tags = [...S.tags, ..._.times(9, () => ({...final_tag}))];\n    for (let tag of S.tags) {\n      if (tag.level == 5) {\n        tag.locked = true;\n      }\n    }\n  }\n}\n\nfunction init_tags_S2(S) {\n  let tags = reset_tags();\n  let basic_tags = tags.slice(0, 15);\n  let repeat_tags = tags.filter(t => t.stackable).flatMap(t => _.times(3, ()=>({...t})));\n  let remained_tags = S.rng.shuffle(tags.filter(t => (!basic_tags.includes(t)) && t.level > 0));\n  let init_added_tags = remained_tags.filter(t => (t.standard_level <= 3));\n  init_added_tags.map(t => {if (t.standard_level <= 2) t.locked = true;});\n  S.tags = [...basic_tags, ...repeat_tags, ...init_added_tags];\n  S.remained_tags = remained_tags.filter(t => !init_added_tags.includes(t));\n}\n\nfunction init_tags(S) {\n  let tags = reset_tags();\n  let final_tag = tags[tags.length - 1];\n  // let init_tags = [...tags.slice(0,6), ...tags.filter((x,idx) => [6,7,9,10,12,13].includes(idx)), final_tag];\n  let init_tags = [...tags.slice(0,15), final_tag];\n  let remained_tags = S.rng.shuffle(tags.filter(t => (!init_tags.includes(t)) && t.level > 0));\n  S.tags = [...init_tags.slice(0,init_tags.length-1), ...remained_tags.slice(0,2), final_tag];\n  S.remained_tags = remained_tags.slice(2);\n}\n\nfunction reduce_basic_tags(tags, rng) {\n  // return tags.filter((x,idx) => !rng.choice([[6,7,8],[9,10,11],[12,13,14]]).includes(idx));\n  return [...tags.slice(0,6), ...rng.shuffle(tags.slice(6)).slice(0,6).sort((t1,t2) => tags.indexOf(t1)-tags.indexOf(t2))];\n}\n\nexport function choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [1,2,4,6,9,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 3) && [13].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 4) && [7,8].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    // if (this.state.competition_mode) {\n    //   for (let tag of new_tags) {\n    //     if (tag.selected) {\n    //       tag.locked = true;\n    //     }\n    //   }\n    // }\n\n    return new_tags;\n}\n\nfunction setup_normal_challenge(tags, rng) {\n  for (let t of tags) {\n    if (t.standard_level <= 2 || [0,1,2,3,4,6,9,12].includes(tags.indexOf(t))) {\n      t.locked = true;\n    }\n  }\n  let challenge_tag = rng.choice(tags.filter(x => x.challenge));\n  challenge_tag.locked = true;\n  let locked_tags = tags.filter(x => x.locked && [2,3].includes(x.level));\n  let other_tags = tags.filter(x => !x.locked && [2,3].includes(x.level));\n  other_tags = rng.shuffle(other_tags).slice(0,3);\n  return [...tags.slice(0,12), ...locked_tags, ...other_tags];\n}\n\nfunction setup_exhausted_challenge(tags, rng) {\n  tags[0].locked = true;\n  tags[1].locked = true;\n  let final_tag = tags[tags.length-1];\n  final_tag.locked = true;\n  let basic_tags = tags.filter(x => x.level == 1);\n  let another_challenge_tag = rng.choice(tags.filter(x => x.level == 3));\n  another_challenge_tag.locked = true;\n  let advanced_tags = rng.shuffle(tags.filter(x => [2,3].includes(x.level) && x != another_challenge_tag)).slice(0,5);\n  return [...basic_tags, another_challenge_tag, ...advanced_tags, final_tag];\n}\n\nfunction setup_daily_tags(S) {\n  let rng = new PRNG(S.date);\n  let tags = reset_tags();\n\n  if (rng.random() <= 0.6) {\n    S.tags = setup_normal_challenge(tags, rng);\n    S.level_required = 24;\n  }\n  else {\n    S.tags = setup_exhausted_challenge(tags, rng);\n    S.level_required = 18;\n  }\n}\n\nfunction setup_weekly_tags(S) {\n  let tags = reset_tags();\n  // for (let t of tags) {\n  //   if (t.standard_level <= 2 || [0,3,4,6,9].includes(tags.indexOf(t))) {\n  //     t.locked = true;\n  //   }\n  // }\n  S.tags = choose_standard_tags(tags, 2);\n  S.tags.map(t => {if (t.selected) t.locked = true;});\n}\n\nfunction enter_daily_mode(S) {\n  S.daily_mode = true;\n  S.date = Date().slice(0,15);\n  // S.date = Math.random();\n  setup_daily_tags(S);\n}\n\nfunction end_daily_mode(S) {\n  S.daily_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction generate_weekly_challenges(S) {\n  let rng = new PRNG(S.week);\n  let challenges = [];\n  for (let i=0; i<1; i++) {\n    challenges.push(get_challenge_name(rng));\n  }\n  S.challenges = challenges;\n}\n\nfunction setup_weekly_challenge(S, idx) {\n  S.deck_mode = \"random\";\n  S.deck_name = S.challenges[idx].desc;\n  S.seed = S.challenges[idx].desc;\n  S.weekly_challenge_idx = idx + 1;\n  S.changer(\"tag\");\n}\n\nfunction enter_weekly_mode(S) {\n  S.weekly_mode = true;\n  let d = new Date();\n  S.week = d.getFullYear() * 10000 + (d.getMonth()+1) * 100 + d.getDate() - d.getDay();\n  generate_weekly_challenges(S);\n  setup_weekly_tags(S);\n  S.changer(\"weekly\");\n}\n\nfunction end_weekly_mode(S) {\n  S.weekly_mode = false;\n  S.tags = reset_tags();\n  S.changer(\"tag\");\n}\n\nfunction set_difficulty(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [12, 14, 16, 18, 22, 26, 30, 34, 45];\n\n  if (difficulty == \"easy\") {\n    S.levels = [8, 10, 12, 14, 18, 22, 26, 30, 40];\n  }\n\n  if (difficulty == \"hard\") {\n    S.levels = [15, 18, 21, 24, 30, 36, 42, 48, 60];\n  }\n\n  if ([\"medium\", \"hard\"].includes(difficulty)) {\n    S.tags[S.tags.length-1].locked = true;\n  }\n\n  if ([\"hard\"].includes(difficulty)) {\n    S.tags[0].locked = true;\n    S.tags[1].locked = true;\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction set_difficulty_S2(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [8, 12, 16, 20, 25, 30, 35, 40, 50];\n\n  if (difficulty == \"medium\") {\n    S.levels = [18, 22, 26, 30, 36, 42, 48, 55, 70];\n    S.tags = choose_standard_tags(S.tags, 2);\n  }\n\n  if (difficulty == \"hard\") {\n    // S.levels = [25, 30, 35, 40, 50, 60, 70, 80, 100];\n    // S.levels = [22, 27, 32, 38, 45, 52, 60, 70, 90];\n    S.levels = [24, 28, 32, 36, 40, 50, 60, 70, 90];\n    S.tags = choose_standard_tags(S.tags, 3);\n  }\n\n  // if ([\"medium\", \"hard\"].includes(difficulty)) {\n  //   for(let tag_idx of [0,3,4,6,9]) {\n  //     S.tags[tag_idx].locked = true;\n  //   }\n  // }\n\n  // if (difficulty == \"hard\") {\n  //   S.tags[12].locked = true; // EH: This is redundant, get \"set standard tags\" out\n  //   for (let t of S.tags) {\n  //     if (t.standard_level == 3) {\n  //       t.locked = true;\n  //     }\n  //   }\n  // }\n\n  // if (difficulty == \"easy\") {\n  //   for (let tag of S.tags) {\n  //     tag.locked = false;\n  //   }\n  // }\n\n  S.tags.map(t => {if (t.selected) t.locked = true;});\n\n  S.level_required = S.levels[0];\n}\n\nfunction preprocess_roguelike_card(card) {\n  card.onPlayBonus = [];\n}\n\n// function setup_deck_selection(S) {\n//   let rng = S.rng;\n//   S.deck_names = _.times(3, ()=>rng.choice(CARDS.map(x=>x.name).filter(x => x != \"可露希尔\"))).map(x => x + \"·黑角\");\n//   S.deck_list = S.deck_names.map(generate_roguelike_deck).map(str2deck); // TODO: change the generator\n//   S.deck_list.map(deck => deck.map(preprocess_roguelike_card))\n// }\n\nfunction setup_deck_selection(S) {\n  S.Deck = str2deck(deck2str([\"黑角\", \"极境\", \"桃金娘\", \"翎羽\"]));\n  S.Deck.map(preprocess_roguelike_card);\n}\n\nfunction get_pick(S) {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card)).filter(card => card != undefined).map(card => ({...card, material:S.rng.randRange(3)})); // EH: Let material not be local solution, but global solution\n}\n\nfunction reset_card_picks(S) {\n  S.card_picks = _.times(3, ()=>get_pick(S));\n}\n\nfunction get_shop_item(S) {\n  // let rng = new PRNG(Math.random());\n  // let rng = S.rng;\n\n  let item_type = S.rng.randRange(100);\n  // console.log(item_type, \"item type\");\n\n  if (item_type <= 60) {\n    // TODO: change this to relic\n    return get_relic(S);\n  }\n  else if (item_type <= 85) {\n    // TODO: change this to upgrade\n    return get_upgrade(S);\n  }\n  else if (item_type <= 95) {\n    return get_card_pick(S);\n  }\n  else{\n    return delete_card(S);\n  }\n\n}\n\nfunction click_that_button(S) {\n  if (S.rng.randRange(100) <= 70 && S.gold >= 0) {\n    let value = S.rng.randRange(100);\n\n    if (value <= 20) {\n      alert(`喵喵喵~‍(=・ω・=)\\n(获得5赏金)`);\n      S.gold += 5;\n    }\n    else if (value <= 30) {\n      alert(`讨厌，不要点人家啦‍‍(╯°口°)╯(┴—┴\\n(失去50赏金)`)\n      S.gold -= 50;\n    }\n    else if (value == 40 || value == 41) {\n      alert(`这么喜欢点人家，给你点赏金好啦‍_(:з」∠)_\\n(获得50赏金)`);\n      S.gold += 50;\n    }\n    else if (value == 50 || value == 51 || value == 52) {\n      let relic = S.rng.choice(RELICS);\n      S.relics.unshift({...relic});\n      alert(`这么喜欢点人家，送你个小礼物好啦~(｀・ω・´)\\n(获得${relic.name})`);\n    }\n    else if (value == 60) {\n      alert(`‍其实，我超喜欢你的ε=ε=(ノ≧∇≦)ノ\\n(获得100赏金)`);\n      S.gold += 100;\n\n    }\n    else {\n      return;\n    }\n  }\n  else {\n    if (S.gold <= 0) {\n      alert(\"需要赏金为正时，按钮才会和你玩哦‍(=・ω・=)\");\n    }\n    else {\n      return;\n    }\n  }\n}\n\nfunction get_upgrade(S) {\n  let shop_item = {};\n\n  // Get upgrade\n  let upgrade = S.rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = S.rng.randRange(10) + 15;\n  // console.log(\"This deck\", S.Deck);\n  shop_item.indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"获得 \" + upgrade.desc;\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/up-arrow_2b06.png\";\n  shop_item.onBought = (S, idx) => {\n    let card = S.Deck[idx];\n    // console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n    if (card != undefined) {\n      upgrade.effect(card);\n      card.upgraded = true;\n      return true;\n    }\n    else {\n      return false;\n    }\n  };\n\n  return shop_item;\n}\n\nexport function get_card_pick(S) {\n  return {\n    name: \"自选干员\",\n    price: 0,\n    indexes: S.rng.shuffle(CARDS.slice(0, -1).map((x,idx)=>idx)).slice(0,6),\n    desc: \"从6个干员中，选择你最心仪的那一个\",\n    src: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/ok-hand_1f44c.png\",\n    is_pick: true,\n    onBought(S, idx) {\n      let card = CARDS[idx];\n      if (card) {\n        S.Deck.unshift({...card, material: S.rng.randRange(3)});\n        for (let r of S.relics) {\n          r.onPickCard && r.onPickCard(S, card);\n        }\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n  };\n}\n\nexport function get_init_card_pick(S) {\n  return {\n    name: \"初始自选干员\",\n    price: 0,\n    indexes: S.rng.shuffle(CARDS.slice(0, -1).map((x,idx)=>idx)).slice(0,3),\n    desc: \"从3个干员中，选择你最心仪的那一个\",\n    src: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/ok-hand_1f44c.png\",\n    is_pick: true,\n  };\n}\n\nfunction get_indexes_from_cost(cost) {\n  if (cost == 16) {\n    return CARDS.slice(0, CARDS.length-1).map((x,idx)=>(x.cost <= 1 || x.cost >= 6)?idx:undefined).filter(x => x != undefined);\n  }\n  else {\n    return CARDS.slice(0, CARDS.length-1).map((x,idx)=>(x.cost==cost)?idx:undefined).filter(x => x != undefined);\n  }\n}\n\nexport function get_specific_card_pick(S, cost) {\n  return {\n    name: `${cost}费自选干员`,\n    price: 0,\n    indexes: get_indexes_from_cost(cost),\n    desc: \"从N个干员中，选择你最心仪的那一个\",\n    src: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/ok-hand_1f44c.png\",\n    is_pick: true,\n    onBought(S, idx) {\n      let card = CARDS[idx];\n      if (card) {\n        S.Deck.unshift({...card, material: S.rng.randRange(3)});\n        for (let r of S.relics) {\n          r.onPickCard && r.onPickCard(S, card);\n        }\n      }\n      return true;\n    }\n  };\n}\n\n// function get_reinforceupgrade(S, rng) {\n//   let shop_item = {};\n\n//   // Get upgrade\n//   let upgrade = rng.choice(UPGRADES);\n//   shop_item.name = \"升级: \" + upgrade.name;\n//   shop_item.price = rng.randRange(20) + 20;\n//   console.log(\"This deck\", S.Deck);\n//   shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n//   shop_item.desc = \"获得 \" + upgrade.desc;\n//   shop_item.onBought = (S, idx) => {\n//     let card = S.Deck[idx];\n//     console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n//     if (card) {\n//       upgrade.effect(card);\n//     }\n//     card.upgraded = true;\n//   };\n\n//   return shop_item;\n// }\n\nfunction get_reinforced_card(S, rng) {\n  let shop_item = {};\n\n  // Get card\n  let card = {\n    ...rng.choice(CARDS),\n    material: rng.randRange(3),\n    upgraded: true,\n    onPlayBonus: [], // EH: this should be abstracted instead of write here again\n  };\n  let reinforce_time = rng.randRange(2) + 1;\n\n  shop_item.name = card.name + \"(强化\" + reinforce_time + \")\";\n  shop_item.price = rng.randRange(20) + 20 + (30+rng.randRange(20)) * (reinforce_time - 1);\n  shop_item.desc = card.desc;\n\n  let reinforce_once = UPGRADES.find(x => x.name == \"强化1\");\n  for (let i=0; i<reinforce_time; i++) {\n    reinforce_once.effect(card);\n  }\n\n  shop_item.onBought = (S) => {\n    S.Deck.unshift(card);\n    return true;\n  };\n\n  return shop_item;\n}\n\nexport function get_relic(S) {\n  let shop_item = {};\n  let relic = S.rng.choice(RELICS);\n\n  shop_item.name = relic.name;\n  shop_item.desc = relic.desc;\n  shop_item.price = 30 + S.rng.randRange(20);\n  shop_item.src = relic.illust;\n  shop_item.is_relic = true;\n\n  shop_item.onBought = (S) => {\n    let bought = {...relic};\n    console.log(\"Bought relic \", bought.name);\n\n    for (let r of [...S.relics]) {\n      r.onBuyRelic && r.onBuyRelic(S, bought, r);\n    }\n\n    S.relics.unshift(bought);\n    if (bought.onBought) {\n      bought.onBought(S);\n    }\n    return true;\n  }\n\n  return shop_item;\n}\n\nexport function delete_card(S) {\n  let shop_item = {};\n\n  shop_item.name = \"删1张牌\";\n  shop_item.price = 0;\n  shop_item.indexes = S.Deck.map((x,idx)=>idx);\n  shop_item.desc = \"\";\n  shop_item.src = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/foot_dark-skin-tone_1f9b6-1f3ff_1f3ff.png\";\n  shop_item.onBought = (S, card_idx) => {\n    S.Deck = S.Deck.filter((x,idx) => (idx != card_idx));\n    return true;\n  }\n\n  return shop_item;\n}\n\n\nfunction payGold(S, amount) {\n  if (S.gold >= amount) {\n    S.gold -= amount;\n    return true;\n  }\n  else {\n    alert(\"剩余赏金不够\");\n    return false;\n  }\n}\n\nfunction buy(S, idx) {\n  let item = S.current_item;\n  let item_idx = S.current_item_idx;\n  if (payGold(S, item.price)) {\n    S.shop_items = S.shop_items.filter((x,idx) => idx != item_idx);\n    if (idx != undefined) {\n      console.log(\"The indexes are:\", S.current_item.indexes.map(x=>x));\n      console.log(\"The selected index is:\", idx);\n      console.log(\"The chosen index is:\", S.current_item.indexes[idx]);\n      let card_idx = S.current_item.indexes[idx];\n      item.onBought(S, card_idx);\n    }\n    else {\n      item.onBought(S);\n    }\n  }\n}\n\nfunction select_init_card(S, idx) {\n  let card = CARDS[S.current_item.indexes[idx]];\n  if (card) {\n    S.Deck.unshift({...card, material: S.rng.randRange(3)});\n    reset_shop(S);\n    proceed(S);\n  }\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(8, ()=>get_shop_item(S));\n\n  for (let r of S.relics) {\n    r.onRefreshShop && r.onRefreshShop(S);\n  }\n}\n\nfunction refresh_shop(S) {\n  if (payGold(S, 5)) {\n    reset_shop(S);\n  }\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.card_picks[idx], ...S.Deck];\n  S.card_picks = undefined;\n\n  for (let r of S.relics) {\n    r.onPickCards && r.onPickCards(S);\n  }\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n\n  for (let r of S.relics) {\n    r.onSkipPick && r.onSkipPick(S);\n  }\n}\n\nfunction enter_dream(S) {\n  S.dream_count += 1;\n  if (S.dream_count == 9) {\n    alert(\"已进入黑角梦境\");\n    S.Deck = _.times(10, () => heijiao_in_dream);\n    S.relics = [...S.RELICS];\n  }\n  S.gold = 5000;\n}\n\nexport function get_gold_gained(risk_level, level_required) {\n   let gold_gained = 30;\n\n    let level_diff = risk_level - level_required;\n    gold_gained += Math.min(level_diff * 5, 40);\n\n    // For slam, don't store them in variables, instead, calculate it on time\n    // So do plenty of other things\n    if (level_diff >= 4) {\n      gold_gained += 30;\n    }\n    if (level_diff >= 8) {\n      gold_gained += 30;\n    }\n\n    return gold_gained;\n\n}\n\nfunction continue_run(S) {\n  // Resets go here\n  S.central_idx = 1;\n  // reset_shop(S);\n  reset_card_picks(S);\n\n  if (S.won) {\n    S.gold += get_gold_gained(S.level_achieved, S.level_required);\n  }\n\n  for (let r of [...S.relics]) {\n    r.onBattleEnd && r.onBattleEnd(S, r);\n  }\n\n  // S.scene_queue.unshift(\"pick\");\n  S.scene_queue.unshift(\"upgrade\");\n\n  // TODO: Reconstruct this part, into moveOn()\n  // S.game_count += 1;\n  move_on(S);\n\n  if ((S.level_achieved - S.level_required) >= 4) {\n    // S.game_count += 1;\n    move_on(S);\n    S.scene_queue.unshift(\"relic\");\n  }\n  if ((S.level_achieved - S.level_required) >= 8) {\n    // S.game_count += 1;\n    move_on(S);\n    S.scene_queue.unshift(\"relic\");\n    S.scene_queue.unshift(\"relic\");\n  }\n\n  let num_bonus = Math.floor((S.level_achieved - S.level_required) / 4);\n  let num_extra_relics = Math.max(num_bonus-2, 0);\n  let num_upgrades = Math.min(num_bonus, 2);\n  S.scene_queue = [..._.times(num_extra_relics, ()=>\"relic\"), ..._.times(num_upgrades, ()=>\"upgrade\"), ...S.scene_queue];\n  // console.log(S.scene_queue);\n\n  S.game_count = Math.min(S.game_count, 9);\n  S.level_required = S.levels[S.game_count - 1];\n\n}\n\nfunction proceed(S) {\n  if (S.scene_queue.length == 0) {\n    S.changer(\"roguelike\");\n  }\n  else {\n    let scene = S.scene_queue.pop();\n    if (scene == \"upgrade\") {\n      S.current_upgrades = S.rng.shuffle(UPGRADES).slice(0,3);\n      S.current_indexes = S.rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n      S.changer(\"roguelike_deck_upgrade\");\n    }\n    else if (scene == \"pick\") {\n      S.current_item = get_card_pick(S);\n      S.changer(\"roguelike_shop\");\n    }\n    else if (scene == \"init_card\") {\n      S.current_item = get_init_card_pick(S);\n      S.changer(\"roguelike_shop\");\n    }\n    else if (scene == \"relic\") {\n      S.current_relics = S.rng.shuffle(RELICS).slice(0,3);\n      S.changer(\"roguelike_relic_selection\");\n    }\n  }\n}\n\nfunction upgrade_card(S) {\n  let upgrade = S.current_upgrades[S.upgrade_selected];\n  let card = S.Deck[S.current_indexes[S.selection_selected]];\n  if (upgrade != undefined && card != undefined) {\n    upgrade.effect(card);\n    card.upgraded = true;\n    proceed(S);\n  }\n}\n\nfunction pick_relic(S, idx) {\n  let relic = S.current_relics[idx];\n  if (relic) {\n    S.relics.unshift({...relic});\n    proceed(S);\n  }\n}\n\nfunction use_relic(S, idx) {\n  let relic = S.relics[idx];\n  if (relic && relic.onUse && (!relic.used)) {\n    relic.onUse(S);\n    relic.used = true;\n  }\n}\n\nexport function random_upgrade(S) {\n  let card = S.rng.choice(S.Deck);\n  let upgrade = S.rng.choice(UPGRADES);\n  upgrade.effect(card);\n  card.upgraded = true;\n  return `${card.name} is upgraded with ${upgrade.name}`;\n}\n\n\nexport function RoguelikeDeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"roguelike-deck-selection-title\">选择你的卡组</div>\n    <div className=\"roguelike-deck-selection\">\n      {props.decks.map(deck => <RoguelikeDeckRepr {...deck} />)}\n    </div>\n    </div>\n}\n\nfunction RoguelikeDeckRepr(props) {\n  return <div className=\"roguelike-deck-repr\" align=\"center\">\n    <div className=\"roguelike-deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <CardRow cards={str2deck(generate_roguelike_deck(props.deckName)).map(({cost, atk, hp, illust, was_enemy}) => ({[was_enemy?\"e_illust\":\"illust\"]: illust, cost, atk, hp}))} additionalStyle={{height: \"55%\", marginTop: \"1%\"}} />\n    <button className=\"roguelike-deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"roguelike-deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper desc\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.click_that_button}><span>卖萌按钮QwQ</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得{ICONS.gold}10</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\">\n    <div className=\"shop-item-img-container\"><img src={props.src} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <span className=\"shop-item-price\">{ICONS.gold}{props.price}</span>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    <button className=\"buy\" onClick={props.buy}>购买</button>\n  </div>\n}\n\nfunction Relic(props) {\n  return <div className=\"shop-item\">\n    <div className=\"shop-item-img-container\"><img src={props.illust} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    {(props.operation)?<button className=\"buy\" onClick={props.operation.effect}>{props.operation.name}</button>:\"\"}\n  </div>\n}\n\nexport function Relics(props) {\n  return <div className=\"board\" align=\"center\">\n    <div style={{marginTop:\"20%\", fontSize:\"110%\"}}>{(props.checking)?\"现有藏品\":\"选择一个藏品\"}</div>\n    <div className=\"relics\">\n      {props.relics.map((relic)=><Relic {...relic} />)}\n    </div>\n    <button className=\"continue-btn\" style={{marginTop: \"2%\"}} onClick={props.proceed} >{(props.checking)?\"返回\":\"跳过\"}</button>\n  </div>;\n}\n\nexport function Weekly(props) {\n  return <div className=\"board\" align=\"center\">\n    <div style={{marginTop:\"20%\", fontSize:\"110%\"}} onClick={props.click_title} >本周是{props.week}</div>\n    <div className=\"relics\">\n      {props.challenges.map((challenge)=><Relic {...challenge} />)}\n    </div>\n    <button className=\"weekly-btn\" style={{marginTop: \"2%\"}} onClick={props.back} >返回</button>\n    <button className=\"weekly-btn\" style={{marginTop: \"2%\"}} onClick={weekly_introduction} >周常模式介绍</button>\n  </div>;\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"shop-items\">    \n      {props.shop_items.map((item, idx) => <ShopItem {...item} buy={props.buy(idx)} />)}\n    </div>\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店({ICONS.gold}5)</button>\n  </div>\n\n}\n\nexport function Roguelike(props) {\n  return <div className=\"central\">\n    <div className=\"heijiao-container-2\">\n      <img src=\"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\" className=\"heijiao-img-2\" />\n    </div>\n    <div className=\"counter-container\" align=\"center\">\n      <div className=\"battle-count-title\" >第<span className=\"battle-count\">{props.game_count || 1}</span>/<span onClick={props.enter_dream}>9</span>战</div>\n    </div>\n    <div className=\"roguelike-operations\">\n      <button onClick={props.enter_battle} className=\"roguelike-operation primary\">进入对战</button>\n      <button onClick={props.check_deck} className=\"roguelike-operation\">查看卡组</button>\n      <button onClick={props.check_relics} className=\"roguelike-operation\">查看藏品</button>\n    </div>\n  </div>\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"finish-pick\">你已经完成了选择</div>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport function RoguelikeEntry(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"entry\">欢迎来到集成战略模式<br/>“黑角的金针菇迷境”<br/>请选择难度</div>\n    <div className=\"difficulty-selection\">\n      {props.difficulties.map(selection => <button className=\"difficulty-button\" onClick={selection.handleClick}>{selection.name}</button>)}\n    </div>\n    <button className=\"introduce-button\" onClick={props.back}>返回</button>\n    <button className=\"introduce-button\" onClick={introduce_roguelike_mode}>集成战略模式介绍</button>\n  </div>\n}\n\nexport function ShowMeTheMoney(props) {\n  return <div className=\"gold-gained\">\n    {ICONS.gold}+{props.amount}\n  </div>\n\n}\n\nexport function ResultWin(props) {\n  let slam = \"\";\n  if (props.slam) {\n    slam = \"满贯！\";\n  }\n  if (props.grand_slam) {\n    slam = \"大满贯！\";\n  }\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务完成<br/>\n      第{props.game_count}/9战<br/>\n      要求等级: {props.level_required}<br/>\n      实际等级: {props.level_achieved}<br/>\n    </div>\n    <ShowMeTheMoney \n      amount = {props.gold_amount}\n    />\n    <div className=\"slam\">{slam}</div>\n    <button className=\"continue-btn primary\" onClick={props.continue} >继续</button>\n  </div>\n\n}\n\nexport function ResultLose(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务失败<br/>\n      第{props.game_count}/9战<br/>\n    </div>\n    <div className=\"result-quote\">\n      胜败乃兵家常事<br/>\n      博士请重新来过\n    </div>\n    <div className=\"lose-img-container\">\n      <img src={lose_image} className=\"lose-img\"></img>\n    </div>\n    <button className=\"endrun-btn\" onClick={props.continue}>结束游戏</button>\n  </div>\n}\n\nexport function FinalResult(props) {\n  let [src, p_id] = props.rng.choice(result_images);\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      <div className=\"ascension\">通关！</div>\n      完成难度: {props.difficulty}\n    </div>\n    <div className=\"result-img-container\">\n      <img className=\"result-img\" src={src} />\n    </div>\n    <div className=\"result-win-quote\">面对天灾，<br/>我们甚至秀得飞起</div>\n    {/* TODO: Add show deck and show relics */}\n  <button className=\"endrun-btn\" onClick={props.continue}>{props.endgame}</button>\n  <div className=\"illust-info\">图片p站id: {p_id}</div>\n  </div>\n\n\n}\n\nexport const roguelike = {\n  setup_roguelike_mode,\n  set_difficulty,\n  set_difficulty_S2,\n  setup_deck_selection,\n  select_deck,\n  select_init_card,\n\n  pick_cards,\n  skip_pick,\n  enter_dream,\n  buy,\n  reset_shop,\n  refresh_shop,\n  click_that_button,\n\n  continue_run,\n  end_roguelike_mode,\n  proceed,\n  upgrade_card,\n  pick_relic,\n  use_relic,\n\n  enter_daily_mode,\n  end_daily_mode,\n  setup_weekly_challenge,\n  generate_weekly_challenges,\n  enter_weekly_mode,\n  end_weekly_mode,\n};","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h2>明日方舟: 采掘行动 游戏规则</h2>\n  <br/><br/>\n  <a href=\"https://www.bilibili.com/video/BV1554y167ax\n\">2分钟视频教学(B站)</a>\n  <br/><br/>\n  游戏目标: 获得15分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘能力为3，博士因此获得了{material_icons[0]}{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 点击干员，然后点击敌人，接着点击“战斗”，选定干员就会对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单能力:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次，点击已完成订单，然后点击“行动”，即可使用；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得9分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就获得1点费用；<br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  * 完成危机等级-50  <br/>\n  * 在“周常挑战”中达到SS评级 <br/>\n  * 通关“黑角的金针菇迷境”整装待发难度  <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 嘉维尔\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 热水壶\"完成危机等级18  <br/>\n  * 完成危机等级40  <br/>\n  <br/><br/>\n  <h4>FAQ:</h4>\n  <b>Q: 这游戏为什么这么屑？</b><br/>\n  A: 大雕出品，必属精品；<br/>\n  <b>Q: {\"<+1>\"}是什么+1?</b><br/>\n  A: 你有没有觉得{\"<>\"}很像一个镐子？<br/>\n  <b>Q: “重置状态”是什么意思？</b><br/>\n  A: 边是黑的，就是重置状态，边是红的，就是横置状态，干员一回合只能动一次，边从黑色变成红色，就是动过了；<br/>\n  <b>Q: “超杀”是什么意思？</b><br/>\n  A: 战斗时，造成了超过敌人生命值的额外伤害，比如5点攻击力打2血的，溢出了3点伤害，就会触发“超杀”效果；<br/>\n  <b>Q: 场面和手牌的上限都是多少？</b><br/>\n  A: 场面上限8，手牌上限12，召唤类效果无视场面上限，获得手牌类效果(比如摄影车、清流)无视手牌上限;<br/>\n  <b>Q: 哪些干员无法被重置？</b><br/>\n  A: 雷蛇，白面鸮，艾雅法拉，能天使，温蒂，霜叶；<br/>\n  <b>Q: 为什么阿米娅强化1次之后，点击行动，会变成近卫阿米娅？</b><br/>\n  A: 游戏里还有更多的彩蛋等着你来发现~<br/>\n  <b>Q: 替换是什么意思？</b><br/>\n  A: 出场时会换掉敌人阵列中最后一个非精英敌人，是个好效果；<br/>\n  <b>Q: 为什么敌方牌库被抽完也算输？</b><br/>\n  A: 只有分数达标才算赢，别的都算输；<br/>\n  <b>Q: </b><br/>\n  A: <br/>\n  <b>Q: </b><br/>\n  A: <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilterContainer } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks, get_desc, get_blocker } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck, default_filter, FILTERS } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop, RoguelikeEntry, RoguelikeDeckSelection, Roguelike, ResultWin, ResultLose, FinalResult, get_gold_gained, Relics, Weekly, choose_standard_tags } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n    this.process_relic_details = this.process_relic_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_relic_board = this.render_relic_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_shop_board = this.render_roguelike_shop_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n    this.render_roguelike_final_result_board = this.render_roguelike_final_result_board.bind(this);\n    this.render_roguelike_entry_board = this.render_roguelike_entry_board.bind(this);\n    this.render_roguelike_deck_upgrade_board = this.render_roguelike_deck_upgrade_board.bind(this);\n    this.render_roguelike_relic_selection_board = this.render_roguelike_relic_selection_board.bind(this);\n    this.render_roguelike_relic_check_board = this.render_roguelike_relic_check_board.bind(this);\n    this.render_weekly_board = this.render_weekly_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n    this.end_roguelike_mode = this.end_roguelike_mode.bind(this);\n    this.buy_item = this.buy_item.bind(this);\n\n    this.enter_daily_mode = this.enter_daily_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.reset_preview_deck = this.reset_preview_deck.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(produce((S) => action(S, ...args))), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      shop_selected: -1,\n      hand_choices: [false, false, false, false, false],\n      preview_filter: default_filter,\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_roguelike_result_board,\n      // DEFAULT\n      last_board: this.render_title_board,\n      changer: this.change_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n      lock_seed: false,\n\n      checking: {},\n\n      scenario_finished: false,\n\n      dream_count: 0,\n\n      week: 0,\n      challenges: [],\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags, just_selected: new_tags[idx]});\n    };\n  }\n\n  \n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n\n  reset_preview_deck() {\n    this.setState({\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n    });\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    // EH: Reconstruct this, this is too procedure\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      vulnerable: card.vulnerable? (\"↓\" + card.vulnerable) : undefined,\n      //cost: card.cost,\n      blocked: get_blocker(this.props.G, this.props.ctx, card)? ICONS.block : undefined,\n    }; \n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_relic_details(relic) {\n    return {\n      eo_illust_detailed: relic.illust,\n      desc: relic.desc,\n    };\n  }\n\n  render_relic_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.relics.map(this.process_relic_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      // name: card.name,\n      desc: get_desc(card),\n      // desc: (\n      //   <span>\n      //     <span style={{fontSize:\"120%\"}}>\n      //       {card.atk}/{card.hp} &nbsp;\n      //       {ICONS.mine}{card.mine} &nbsp;\n      //       {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n      //     </span>\n      //     <br/>\n      //     {card.desc||\"\"}\n      //     <br/>\n      //     <span style={{\n      //       display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n      //     }}>\n      //       <i>\n      //       部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      //       </i>\n      //       <br/>\n      //     </span>\n      //     ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n      //     <br />\n      //     <i>{card.quote||\"\"}</i>\n      //   </span>\n      // ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      // if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n      //   this.play_card();\n      // }\n      // else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      // }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  //CHANGE\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"mode_selection\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"relic\": this.render_relic_board,\n      \"roguelike_relic_selection\": this.render_roguelike_relic_selection_board,\n      \"roguelike_relic_check\": this.render_roguelike_relic_check_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_entry\": this.render_roguelike_entry_board,\n      \"roguelike_shop\": this.render_roguelike_shop_board,\n      \"roguelike_deck_upgrade\": this.render_roguelike_deck_upgrade_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n      \"roguelike_final_result\": this.render_roguelike_final_result_board,\n      \"weekly\": this.render_weekly_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n\n    // Other onBoardSet functions go here\n    if (new_board == \"preview\") {\n      this.setState({preview_filter: default_filter});\n    }\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.competition_mode || this.state.roguelike_mode) {\n      deck = this.state.Deck;\n      if (this.state.roguelike_mode) {\n        seed += this.state.game_count\n      } \n      // : this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    if (this.state.roguelike_mode) {\n      // Setup other roguelike stuffs here\n      this.props.moves.setupRoguelikeBattle(this.state.relics);\n    }\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else if (this.state.roguelike_mode) {\n      // Let results stuffs go to winning \n      // Set finishing stuffs here\n\n      this.change_board(\"roguelike_result\");\n      // this.roguelike.end_battle();\n    }\n    else{\n      this.change_board(\"tag\");\n      if (!(this.state.lock_seed || this.state.weekly_mode)) {\n        this.setState({seed: get_seed_name()});\n      }\n    }\n  }\n\n  end_roguelike_mode() {\n    this.roguelike.end_roguelike_mode();\n    this.setState({seed: get_seed_name()});\n    this.enter_roguelike_mode();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"updated\");\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      console.log(\"Get the result\");\n      this.setState({\n        scenario_finished: true,\n        won: result.win,\n        level_achieved: this.get_risk_level(),\n        extra_gain: this.props.G.extra_gain,\n      });\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        else if (risk_level >= 50 && risk_level < 60) {\n          grade = \"SSSS\";\n        }\n        else if (risk_level >= 60 && risk_level < 70) {\n          grade = \"SSSSS\";\n        }\n        else if (risk_level >= 70 && risk_level < 100) {\n          grade = \"SSSSSS\";\n        }\n        else {\n          grade = \"SSSSSSSSS\";\n        }\n        // console.log(\"Time to alert finish\");\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n${this.state.daily_mode?`完成每日挑战: ${this.state.date}\\n`:\"\"}地图种子: ${this.state.seed}\\n${this.state.weekly_mode?`完成周常挑战: ${this.state.week}挑战${this.state.weekly_challenge_idx}\\n`:\"\"}`);\n\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n\n\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n        \n      \n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={() => {this.reset_preview_deck();this.check_deck();}} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      \"每日挑战\": this.enter_daily_mode,\n           // \"Roguelike模式\": this.enter_roguelike_mode,\n      \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_filter(this.state.preview_deck).map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n      <TypeFilterContainer \n        filters = {FILTERS.map(filter_ => ({\n          ...filter_,\n          selected: this.state.preview_filter == filter_.f,\n          handleClick: () => {\n            if (this.state.preview_filter == filter_.f) {\n              this.setState({preview_filter: default_filter});\n            }\n            else {\n              this.setState({preview_filter: filter_.f});\n            }\n          },\n        }))}\n      />\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.slice(0,5).map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {\n        this.roguelike.select_deck(deck);\n        // this.change_board(\"roguelike\");\n        this.roguelike.proceed();\n      },\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_entry\");\n  }\n  \n  enter_daily_mode() {\n    this.roguelike.enter_daily_mode();\n    this.change_board(\"tag\");\n  }\n\n  enter_difficulty(difficulty) {\n    this.roguelike.set_difficulty_S2(difficulty);\n    // this.change_board(\"roguelike_deck_selection\");\n    this.roguelike.proceed();\n  }\n\n  buy_item(idx) {\n    return () => {\n      let item = this.state.shop_items[idx];\n      this.setState({\n        current_item: item,\n        current_item_idx: idx,\n      });\n\n      if (item.indexes) {\n        this.change_board(\"roguelike_shop\");\n      }\n      else {\n        this.roguelike.buy();\n      }\n    };\n  }\n\n  render_roguelike_entry_board() {\n    let difficulties = [\n      {\n        name: \"欢乐云游\",\n        handleClick: () => this.enter_difficulty(\"easy\"),\n      },\n      {\n        name: \"整装待发\",\n        handleClick: () => this.enter_difficulty(\"medium\"),\n      },\n      {\n        name: \"苦难之路\",\n        handleClick: () => this.enter_difficulty(\"hard\"),\n      },\n    ];\n    return <RoguelikeEntry \n      difficulties = {difficulties}\n      back = {() => {this.roguelike.end_roguelike_mode();this.change_board(\"tag\");}}\n    />;\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <RoguelikeDeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} />\n// introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} \n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()} click_that_button={()=>this.roguelike.click_that_button()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} buy={this.buy_item} refresh_shop={this.roguelike.refresh_shop} />\n\n    const roguelike_main = <Roguelike \n      enter_battle = {() => this.change_board(\"tag\")}\n      enter_dream = {this.roguelike.enter_dream}\n      game_count = {this.state.game_count}\n      check_deck = {() => {this.setState({preview_deck:this.state.Deck});this.change_board(\"preview\");}}\n      check_relics = {() => {this.change_board(\"roguelike_relic_check\");}}\n    />;\n\n    const centrals = [roguelike_main, shop];\n\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_shop_board() {\n    // let cards = this.state.Deck.filter((x,idx) => this.state.current_item.indexes.includes(idx) && (idx < this.state.Deck.length));\n    let current_item = this.state.current_item;\n    let cards = (current_item.is_pick)? current_item.indexes.map(idx => CARDS[idx]) : current_item.indexes.map(idx => this.state.Deck[idx]).filter(x => x != undefined);\n    let selected_card = cards[this.state.shop_selected];\n    // console.log(cards);\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <div style={{marginTop: \"38.2%\", marginLeft: \"2%\"}}>{this.state.current_item.desc}</div>\n      <CardRow \n        cards = {cards.map(this.process_hand_data)}\n        handleClick = {(idx)=>()=>this.setState({shop_selected: idx})}\n        states = {this.state.current_item.indexes.map((x,idx) => ({selected: (idx==this.state.shop_selected)}))}\n        additionalStyle = {{marginTop: \"5%\"}}\n      />\n      <div style={{margin:\"5% 2% 5% 2%\", width:\"95%\", height:\"25%\", overflowY:\"hidden\"}}>\n        {selected_card && get_desc(selected_card)}\n      </div>\n      {(this.state.current_item.name != \"初始自选干员\")?(\n      <><button \n        className=\"preview-button\" \n        onClick={() => {\n          this.roguelike.buy(this.state.shop_selected);\n          this.roguelike.proceed();\n        }}\n      >\n        确认购买({ICONS.gold}{this.state.current_item.price})\n      </button>\n      <button className=\"preview-button\" onClick={this.roguelike.proceed}>返回</button>\n      </>):(<>\n      <button\n        className=\"preview-button\"\n        onClick={() => {\n          this.roguelike.select_init_card(this.state.shop_selected);\n        }}\n      >\n        加入牌组\n      </button>\n      </>)}\n    </div>);\n  }\n\n  render_roguelike_result_board() {\n    let level_diff = this.state.level_achieved - this.state.level_required;\n    let win = <ResultWin \n      game_count = {this.state.game_count}\n      level_required = {this.state.level_required}\n      level_achieved = {this.state.level_achieved}\n      gold_amount = {get_gold_gained(this.state.level_achieved, this.state.level_required)}\n      slam = {level_diff >= 4}\n      grand_slam = {level_diff >= 8}\n      continue = {() => {\n        let game_count = this.state.game_count;\n        this.roguelike.continue_run();\n        if (game_count < 9) {\n          // this.change_board(\"roguelike\");\n          this.roguelike.proceed();\n        }\n        else {\n          this.change_board(\"roguelike_final_result\");\n        }\n      }}\n    />\n    let lose = <ResultLose\n      game_count = {this.state.game_count}\n      continue = {this.end_roguelike_mode}\n    />\n    return this.state.won? win : lose;\n  }\n  \n  render_roguelike_final_result_board() {\n    let difficulty = {\n      easy: \"欢乐云游\",\n      medium: \"整装待发\",\n      hard: \"苦难之路\",\n    }[this.state.difficulty];\n    return <FinalResult \n      difficulty = {difficulty}\n      endgame = \"结束游戏\"\n      continue = {this.end_roguelike_mode}\n      rng = {this.state.rng || new PRNG(Math.random())}\n    />;\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_roguelike_deck_upgrade_board() {\n    return <DeckUpgrade \n    cards = {this.state.current_indexes.map(idx => this.state.Deck[idx]).map(this.process_hand_data)}\n    cardStates = {this.state.current_indexes.map((deck_idx, idx) => ({selected: idx == this.state.selection_selected}))}\n    selectedCard = {{...this.state.Deck[this.state.current_indexes[this.state.selection_selected]]}}\n    handleCardClick = {this.handle_selection_clicked}\n    upgrades = {this.state.current_upgrades.map(this.process_upgrade_data)}\n    upgradeStates = {this.state.current_upgrades.map(this.process_upgrade_state)}\n    selectedUpgrade = {{...this.state.current_upgrades[this.state.upgrade_selected]}}\n    handleUpgradeClick = {this.handle_upgrade_clicked}\n    handleClick = {this.roguelike.upgrade_card}\n    />;\n  }\n\n  render_roguelike_relic_selection_board() {\n    return <Relics \n      relics = {this.state.current_relics.map((relic,idx) => ({...relic, operation: {name: \"选择\", effect:()=>this.roguelike.pick_relic(idx)}}))}\n      proceed = {this.roguelike.proceed}\n    />;\n  }\n\n  render_roguelike_relic_check_board() {\n    return <Relics \n      relics = {this.state.relics.map((relic,idx) => ({...relic, operation: (relic.onUse)?{name: \"使用\", effect:() => this.roguelike.use_relic(idx)}:undefined})).filter(relic => !relic.used)}\n      proceed = {this.roguelike.proceed}\n      checking = {true}\n    />;\n  }\n\n  render_weekly_board() {\n    let setup = this.roguelike.setup_weekly_challenge;\n    let process_challenge = (challenge, idx) => {\n      return {\n        name: `挑战${idx+1}`,\n        ...challenge,\n        operation: {\n          name: \"挑战\",\n          effect() {\n            setup(idx);\n          }\n        },\n      };\n    };\n    return <Weekly \n      week = {this.state.week}\n      challenges = {this.state.challenges.map(process_challenge)}\n      back = {() => this.roguelike.end_weekly_mode()}\n      click_title={()=>{\n        console.log(\"Clicking title\");\n        this.state.dream_count = (this.state.dream_count + 1) || 1;\n        if (this.state.dream_count % 5 == 4) {\n          this.state.week += 1;\n          this.roguelike.generate_weekly_challenges();\n        }\n      }}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          {this.props.ctx.gameover? <span>{ICONS.endgame}结束游戏</span>:<span>{ICONS.endturn}结束回合</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"105%\",\n            top: \"4%\",\n            left: \"88%\",\n            paddingTop: \"1.5%\",\n\n            display: (this.state.competition_mode || this.state.roguelike_mode)?\"none\":\"\",\n          }}\n        >\n        {ICONS.reset}\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n          completed = {this.props.G.score / this.props.G.goal}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      快速设置: () => this.setState({\n        tags: choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      // 其他模式: () => this.change_board('mode_selection'),\n      // 每日挑战: this.enter_daily_mode,\n      周常挑战: () => this.roguelike.enter_weekly_mode(),\n      肉鸽模式: this.enter_roguelike_mode,\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n    if (this.state.roguelike_mode) {\n      actions = {};\n\n      if (risk_level >= this.state.level_required) {\n        actions.进入游戏 = () => this.enter_game();\n      }\n    }\n\n    if (this.state.daily_mode) {\n      let end_daily_mode = () => {\n          this.roguelike.end_daily_mode();\n          this.change_board(\"tag\");\n        };\n      actions = {\n        返回: end_daily_mode ,\n      };\n\n      if (risk_level >= this.state.level_required) {\n        actions = {\n          进入游戏: () => this.change_board(\"deck\"),\n          返回: end_daily_mode,\n        };\n      }\n    }\n\n    if (this.state.weekly_mode) {\n      actions = {\n        进入游戏: this.enter_game,\n        返回: () => this.change_board(\"weekly\"),\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n          just_selected = {this.state.just_selected}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"#cf1322\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16 && (!(this.state.roguelike_mode || this.state.daily_mode)))? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 1% 2%\",\n            display:(this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          今天是: {this.state.date}\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 3% 2%\",\n            display:(this.state.roguelike_mode || this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          要求危机等级: {this.state.level_required}\n        </div>\n\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        // this.setState({\n          // preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.reset_preview_deck();\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n        handleToggle = {() => this.setState({lock_seed: !this.state.lock_seed})}\n        locked = {this.state.lock_seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n  seed: 114514,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}