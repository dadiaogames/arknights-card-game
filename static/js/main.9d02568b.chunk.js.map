{"version":3,"sources":["icons.js","orders.js","cards.js","enemies.js","utils.js","Game.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","DeckGenerator.js","tags.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","rma","rock","d32","mine","block","order_illust","material_icons","ORDERS","requirements","score","reward","desc","effect","G","ctx","payMaterials","gainMaterials","materials","costs","harvest","CARDS","name","cost","atk","hp","illust","reinforce","onReinforce","self","reinforce_desc","onMine","power","deal_random_damage","onPlay","draw","onFight","action","exhaust_random_enemy","num_exhausted","efield","filter","x","exhausted","length","init_card_state","move","onOut","hand","field","card","enemy","i","deal_damage","ready_random_card","cure","payCost","get_rhine_order","finished","random","Shuffle","order","num_finished","map","slice","sort","danger","reinforce_hand","reinforce_card","Object","assign","ENEMIES","join","drawEnemy","is_elite","onUnrest","high","dmg","idx","Die","unyielding","map_object","fn","obj","new_obj","k","PRNG","seed","this","val","charCodeAt","Math","sin","result","floor","arr","len","randRange","d1","d2","cd_idx","splice","push","logMsg","count","cnt","gained","material","delta","use","out","deck","stage","amount","exhausted_enter","unshift","pop","drawOrder","odeck","orders","y","indexOf","sort_orders","sort_finished","order_id","edeck","enraged","switcher","surge","switchEnemy","unexhausted","exhausted_cards","includes","rhine","str2deck","deck_data","card_dict","item","arr2obj","cards","split","card_data","parseInt","target_card","j","msg","messages","AC","setup","get_enemies","concat","discard","ediscard","goal","max_danger","playing","console","log","moves","setDeck","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","play","act","setValue","attr","finishOrder","useOrder","harvest_orders","fight","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","c","get_blocker","blocker_idx","changeMsg","turn","onBegin","refresh","onTurnBegin","fog","onEnd","onEnemyStageEnd","endIf","win","reason","undefined","Card","props","additional_styles","e_illust","o_illust","cardState","border","selected","damaged","color","className","onClick","handleClick","style","cardStyle","keys","data","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","Controller","actions","process_action","checkCard","display","EnterGame","switchScene","Panel","content","TagSelection","tbody","row","row_tags","tag","borderColor","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","DeckGeneration","type","changeName","TitleScreen","textAlign","enterGame","checkRule","PREFIXES","strategies","get_random_card","rng","choice","get_deck_name","get_single_card","count1","count2","generate_deck","deck_name","s1","s2","strategy","arr2deck","remove_redundant","output","deck2str","TAGS","tag_list","t","process_tags","RULES","_","require","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_card_details","process_enemy_details","process_order_details","wrap_controller_action","set_branch","check_card","play_card","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","change_board","choose_tag","get_risk_level","enter_game","check_deck","back","state","hand_selected","field_selected","efield_selected","order_selected","finished_selected","hand_choices","branch","show_field","show_tag_selection","board","last_board","deck_mode","preview_deck","checking","scenario_finished","branches","部署","采掘","战斗","完成","行动","一键收货","log_select","new_tags","setState","reduce","acc","icon","order_effect","finished_effect","illust_detailed","cost_detailed","fontSize","times","quote","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","target","new_board","boards","reset","gameover","grade","alert","width","margin","overflow","position","top","left","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","deck_generation","deck_construction","onSelect","selectedIndex","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d02568b.chunk.js","sourcesContent":["import React from 'react';\nconst icon_height = \"25em\";\nconst attr_icon_height = \"20em\";\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://ak.mooncell.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} />),\n\n  rma: (<img src=\"http://ak.mooncell.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} />),\n\n  rock: (<img src=\"http://ak.mooncell.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} />),\n\n  d32: (<img src=\"http://ak.mooncell.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} />),\n\n  mine: (<img src=\"https://dss1.bdstatic.com/6OF1bjeh1BF3odCf/it/u=1672017263,313384077&fm=74&app=80&f=JPEG&size=f121,121?sec=1880279984&t=807e81fe43f1078031ace9ef194ff68a\" height={attr_icon_height} />),\n\n  block: (<img src=\"http://img5.imgtn.bdimg.com/it/u=1153648212,1889048357&fm=26&gp=0.jpg\" height={attr_icon_height} />),\n\n}","import React from 'react';\nimport { gainMaterials, payMaterials } from './Game';\nimport { ICONS } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nexport const ORDERS = [\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.score += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.score += 2;\n      }\n    },\n  },\n  \n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → ? + ?</span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        gainMaterials(G, ctx, 2);\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[1]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,1,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[2]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [0,0,1,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[0]} → {material_icons[3]} </span>),\n    effect(G, ctx) {\n      if (payMaterials(G, ctx, [1,0,0,0])) {\n        G.materials[3] += 1;\n        G.costs += 1;\n      }\n    },\n  },\n\n    {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card\n} from './Game';\nimport { material_icons } from './orders';\n\nexport var CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      G.score += 1 + self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+2*self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 3,\n    hp: 3,\n    mine: 1,\n    block: 1,\n    illust: \"http://ak.mooncell.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 4;\n    },\n    reinforce_desc: \"+0/+4\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.mine += 1;\n    },\n    reinforce_desc: \"<+1>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 6,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n\n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 8,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://ak.mooncell.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+6/+2\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 1,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://ak.mooncell.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个随机材料\",\n    illust:\"http://ak.mooncell.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1个\",\n  },\n\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 0,\n    illust:\"http://ak.mooncell.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动：获得3点费用\",\n    action(G, ctx, self) {\n      G.costs += 3 + 3 * self.power;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得3点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"战斗：获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘：获得2点费用\", \n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘：横置1个敌人，然后每有1个横置的敌人，就获得1点费用\", \n    illust:\"http://ak.mooncell.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += num_exhausted + self.power * 2;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得2点费用\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动：打出牌库顶的1张牌\", \n    illust:\"http://ak.mooncell.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      let card = move(G, ctx, \"deck\", \"field\");\n      init_card_state(G, ctx, card);\n      //EH: add \"init field card state\" function\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"红豆\", \n    cost:4, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"亡语：将手牌中的1名干员部署到场上\", \n    illust:\"http://ak.mooncell.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    onOut(G, ctx, self) {\n      if (G.hand.length > 0) {\n        let card = move(G, ctx, \"hand\", \"field\");\n        init_card_state(G, ctx, card);\n      }\n      G.costs += 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"并返还2点费用\",\n  },\n  \n  {\n    name:\"推进之王\", \n    cost:4, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署：所有手牌的费用-1\", \n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce_desc: \"触发一次”部署:“效果\",\n  },\n\n  {\n    name:\"天火\", \n    cost:5, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"部署：场上所有其他干员获得<+2>\", \n    illust:\"http://ak.mooncell.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card.name != self.name) {\n          card.mine += 2;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"能天使\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"攻击被横置的敌人时，对所有敌人造成2点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        for (let i=G.efield.length-1; i>=0; i--) {\n          deal_damage(G, ctx, \"efield\", i, 2+self.power);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗：对一个敌人造成3点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3+self.power*2);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+2\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:4, \n    atk:2, \n    hp:2, \n    mine:1, \n    block:2, \n    desc:\"部署：场上每有1个干员，就获得+1/+1和<+1>\", \n    illust:\"http://ak.mooncell.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        self.atk += 1;\n        self.hp += 1;\n        self.mine += 1;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"陈\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署：对两名敌人造成4点伤害\", \n    illust:\"http://ak.mooncell.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.onPlay(G, ctx);\n    },\n    reinforce_desc: \"触发一次”部署:“效果\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:4, \n    hp:5, \n    mine:2, \n    block:1, \n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:6, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc: <span>部署：获得2个{material_icons[3]}</span>, \n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onPlay(G, ctx, self) {\n      G.materials[3] += 2;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      G.materials[3] += 1;\n    },\n    reinforce_desc: <span>获得1个{material_icons[3]}</span>,\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:5, \n    mine:1, \n    block:2, \n    desc:\"行动：获得+3生命值\", \n    illust:\"http://ak.mooncell.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 3 + 2 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2生命值\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗：横置1个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 8;\n    },\n    reinforce_desc: \"+0/+8\",\n  },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:3, \n    hp:8, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗：重置1个干员\", \n    illust:\"http://ak.mooncell.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 8;\n    },\n    reinforce_desc: \"+0/+8\",\n  },\n  \n  {\n    name:\"芙蓉\", \n    cost:2, \n    atk:0, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动：使一名干员获得+4生命值\", \n    illust:\"http://ak.mooncell.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 4 + 2 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+2生命值\",\n  },\n  \n  {\n    name:\"清流\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动：使一名干员获得+6生命值\", \n    illust:\"http://ak.mooncell.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    action(G, ctx, self) {\n      cure(G, ctx, 6 + 5 * self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得+5生命值\",\n  },\n  \n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"行动：横置2个敌人\", \n    illust:\"http://ak.mooncell.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n      if (self.power > 0) {\n        exhaust_random_enemy(G, ctx);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再横置1个，限强化1次\",\n  },\n  \n  {\n    name:\"阿消\", \n    cost:4, \n    atk:3, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"行动：消耗3点费用，获得4分\", \n    illust:\"http://ak.mooncell.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3-2*self.power)) {\n        G.score += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用-2\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署：获得2个“莱茵生命订单”\",\n    illust:\"http://ak.mooncell.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onPlay(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      get_rhine_order(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      get_rhine_order(G, ctx);\n    },\n    reinforce_desc: \"获得1个”莱茵生命订单“\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动：重置1个干员，获得1个“莱茵生命订单”\",\n    illust:\"http://ak.mooncell.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      get_rhine_order(G, ctx);\n      ready_random_card(G, ctx, self);\n      if (self.power > 0) {\n        ready_random_card(G, ctx, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再重置1个干员，限强化1次\",\n  },\n\n  {\n    name:\"伊芙利特\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:4,\n    block:0,\n    desc:\"行动：重置所有已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/5/53/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9_1.png\",\n    action(G, ctx, self) {\n      for (let order of G.finished) {\n        order.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 3;\n    },\n    reinforce_desc: \"<+3>\",\n  },\n  \n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"采掘：重置1个已完成的订单\",\n    illust:\"http://ak.mooncell.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    onMine(G, ctx, self) {\n      for (let order of ctx.random.Shuffle(G.finished)) {\n        if (order.exhausted) {\n          order.exhausted = false;\n          break;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+4/+2\",\n  },\n  \n  {\n    name:\"塞雷娅\",\n    cost:7,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署：每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"采掘：触发场上所有干员的“采掘:”效果\",\n    illust:\"http://ak.mooncell.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      for (let card of G.field) {\n        if (card.onMine && (card.name != self.name)) {\n          card.onMine(G, ctx, self);\n          if (self.power > 0) {\n            card.onMine(G, ctx, self);\n          }\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.onMine(G, ctx, self);\n    },\n    reinforce_desc: \"触发一次自己的“采掘:”效果\",\n  },\n  \n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:3,\n    block:1,\n    desc:\"部署：触发手牌中所有干员的“部署:”效果\",\n    illust:\"http://ak.mooncell.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.name != self.name)) {\n          card.onPlay(G, ctx, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"莫斯提马\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"采掘：每有1个横置的敌人，就额外获得1个随机材料\",\n    illust:\"http://ak.mooncell.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n    onMine(G, ctx, self) {\n      if (self.power > 0) {\n        exhaust_random_enemy(G, ctx);\n      }\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      gainMaterials(G, ctx, num_exhausted);\n    },\n    reinforce: 2,\n    reinforce_desc: \"获得”采掘:横置1个敌人“，限强化1次\",\n  },\n\n  {\n    name:\"银灰\",\n    cost:6,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗：消耗1个{material_icons[3]}，并重置自己</span>,\n    illust:\"http://ak.mooncell.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n      }\n    },\n    onFight(G, ctx, self) {\n      self.onMine(G, ctx, self);\n    },\n    reinforce: 2,\n    reinforce_desc: \"+3/+1 <+1>\",\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n      self.mine += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:3,\n    hp:4,\n    mine:1,\n    block:1,\n    desc:<span>行动：消耗1个{material_icons[3]}，获得3分</span>,\n    illust:\"http://ak.mooncell.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        G.score += 3 + self.power;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1分\",\n  },\n  {\n    name:\"初雪\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:<span>行动：获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n    illust:\"http://ak.mooncell.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n    action(G, ctx, self) {\n      G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n    },\n    reinforce: 1,\n    reinforce_desc: \"获得2点费用\",\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n  },\n  {\n    name:\"角峰\",\n    cost:4,\n    atk:2,\n    hp:5,\n    mine:1,\n    block:2,\n    desc:<span>部署：每有1个{material_icons[3]}，就获得+1/+1</span>,\n    illust:\"http://ak.mooncell.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n    onPlay(G, ctx, self) {\n      self.atk += G.materials[3];\n      self.hp += G.materials[3];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+1/+3\",\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗：化解1点动乱值\",\n    illust:\"http://ak.mooncell.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:2,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"采掘/战斗：强化1张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_hand(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  {\n    name:\"真理\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动：强化1张手牌\",\n    illust:\"http://ak.mooncell.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+1; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:5,\n    mine:1,\n    block:2,\n    desc: \"部署：在手牌中每被强化过1次，就强化场上的1名干员\",\n    illust:\"http://ak.mooncell.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let power = self.power || 0;\n      for (let i=0; i<power; i++) {\n        let card = ctx.random.Shuffle(G.field)[0];\n        if (card){\n          reinforce_card(G, ctx, card);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+1/+2\",\n  },\n  {\n    name:\"早露\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"部署：在手牌中每被强化过1次，就对一名敌人造成3点伤害\",\n    illust:\"http://ak.mooncell.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let power = self.power || 0;\n      for (let i=0; i<power; i++) {\n        deal_random_damage(G, ctx, 3);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"对一名敌人造成3点伤害\",\n  },\n\n  {\n    name:\"伊桑\",\n    cost:3,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    desc: \"部署：变成场上一名干员的复制\",\n    illust:\"http://ak.mooncell.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      if (G.field.length > 0){\n        G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.danger += 1;\n    },\n    reinforce_desc: \"动乱值+1\",\n  },\n\n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import { drawEnemy, switchEnemy, deal_damage } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 3,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"猎犬\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://ak.mooncell.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"涌动\",\n    onPlay(G, ctx) {\n      drawEnemy(G, ctx);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onUnrest(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://ak.mooncell.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对最后部署的高台位造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        high[high.length-1].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场：使一个敌人获得+3攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 3;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://ak.mooncell.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换，行动：对所有干员造成等同于自己攻击力的伤害\",\n    action(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 3,\n    illust: \"http://ak.mooncell.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"亡语：对一个随机干员造成{攻击力+2}点伤害\",\n    onOut(G, ctx, self) {\n      if (G.field.length > 0) {\n        let idx = ctx.random.Die(G.field.length) - 1;\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n      }\n    }\n    \n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://ak.mooncell.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  }\n\n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n}","import { React } from 'react';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons } from \"./orders\";\nimport { arr2obj } from \"./utils\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let cd_idx = idx || 0;\n  let card = G[d1].splice(cd_idx, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost) {\n  if (G.costs >= cost) {\n    G.costs -= cost\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let cnt = count || 1;\n  let gained = [];\n\n  for (let i=0; i<cnt; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nfunction get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  for (let c of G.field) {\n    blocked_enemies += c.block || 0;\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  //cards with no damage may not have the damage attr\n  card.dmg = card.dmg || 0;\n  card.dmg += dmg;\n  logMsg(G, ctx, `${card.name} 受到${dmg}点伤害`);\n\n  if (card.dmg >= card.hp && G.stage != \"enemy\") {\n    out(G, ctx, deck, idx);\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  if (G.efield.length > 0){\n    let idx = ctx.random.Die(G.efield.length) - 1\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function draw(G, ctx) {\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } //TODO: else, lose the game\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  if (payCost(G, ctx, card.cost)) {\n    move(G, ctx, \"hand\", \"field\", idx);\n    init_card_state(G, ctx, card);\n    logMsg(G, ctx, `部署 ${card.name}`);\n    //TODO: if this is a spell instead of creature\n    //TODO: onPlay\n    if (card.onPlay) {\n      card.onPlay(G, ctx, card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nfunction drawOrder(G, ctx) {\n  if (G.odeck.length > 0) {\n    move(G, ctx, \"odeck\", \"orders\");\n    sort_orders(G);\n  }\n}\n\nfunction sort_orders(G) {\n  G.orders = G.orders.sort((x,y)=>(x.requirements.indexOf(3)-y.requirements.indexOf(3)));\n}\n\nfunction sort_finished(G) {\n  G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.materials[order.reward] += 1;\n    G.score += order.score;\n    G.finished.push(G.orders.splice(idx, 1)[0]);\n    logMsg(G, ctx, \"完成订单\");\n    sort_finished(G);\n  }\n}\n\nfunction useOrder(G, ctx, idx) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order)) {\n    order.effect(G, ctx);\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = true;\n    enemy.dmg = 0;\n    enemy.enraged = false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n    }\n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  let surge = false;\n  if (len == 1) {\n    surge = true;\n  }\n  else if (switcher.is_elite) {\n    surge = true;\n  }\n\n  if (surge) {\n    G.efield.pop();\n    drawEnemy(G, ctx);\n  }\n  else {\n    G.efield.splice(len-2, 1);\n  }\n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card)) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card)) {\n    card.action(G, ctx, card);\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0;\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (![self.name, \"雷蛇\", \"白面鸮\"].includes(x.name))));\n  if (exhausted_cards.length > 0) {\n    ctx.random.Shuffle(exhausted_cards)[0].exhausted = false;\n  }\n\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let ranked_field_by_dmg = G.field.map(x=>x).sort(x => -x.dmg);\n  let card = ranked_field_by_dmg[0];\n  card.dmg -= amount;\n  if (card.dmg < 0) {\n    card.hp -= card.dmg;\n    card.dmg = 0;\n  }\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = Object.assign({}, ctx.random.Shuffle(G.odeck)[0]);\n  order.rhine = true;\n  G.finished.unshift(order);\n  sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  G.stage = \"enemy\";\n}\n\nfunction enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n    if (enemy.action) {\n      enemy.action(G, ctx, enemy);\n    }\n\n    else if (enemy.enraged) {\n      deal_damage(G, ctx, \"field\", ctx.random.Die(G.field.length)-1, enemy.atk);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n      }\n\n      else {\n        G.danger += 1;\n        logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n        if (enemy.onUnrest) {\n          enemy.onUnrest(G, ctx, enemy);\n        }\n      }\n    }\n  }\n}\n\nfunction onEnemyStageEnd(G, ctx) {\n  for (let i=G.field.length-1; i>=0; i--) {\n    let card = G.field[i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, \"field\", i);\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  for (let i=0; i<4; i++){\n    drawOrder(G, ctx);\n  }\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn();\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\nfunction setDeck(G, ctx, deck_data) {\n  G.deck = ctx.random.Shuffle(str2deck(deck_data));\n}\n\nfunction logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function setup(ctx) {\n    const G = {};\n\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies()));\n    G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    G.finished = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [0, 0, 0, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n\n    G.exhausted_enter = false;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n\n    console.log(ctx.random);\n\n    return G;\n  }\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setDeck,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    setValue,\n    drawOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        refresh(G, ctx);\n        draw(G, ctx);\n        drawOrder(G, ctx);\n        G.costs += 3;\n\n        for (let card of G.field.concat(G.efield.concat(G.finished))) {\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n        }\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      onEnemyStageEnd(G, ctx);\n    },\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import React from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    hp: {},\n    atk: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid red\";\n    additional_styles.illust.border = exhausted_border;\n    additional_styles.e_illust.border = exhausted_border;\n    additional_styles.o_illust.border = exhausted_border;\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid purple\";\n      additional_styles.illust.border = selected_exhausted_border;\n      additional_styles.e_illust.border = selected_exhausted_border;\n      additional_styles.o_illust.border = selected_exhausted_border;\n\n    }\n    else {\n      let selected_border = \"3px solid blue\";\n      additional_styles.illust.border = selected_border;\n      additional_styles.e_illust.border = selected_border;\n      additional_styles.o_illust.border = selected_border;\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"purple\";\n  };\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      {Object.keys(props.data).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states[idx]}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { material_icons } from './orders';\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>强化{material_icons[parseInt(action[2])]}</span>);\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" >\n      <button\n        className = \"enter-game\"\n        onClick = {props.switchScene}\n      >\n        {props.action}\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};","import React from 'react';\nimport './TagSelection.css';\n\nexport const TagSelection = (props) => {\n  let tbody = [];\n\n  for (let i=0; i<props.tags.length; i+=3) {\n    let row = [];\n    let row_tags = props.tags.slice(i, i+3);\n    for (let tag of row_tags) {\n      row.push(\n        <td \n          onClick={props.handleClick(props.tags.indexOf(tag))}\n        >\n          <div className=\"tag\">\n          <img \n            className=\"tag-img\" \n            src={tag.src}\n            style={{\n            borderColor: (tag.selected)? \"red\":\"black\"\n          }} \n          ></img>\n          </div>\n        </td>\n      );\n    }\n    tbody.push(<tr>{row}</tr>);\n  }\n\n  return (\n    <div className=\"tag-selection\" >\n      <table>\n        <tbody>{tbody}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level==3)?\"red\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        请组出一套强力或欢乐的卡组\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n      <br/>\n      <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p>\n    </div>\n  );\n};","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"50%\"}}>\n    <h2>明日方舟: 采掘行动</h2>\n    <button className=\"title-screen-button\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkRule}>查看规则</button><br/>\n    <button className=\"title-screen-button\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);","import { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst dubin_score = `杜宾 1 3\n推进之王 1 3\n天火 1 3\n香草 2 3\n讯使 2 3\n芬 2 3\n桃金娘 1 2\n米格鲁 1 3\n玫兰莎 1 3\n芙蓉 1 3\n克洛丝 1 3\n清流 0 1\n蛇屠箱 0 1\n史都华德 1 3\n炎熔 1 3\n阿米娅 1 3\n杰西卡 1 3\n白面鸮 0 2\n梓兰 1 2\n凛冬 0 2\n真理 0 2`;\n\nconst solve = `空 0 2\n能天使 0 2\n天火 1 3\n克洛丝 1 3\n杰西卡 1 3\n蓝毒 1 3\n巡林者 1 2\n银灰 0 2\n桃金娘 1 2\n香草 2 3\n陈 1 2\n炎熔 0 2\n芬 0 2\n推进之王 0 2\n阿消 0 2\n白面鸮 0 2\n梓兰 0 2\n真理 0 2\n伊桑 0 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n可颂 1 3\n能天使 1 3\n莫斯提马 1 3\n巡林者 0 2\n雷蛇 0 2\n桃金娘 1 3\n阿消 1 3\n白面鸮 0 2\n天火 0 2\n伊桑 0 2`;\n\nconst highcost = `风笛 3 4\n红豆 0 2\n桃金娘 2 3\n蛇屠箱 1 2\n清流 1 3\n巡林者 1 3\n12F 1 3\n黑角 1 3\n芙兰卡 0 2\n可颂 0 2\n陈 0 2\n蓝毒 0 2\n雷蛇 0 2\n星极 0 2\n银灰 0 2\n白面鸮 0 2\n梓兰 1 2\n伊桑 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 2 3\n伊芙利特 1 2\n塞雷娅 1 2\n远山 0 2\n清流 1 2\n桃金娘 2 3\n讯使 2 3\n炎熔 2 3\n蛇屠箱 0 2\n梓兰 1 2\n伊桑 0 1`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 2 3\n远山 0 2\n杰西卡 2 3\n讯使 2 3\n德克萨斯 1 3\n雷蛇 0 2\n可颂 0 2\n蓝毒 0 2\n陈 0 2\n芬 0 2\n梓兰 1 2\n凛冬 1 2\n伊桑 0 1`;\n\nconst angelina = `安洁莉娜 1 2\n芬 2 3\n推进之王 1 3\n桃金娘 1 2\n米格鲁 0 1\n杜宾 1 2\n塞雷娅 0 2\n天火 1 2\n陈 1 2\n赫默 1 2\n星极 1 2\n伊桑 0 2`;\n\nconst karlan = `银灰 1 3\n崖心 1 3\n角峰 1 3\n初雪 3 4\n星极 0 2\n赫默 0 1\n白面鸮 0 2\n雷蛇 0 2\n蓝毒 0 2\n杰西卡 0 2\n讯使 2 3\n桃金娘 1 2\n芬 0 2\n梓兰 1 2\n凛冬 0 2\n伊桑 0 2`;\n\nconst ursus = `凛冬 2 3\n真理 3 4\n古米 1 3\n早露 2 3\n阿米娅 0 2\n杰西卡 0 2\n蓝毒 0 2\n黑角 0 2\n巡林者 0 1\n桃金娘 1 3\n推进之王 0 2\n陈 0 2\n初雪 0 2\n芙兰卡 0 2\n雷蛇 0 2\n白面鸮 0 2\n银灰 0 2\n伊桑 0 2`;\n\nconst strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus];\n\n\nfunction get_random_card(rng) {\n  return rng.choice(CARDS).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nexport function generate_deck(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n  let s1 = rng.choice(strategies).split(\"\\n\");\n  let s2 = rng.choice(strategies).split(\"\\n\");\n  for (let s of s1.concat(s2)) {\n    let strategy = s.split(\" \");\n    deck.push(get_single_card(rng, strategy[0], parseInt(strategy[1]), parseInt(strategy[2])));\n  }\n\n  deck = remove_redundant(deck);\n  deck = arr2deck(deck);\n\n  if (deck.length < 30) {\n    for (let i=0; i<(30-deck.length); i++) {\n      deck.push(get_random_card(rng));\n    }\n  }\n\n  if (deck.length > 30) {\n    for (let i=0; i<(deck.length-30); i++) {\n      deck.splice(rng.randRange(deck.length), 1);\n    }\n  }\n\n  return deck2str(deck);\n\n  //TODO: let deck be the summarized version, this is an advanced feature\n}","const tag_list = [\n  {\n    src: \"http://ak.mooncell.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+2\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://ak.mooncell.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+1生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/6/6d/Enemy_eagent_1.png\",\n    desc: \"敌人无法被横置\",\n    level: 2,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.unyielding = true;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/3/3f/Char_blockminus_2.png\",\n    desc: \"所有干员阻挡数-1\",\n    level: 2,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        if (card.block > 0) {\n          card.block -= 1;\n        }\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/f/f7/Enemy_movespeed_1.png\",\n    desc: \"干员以横置状态入场\",\n    level: 3,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"所有敌人获得+2/+2\",\n    level: 3,\n    effect(G, ctx){\n      for (let enemy of G.edeck) {\n        enemy.atk += 2;\n        enemy.hp += 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    effect(G, ctx){\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/0/09/Enemy_hp_3.png\",\n    desc: \"胜利所需分数+5\",\n    level: 3,\n    effect(G, ctx){\n      G.goal += 5;\n    }\n  },\n\n  {\n    src: \"http://ak.mooncell.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS } from './orders';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>消耗费用(写在卡牌左上角)，将干员从手牌中部署到场上；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士首先使用“星极”进行采掘，星极的采掘能力为3，因此获得3个随机材料，博士因此获得了“扭转醇”、“扭转醇”和“研磨石”；然后使用“阿米娅”进行采掘，阿米娅的采掘能力为2，因此获得“扭转醇”和“RMA12”，而阿米娅的效果为“采掘: 获得1分”，所以在采掘完成后，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 选定场上的一名干员，和一名敌人，该干员对敌人造成等同于自己攻击力的伤害；<br/>\n  <i>举例: 博士使用“克洛丝”对“破阵者”发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果场上的一名干员有“行动”效果，则可以横置该干员，然后触发其“行动”效果；<br/>\n  <i>举例: 博士“桃金娘”行动，桃金娘的效果为“行动: 获得3点费用”，因此博士横置桃金娘后，获得了3点费用</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在订单右上角，一般是一些分数和一个材料)，完成订单是得分的主要手段；\"D32钢\"是百搭资源，可作为任意资源交付订单；<br/><br/>\n  <b>* 使用订单:</b> 完成的订单，拥有自己的订单能力，每回合可以使用一次；<br/>\n  <i>举例: 博士首先使用完成的第一个订单，能力描述为“扭转醇→？+？”，也就是可以用1个扭转醇换2个随机材料，博士因此消耗1个扭转醇，获得了2个随机材料，分别为“研磨石”和“研磨石”，此时博士刚好凑够了3个研磨石，立刻完成了一个需要3个研磨石的订单，获得了2分和1个“RMA12”，该订单的能力描述为“扭转醇→2分”，也就是可以用1个扭转醇换2分，博士使用了该订单，消耗了1个扭转醇，获得了2分；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次，在你的回合结束后，进入整合运动阶段；<br/><br/>\n  首先，翻开2张敌人牌，以横置状态入场；<br/><br/>\n  然后，场上处于重置状态的敌人，从左到右行动一次，被阻挡的敌人，会向阻挡者发起攻击，未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，“阻挡X”表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n</div>;","import React from 'react';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { Card, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration } from './DeckConstruction';\nimport { TitleScreen } from './TitleScreen';\nimport { get_deck_name, generate_deck } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, sleep } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { RULES } from './rules';\n\nimport './Board.css';\nimport 'react-tabs/style/react-tabs.css';\n\nvar _ = require(\"lodash\");\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      board: this.render_title_board, \n      // board: this.render_mulligan_board,\n      last_board: this.render_title_board,\n\n      tags: TAGS,\n      risk_level: 0, // this is changed on game begin\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: \"5 黑角\\n5 巡林者\\n5 12F\",\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      checking: {},\n\n      scenario_finished: false,\n    };\n\n    this.branches = { // TODO: set all \"check\" aside to the right, this is not done using Controller, first set the width of controller, then add a new button on render_board\n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        一键收货: this.harvest_orders,\n      },\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => t.selected);\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n  \n  process_hand_data(card) {\n    let data = {\n      illust: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card) {\n    return {\n      selected: (this.state.hand_selected == this.props.G.hand.indexOf(card)),\n    }\n  }\n  \n  process_field_data(card) {\n    let data = {\n      illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card) {\n    return {\n      selected: (this.state.field_selected == this.props.G.field.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n    }\n  }\n\n  process_efield_data(card) {\n    return {\n      e_illust: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card) {\n    return {\n      selected: (this.state.efield_selected == this.props.G.efield.indexOf(card)),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      enraged: card.enraged,\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    return {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      requirements: requirements,\n      score: card.score,\n      reward: material_icons[card.reward],\n      order_effect: card.desc,\n    };\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n    }\n  }\n\n  process_card_details(card) {\n    return {\n      illust_detailed: card.illust,\n      cost_detailed: card.cost,\n      desc: (\n        <span>\n          <span style={{fontSize:\"120%\"}}>\n            {card.atk}/{card.hp} &nbsp;\n            {ICONS.mine}{card.mine} &nbsp;\n            {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n          </span>\n          <br/>\n          {card.desc||\"\"}\n          <br/>\n          ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n          <br />\n          <i>{card.quote||\"\"}</i>\n        </span>\n      ), // TODO: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      this.setState({\n        hand_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.set_branch(\"hand\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      this.setState({\n        order_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"orders\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      this.setState({\n        finished_selected: idx,\n        checking: this.process_order_details(card),\n      });\n      this.set_branch(\"finished\");\n      this.log_select()(\"选定订单\");\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\"\n    this.setState(\n      {deck_data: event.target.value}\n    );\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  change_board(new_board) {\n    const boards = {\n      \"title\": this.render_title_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: boards[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n    this.props.moves.setDeck(deck);\n    this.props.moves.addTags(this.state.tags.filter(t => t.selected));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({scenario_finished: false});\n    this.change_board(\"tag\");\n  }\n\n  componentDidUpdate() {\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      this.setState({scenario_finished: true});\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level >= 0 && risk_level < 2) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 2 && risk_level < 4) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 4 && risk_level < 8) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 8 && risk_level < 12) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 12 && risk_level < 16) {\n          grade = \"SS\";\n        }\n        else {\n          grade = \"SSS\";\n        }\n        alert(`任务完成\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:\"自组卡组\"}`);\n      }\n\n      else {\n        alert(`任务失败\\n原因: ${result.reason}`);\n\n      }\n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={this.check_deck} />\n    </div>;\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n        }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        */}\n      {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid blue\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    let material_display = (idx) => (\n      <span style={{color:(this.props.G.gained.includes(idx))?\"blue\":\"black\"}}>\n        {material_icons[idx]}:{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </span>\n    );\n\n    let player_panel = (<div>\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(material_display)}\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? \"查看订单\" : \"查看战场\"}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\")? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            this.props.moves.enemyInit();\n            this.enemy_move(-2);\n          }}\n        >\n          结束回合\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button>\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        分数:{this.props.G.score}/{this.props.G.goal}<br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}>{this.props.G.messages[0]}</span>\n      </p>\n          </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (\n      <CardRow \n        cards = {this.props.G.finished.map(this.process_finished_data)}\n        states = {this.props.G.finished.map(this.process_finished_state)}\n        handleClick = {this.handle_finished_clicked}\n        additionalStyle = {{height: \"25%\", marginTop:\"16%\"}}\n      />\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => t.selected)}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"red\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=5)? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        \n        <EnterGame \n          switchScene = {() => {this.change_board(\"deck\")}}\n          action = \"查看卡组\"\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          switchScene = {() => {this.enter_game()}}\n          action = \"进入游戏\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}