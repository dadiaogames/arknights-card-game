{"version":3,"sources":["icons.js","orders.js","cards.js","Game.js","enemies.js","upgrades.js","utils.js","DeckGenerator.js","Shaker.js","Ripple.js","Card.js","Controller.js","Panel.js","TagSelection.js","DeckConstruction.js","TitleScreen.js","Competition.js","tags.js","Roguelike.js","rules.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["ICONS","alcohol","src","height","className","rma","rock","d32","mine","block","gold","style","order","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","play","mineAction","points","fight","action","x1","y1","x2","y2","check","cx","cy","r","finish","endturn","endgame","pick","battlefield","food_icons","color","smaller_icons","order_illust","material_icons","ready_order","G","ctx","from_card","random","Shuffle","finished","filter","x","exhausted","ready_other_orders","advanced_orders","requirements","score","reward","advanced","desc","effect","field_selected","card","field","logMsg","name","length","atk","hp","costs","slice","colors","reduce","acc","val","times","_","min","ORDERS","payCost","materials","cost","harvest","CARDS","illust","reinforce","onReinforce","self","reinforce_desc","onMine","delta","power","achieve","queen","find","Object","assign","onPlay","deal_random_damage","white","draw","onTurnBegin","onFight","eliminate_field","exhaust_random_enemy","num_exhausted","efield","Math","enemy","dmg","new_card","deck","idx","indexOf","splice","init_card_state","hand","gainMaterials","drop","ready_random_card","summon","choice","cure","sort","y","cured","fully_restore","onPlayCard","push","this","floor","was_enemy","extra_cards","generator","num_finished","miners","unshift","fighters","map","actors","battlecries","onPayCost","amount","i","score_gained","onCardFight","includes","onEnemyOut","discard","cards","extracted_attrs","skill_power","reinforce_skill","j","onCardMine","undefined","payMaterials","use_count","danger","reinforce_hand","num_reinforced","reinforce_field","onDropCard","played","has_discarded","onOut","gravel","join","excess","max","player","add_vulnerable","damaged_enemy","onRest","silent","cost_remained","meteorite","fever","mcard","enemy2card","enemy_idx","e","texas","wind","reinforce_card","BORROWS","generate_combined_card","blank_enemy","heijiao_in_dream","material","Die","ENEMIES","self_copy","is_elite","high","deal_damage","unyielding","enraged","drawEnemy","goal","UPGRADES","is_init","onPlayBonus","odeck","map_object","fn","obj","new_obj","k","PRNG","seed","charCodeAt","sin","result","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","PREFIXES","split","SEEDS","cost_vanguard","scorer","strategies","mini_sets","mini_set","get_random_card","rng","banned_cards","card_pool","get_deck_name","get_seed_name","String","fromCharCode","get_single_card","count1","count2","count","deck2str","output","keys","c","deck_from_strategy","strategy","parseInt","shuffle","arr2deck","generate_deck_s1","deck_name","amount_add","generate_deck_s2","deck_dict","sets","deck_from_mini_sets","generate_roguelike_deck","generate_deck","is_standard","deck_data","numbers","names","isNaN","unique_names","Set","sum","move","d1","d2","f","gained","use","out","total_dmg","vulnerable","exhausted_enter","limit_hand","pop","refreshOrder","orders","price_y","price_x","price_up","edeck","enemy_exhausted_enter","switcher","switchEnemy","replace","reversed","time_points","effects","EFFECTS","title","reverse","alist","unexhausted","exhausted_cards","prepared_cards","ready_times","clearField","str2deck","card_dict","item","arr2obj","card_data","target_card","msg","messages","achievement_name","achievement_desc","achievements","alert","setup_events","onCardAct","onCardReinforced","onUseOrder","setup_scenario","ediscard","picks","max_danger","num_enemies_out","field_limit","playing","stage","round_num","console","log","refresh_selections","selections","Deck","upgrades","num_upgrades","finish_upgrading","get_desc","fontSize","display","quote","AC","setup","moves","setDecks","decks","shuffle_times","D4","addTags","tags","onScenarioBegin","events","endTurn","mulligan","choices","discarded","num_draw","inserted","play_card","act","reinforce_need_cost","rest","rest_cards","num_rest_cards","setValue","attr","finishOrder","useOrder","enemy_selected","harvest_orders","idx1","idx2","enemyInit","enemyMove","blocker","blocked_enemies","get_blocker","blocker_idx","card_idx","changeMsg","setup_competition_deck","setup_deck_selection","num_shuffles","deck_list","deck_names","deck_generators","select_deck","upgrade","upgrade_idx","upgraded","price","turn","onBegin","concat","refresh","refresh_picks","setup_turn_states","enemy_grow","enemy_hp_grow","reinforceOnR3","dashOnR3","reinforceOnR4","moreEnemiesOnR3","fog","reduce_goal","onEnd","endIf","win","reason","useShaker","setPlaying","changeX","changeY","config","from_state","to_state","useSpring","from","to","transform","interpolate","ripple_style","position","borderRadius","background","Ripple","props","variants","opacity","anim","duration","div","Card","additional_styles","e_illust","o_illust","r_illust","upgrade_name","cost_detailed","order_effect","finished_effect","cardState","border","selected","damaged","borderColor","order_colors","shaker","shaking","setShaking","useEffect","onClick","handleClick","cardStyle","top","left","data","key","variant","value","additionalStyle","Data","is_img","img_tag","CardRow","states","SCard","SCardRow","additionalStyles","CheckCard","align","actions_with_icon","采掘","战斗","行动","部署","查看","完成","拿取","Controller","actions","process_action","checkCard","EnterGame","divAlign","Panel","content","ScoreBoard","useState","MaterialDisplay","Tag","bg_color","locked","backgroundColor","TagSelection","tag","TagList","marginLeft","marginTop","selected_tags","level","RiskLevel","risk_level","DeckConstruction","onChange","handleChange","rows","cols","checkDeck","checkCards","DeckGeneration","type","changeName","Settings","back","padding","TitleScreen","textAlign","href","enterGame","checkRule","ModeSelection","DeckRepr","deckName","selectDeck","introduce_competition_mode","DeckSelection","welcome_title","introduce","introduce_title","DeckUpgrade","upgradeStates","handleUpgradeClick","selectedUpgrade","cardStates","handleCardClick","selectedCard","process_selected_desc","margin","Competition","results","finalResult","TAGS","tag_list","t","process_tags","challenge","standard_level","rhodes_training_mode","introduce_roguelike_mode","reset_tags","reduce_basic_tags","t1","t2","setup_daily_tags","S","date","locked_tags","other_tags","setup_normal_challenge","level_required","final_tag","basic_tags","another_challenge_tag","advanced_tags","setup_exhausted_challenge","preprocess_roguelike_card","get_pick","selection","get_roguelike_pick","reset_card_picks","card_picks","get_shop_item","item_type","shop_item","indexes","onBought","get_upgrade","reinforce_time","reinforce_once","get_reinforced_card","delete_card","payGold","reset_shop","shop_items","get_gold_gained","gold_gained","level_diff","RoguelikeDeckSelection","RoguelikeDeckRepr","Pick","check_cards","pick_cards","GoldAmount","PickCards","skip_picks","ShopItem","buy","Shop","refresh_shop","Roguelike","game_count","enter_dream","enter_battle","check_deck","check_relics","FinishPick","RoguelikeTabs","onSelect","RoguelikeEntry","difficulties","ShowMeTheMoney","ResultWin","slam","grand_slam","level_achieved","gold_amount","continue","ResultLose","FinalResult","difficulty","roguelike","setup_roguelike_mode","roguelike_mode","relics","central_idx","dream_count","set_difficulty","levels","Date","skip_pick","current_item","item_idx","current_item_idx","continue_run","won","end_roguelike_mode","enter_daily_mode","daily_mode","end_daily_mode","RULES","init_animations","Board","handle_hand_clicked","bind","handle_field_clicked","handle_efield_clicked","handle_order_clicked","handle_finished_clicked","handle_mulligan_clicked","handle_deck_change","handle_selection_clicked","handle_upgrade_clicked","handle_pick_clicked","enemy_move","process_hand_data","process_hand_state","process_field_data","process_field_state","process_efield_data","process_efield_state","process_order_data","process_order_state","process_finished_data","process_finished_state","process_selection_state","process_upgrade_data","process_upgrade_state","process_pick_data","process_pick_state","process_card_details","process_enemy_details","process_order_details","process_deck_data","process_roguelike_deck_data","set_animations","wrap_controller_action","set_branch","check_card","get_illust_attr","use_mine","use_fight","use_act","finish_order","use_order","render_title_board","render_mode_selection_board","render_rules_board","render_game_board","render_tag_board","render_deck_board","render_card_board","render_preview_board","render_mulligan_board","render_setting_board","render_deck_selection_board","render_deck_upgrade_board","render_competition_board","render_roguelike_deck_selection_board","render_roguelike_board","render_roguelike_shop_board","render_roguelike_result_board","render_roguelike_final_result_board","render_roguelike_entry_board","enter_competition_mode","upgrade_card","start_competition","enter_roguelike_mode","buy_item","change_board","reset_preview_deck","choose_tag","choose_standard_tags","get_risk_level","enter_game","args","setState","produce","state","hand_selected","efield_selected","order_selected","finished_selected","selection_selected","upgrade_selected","pick_selected","shop_selected","hand_choices","branch","show_field","show_tag_selection","animations","board","last_board","deck_mode","preview_deck","show_finished","checking","scenario_finished","branches","log_select","new_tags","current_standard_level","competition_mode","cardrow","illust_variants","icon","order_data","rhine","eo_illust_detailed","ms","sleep_time","Promise","resolve","setTimeout","then","new_branch","event","changer","target","new_board","BOARDS","get_enemies","order_id","init_decks","reset","prevProps","prevState","gameover","good_grade","grade","failed","overflow","enter_difficulty","shop","centrals","selected_card","overflowY","lose","mean","a","b","round","查看卡组","player_panel","end_game","game_panel","field_cardrow","hand_cardrow","orders_cardrow","marginRight","finished_cardrow","pick_cardrow","finished_pick_cardrow","进入游戏","快速设置","每日挑战","肉鸽模式","返回标题","返回","deck_generation","deck_construction","selectedIndex","高级设置","返回合约","React","Component","App","Client","game","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c38a9444.chunk.js","sourcesContent":["import React from 'react';\n\nimport './icons.css';\n\nconst icon_height = 25;\nconst attr_icon_height = 20;\n\nexport const ICONS = {\n  alcohol: (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" height={icon_height} className=\"material\" />),\n\n  rma: (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" height={icon_height} className=\"material\" />),\n\n  rock: (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" height={icon_height} className=\"material\" />),\n\n  d32: (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" height={icon_height} className=\"material steel\" />),\n\n  mine: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/microsoft/209/pick_26cf.png\" height={attr_icon_height} />),\n\n  block: (<img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" height={attr_icon_height} />),\n\n  gold: (<img src=\"http://prts.wiki/images/b/b1/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E5%90%88%E7%BA%A6%E8%B5%8F%E9%87%91.png\" style={{height: \"1.1em\"}} className=\"steel\" />),\n\n  order: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/><path d=\"M14 3v5h5M16 13H8M16 17H8M10 9H8\"/></svg>,\n\n  play: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 9l-6 6 6 6\"/><path d=\"M20 4v7a4 4 0 0 1-4 4H5\"/></svg>,\n\n  mineAction: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline></svg>,\n\n  fight: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 11l-5-5-5 5M17 18l-5-5-5 5\"/></svg>,\n\n  action: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line></svg>,\n\n  check: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>,\n\n  finish: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>,\n\n  endturn: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 17l5-5-5-5M6 17l5-5-5-5\"/></svg>,\n\n  endgame: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 3H6a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h4M16 17l5-5-5-5M19.8 12H9\"/></svg>,\n\n  pick: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"10\" cy=\"20.5\" r=\"1\"/><circle cx=\"18\" cy=\"20.5\" r=\"1\"/><path d=\"M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1\"/></svg>,\n\n  battlefield: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon></svg>,\n};\n\nexport const food_icons = [\n  <span style={{color:\"#00cd00\"}}>■</span>,\n  <span style={{color:\"#1e90ff\"}}>■</span>,\n  <span style={{color:\"rgb(229,131,8)\"}}>■</span>,\n  <span style={{color:\"red\"}}>■</span>,\n];\n\nconst smaller_height = '1.1em';\nexport const smaller_icons = [\n  (<img src=\"http://prts.wiki/images/a/a8/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E6%89%AD%E8%BD%AC%E9%86%87.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/7c/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_RMA70-12.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/e/e7/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_%E7%A0%94%E7%A3%A8%E7%9F%B3.png\" style={{height:smaller_height}} className=\"material\" />),\n\n  (<img src=\"http://prts.wiki/images/7/76/%E9%81%93%E5%85%B7_%E5%B8%A6%E6%A1%86_D32%E9%92%A2.png\" style={{height:smaller_height}} className=\"material steel\" />),\n]","import React from 'react';\nimport _ from 'lodash';\nimport { gainMaterials, payMaterials, logMsg, refreshOrder, payCost } from './Game';\nimport { ICONS, food_icons } from './icons';\n\nexport const order_illust = \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_mortal_city.png\";\n\nexport const rhine_illust = \"http://ak.mooncell.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E5%A1%9E%E9%9B%B7%E5%A8%85_1.png\";\n\nexport const material_icons = [ICONS.alcohol, ICONS.rma, ICONS.rock, ICONS.d32];\n\nfunction add_atk_hp(G, ctx, field_selected) {\n  let card = G.field[field_selected];\n  if (!card) {\n    if (G.field.length == 0) return;\n    card = G.field[G.field.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定场面上想加成的干员后使用该订单\");\n  }\n  else {\n    logMsg(G, ctx, `使 ${card.name} 获得11/+1`);\n  }\n  card.atk += 1;\n  card.hp += 1;\n}\n\nfunction deal3dmg(G, ctx, field_selected, enemy_selected) {\n  let enemy = G.efield[enemy_selected];\n  if (!enemy) {\n    if (G.efield.length == 0) return;\n    enemy = G.efield[G.efield.length - 1]; // EH: change this to \"last\"\n    logMsg(G, ctx, \"建议: 请选定目标敌人后使用该订单\");\n  }\n  enemy.dmg += 3;\n  logMsg(G, ctx, `${enemy.name} 受到3点伤害`);\n}\n\nexport function ready_order(G, ctx, from_card) {\n  let order = ctx.random.Shuffle(G.finished.filter(x => x.exhausted && ((!x.ready_other_orders)|| (from_card == true))))[0];\n  if (order) {\n    order.exhausted = false;\n  }\n}\n\nfunction set_collection_order(G, ctx) {\n  let colors = G.finished.reduce((acc,val)=>{\n    if(val.color >= 0) acc[val.color]+=1;\n    return acc;\n  }, [0,0,0]);\n  // console.log(colors);\n  let times = _.min(colors);\n  G.score += 2 * times;\n}\n\nexport const default_order = {\n  desc: \"1费→刷新订单\",\n  effect(G, ctx){\n    if (payCost(G, ctx, 1)) {\n      refreshOrder(G, ctx);\n    }\n  }\n}\nconst advanced_orders = [{\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    advanced: true,\n    desc: (<span>+1/+1</span>),\n    effect: add_atk_hp,\n  },\n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   advanced: true,\n  //   desc: (<span>3伤害</span>),\n  //   effect: deal3dmg,\n  // },\n  \n  {\n    requirements: [1,1,1,0],\n    score: 2,\n    reward: 3,\n    desc: (<span>获得: 1费</span>),\n    advanced: true,\n    effect(G, ctx) {\n        G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [1,1,1,0],\n    score: 1, \n    // reward: 2,\n    advanced: true,\n    desc: (<span>2分/每组{food_icons.slice(0,3)}订单</span>),\n    effect: set_collection_order,\n  },\n  \n  // {\n  //   requirements: [1,1,1,0],\n  //   score: 2,\n  //   reward: 3,\n  //   desc: (<span>重置1订单</span>),\n  //   advanced: true,\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n    \n];\n  \nexport const ORDERS = [\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>1费→{material_icons[2]}{material_icons[2]}</span>),\n    // cost: [0,0,1,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[2] += 2;\n      }\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>1费→{material_icons[0]}{material_icons[0]}</span>),\n    // cost: [1,0,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[0] += 2;\n      }\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>1费→{material_icons[1]}{material_icons[1]}</span>),\n    // cost: [0,1,0,0],\n    effect(G, ctx) {\n      if (payCost(G, ctx, 1)) {\n        G.materials[1] += 2;\n      }\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 4,\n    reward: 2,\n    desc: (<span>{material_icons[1]}→{material_icons[3]}</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 4,\n    reward: 0,\n    desc: (<span>{material_icons[2]}→{material_icons[3]}</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 4,\n    reward: 1,\n    desc: (<span>{material_icons[0]}→{material_icons[3]}</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.materials[3] += 1;\n        // G.costs += 1;\n    },\n  },\n\n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>获得: {material_icons[1]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[1] += 1;\n    },\n  },\n\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>获得: {material_icons[2]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[2] += 1;\n    },\n  },\n\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>获得: {material_icons[0]}</span>),\n    harvest: true,\n    effect(G, ctx) {\n      G.materials[0] += 1;\n    },\n  },\n\n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>{material_icons[2]} → 2费</span>),\n  //   cost: [0,0,1,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 2费</span>),\n  //   cost: [1,0,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 2费</span>),\n  //   cost: [0,1,0,0],\n  //   effect(G, ctx) {\n  //       G.costs += 2;\n  //   },\n  // },\n  \n\n \n    // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]}→+3/+3</span>),\n  //   cost: [1,0,0,0],\n  //   effect: add_atk_hp,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]}→+3/+3</span>),\n  //   cost: [0,1,0,0],\n  //   effect: add_atk_hp,\n  // },\n  \n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>{material_icons[0]} → 4伤害</span>),\n  //   cost: [1,0,0,0],\n  //   effect: deal4dmg,\n  // },\n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>{material_icons[1]} → 4伤害</span>),\n  //   cost: [0,1,0,0],\n  //   effect: deal4dmg,\n  // },\n  \n  {\n    requirements: [3,0,0,0],\n    score: 2,\n    reward: 1,\n    desc: (<span>{material_icons[2]} → 2分</span>),\n    cost: [0,0,1,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  {\n    requirements: [0,3,0,0],\n    score: 2,\n    reward: 2,\n    desc: (<span>{material_icons[0]} → 2分</span>),\n    cost: [1,0,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n\n  },\n  {\n    requirements: [0,0,3,0],\n    score: 2,\n    reward: 0,\n    desc: (<span>{material_icons[1]} → 2分</span>),\n    cost: [0,1,0,0],\n    effect(G, ctx) {\n        G.score += 2;\n    },\n  },\n  \n  // {\n  //   requirements: [3,0,0,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,3,0,0],\n  //   score: 2,\n  //   reward: 2,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // }, {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 0,\n  //   desc: (<span>重置1订单</span>),\n  //   ready_other_orders: true,\n  //   effect: ready_order,\n  // },\n\n  // // {\n  //   requirements: [3,0,0,0],\n  //   score: 2, \n  //   reward: 2,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  // {\n  //   requirements: [0,3,0,0],\n  //   score: 2, \n  //   reward: 0,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // }, \n  // {\n  //   requirements: [0,0,3,0],\n  //   score: 2,\n  //   reward: 1,\n  //   desc: (<span>2分/{food_icons[0]}{food_icons[1]}{food_icons[2]}</span>),\n  //   effect: set_collection_order,\n  // },\n  \n  \n\n  ...advanced_orders,\n  // ...advanced_orders,\n];","import React from 'react';\nimport { \n  deal_damage, draw, deal_random_damage, gainMaterials,\n  move, exhaust_random_enemy, ready_random_card, cure, \n  payCost, get_rhine_order, init_card_state, payMaterials,\n  reinforce_hand, reinforce_card, enemy2card, logMsg,\n  get_num_rest_cards, generate_combined_card, achieve, drop,\n  clearField, drawEnemy, fully_restore, reduce_enemy_atk, silent, summon, eliminate_field, reinforce_field, choice, add_vulnerable, play_card\n} from './Game';\nimport { material_icons, ready_order } from './orders';\n\nexport const CARDS = [\n  {\n    name: \"克洛丝\",\n    cost: 1,\n    atk: 3,\n    hp: 1,\n    mine: 1,\n    block: 0,\n    illust: \"http://prts.wiki/images/b/ba/%E7%AB%8B%E7%BB%98_%E5%85%8B%E6%B4%9B%E4%B8%9D_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"阿米娅\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E9%98%BF%E7%B1%B3%E5%A8%85_1.png\",\n    desc: \"采掘: 获得1分\",\n    onMine(G, ctx, self) {\n      let delta = 1 + 2 * self.power;\n      G.score += delta;\n      logMsg(G, ctx, `使用 阿米娅 获得${delta}分`);\n\n      if (delta >= 15) {\n        achieve(G, ctx, \"女主角\", \"使用阿米娅获得15分以上\", self);\n      }\n    },\n    action(G, ctx, self) {\n      if (self.power == 1) {\n        let queen = G.CARDS.find(x => x.name == \"阿米娅-近卫\");\n        Object.assign(self, queen);\n        self.onPlay(G, ctx, self);\n      }\n      else {\n        logMsg(G, ctx, \"只需要强化1次即可\");\n      }\n      self.exhausted = false;\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得1分\",\n  },\n\n  {\n    name: \"杰西卡\",\n    cost: 3,\n    atk: 5,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    illust: \"http://prts.wiki/images/9/96/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E8%A5%BF%E5%8D%A1_1.png\",\n    desc: \"采掘: 造成3点伤害\",\n    onMine(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n\n  {\n    name: \"玫兰莎\",\n    cost: 2,\n    atk: 4,\n    hp: 4,\n    mine: 1,\n    block: 1,\n    illust: \"http://prts.wiki/images/0/09/%E7%AB%8B%E7%BB%98_%E7%8E%AB%E5%85%B0%E8%8E%8E_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"芙兰卡\", \n    cost:4, \n    atk:6, \n    hp:6, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%8A%99%E5%85%B0%E5%8D%A1_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 6;\n      self.hp += 6;\n    },\n    reinforce_desc: \"+6/+6\",\n  },\n\n  {\n    name: \"米格鲁\",\n    cost: 2,\n    atk: 0,\n    hp: 6,\n    mine: 1,\n    block: 2,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E7%B1%B3%E6%A0%BC%E9%B2%81_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name: \"史都华德\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  {\n    name: \"12F\",\n    cost: 5,\n    atk: 6,\n    hp: 4,\n    mine: 5,\n    block: 0,\n    illust: \"http://prts.wiki/images/6/61/%E7%AB%8B%E7%BB%98_12F_1.png\",\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  {\n    name: \"巡林者\",\n    cost: 5,\n    atk: 9,\n    hp: 4,\n    mine: 3,\n    block: 0,\n    illust: \"http://prts.wiki/images/c/c8/%E7%AB%8B%E7%BB%98_%E5%B7%A1%E6%9E%97%E8%80%85_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name: \"黑角\",\n    cost: 8,\n    atk: 8,\n    hp: 8,\n    mine: 4,\n    block: 2,\n    illust: \"http://prts.wiki/images/d/dc/%E7%AB%8B%E7%BB%98_%E9%BB%91%E8%A7%92_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let white = G.CARDS.find(x => x.name == \"白面鸮\");\n      Object.assign(self, white);\n      self.exhausted = false;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 8;\n      self.hp += 8;\n    },\n    reinforce_desc: \"+8/+8\",\n  },\n  \n  {\n    name:\"夜刀\",\n    cost:12,\n    atk:16,\n    hp:16,\n    mine:8,\n    block:2,\n    illust:\"http://prts.wiki/images/a/ad/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E5%88%80_1.png\",\n    reinforce: 1,\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 4;\n      self.hp += 4;\n\n      if (self.atk >= 30) {\n        achieve(G, ctx, \"罗德岛的基石\", \"夜刀的攻击力达到30\", self);\n      }\n    },\n    reinforce_desc: \"+4/+4\",\n  },\n\n  {\n    name: \"芬\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    desc: \"部署: 摸2张牌\",\n    illust: \"http://prts.wiki/images/a/af/%E7%AB%8B%E7%BB%98_%E8%8A%AC_1.png\",\n    onPlay(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n\n  \n  // 超模就超模吧 桃金娘这么可爱 就不削了 按照模型 应该削到3费或者改成2/1 其实也没有 2费如果是4/2的话 桃金娘也没问题\n  {\n    name: \"桃金娘\",\n    cost: 2,\n    atk: 2,\n    hp: 2,\n    mine: 1,\n    block: 1,\n    illust:\"http://prts.wiki/images/4/42/%E7%AB%8B%E7%BB%98_%E6%A1%83%E9%87%91%E5%A8%98_1.png\",\n    desc: \"行动: 获得3点费用，本回合阻挡数-1\",\n    onTurnBegin(G, ctx, self) {\n      if (self.block <= 0) {\n        self.block = 1;\n      }\n    },\n    action(G, ctx, self) {\n      G.costs += 3 + 2 * self.power;\n      if (self.block > 0) {\n        self.block -= 1;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2点费用\",\n  },\n\n  {\n    name:\"香草\", \n    cost:3, \n    atk:3, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"战斗: 获得2点费用\", \n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E9%A6%99%E8%8D%89_1.png\",\n    onFight(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n\n  {\n    name:\"讯使\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:1, \n    block:1, \n    desc:\"采掘: 获得2点费用\", \n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E8%AE%AF%E4%BD%BF_1.png\",\n    onMine(G, ctx, self) {\n      G.costs += 2 + 1 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得1点费用\",\n  },\n  \n  {\n    name:\"极境\",\n    cost:5,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得7点费用\",\n    illust:\"http://prts.wiki/images/5/5a/%E7%AB%8B%E7%BB%98_%E6%9E%81%E5%A2%83_1.png\",\n    reinforce: 2,\n\n    onPlay(G, ctx) {\n      G.costs += 7;\n    },\n    \n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"清道夫\", \n    cost:3, \n    atk:5, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"采掘: 摧毁场上1个(重置状态的)干员，并获得4点费用\", \n    illust:\"http://prts.wiki/images/3/3a/%E7%AB%8B%E7%BB%98_%E6%B8%85%E9%81%93%E5%A4%AB_1.png\",\n    onMine(G, ctx, self) {\n      if (eliminate_field(G, ctx)) {\n        G.costs += 4;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n  \n  {\n    name:\"德克萨斯\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"采掘: 横置1个敌人，然后每有1个横置的敌人，就获得1点费用(最多4点)\", \n    illust:\"http://prts.wiki/images/f/fc/%E7%AB%8B%E7%BB%98_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF_1.png\",\n    onMine(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.costs += Math.min(num_exhausted, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 5;\n      self.hp += 5;\n    },\n    reinforce_desc: \"+5/+5\",\n  },\n  {\n    name:\"红豆\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:1,\n    block:1,\n    desc: \"超杀: 每造成2点额外伤害，就获得1点费用\",\n    illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = (enemy.dmg - enemy.hp) / 2;\n        G.costs += delta;\n        logMsg(G, ctx, `使用 ${self.name} 获得${delta}点费用`);\n\n        if (delta >= 6) {\n          achieve(G, ctx, \"常山豆子龙\", \"使用红豆获得至少6点费用\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"风笛\", \n    cost:4, \n    atk:4, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"行动: 打出牌库顶的1张牌\", \n    illust:\"http://prts.wiki/images/5/5e/%E7%AB%8B%E7%BB%98_%E9%A3%8E%E7%AC%9B_1.png\",\n    action(G, ctx, self) {\n      // if (G.limit_hand_field && G.field.length >= 6) {\n      //   logMsg(G, ctx, \"场上干员数已达到上限\");\n      //   return;\n      // }\n      let new_card = G.deck[0];\n      G.deck = G.deck.slice(1);\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n      }\n      if (new_card.name == \"夜刀\") {\n        achieve(G, ctx, \"特殊召唤\", \"使用风笛跳出夜刀\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  // {\n  //   name:\"红豆\", \n  //   cost:3, \n  //   atk:3, \n  //   hp:2, \n  //   mine:1, \n  //   block:1, \n  //   desc:\"摧毁: 将手牌中的1个干员部署到场上\", \n  //   illust:\"http://prts.wiki/images/7/70/%E7%AB%8B%E7%BB%98_%E7%BA%A2%E8%B1%86_1.png\",\n  //   onOut(G, ctx, self) {\n  //     if (G.hand.length > 0) {\n  //       let idx = ctx.random.Die(G.hand.length) - 1;\n  //       let card = G.hand.splice(idx, 1)[0];\n  //       G.field.push(card);\n  //       init_card_state(G, ctx, card);\n  //     }\n  //     G.costs += 3 * self.power;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"并返还3点费用\",\n  // },\n  \n  {\n    name:\"推进之王\", \n    cost:3, \n    atk:4, \n    hp:2, \n    mine:1, \n    block:1, \n    desc:\"部署: 所有手牌的费用-1\", \n    illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand) {\n        card.cost -= 1;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n      if (self.power >= 3) {\n        achieve(G, ctx, \"推进之王\", \"强化推进之王3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name: \"炎熔\",\n    cost: 3,\n    atk: 4,\n    hp: 2,\n    mine: 2,\n    block: 0,\n    desc: \"战斗: 获得1个材料\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E7%82%8E%E7%86%94_1.png\",\n    onFight(G, ctx, self) {\n      gainMaterials(G, ctx, 1+2*self.power);\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2个材料\",\n  },\n\n   \n  {\n    name:\"蓝毒\", \n    cost:4, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 再造成3点伤害\", \n    illust:\"http://prts.wiki/images/6/66/%E7%AB%8B%E7%BB%98_%E8%93%9D%E6%AF%92_1.png\",\n    onFight(G, ctx, self) {\n      deal_random_damage(G, ctx, 3 + 3 * self.power);\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+3\",\n  },\n  \n  {\n    name:\"杜宾\", \n    cost:5, \n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 场上所有其他干员获得+2/+2\", \n    illust:\"http://prts.wiki/images/2/25/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E5%AE%BE_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.atk += 2;\n          card.hp += 2;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  }, \n  \n  {\n    name:\"天火\", \n    cost:3, \n    atk:2, \n    hp:1, \n    mine:2, \n    block:0, \n    desc:\"部署: 场上所有其他干员获得<+1>\", \n    illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E5%A4%A9%E7%81%AB_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.mine += 1;\n        }\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n\n  \n  {\n    name:\"陈\", \n    cost:5, \n    atk:4, \n    hp:4, \n    mine:2, \n    block:1, \n    desc:\"部署: 造成4点伤害，重复2次\", \n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E9%99%88_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 4);\n      deal_random_damage(G, ctx, 4);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      if (self.onPlay) {\n        self.onPlay(G, ctx);\n      }\n\n      if (~G.hand.indexOf(self) && (self.power >= 3)) {\n        achieve(G, ctx, \"赤霄·绝影\", \"陈在手牌中被强化过至少3次\", self);\n      }\n    },\n    reinforce_desc: \"触发1次\\\"部署:\\\"效果\",\n  },\n\n  {\n    name:\"柏喙\",\n    cost:4,\n    atk:5,\n    hp:4,\n    mine:2,\n    block:1,\n    desc: \"采掘: 获得+2/+2\",\n    illust:\"http://prts.wiki/images/4/4e/%E7%AB%8B%E7%BB%98_%E6%9F%8F%E5%96%99_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      self.atk += 2 + 2 * self.power;\n      self.hp += 2 + 2 * self.power;\n    },\n    reinforce_desc: \"再获得+2/+2\",\n  },\n\n  {\n    name:\"慕斯\", \n    cost:3, \n    atk:2, \n    hp:4, \n    mine:3, \n    block:1, \n    illust:\"http://prts.wiki/images/c/c5/%E7%AB%8B%E7%BB%98_%E6%85%95%E6%96%AF_1.png\",\n    reinforce: 1,\n    desc: \"战斗: 使目标攻击力-5\",\n    onFight(G, ctx, self, enemy) {\n      enemy.atk -= 5;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 3;\n    },\n    reinforce_desc: \"+3/+3\",\n  },\n  \n  {\n    name:\"星极\", \n    cost:4, \n    atk:4, \n    hp:4, \n    mine:3, \n    block:1, \n    desc: <span>采掘: 弃2张牌，获得2个{material_icons[3]}</span>, \n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%98%9F%E6%9E%81_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.materials[3] += 2;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不够\");\n        // self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n      self.mine += 1;\n    },\n    reinforce_desc: \"+2/+2 <+1>\",\n  },\n  \n  {\n    name:\"蛇屠箱\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:2, \n    block:2, \n    desc:\"行动: 获得+6生命值\", \n    illust:\"http://prts.wiki/images/c/c7/%E7%AB%8B%E7%BB%98_%E8%9B%87%E5%B1%A0%E7%AE%B1_1.png\",\n    action(G, ctx, self) {\n      self.hp += 6 + 4 * self.power;\n    },\n    reinforce: 1,\n    reinforce_desc: \"再获得+4生命值\",\n  },\n\n  {\n    name:\"年\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"部署: 场上所有其他干员阻挡数+1\", \n    illust:\"http://prts.wiki/images/c/c9/%E7%AB%8B%E7%BB%98_%E5%B9%B4_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.field) {\n        if (card != self) {\n          card.block += 1;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"可颂\", \n    cost:3, \n    atk:2, \n    hp:6, \n    mine:1, \n    block:2, \n    desc:\"战斗: 横置目标，如果目标已经被横置，则将其摧毁\", \n    illust:\"http://prts.wiki/images/6/62/%E7%AB%8B%E7%BB%98_%E5%8F%AF%E9%A2%82_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.exhausted) {\n        enemy.dmg += enemy.hp;\n      }\n      else {\n        enemy.exhausted = true;\n      }\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n\n  // {\n  //   name:\"斑点\", \n  //   cost:5, \n  //   atk:3, \n  //   hp:15, \n  //   mine:1, \n  //   block:2, \n  //   desc:\"行动: 使自己和左右两侧干员获得+4生命值\", \n  //   illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n  //   action(G, ctx, self) {\n  //     let self_idx = G.field.indexOf(self);\n  //     G.field.map((card, idx) => {\n  //       if ([self_idx-1, self_idx, self_idx+1].includes(idx)) {\n  //         card.hp += 4;\n  //       }\n  //     });\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"完全治疗自己并获得+2生命值\",\n  //   onReinforce(G, ctx, self) {\n  //     self.dmg = 0;\n  //     self.hp += 2;\n  //   }\n  // },\n  \n  {\n    name:\"雷蛇\", \n    cost:6, \n    atk:2, \n    hp:12, \n    mine:1, \n    block:2, \n    desc:\"采掘/战斗: 重置1个干员\", \n    illust:\"http://prts.wiki/images/3/39/%E7%AB%8B%E7%BB%98_%E9%9B%B7%E8%9B%87_1.png\",\n    onMine(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      self.hp += 10;\n    },\n    reinforce_desc: \"+0/+10\",\n  },\n  \n  // {\n  //   name:\"芙蓉\", \n  //   cost:1, \n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 完全治疗1个干员\", \n  //   illust:\"http://prts.wiki/images/b/b9/%E7%AB%8B%E7%BB%98_%E8%8A%99%E8%93%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     fully_restore(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n\n  {\n    name:\"安赛尔\", \n    cost:2,\n    atk:0, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 召唤1个费用为2的干员\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E5%AE%89%E8%B5%9B%E5%B0%94_1.png\",\n    action(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(2+(self.power||0)))))[0];\n      let idx = G.field.indexOf(self) + 1;\n      if (new_card) {\n        // G.field.splice(idx, 0, init_card_state(G, ctx, {...new_card}));\n        // insert_field(G, ctx, new_card, idx);\n        summon(G, ctx, new_card, self);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤的干员费用+1\",\n  },\n  \n  {\n    name:\"末药\", \n    cost:2,\n    atk:2, \n    hp:1, \n    mine:1, \n    block:1, \n    desc:\"部署: 使1个(重置状态的)干员获得+3/+3\", \n    illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n    onPlay(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(x!=self)))[0];\n      let card = choice(ctx, G.field.filter(x => x!=self).filter(x => !x.exhausted));\n      if (card) {\n        card.atk += 3;\n        card.hp += 3;\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n\n  },\n  \n  // {\n  //   name:\"Lancet-2\", \n  //   cost:3,\n  //   atk:0, \n  //   hp:2, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 本回合下一次部署干员时，会额外部署1次\", \n  //   was_enemy: true,\n  //   illust:\"http://prts.wiki/images/e/e4/%E7%AB%8B%E7%BB%98_%E6%9C%AB%E8%8D%AF_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let play_again = () => {\n  //       let played = false;\n  //       return (G, ctx, card_played, card) => {\n  //         if (!played) {\n  //           play_card(G, ctx, card);\n  //           played = true;\n  //         }\n  //       }};\n  //     G.onPlayCard.push(\n  //       play_again(),\n  //     );\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 6);\n  //   },\n  //   reinforce_desc: \"治疗1个干员的6点伤害\",\n  // },\n  \n  // {\n  //   name:\"清流\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+9生命值\", \n  //   illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n  //   action(G, ctx, self) {\n  //     cure(G, ctx, 9);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     cure(G, ctx, 5);\n  //   },\n  //   reinforce_desc: \"使1个干员获得+5生命值\",\n  // },\n\n  // {\n  //   name:\"嘉维尔\", \n  //   cost:3, \n  //   atk:0, \n  //   hp:3, \n  //   mine:3, \n  //   block:0, \n  //   desc:\"行动: 使1个干员获得+3攻击力\", \n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n  //   action(G, ctx, self) {\n  //     let field = G.field.filter(x => (x != self));\n  //     let card = ctx.random.Shuffle(field)[0];\n  //     if (card) {\n  //       card.atk += 3 + 3 * self.power;\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"攻击力加成+3\",\n  // },\n\n  {\n    name:\"闪灵\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:2,\n    block:0,\n    desc: \"行动: 完全治疗1个干员，如果治疗了至少4点伤害，则获得2分\",\n    illust:\"http://prts.wiki/images/e/e9/%E7%AB%8B%E7%BB%98_%E9%97%AA%E7%81%B5_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      let cured = fully_restore(G, ctx);\n      if (cured >= 4) {\n        G.score += 2 + 2 * self.power;\n      }\n    },\n    reinforce_desc: \"再获得2分\",\n  },\n\n  {\n    name:\"空\", \n    cost:4, \n    atk:0, \n    hp:3, \n    mine:3, \n    block:0, \n    desc:\"行动: 横置2个敌人\", \n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E7%A9%BA_1.png\",\n    action(G, ctx, self) {\n      exhaust_random_enemy(G, ctx);\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce: 3,\n    reinforce_desc: \"重置自己\",\n  },\n\n  // {\n  //   name:\"莫斯提马\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"采掘/战斗: 每有1个被横置的敌人，就获得1个材料\",\n  //   illust:\"http://prts.wiki/images/c/cd/%E7%AB%8B%E7%BB%98_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC_1.png\",\n  //   onMine(G, ctx, self) {\n  //     let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n  //     gainMaterials(G, ctx, num_exhausted);\n\n  //   },\n  //   onFight(G, ctx, self) {\n  //     this.onMine(G, ctx, self);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 1;\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"+2/+1 <+1>\",\n  // },\n  \n  {\n    name:\"皇帝\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 每有1个被横置的敌人，就获得2分\",\n    illust:\"https://s1.ax1x.com/2020/08/10/abktzR.png\",\n    onPlay(G, ctx, self) {\n      let num_exhausted = G.efield.filter(x=>x.exhausted).length;\n      G.score += 2 * num_exhausted;\n      if (num_exhausted >= 6) {\n        achieve(G, ctx, \"企鹅物流\", \"场上有至少6个敌人被横置时部署皇帝\", self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  \n  {\n    name:\"阿消\", \n    cost:3, \n    atk:4, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 消耗3点费用，获得6分\", \n    illust:\"http://prts.wiki/images/c/c6/%E7%AB%8B%E7%BB%98_%E9%98%BF%E6%B6%88_1.png\",\n    action(G, ctx, self) {\n      if (payCost(G, ctx, 3 + self.power, true)) {\n        let delta = 6 + 2 * self.power;\n        G.score += delta;\n\n        if (delta >= 12) {\n          achieve(G, ctx, \"龙门消防局\", \"使用阿消获得至少12分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"消耗费用+1，得分+2\",\n  },\n  \n  {\n    name:\"铃兰\", \n    cost:3, \n    atk:2, \n    hp:2, \n    mine:2, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每部署1个干员，就获得2分\", \n    illust:\"http://prts.wiki/images/f/f5/%E7%AB%8B%E7%BB%98_%E9%93%83%E5%85%B0_1.png\",\n    action(G, ctx) {\n      G.onPlayCard.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce: 3,\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n\n  {\n    name:\"赫默\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"采掘: 重置2个订单\",\n    illust:\"http://prts.wiki/images/7/7f/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E9%BB%98_1.png\",\n    onMine(G, ctx, self) {\n      ready_order(G, ctx, true);\n      ready_order(G, ctx, true);\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  \n  {\n    name:\"白面鸮\",\n    cost:4,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 重置1个干员，重置1个订单\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"特米米\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:3,\n    block:0,\n    desc: \"超杀: 每造成2点额外伤害，就获得1个材料\",\n    illust:\"http://prts.wiki/images/0/0a/%E7%AB%8B%E7%BB%98_%E7%89%B9%E7%B1%B3%E7%B1%B3_1.png\",\n    // onMine(G, ctx, self) {\n    //   let count = G.finished.filter(x => x.exhausted).length;\n    //   for (let order of G.finished) {\n    //     order.exhausted = false;\n    //   }\n\n    //   if (count >= 10) {\n    //     achieve(G, ctx, \"无敌的小火龙\", \"使用伊芙利特重置至少10个订单\", self);\n    //   }\n\n    // },\n\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let times = Math.floor(delta / 2);\n        // for (let i=0; i<times; i++) {\n        //   let order = choice(ctx, G.finished.filter(x => !x.exhausted));\n        //   if (order) {\n        //     order.effect(G, ctx);\n        //     logMsg(G, ctx, [\"触发订单 \", order.desc]);\n        //   }\n        // }\n        gainMaterials(G, ctx, times);\n      }\n    },\n    // action(G, ctx) {\n    //   G.onUseOrder.push(\n    //     (G, ctx) => {\n    //       deal_random_damage(G, ctx, 3);\n    //     }\n    //   );\n    // },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n    },\n    reinforce_desc: \"+3攻击力\",\n  },\n  \n  // {\n  //   name:\"远山\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"部署/采掘/战斗: 重置1个已完成的订单\",\n  //   illust:\"http://prts.wiki/images/f/f3/%e7%ab%8b%e7%bb%98_%e6%b8%85%e6%b5%81_1.png\",\n  //   onMine(G, ctx, self) {\n  //     for (let order of ctx.random.Shuffle(G.finished)) {\n  //       if (order.exhausted) {\n  //         order.exhausted = false;\n  //         break;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 4;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+4/+2\",\n  // }, \n  \n  // {\n  //   name:\"梅尔\",\n  //   cost:2,\n  //   atk:2,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"部署: 获得1个已完成的订单，其能力为\\\"?→造成5点伤害\\\"\",\n  //   illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n  //   reinforce: 1,\n\n  //   onPlay(G, ctx) {\n  //     let order = {};\n  //     let material = ctx.random.Die(3) - 1;\n  //     let requirements = [0,0,0,0];\n  //     requirements[material] = 1;\n  //     order.desc = <span>{material_icons[material]}→5伤害</span>;\n  //     order.effect = (G,ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         deal_random_damage(G, ctx, 5);\n  //       }\n  //     };\n  //     order.is_rhine = true;\n  //     G.finished.unshift(order);\n  //   },\n    \n  //   onReinforce(G, ctx) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n \n  // {\n  //   name:\"稀音\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>部署: 获得1个已完成的订单，其能力为\"{material_icons[0]}{material_icons[1]}{material_icons[2]}→获得4分\"</span>,\n  //   illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let order = {}; // EH: Reconstruct this as this code is the same as Meier\n  //     let requirements = [1,1,1,0];\n  //     order.desc = <span>{material_icons[0]}{material_icons[1]}{material_icons[2]}→4分</span>;\n  //     order.effect = (G, ctx) => {\n  //       if (payMaterials(G, ctx, requirements)) {\n  //         G.score += 4;\n  //       }\n  //     };\n  //     G.finished.unshift(order);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 2;\n  //     self.atk += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"摄影车\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个\\\"稀音\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/d/d5/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E7%A7%BB%E5%8A%A8%E6%91%84%E5%BD%B1%E5%99%A8.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, card, ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"稀音\");\n      G.hand = [card, ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"稀音\\\"\",\n  },\n  \n  {\n    name:\"机械水獭\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"部署: 获得2个\\\"梅尔\\\"\",\n    was_enemy: true,\n    illust:\"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E5%8F%AC%E5%94%A4%E7%89%A9_%E6%9C%BA%E6%A2%B0%E6%B0%B4%E7%8D%AD.png\",\n    onPlay(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), card.generator(ctx), ...G.hand];\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let card = extra_cards.find(x => x.name == \"梅尔\");\n      G.hand = [card.generator(ctx), ...G.hand];\n    },\n    reinforce_desc: \"获得1个\\\"梅尔\\\"\",\n  },\n\n\n\n  \n  {\n    name:\"斑点\",\n    cost:6,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:3,\n    desc:\"部署: 每有1个已完成的订单，就获得+1/+2\",\n    illust:\"http://prts.wiki/images/8/8a/%E7%AB%8B%E7%BB%98_%E6%96%91%E7%82%B9_1.png\",\n    onPlay(G, ctx, self) {\n      let num_finished = G.finished.length;\n      self.atk += num_finished;\n      self.hp += 2 * num_finished;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  \n  {\n    name:\"艾雅法拉\",\n    cost:5,\n    atk:4,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"采掘: 触发场上所有干员的\\\"采掘:\\\"效果\",\n    illust:\"http://prts.wiki/images/c/c0/%E7%AB%8B%E7%BB%98_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89_1.png\",\n    onMine(G, ctx, self) {\n      if (~G.field.indexOf(self)) { // To prevent reinforce hand infinite loop\n        for (let card of G.field) {\n          if (card.onMine && (card.onMine != self.onMine)) {\n            card.onMine(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let miners = G.deck.filter(x => x.onMine);\n      if (miners.length > 0) {\n        let card = ctx.random.Shuffle(miners)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"采掘:\\\"效果的牌\",\n  },\n\n  {\n    name:\"能天使\", \n    cost:5, \n    atk:6, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"战斗: 触发场上所有干员的\\\"战斗:\\\"效果\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E8%83%BD%E5%A4%A9%E4%BD%BF_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) {\n        for (let card of G.field) {\n          if (card.onFight && (card.onFight != self.onFight)) {\n            card.onFight(G, ctx, card, enemy);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let fighters = G.deck.filter(x => x.onFight);\n      if (fighters.length > 0) {\n        let card = ctx.random.Shuffle(fighters)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"战斗:\\\"效果的牌\",\n  },\n  {\n    name:\"温蒂\", \n    cost:6, \n    atk:5, \n    hp:3, \n    mine:2, \n    block:1, \n    desc:\"行动: 触发场上所有干员的\\\"行动:\\\"效果\", \n    illust:\"http://prts.wiki/images/2/26/%E7%AB%8B%E7%BB%98_%E6%B8%A9%E8%92%82_1.png\",\n    action(G, ctx, self, enemy) {\n      if (~G.field.indexOf(self)) { // To ensure effect is executed in field\n        for (let card of G.field.map(x=>x)) {\n          if (card.action && (card.action != self.action)) {\n            card.action(G, ctx, card);\n          }\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let actors = G.deck.filter(x => x.action);\n      if (actors.length > 0) {\n        let card = ctx.random.Shuffle(actors)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"行动:\\\"效果的牌\",\n  },\n  {\n    name:\"安洁莉娜\",\n    cost:6,\n    atk:4,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"部署: 触发手牌中所有干员的\\\"部署:\\\"效果\",\n    illust:\"http://prts.wiki/images/f/fe/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C_1.png\",\n    onPlay(G, ctx, self) {\n      for (let card of G.hand.map(x=>x)) { //Copy the list to prevent infinite loop\n        if (card.onPlay && (card.onPlay != self.onPlay)) {\n          card.onPlay(G, ctx, card);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      let battlecries = G.deck.filter(x => x.onPlay);\n      if (battlecries.length > 0) {\n        let card = ctx.random.Shuffle(battlecries)[0];\n        G.hand.unshift(Object.assign({}, card));\n      }\n    },\n    reinforce_desc: \"检索1张有\\\"部署:\\\"效果的牌\",\n  },\n\n  {\n    name:\"普罗旺斯\", \n    cost:3,\n    atk:4, \n    hp:3, \n    mine:2, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每使用干员消耗1点费用，就造成2点伤害\", \n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF_1.png\",\n    action(G, ctx, self) {\n      // let card = ctx.random.Shuffle(G.field.filter(x=>(!x.exhausted)))[0];\n      // if (card) {\n      //   card.exhausted = true;\n      //   let delta = Math.floor(card.atk / 2);\n      //   G.score += delta;\n      //   logMsg(G, ctx, `使用 普罗旺斯 获得${delta}分`);\n      // }\n      let power = self.power;\n      G.onPayCost.push(\n        (G, ctx, amount) => {\n          for (let i=0; i<amount; i++) {\n            deal_random_damage(G, ctx, 2 + power);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    reinforce_desc: \"伤害+1\",\n\n  },\n  \n  // {\n  //   name:\"灰喉\", \n  //   cost:4,\n  //   atk:2, \n  //   hp:1, \n  //   mine:1, \n  //   block:0, \n  //   desc:\"部署: 获得+15攻击力直到回合结束\", \n  //   illust:\"http://prts.wiki/images/2/23/%E7%AB%8B%E7%BB%98_%E7%81%B0%E5%96%89_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     let delta = 15;\n  //     self.atk += delta;\n  //     self.played = true;\n  //     self.onTurnBegin = (G, ctx, self) => {\n  //       if (self.played) {\n  //         self.atk -= delta;\n  //         self.played = false;\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n\n  // },\n  {\n    name:\"煌\",\n    cost:6,\n    atk:7,\n    hp:9,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成2点额外伤害，就获得1分\",\n    illust:\"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%85%8C_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        let score_gained = Math.floor(delta / 2);\n        G.score += score_gained;\n        logMsg(G, ctx, `使用 ${self.name} 获得${score_gained}分`);\n        if (score_gained >= 7) {\n          achieve(G, ctx, \"沸腾爆裂\", \"使用煌获得至少7分\", self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n\n  {\n    name:\"断崖\",\n    cost:4,\n    atk:6,\n    hp:4,\n    mine:2,\n    block:1,\n    desc:\"超杀: 每造成1点额外伤害，就摸1张牌\",\n    illust:\"http://prts.wiki/images/1/1b/%E7%AB%8B%E7%BB%98_%E6%96%AD%E5%B4%96_1.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let delta = enemy.dmg - enemy.hp;\n        for (let i=0; i<delta; i++) {\n          draw(G, ctx);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"迷迭香\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:\"超杀: 召唤2个随机干员的2/2复制\",\n    illust:\"https://s3.ax1x.com/2020/11/26/Ddxxbt.png\",\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        for (let i=0; i<2; i++) {\n          let card = ctx.random.Shuffle(G.CARDS)[0];\n          card = {...card};\n          card.atk = 2;\n          card.hp = 2;\n          card.mine = 1;\n          card.cost = 2;\n          summon(G, ctx, card, self);\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n  {\n    name:\"安比尔\",\n    cost:2,\n    atk:4,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，干员的\\\"超杀:\\\"效果将额外触发1次\",\n    illust:\"http://prts.wiki/images/3/3e/%E7%AB%8B%E7%BB%98_%E5%AE%89%E6%AF%94%E5%B0%94_1.png\",\n    action(G, ctx) {\n      G.onCardFight.push(\n        (G, ctx, self, enemy) => {\n          if (enemy.dmg > enemy.hp && ((typeof self.desc) == \"string\") && self.desc.includes(\"超杀\")) {\n            self.onFight && self.onFight(G, ctx, self, enemy);\n          }\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx);\n    },\n    reinforce_desc: \"触发1次\\\"行动:\\\"效果\",\n  },\n  // {\n  //   name:\"黑\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:1,\n  //   block:0,\n  //   desc:\"超杀: 对其对位敌人造成5点伤害\",\n  //   illust:\"http://prts.wiki/images/7/7b/%E7%AB%8B%E7%BB%98_%E9%BB%91_1.png\",\n  //   onFight(G, ctx, self, enemy) {\n  //     if (enemy.dmg > enemy.hp) {\n  //       let idx = G.field.indexOf(self);\n  //       if (~idx) {\n  //         let enemy = G.efield[idx];\n  //         if (enemy) {\n  //           enemy.dmg += 5 + 4 * self.power;\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"伤害+4\",\n  // },\n  \n  {\n    name:\"酸糖\", \n    cost:3,\n    atk:5, \n    hp:2, \n    mine:1, \n    block:0, \n    desc:\"行动: 本回合剩余时间内，每有1个敌人被摧毁，就获得2分\", \n    illust:\"http://prts.wiki/images/b/bd/%E7%AB%8B%E7%BB%98_%E9%85%B8%E7%B3%96_1.png\",\n    action(G, ctx, self) {\n      // G.onCardFight.push((G, ctx, card, enemy) => {\n      //   if (enemy.dmg >= enemy.hp) {\n      //     G.score += 2;\n      //   }\n      // });\n      G.onEnemyOut.push(\n        (G, ctx) => {\n          G.score += 2;\n        }\n      );\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      this.action(G, ctx, self);\n    },\n    reinforce_desc: \"触发1次\\\"行动\\\"效果\",\n\n  },\n\n  {\n    name:\"热水壶\", \n    cost:2,\n    atk:1, \n    hp:1, \n    mine:1, \n    block: 1,\n    was_enemy: true,\n    desc:\"部署: 立即获得目标生命+2，费用+1，然后弃牌堆里每有1个热水壶，就获得2分\", \n    illust:\"http://prts.wiki/images/3/3d/%E6%94%B6%E8%97%8F%E5%93%81_177.png\",\n    onPlay(G, ctx, self) {\n      self.hp += 2;\n      G.costs += 1;\n      G.score += 2 * G.discard.filter(x => (x.name == \"热水壶\")).length;\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n\n  },\n\n  {\n    name:\"刻俄柏\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"部署/采掘/战斗: 造成1点伤害，重复3次\",\n    illust:\"http://prts.wiki/images/3/3d/%E7%AB%8B%E7%BB%98_%E5%88%BB%E4%BF%84%E6%9F%8F_1.png\",\n    onPlay(G, ctx, self) {\n      for (let i=0; i<(3+3*self.power); i++) {\n        deal_random_damage(G, ctx, 1);\n      }\n    },\n    onMine(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    onFight(G, ctx, self) {\n      // for (let i=0; i<(3+3*self.power); i++) {\n      //   deal_random_damage(G, ctx, 1);\n      // }\n      this.onPlay(G, ctx, self);\n    },\n    reinforce: 1,\n    reinforce_desc: \"再重复3次\",\n  },\n\n \n  \n  {\n    name:\"斯卡蒂\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    illust: \"http://prts.wiki/images/4/45/%E7%AB%8B%E7%BB%98_%E6%96%AF%E5%8D%A1%E8%92%82_1.png\",\n    reinforce: 1,\n    desc: \"部署/采掘/战斗/行动: 触发1个随机干员的部署/采掘/战斗/行动效果\",\n    onPlay(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onPlay))[0];\n      card.onPlay(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的部署效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onMine(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onMine))[0];\n      card.onMine(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的采掘效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onFight(G, ctx, self, enemy) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onFight))[0];\n      card.onFight(G, ctx, self, enemy);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的战斗效果`, '\"', card.desc, '\"']);\n      }\n    },\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.action))[0];\n      card.action(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, [`触发 ${card.name} 的行动效果`, '\"', card.desc, '\"']);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);\n      }\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n  },\n\n  {\n    name:\"凯尔希\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:\"部署: 召唤5个随机干员的1/1复制(无视场面上限)\",\n    illust:\"http://prts.wiki/images/7/72/%E7%AB%8B%E7%BB%98_%E5%87%AF%E5%B0%94%E5%B8%8C_1.png\",\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS).slice(0, 20);\n      for (let i=0; i<5; i++) {\n        let card = {...cards[i]}; // Copy at this stage\n        card.atk = 1;\n        card.hp = 1;\n        card.mine = 1;\n        card.cost = 1;\n        // G.field.push(init_card_state(G, ctx, card));\n        // insert_field(G, ctx, card);\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n\n  // {\n  //   name:\"暴行\",\n  //   cost:2,\n  //   atk:4,\n  //   hp:4,\n  //   mine:1,\n  //   block:1,\n  //   desc:\"部署/采掘: 将所有手牌替换为随机干员牌\",\n  //   illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E6%9A%B4%E8%A1%8C_1.png\",\n  //   onPlay(G, ctx) {\n  //     let cards = ctx.random.Shuffle(G.CARDS).slice(0, G.hand.length);\n  //     G.hand = cards.map(x => ({...x}));\n  //   },\n  //   onMine(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx) {\n  //     this.onPlay(G, ctx);\n  //   },\n  //   reinforce_desc: \"将所有手牌替换为随机干员牌\",\n  // },\n\n  {\n    name:\"嘉维尔\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:\"部署: 将场上所有干员变成随机干员\",\n    illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E5%98%89%E7%BB%B4%E5%B0%94_1.png\",\n    onPlay(G, ctx, self) {\n      let change_card = (card) => {\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x => (x.onMine || x.onFight || x.action)))[0];\n        let { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce } = new_card;\n        let extracted_attrs = { name, desc, illust, onMine, onFight, action, reinforce, reinforce_desc, onReinforce }; // EH: This is written twice which is not cool, however, are there methods in js for changing this?\n        return {...card, ...extracted_attrs};\n      }\n      G.field = G.field.map(change_card);\n    },\n    reinforce: 1,\n    reinforce_desc: \"将场上所有干员变成随机干员\",\n    onReinforce(G, ctx) {\n      this.onPlay(G, ctx);\n    },\n  },\n  \n  {\n    name: \"阿米娅-近卫\",\n    cost: 6,\n    atk: 6,\n    hp: 6,\n    mine: 3,\n    block: 1,\n    illust: \"https://s3.ax1x.com/2020/11/12/BvqDyQ.png\",\n    desc: `行动: 造成3点伤害，重复4次，然后本回合剩余时间内，使用干员采掘时，获得1分，整场战斗限1次(采掘/战斗: 强化此技能)`,\n    // was_enemy: true,\n    onPlay(G, ctx, self) {\n      self.skill_power = 0;\n      let reinforce_skill = (G, ctx, self) => {\n        self.skill_power = (self.skill_power || 0) + 1;\n        self.desc = `行动: 造成3点伤害，重复${4+self.skill_power}次，然后本回合剩余时间内，使用干员采掘时，获得${1+Math.floor(self.skill_power/3)}分，整场战斗限1次(采掘/战斗: 强化此技能)`;\n      };\n      self.action = (G, ctx, self) => {\n        for (let i=0; i<(4+self.skill_power); i++) {\n          deal_random_damage(G, ctx, 3);\n        }\n        for (let j=0; j<(self.skill_power/3 + 1); j++) {\n          G.onCardMine.push((G, ctx) => {\n            G.score += 1;\n          });\n        }\n        self.action = undefined;\n        self.onMine = undefined;\n        self.onFight = undefined;\n        self.desc = \"\";\n      };\n      self.onMine = reinforce_skill;\n      self.onFight = reinforce_skill;\n      self.desc = this.desc;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+4\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 4;\n    }\n  },\n\n  {\n    name:\"银灰\",\n    cost:5,\n    atk:5,\n    hp:6,\n    mine:2,\n    block:1,\n    desc: <span>采掘/战斗: 消耗1个{material_icons[3]}，重置自己</span>,\n    illust:\"http://prts.wiki/images/0/03/%E7%AB%8B%E7%BB%98_%E9%93%B6%E7%81%B0_1.png\",\n    onMine(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,1])) {\n        self.exhausted = false;\n\n        self.use_count = self.use_count || 0;\n        self.use_count += 1;\n\n        if (self.use_count >= 6) {\n          achieve(G, ctx, \"真银斩\", \"一回合内使用银灰6次以上\", self);\n        }\n      }\n    },\n    onFight(G, ctx, self) {\n      this.onMine(G, ctx, self);\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    }\n  },\n  {\n    name:\"崖心\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc:<span>行动: 消耗2个{material_icons[3]}，获得6分</span>,\n    illust:\"http://prts.wiki/images/a/a7/%E7%AB%8B%E7%BB%98_%E5%B4%96%E5%BF%83_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [0,0,0,2])) {\n        G.score += 6 + 2 * self.power;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"再获得2分\",\n  },\n  // {\n  //   name:\"雪雉\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"部署/采掘/战斗: 清除弃牌堆中的2张牌，获得3分\",\n  //   illust:\"http://prts.wiki/images/8/89/%E7%AB%8B%E7%BB%98_%E9%9B%AA%E9%9B%89_1.png\",\n  //   (G, ctx, self) {\n  //     // if (G.discard.length >= 4) {\n  //     //   G.discard = G.discard.slice(4);\n  //     //   G.score += 6 + 2 * self.power;\n  //     // }\n  //     // else {\n  //     //   logMsg(G, ctx, `弃牌堆中的牌数量不够(${G.discard.length}/4)`);\n  //     //   self.exhausted = false;\n  //     // }\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"再获得2分\",\n  // },\n\n  // {\n  //   name:\"初雪\",\n  //   cost:3,\n  //   atk:4,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:<span>行动: 获得1个{material_icons[3]}，然后每有1组{material_icons.slice(0,3)}，就再获得1个{material_icons[3]}</span>,\n  //   illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%88%9D%E9%9B%AA_1.png\",\n  //   action(G, ctx, self) {\n  //     G.materials[3] += 1 + G.materials.slice(0,3).sort()[0];\n  //   },\n  //   reinforce: 2,\n  //   reinforce_desc: \"获得2点费用\",\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  // },\n  // {\n  //   name:\"角峰\",\n  //   cost:4,\n  //   atk:3,\n  //   hp:6,\n  //   mine:1,\n  //   block:2,\n  //   desc:<span>部署: 每有1个{material_icons[3]}，就获得+1/+1</span>,\n  //   illust:\"http://prts.wiki/images/6/6c/%E7%AB%8B%E7%BB%98_%E8%A7%92%E5%B3%B0_1.png\",\n  //   onPlay(G, ctx, self) {\n  //     self.atk += G.materials[3];\n  //     self.hp += G.materials[3];\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n  {\n    name:\"棘刺\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:1,\n    block:1,\n    desc:\"行动: 弃1张牌，造成3点伤害，然后重置自己(每回合限6次)\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%A3%98%E5%88%BA_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length > 0 && self.use_count > 0) {\n        drop(G, ctx);\n        deal_random_damage(G, ctx, 3+self.power);\n        self.exhausted = false;\n        self.use_count -= 1;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足 或 使用次数已达到上限\");\n      }\n    },\n    onTurnBegin(G, ctx, self) {\n      self.use_count = 6;\n    },\n    reinforce: 1,\n    reinforce_desc: \"伤害+1\",\n  },\n  \n  {\n    name:\"夜烟\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:3,\n    block:0,\n    desc:\"采掘: 消耗2点费用，再获得3个材料\",\n    illust:\"http://prts.wiki/images/a/a0/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E7%83%9F_1.png\",\n    onMine(G, ctx) {\n      if (payCost(G, ctx, 2, true)) {\n        gainMaterials(G, ctx, 3);\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"<+2>\",\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    }\n  },\n\n  {\n    name:\"梓兰\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署/采掘/战斗: 化解1点动乱值\",\n    illust:\"http://prts.wiki/images/b/bb/%E7%AB%8B%E7%BB%98_%E6%A2%93%E5%85%B0_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onFight(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onPlay(G, ctx, self) {\n      G.danger -= 1;\n    },\n    onReinforce(G, ctx, self) {\n      G.danger -= 1;\n    },\n    reinforce_desc: \"化解1点动乱值\",\n  },\n  \n  // {\n  //   name:\"麦哲伦\",\n  //   cost:3,\n  //   atk:2,\n  //   hp:1,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"部署: 化解5点动乱值\",\n  //   illust:\"http://prts.wiki/images/9/93/%E7%AB%8B%E7%BB%98_%E9%BA%A6%E5%93%B2%E4%BC%A6_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     G.danger -= 5;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.mine += 1;\n  //   },\n  //   reinforce_desc: \"<+1>\",\n  // },\n \n  \n  {\n    name:\"苏苏洛\",\n    cost:5,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc:<span>部署: 每有1组{material_icons.slice(0,3)}，就获得2分</span>,\n    illust:\"http://prts.wiki/images/1/1c/%E7%AB%8B%E7%BB%98_%E8%8B%8F%E8%8B%8F%E6%B4%9B_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.score += 2 * G.materials.slice(0,3).sort()[0];\n    },\n    onReinforce(G, ctx) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n\n  {\n    name:\"孑\",\n    cost:2,\n    atk:7,\n    hp:7,\n    mine:2,\n    block:1,\n    desc:\"部署: 获得\\\"回合开始时: 消耗2点费用\\\"\",\n    illust:\"http://prts.wiki/images/3/37/%E7%AB%8B%E7%BB%98_%E5%AD%91_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.onTurnBegin = (G, ctx, self) => {\n        let paid = payCost(G, ctx, 2);\n        // if (!paid) {\n        //   self.atk -= 5;\n        //   self.hp -= 5;\n        // }\n      };\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n\n\n  {\n    name:\"凛冬\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"行动: 强化1张手牌，然后每有1张强化过的手牌，就获得1点费用\",\n    illust:\"http://prts.wiki/images/6/6e/%E7%AB%8B%E7%BB%98_%E5%87%9B%E5%86%AC_1.png\",\n    reinforce: 1,\n    // onMine(G, ctx, self) {\n    //   reinforce_hand(G, ctx);\n    // },\n    action(G, ctx, self) {\n      reinforce_hand(G, ctx);\n      let num_reinforced = G.hand.filter(x => (x.power > 0)).length;\n      G.costs += num_reinforced;\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"真理\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:3,\n    block:0,\n    desc: \"行动: 强化2张手牌\",\n    illust:\"http://prts.wiki/images/1/19/%E7%AB%8B%E7%BB%98_%E7%9C%9F%E7%90%86_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      for (let i=0; i<self.power+2; i++){\n        reinforce_hand(G, ctx);\n      }\n    },\n    reinforce_desc: \"再强化1张\",\n  },\n  {\n    name:\"古米\",\n    cost:4,\n    atk:3,\n    hp:6,\n    mine:2,\n    block:2,\n    desc: \"采掘/战斗: 强化场上1个(重置状态的)干员\",\n    illust:\"http://prts.wiki/images/1/16/%E7%AB%8B%E7%BB%98_%E5%8F%A4%E7%B1%B3_1.png\",\n    reinforce: 1,\n    onMine(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onFight(G, ctx, self) {\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.hp += 6;\n    },\n    reinforce_desc: \"+0/+6\",\n  },\n\n  {\n    name:\"诗怀雅\",\n    cost:5,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:1,\n    desc: \"部署: 强化场上3个(重置状态的)干员\",\n    illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n      reinforce_field(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n\n  // {\n  //   name:\"早露\",\n  //   cost:5,\n  //   atk:5,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"部署: 每有1张被强化过的手牌(包括自己)，就造成3点伤害并获得1分\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E6%97%A9%E9%9C%B2_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_reinforced = [...G.hand, self].filter(x => (x.power > 0)).length;\n  //     for (let i=0; i<num_reinforced; i++) {\n  //       deal_random_damage(G, ctx, 3);\n  //       G.score += 1;\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3);\n  //   },\n  //   reinforce_desc: \"造成3点伤害\",\n  // },\n\n  //休整一家暂时退休\n  // {\n  //   name:\"守林人\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc: \"休整: 造成3点伤害，每有1个休整中的干员，伤害就+2\",\n  //   illust:\"http://prts.wiki/images/1/1f/%E7%AB%8B%E7%BB%98_%E5%AE%88%E6%9E%97%E4%BA%BA_1.png\",\n  //   reinforce: 1,\n  //   onRest(G, ctx, self) {\n  //     deal_random_damage(G, ctx, 3 + 2 * get_num_rest_cards(G, ctx) + 3 * self.power);\n  //   },\n  //   reinforce_desc: \"伤害+3\",\n  // },\n  {\n    name:\"霜叶\",\n    cost:2,\n    atk:3,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"采掘: 将场上1个(重置状态的)干员返回手牌\",\n    illust:\"http://prts.wiki/images/5/50/%E7%AB%8B%E7%BB%98_%E9%9C%9C%E5%8F%B6_1.png\",\n    reinforce: 1,\n    // onRest(G, ctx, self) {\n    //   let num_rest_cards = get_num_rest_cards(G, ctx);\n    //   self.atk += num_rest_cards;\n    //   self.hp += num_rest_cards;\n    // },\n    onMine(G, ctx, self) {\n      let card = choice(ctx, G.field.filter(x => !x.exhausted));\n      if (card) {\n        G.field = G.field.filter(x => x != card);\n        G.hand.unshift(card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n    reinforce_desc: \"阻挡数+1\",\n  },\n  // {\n  //   name:\"锡兰\",\n  //   cost:3,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 每有1个休整中的干员，就获得1分\",\n  //   illust:\"http://prts.wiki/images/c/c2/%E7%AB%8B%E7%BB%98_%E9%94%A1%E5%85%B0_1.png\",\n  //   reinforce: 2,\n  //   onRest(G, ctx, self) {\n  //     let num_rest_cards = get_num_rest_cards(G, ctx);\n  //     G.score += num_rest_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     G.costs += 2;\n  //   },\n  //   reinforce_desc: \"获得2点费用\",\n  // },\n  // // {\n  // //   name:\"诗怀雅\",\n  // //   cost:4,\n  // //   atk:4,\n  // //   hp:5,\n  // //   mine:1,\n  // //   block:1,\n  // //   desc: \"休整: 触发场上1个干员的\\\"部署:\\\"效果(极境和安洁莉娜除外)\",\n  // //   illust:\"http://prts.wiki/images/b/bc/%E7%AB%8B%E7%BB%98_%E8%AF%97%E6%80%80%E9%9B%85_1.png\",\n  // //   reinforce: 1,\n  // //   onRest(G, ctx, self) {\n  // //     let player = ctx.random.Shuffle(G.field.filter(x => (x.onPlay && ![\"极境\", \"安洁莉娜\"].includes(x.name))))[0];\n  // //     if (player) {\n  // //       player.onPlay(G, ctx, player);\n  // //       logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n  // //     }\n  // //   },\n  // //   onReinforce(G, ctx, self) {\n  // //     self.atk += 2;\n  // //     self.hp += 2;\n  // //   },\n  // //   reinforce_desc: \"+2/+2\",\n  // // },\n  // {\n  //   name:\"夜莺\",\n  //   cost:5,\n  //   atk:0,\n  //   hp:3,\n  //   mine:3,\n  //   block:0,\n  //   desc: \"休整: 触发场上所有干员的\\\"休整:\\\"效果\",\n  //   illust:\"http://prts.wiki/images/6/6f/%E7%AB%8B%E7%BB%98_%E5%A4%9C%E8%8E%BA_1.png\",\n  //   onRest(G, ctx, self) {\n  //     if (~G.field.indexOf(self)) {\n  //       for (let card of G.field.map(x=>x)) {\n  //         if (card.onRest && (card.onRest != self.onRest)) {\n  //           card.onRest(G, ctx, card);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     let resters = G.deck.filter(x => x.onRest);\n  //     if (resters.length > 0) {\n  //       let card = ctx.random.Shuffle(resters)[0];\n  //       G.hand.unshift(Object.assign({}, card));\n  //     }\n  //   },\n  //   reinforce_desc: \"检索1张有\\\"休整:\\\"效果的牌\",\n  // },\n\n  {\n    name:\"阿\",\n    cost:1,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 对1个(重置状态的)干员造成3点伤害，并获得3分\",\n    illust:\"http://prts.wiki/images/6/67/%E7%AB%8B%E7%BB%98_%E9%98%BF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.field.filter(x => (x!=self && !x.exhausted)))[0];\n      if (card) {\n        card.dmg += 3;\n        G.score += 3;\n        if (card.dmg >= card.hp) {\n          // let card_idx = G.field.indexOf(card);\n          // G.field.splice(card_idx, 1);\n          // G.discard.push(card);\n          G.field = G.field.filter(x => x != card);\n          G.discard = [card, ...G.discard];\n        }\n        // else {\n          // card.onMine = (G, ctx) => {G.score += 4};\n          // card.onFight = card.onMine;\n          // card.desc = \"采掘/战斗: 获得4分\";\n          // G.score += 3;\n        // }\n\n        self.use_count = (self.use_count || 0) + 1;\n        if (self.use_count == 5) {\n          achieve(G, ctx, \"爆发剂·榴莲味\", \"一局内使用阿5次以上\", self);\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.exhausted = false;\n    },\n    reinforce_desc: \"重置自己\",\n  },\n  \n  {\n    name:\"断罪者\",\n    cost:4,\n    atk:5,\n    hp:3,\n    mine:2,\n    block:1,\n    desc: \"行动: 本回合剩余时间内，每弃掉1张手牌，就获得1分\",\n    illust:\"http://prts.wiki/images/e/e2/%E7%AB%8B%E7%BB%98_%E6%96%AD%E7%BD%AA%E8%80%85_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      // let num_cards = G.hand.length;\n      // G.discard = [...G.discard, ...G.hand]; // EH: reconstruct the discard\n      // G.hand = [];\n      // G.score += num_cards;\n      // logMsg(G, ctx, `使用 断罪者 获得${num_cards}分`);\n\n      // if (num_cards >= 17) {\n      //   achieve(G, ctx, \"17张牌你能秒我\", \"使用断罪者弃掉至少17张手牌\", self);\n      // }\n\n      G.onDropCard.push(\n        (G, ctx) => {\n          G.score += 1;\n        }\n      );\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"清流\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"部署: 将弃牌堆中的所有牌返回手牌\",\n    illust:\"http://prts.wiki/images/f/f3/%E7%AB%8B%E7%BB%98_%E6%B8%85%E6%B5%81_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.hand = [...G.discard, ...G.hand];\n      G.discard = [];\n\n      // if (G.limit_hand_field && G.hand.length >= 6) {\n      //   logMsg(G, ctx, \"手牌数已达到上限\");\n      //   G.hand = G.hand.slice(G.hand.length-6);\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      cure(G, ctx, 6);\n    },\n    reinforce_desc: \"治疗1个干员的6点伤害\",\n  },\n  {\n    name:\"调香师\",\n    cost:3,\n    atk:0,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"采掘: 摸2张牌\",\n    illust:\"http://prts.wiki/images/5/5c/%E7%AB%8B%E7%BB%98_%E8%B0%83%E9%A6%99%E5%B8%88_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      draw(G, ctx);\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸3张牌\",\n    onReinforce(G, ctx) {\n      for (let i=0; i<3; i++) {\n        draw(G, ctx);\n      }\n    }\n  },\n\n  {\n    name:\"食铁兽\",\n    cost:6,\n    atk:6,\n    hp:5,\n    mine:3,\n    block:1,\n    desc: \"行动: 获得5分\",\n    illust:\"http://prts.wiki/images/e/ef/%E7%AB%8B%E7%BB%98_%E9%A3%9F%E9%93%81%E5%85%BD_1.png\",\n    reinforce: 2,\n    action(G, ctx) {\n      G.score += 5;\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 2;\n    },\n    reinforce_desc: \"获得2分\",\n  },\n\n  // {\n  //   name:\"格拉尼\",\n  //   cost:4,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 召唤\\\"格拉尼\\\"\",\n  //   illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E6%A0%BC%E6%8B%89%E5%B0%BC_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let new_card = G.CARDS.find(x => x.name == \"格拉尼\");\n  //     G.field.push(init_card_state(G, ctx, {...new_card}));\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"宴\",\n    cost:3,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 获得+6/+6直到回合结束\",\n    illust:\"http://prts.wiki/images/d/de/%E7%AB%8B%E7%BB%98_%E5%AE%B4_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      self.atk += 6;\n      self.dmg -= 6;\n\n      self.played = true;\n      self.onTurnBegin = (G, ctx, self) => {\n        if (self.played) {\n          self.atk -= 6;\n          if (self.dmg < 0) {\n            self.dmg = 0;\n          }\n          if ((self.hp - self.dmg) <= 0) {\n            self.exhausted = true;\n          }\n          self.played = false;\n        }\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  \n  {\n    name:\"月见夜\", \n    cost:3, \n    atk:3, \n    hp:3, \n    mine:1, \n    block:1, \n    desc:\"部署: 如果你在本回合弃过手牌，则获得+3/+3\", \n    illust:\"http://prts.wiki/images/0/02/%E7%AB%8B%E7%BB%98_%E6%9C%88%E8%A7%81%E5%A4%9C_1.png\",\n    onPlay(G, ctx, self) {\n      if (G.has_discarded) {\n        self.atk += 3;\n        self.hp += 3;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n\n  {\n    name:\"远山\",\n    cost:3,\n    atk:4,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"部署: 获得3个材料\",\n    illust:\"http://prts.wiki/images/4/4a/%E7%AB%8B%E7%BB%98_%E8%BF%9C%E5%B1%B1_1.png\",\n    reinforce: 2,\n    onPlay(G, ctx, self) {\n      gainMaterials(G, ctx, 3);\n      // self.mine += 3;\n      // self.played = true;\n      // self.onTurnBegin = (G, ctx, self) => {\n      //   if (self.played) {\n      //     self.mine -= 3;\n      //     self.played = false;\n      //   }\n      // }\n    },\n    onReinforce(G, ctx, self) {\n      self.mine += 2;\n    },\n    reinforce_desc: \"<+2>\",\n  },\n  \n  {\n    name:\"砾\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/3/38/%E7%AB%8B%E7%BB%98_%E7%A0%BE_1.png\",\n    reinforce: 1,\n    desc: \"摧毁: 返回手牌\",\n    // onPlay(G, ctx, self) {\n      // let time_points = [[\"采掘: \", \"onMine\"], [\"战斗: \", \"onFight\"], [\"行动: \", \"action\"], [\"摧毁: \", \"onOut\"]];\n      // let time_point = ctx.random.Shuffle(time_points)[0];\n      // let effects = ctx.random.Shuffle(G.EFFECTS);\n      // let effect = effects[0];\n      // self.desc = time_point[0] + effect[0];\n      // self[time_point[1]] = effect[1];\n      // self.reinforce_desc = effects[1][0];\n      // self.onReinforce = effects[1][1];\n      // logMsg(G, ctx, `获得效果\"${self.desc}\"`);\n    // },\n    onOut(G, ctx, self) {\n      let gravel = G.CARDS.find(x => x.name == \"砾\");\n      G.hand.unshift({...gravel});\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"红\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    desc: \"部署: 横置1个敌人\",\n    illust:\"http://prts.wiki/images/c/c4/%E7%AB%8B%E7%BB%98_%E7%BA%A2_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      // G.score += 1;\n      // let num_reds = G.discard.filter(x => (x.name == \"红\")).length;\n      // G.score += num_reds;\n      exhaust_random_enemy(G, ctx);\n    },\n    onReinforce(G, ctx, self) {\n      G.score += 1;\n    },\n    reinforce_desc: \"获得1分\",\n  },\n  \n  // {\n  //   name:\"杰克\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"摧毁: 将弃牌堆中1张有\\\"部署:\\\"效果的牌返回手牌\",\n  //   illust:\"http://prts.wiki/images/1/1d/%E7%AB%8B%E7%BB%98_%E6%9D%B0%E5%85%8B_1.png\",\n  //   reinforce: 1,\n  //   onOut(G, ctx, self) {\n  //     let card = ctx.random.Shuffle(G.discard).find(x => x.onPlay);\n  //     G.hand.unshift(card);\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  // },\n  \n  {\n    name:\"森蚺\",\n    cost:5,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:1,\n    desc: \"部署: 随机强化自己5次\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E6%A3%AE%E8%9A%BA_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let cards = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce)).slice(0, 5);\n      for (let card of cards) {\n        if (self) {\n          card.onReinforce(G, ctx, self);\n        }\n      }\n      logMsg(G, ctx, `触发 ${cards.map(x => x.name).join(\",\")} 的强化效果`);\n    },\n    // onReinforce(G, ctx, self) {\n    //   self.atk += 2;\n    //   self.hp += 2;\n    // },\n    // reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      let card = ctx.random.Shuffle(G.CARDS.filter(x=>x.onReinforce))[0];\n      card.onReinforce(G, ctx, self);\n      if (card.name != \"斯卡蒂\") {\n        logMsg(G, ctx, `触发 ${card.name} 的强化效果 \\\"${card.reinforce_desc}\\\"`);}\n    },\n    \n    reinforce_desc: \"触发1个随机干员的强化效果\",\n\n  },\n\n  {\n    name:\"赫拉格\",\n    cost:6,\n    atk:5,\n    hp:8,\n    mine:2,\n    block:1,\n    desc: \"超杀: 每造成1点额外伤害，就获得+1攻击力并治疗2点伤害\",\n    illust:\"http://prts.wiki/images/4/48/%E7%AB%8B%E7%BB%98_%E8%B5%AB%E6%8B%89%E6%A0%BC_1.png\",\n    reinforce: 1,\n    onFight(G, ctx, self, enemy) {\n      if (enemy.dmg > enemy.hp) {\n        let excess = enemy.dmg - enemy.hp;\n        self.atk += excess;\n        self.dmg = Math.max(self.dmg - excess * 2, 0);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name:\"波登可\",\n    cost:4,\n    atk:2,\n    hp:2,\n    mine:2,\n    block:0,\n    desc: \"行动: 触发手牌中1个干员的\\\"部署:\\\"效果(极境除外)\",\n    illust:\"http://prts.wiki/images/5/56/%E7%AB%8B%E7%BB%98_%E6%B3%A2%E7%99%BB%E5%8F%AF_1.png\",\n    reinforce: 1,\n    action(G, ctx, self) {\n      let player = ctx.random.Shuffle(G.hand.filter(x => (x.onPlay && ![\"极境\"].includes(x.name))))[0];\n      if (player) {\n        player.onPlay(G, ctx, player);\n        logMsg(G, ctx, `触发 ${player.name} 的部署效果`);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      draw(G, ctx);\n    },\n    reinforce_desc: \"摸1张牌\",\n  },\n  \n  \n  {\n    name:\"巫恋\",\n    cost:4,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    desc:\"采掘: 使2个敌人获得易伤2\",\n    illust:\"http://prts.wiki/images/e/e3/%E7%AB%8B%E7%BB%98_%E5%B7%AB%E6%81%8B_1.png\",\n    reinforce: 2,\n    onMine(G, ctx, self) {\n      // let actor = ctx.random.Shuffle(G.field.filter(x => x.action))[0];\n      // if (actor) {\n      //   actor.action(G, ctx, actor);\n      //   logMsg(G, ctx, `触发 ${actor.name} 的行动效果`);\n      // }\n      // let idx = G.field.indexOf(self);\n      // if (~idx) {\n      //   let enemy = G.efield[idx];\n      //   if (enemy) {\n      //     enemy.atk /= 2;\n      //     enemy.hp /= 2;\n      //   }\n      // }\n      // reduce_enemy_atk(G, ctx, 4);\n      // reduce_enemy_atk(G, ctx, 4);\n      add_vulnerable(G, ctx, 2);\n      add_vulnerable(G, ctx, 2);\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n  \n  {\n    name:\"刻刀\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"部署: 摧毁1个受到伤害的敌人\",\n    illust:\"http://prts.wiki/images/5/51/%E7%AB%8B%E7%BB%98_%E5%88%BB%E5%88%80_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      let damaged_enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg > 0 && x.dmg < x.hp)))[0];\n      if (damaged_enemy) {\n        // let enemy_idx = G.efield.indexOf(damaged_enemy); // TODO: have a \"list.remove()\" funcion is better\n        // G.efield.splice(enemy_idx, 1);\n        // logMsg(G, ctx, `${damaged_enemy.name} 被摧毁`)\n        damaged_enemy.dmg = damaged_enemy.hp;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n  // {\n  //   name:\"星熊\",\n  //   cost:6,\n  //   atk:3,\n  //   hp:3,\n  //   mine:3,\n  //   block:3,\n  //   desc: \"部署: 每有1张手牌，就获得+6生命值\",\n  //   illust:\"http://prts.wiki/images/d/d4/%E7%AB%8B%E7%BB%98_%E6%98%9F%E7%86%8A_1.png\",\n  //   reinforce: 1,\n  //   onPlay(G, ctx, self) {\n  //     let num_cards = G.hand.length;\n  //     self.hp += 6 * num_cards;\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     self.hp += 6;\n  //     self.block += 1;\n  //   },\n  //   reinforce_desc: \"+0/+6，阻挡数+1\",\n  // },\n  {\n    name:\"四月\",\n    cost:3,\n    atk:2,\n    hp:1,\n    mine:0,\n    block:0,\n    desc: \"部署: 重置场上所有干员，然后沉默所有被重置的干员并使其采掘力变为0\",\n    illust:\"http://prts.wiki/images/2/2c/%E7%AB%8B%E7%BB%98_%E5%9B%9B%E6%9C%88_1.png\",\n    reinforce: 1,\n    onPlay(G, ctx, self) {\n      G.field.map(card => {\n        if (card.exhausted) {\n          card.exhausted = false;\n          card.mine = 0;\n          silent(card);\n        }\n      })\n    },\n    onReinforce(G, ctx, self) {\n      self.atk += 3;\n      self.hp += 1;\n    },\n    reinforce_desc: \"+3/+1\",\n  },\n  {\n    name:\"惊蛰\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，获得6点费用</span>,\n    illust:\"http://prts.wiki/images/9/9f/%E7%AB%8B%E7%BB%98_%E6%83%8A%E8%9B%B0_1.png\",\n    reinforce: 2,\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        G.costs += 6;\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n  },\n\n  {\n    name:\"贾维\",\n    cost:3,\n    atk:3,\n    hp:2,\n    mine:1,\n    block:1,\n    desc:\"采掘: 弃2张牌，获得4点费用\",\n    illust:\"http://prts.wiki/images/2/2d/%E7%AB%8B%E7%BB%98_%E8%B4%BE%E7%BB%B4_1.png\",\n    onMine(G, ctx, self) {\n      if (G.hand.length >= 2) {\n        drop(G, ctx);\n        drop(G, ctx);\n        G.costs += 4;\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },{\n    name:\"泥岩\",\n    cost:5,\n    atk:6,\n    hp:6,\n    mine:3,\n    block:2,\n    desc:\"部署: 消耗所有剩余费用，然后每消耗1点，就获得+3/+3\",\n    illust:\"http://prts.wiki/images/8/80/%E7%AB%8B%E7%BB%98_%E6%B3%A5%E5%B2%A9_1.png\",\n    onPlay(G, ctx, self) {\n      let cost_remained = G.costs;\n      self.atk += 3 * cost_remained;\n      self.hp += 3 * cost_remained;\n      G.costs = 0;\n    },\n    reinforce: 1,\n    reinforce_desc: \"阻挡数+1\",\n    onReinforce(G, ctx, self) {\n      self.block += 1;\n    },\n  },\n  // {\n  //   name:\"断崖\",\n  //   cost:4,\n  //   atk:5,\n  //   hp:5,\n  //   mine:2,\n  //   block:1,\n  //   desc:\"行动: 弃2张牌，获得+2/+2，然后重置自己\",\n  //   illust:\"\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length >= 2) {\n  //       drop(G, ctx);\n  //       drop(G, ctx);\n  //       self.atk += 2 + self.power;\n  //       self.hp += 2 + self.power;\n  //     }\n  //     self.exhausted = false;\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"再获得+1/+1\",\n  // },\n  {\n    name:\"微风\",\n    cost:3,\n    atk:0,\n    hp:3,\n    mine:3,\n    block:0,\n    desc:\"行动: 弃3张牌，召唤1个费用为4的干员\",\n    illust:\"http://prts.wiki/images/e/e7/%E7%AB%8B%E7%BB%98_%E5%BE%AE%E9%A3%8E_1.png\",\n    action(G, ctx, self) {\n      if (G.hand.length >= 3) {\n        drop(G, ctx);\n        drop(G, ctx);\n        drop(G, ctx);\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==4)))[0];\n        summon(G, ctx, new_card, self);\n      }\n      else {\n        logMsg(G, ctx, \"手牌不足\");\n        self.exhausted = false;\n      }\n    },\n    reinforce: 2,\n    reinforce_desc: \"召唤1个费用为2的干员\",\n    onReinforce(G, ctx, self) {\n      let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n      summon(G, ctx, new_card, self);\n    },\n  },\n  // {\n  //   name:\"迷迭香\",\n  //   cost:4,\n  //   atk:6,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   desc:\"超杀: 召唤2个随机干员的1/1复制\",\n  //   illust:\"\",\n  //   onPlay(G, ctx, self) {\n  //   },\n  //   onMine(G, ctx, self) {\n  //   },\n  //   onFight(G, ctx, self, enemy) {\n  //   },\n  //   action(G, ctx, self) {\n  //   },\n  //   reinforce: 1,\n  //   reinforce_desc: \"+3/+1\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 1;\n  //   },\n  // },\n  {\n    name:\"亚叶\",\n    cost:2,\n    atk:3,\n    hp:2,\n    mine:2,\n    block:0,\n    desc:<span>行动: 消耗1组{material_icons.slice(0,3)}，召唤1个随机干员的6/6复制</span>,\n    illust:\"http://prts.wiki/images/5/5f/%E7%AB%8B%E7%BB%98_%E4%BA%9A%E5%8F%B6_1.png\",\n    action(G, ctx, self) {\n      if (payMaterials(G, ctx, [1,1,1,0])) {\n        let card = ctx.random.Shuffle(G.CARDS)[0];\n        card = {...card};\n        card.atk = 6;\n        card.hp = 6;\n        card.mine = 3;\n        card.cost = 5;\n        summon(G, ctx, card, self);\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },{\n    name:\"史尔特尔\",\n    cost:4,\n    atk:6,\n    hp:3,\n    mine:1,\n    block:1,\n    desc:\"超杀: 消耗1点费用，重置自己\",\n    illust:\"http://prts.wiki/images/0/0c/%E7%AB%8B%E7%BB%98_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94_1.png\",\n    onFight(G, ctx, self, enemy) {\n      // if (G.field.indexOf(self) == G.efield.indexOf(enemy) && payCost(G, ctx, 1)) {\n      //   self.exhausted = false;\n      // }\n      if (enemy.dmg > enemy.hp && payCost(G, ctx, 1, true)) {\n        self.exhausted = false;\n      }\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },{\n    name:\"流星\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:0,\n    desc:\"部署: 造成5点伤害\",\n    illust:\"http://prts.wiki/images/b/be/%E7%AB%8B%E7%BB%98_%E6%B5%81%E6%98%9F_1.png\",\n    onPlay(G, ctx, self) {\n      deal_random_damage(G, ctx, 5);\n    },\n    reinforce: 1,\n    reinforce_desc: \"造成3点伤害\",\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n  },\n\n  {\n      name:\"空爆\",\n      cost:2,\n      atk:3,\n      hp:2,\n      mine:1,\n      block:0,\n      desc:\"采掘: 摧毁场上1个(重置状态的)干员，并造成6点伤害\",\n      illust:\"http://prts.wiki/images/8/87/%E7%AB%8B%E7%BB%98_%E7%A9%BA%E7%88%86_1.png\",\n      onMine(G, ctx, self) {\n        if (eliminate_field(G, ctx)) {\n          deal_random_damage(G, ctx, 6 + 4 * self.power);\n        }\n      },\n      action(G, ctx, self) {\n        if (self.power == 1) {\n          let meteorite = G.CARDS.find(x => x.name == \"陨星\");\n          Object.assign(self, meteorite);\n          self.action = undefined;\n        }\n        else {\n          logMsg(G, ctx, \"只需要强化1次即可\");\n          self.exhausted = false;\n        }\n      },\n      reinforce: 1,\n      reinforce_desc: \"伤害+4\",\n      // onReinforce(G, ctx, self) {\n      //   deal_random_damage(G, ctx, 3);\n      // },\n    },\n\n  {\n    name:\"卡达\",\n    cost:3,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc:\"行动: 本回合剩余时间内，使用其他干员采掘时，重置自己\",\n    illust:\"http://prts.wiki/images/1/1a/%E7%AB%8B%E7%BB%98_%E5%8D%A1%E8%BE%BE_1.png\",\n    action(G, ctx, self) {\n      self.fever = true;\n      G.onCardMine.push(\n        (G, ctx, mcard) => {\n          for (let card of G.field) {\n            if (card.fever && (!mcard.fever)) {\n              card.exhausted = false;\n            }\n          }\n        }\n      );\n    },\n    onTurnBegin(G, ctx, self) {\n      self.fever = false;\n    },\n    reinforce: 1,\n    reinforce_desc: \"+1/+1\",\n    onReinforce(G, ctx, self) {\n      self.atk += 1;\n      self.hp += 1;\n    },\n  },\n\n  // {\n  //   name:\"白雪\",\n  //   cost:2,\n  //   atk:3,\n  //   hp:2,\n  //   mine:1,\n  //   block:0,\n  //   desc: \"采掘/战斗: 触发手牌中1个干员的采掘/战斗效果(视为自己触发)\",\n  //   illust:\"http://prts.wiki/images/1/10/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9B%AA_1.png\",\n  //   reinforce: 1,\n  //   onMine(G, ctx, self) {\n  //     let miner = ctx.random.Shuffle(G.hand.filter(x => (x.onMine && ![\"白雪\"].includes(x.name))))[0];\n  //     if (miner) {\n  //       miner.onMine(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${miner.name} 的采掘效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onFight(G, ctx, self) {\n  //     let fighter = ctx.random.Shuffle(G.hand.filter(x => (x.onFight && ![\"白雪\"].includes(x.name))))[0];\n  //     if (fighter) {\n  //       fighter.onFight(G, ctx, self);\n  //       logMsg(G, ctx, `触发 ${fighter.name} 的战斗效果`);\n  //     }\n  //     else {\n  //       logMsg(G, ctx, \"未找到合适的干员触发效果\");\n  //     }\n  //   },\n  //   onReinforce(G, ctx, self) {\n  //     draw(G, ctx);\n  //   },\n  //   reinforce_desc: \"摸1张牌\",\n  // },\n  \n  \n\n  {\n    name:\"伊桑\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:0,\n    desc: \"行动: 变成手牌中1个干员的复制\",\n    illust:\"http://prts.wiki/images/e/e0/%E7%AB%8B%E7%BB%98_%E4%BC%8A%E6%A1%91_1.png\",\n    reinforce: 3,\n    action(G, ctx, self) {\n      // if (G.field.length > 1){\n      //   G.field[G.field.length-1] = Object.assign({}, ctx.random.Shuffle(G.field.slice(0,G.field.length-1))[0]);\n      // }\n      let card = choice(ctx, G.hand);\n      if (card) {\n        Object.assign(self, card);\n      }\n    },\n    onReinforce(G, ctx, self) {\n      G.hand.unshift(enemy2card(G, ctx));\n    },\n    reinforce_desc: \"将1张敌人牌加入手牌\",\n  },\n  \n  // {\n  //   name:\"W\",\n  //   cost:1,\n  //   atk:6,\n  //   hp:6,\n  //   mine:3,\n  //   block:1,\n  //   desc: \"部署: 翻开1张敌人牌\",\n  //   illust:\"http://prts.wiki/images/4/44/%E7%AB%8B%E7%BB%98_W_1.png\",\n  //   onPlay(G, ctx) {\n  //     drawEnemy(G, ctx);\n  //   },\n  //   reinforce: 1,\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"陨星\",\n    cost:4,\n    atk:3,\n    hp:3,\n    mine:1,\n    block:0,\n    desc: \"战斗: 同时对其攻击目标相邻的敌人造成伤害\",\n    illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E9%99%A8%E6%98%9F_1.png\",\n    onFight(G, ctx, self, enemy) {\n      let enemy_idx = G.efield.indexOf(enemy);\n      for (let e of [G.efield[enemy_idx-1], G.efield[enemy_idx+1]]) {\n        if (e) {\n          e.dmg += self.atk;\n        }\n      }\n    },\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      deal_random_damage(G, ctx, 3);\n    },\n    reinforce_desc: \"造成3点伤害\",\n  },\n\n \n  //  {\n  //   name:\"猎蜂\",\n  //   cost:1,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   desc: \"战斗: 激怒目标\",\n  //   illust:\"http://prts.wiki/images/f/f8/%E7%AB%8B%E7%BB%98_%E7%8C%8E%E8%9C%82_1.png\",\n  //   reinforce: 1,\n\n  //   onFight(G, ctx, self, enemy) {\n  //     enemy.enraged = true;\n  //   },\n\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 3;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+3/+3\",\n  // },\n\n  {\n    name:\"拉普兰德\",\n    cost:4,\n    atk:1,\n    hp:2,\n    mine:1,\n    block:1,\n    desc: \"战斗: 将目标变成1/1并失去所有能力\",\n    illust:\"http://prts.wiki/images/7/75/%E7%AB%8B%E7%BB%98_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7_1.png\",\n    reinforce: 2,\n\n    onFight(G, ctx, self, enemy) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      let idx = G.efield.indexOf(enemy);\n      G.efield[idx] = blank_enemy;\n    },\n\n    onReinforce(G, ctx, self) {\n      let texas = G.CARDS.find(x => (x.name == \"德克萨斯\"));\n      texas.onMine = undefined;\n      texas.desc = \"\";\n      G.field.push(init_card_state(G, ctx, {...texas}));\n\n      if (self.power >= 5) {\n        achieve(G, ctx, \"德克萨斯做得到吗\", \"使用拉普兰德部署5个德克萨斯\", self);\n      }\n    },\n    reinforce_desc: \"召唤\\\"德克萨斯\\\"并将其沉默\",\n  },\n\n  {\n    name:\"翎羽\",\n    cost:2,\n    atk:2,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/8/84/%E7%AB%8B%E7%BB%98_%E7%BF%8E%E7%BE%BD_1.png\",\n    reinforce: 1,\n    desc: \"部署: 重置1个干员\",\n\n    onPlay(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    },\n    \n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n\n      if (self.power == 3) {\n        let wind = G.CARDS.find(x => x.name == \"风笛\");\n        if (~G.field.indexOf(self)) {\n          Object.assign(self, wind);\n        }\n      }\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  // {\n  //   name:\"杜林\",\n  //   cost:5,\n  //   atk:4,\n  //   hp:7,\n  //   mine:2,\n  //   block:2,\n  //   illust: \"http://prts.wiki/images/f/f7/%E7%AB%8B%E7%BB%98_%E6%9D%9C%E6%9E%97_1.png\",\n  //   reinforce: 1,\n  //   desc: \"摧毁: 如果\\\"巡林者\\\"也在弃牌堆，则部署\\\"夜刀\\\"\",\n\n  //   onOut(G, ctx, self) {\n  //     let target = G.discard.find(x => x.name==\"巡林者\");\n  //     if (target) {\n  //       let dragon = G.CARDS.find(x => x.name==\"夜刀\");\n  //       if (dragon) {\n  //         G.field.push(init_card_state(G, ctx, Object.assign({}, dragon)));\n  //       }\n  //     }\n\n  //   },\n    \n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 1;\n  //     self.hp += 3;\n  //   },\n  //   reinforce_desc: \"+1/+3\",\n  // },\n\n  {\n    name:\"狮蝎\",\n    cost:3,\n    atk:4,\n    hp:3,\n    mine:2,\n    block:0,\n    illust: \"http://prts.wiki/images/9/98/%E7%AB%8B%E7%BB%98_%E7%8B%AE%E8%9D%8E_1.png\",\n    reinforce: 2,\n    desc: \"行动: 将场上所有干员变成[费用+1]的干员\",\n\n    action(G, ctx, self) {\n      for (let i=0; i<G.field.length; i++) {\n        let card = G.field[i];\n        let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==(card.cost+1+(self.power||0)))))[0];\n        if (new_card) {\n          G.field.splice(i, 1, init_card_state(G, ctx, {...new_card}));\n          for (let j=0; j<card.power; j++) {\n            reinforce_card(G, ctx, G.field[i]);\n          }\n          G.field[i].exhausted = card.exhausted;\n        }\n      }\n    },\n    reinforce_desc: \"费用再+1\",\n  },\n  {\n    name:\"坚雷\",\n    cost:8,\n    atk:4,\n    hp:16,\n    mine:2,\n    block:2,\n    illust: \"http://prts.wiki/images/9/9c/%E7%AB%8B%E7%BB%98_%E5%9D%9A%E9%9B%B7_1.png\",\n    reinforce: 1,\n    desc: \"行动: 获得1张干员牌，并强化其3次\",\n    action(G, ctx, self) {\n      let card = {...ctx.random.Shuffle(G.CARDS)[0]};\n      G.hand.unshift(card);\n      for (let i=0; i<(3+self.power); i++) {\n        reinforce_card(G, ctx, card);\n      }\n    },\n    reinforce_desc: \"再强化1次\",\n  },\n  \n  {\n    name:\"暗索\",\n    cost:2,\n    atk:2,\n    hp:2,\n    mine:1,\n    block:1,\n    illust: \"http://prts.wiki/images/0/00/%E7%AB%8B%E7%BB%98_%E6%9A%97%E7%B4%A2_1.png\",\n    reinforce: 1,\n    desc: \"部署/行动: 从另一个游戏里偷1张牌\",\n    onPlay(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    action(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    },\n    reinforce_desc: \"从另一个游戏里偷1张牌\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...ctx.random.Shuffle(BORROWS)[0]});\n    }\n  },\n\n  {\n    name:\"可露希尔\",\n    cost:5,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:0,\n    illust: \"https://s1.ax1x.com/2020/08/10/abkasx.png\",\n    reinforce: 1,\n    desc: \"部署: ？？？\",\n    onPlay(G, ctx) {\n      for (let i=0; i<5; i++) {\n        G.hand.unshift(generate_combined_card(G, ctx));\n      }\n    },\n    reinforce_desc: \"？？？\",\n    onReinforce(G, ctx) {\n      G.hand.unshift(generate_combined_card(G, ctx));\n    }\n  },\n\n];\n\nexport const BORROWS = [\n  // {\n  //   name:\"陆逊\",\n  //   cost:3,\n  //   atk:3,\n  //   hp:3,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://b-ssl.duitang.com/uploads/blog/201306/12/20130612021923_k3EJx.thumb.700_0.jpeg\",\n  //   was_enemy: true,\n  //   reinforce: 1,\n  //   desc: \"行动: 当你失去最后的手牌时，你可以摸一张牌\",\n  //   action(G, ctx, self) {\n  //     if (G.hand.length == 0) {\n  //       draw(G, ctx);\n  //       self.exhausted = false;\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  // {\n  //   name:\"凯露\",\n  //   cost:10,\n  //   atk:3,\n  //   hp:2,\n  //   mine:2,\n  //   block:0,\n  //   illust: \"https://img.moegirl.org/common/thumb/c/cb/Karyl.png/545px-Karyl.png\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"行动: 使1个敌人变成\\\"凯露\\\"\",\n  //   action(G, ctx, self) {\n  //     let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.name != \"凯露\")))[0];\n  //     if (enemy) {\n  //       G.efield[G.efield.indexOf(enemy)] = {...self, exhausted: false};\n  //     }\n  //   },\n  //   reinforce_desc: \"+2/+2\",\n  //   onReinforce(G, ctx, self) {\n  //     self.atk += 2;\n  //     self.hp += 2;\n  //   }\n  // },\n\n  {\n    name:\"青眼白龙\",\n    cost:8,\n    atk:3000,\n    hp:2500,\n    mine:4,\n    block:1,\n    illust: \"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1495165458,392829716&fm=173&app=49&f=JPEG?w=544&h=544&s=B0A7DC140001EFF7589EB14603008098\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"召唤: 解放2个怪兽\",\n    onPlay(G, ctx, self) {\n      if (G.field.length > 2) {\n        G.field = G.field.slice(2);\n      }\n      else {\n        G.field = G.field.slice(0, G.field.length-1);\n      }\n    },\n    reinforce_desc: \"获得1张\\\"青眼白龙\\\"\",\n    onReinforce(G, ctx, self) {\n      G.hand.unshift({...self});\n    }\n  },\n\n  // {\n  //   name:\"尤格萨隆\",\n  //   cost:10,\n  //   atk:1,\n  //   hp:1,\n  //   mine:1,\n  //   block:1,\n  //   illust: \"https://bkimg.cdn.bcebos.com/pic/0b46f21fbe096b63f62413aab97b9044ebf81b4c06ba?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2UyNzI=,xp_5,yp_5\",\n  //   reinforce: 1,\n  //   was_enemy: true,\n  //   desc: \"战吼: 随机施放10个法术\",\n  //   onPlay(G, ctx, self) {\n  //     for (let i=0; i<10; i++) {\n  //       let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //       effect[1](G, ctx, self);\n  //       logMsg(G, ctx, \"施放 \"+effect[0]);\n  //     }\n  //   },\n  //   reinforce_desc: \"随机施放1个法术\",\n  //   onReinforce(G, ctx, self) {\n  //     let effect = ctx.random.Shuffle(G.EFFECTS)[0];\n  //     effect[1](G, ctx, self);\n  //     logMsg(G, ctx, \"施放 \"+effect[0]);\n  //   }\n  // },\n\n  {\n    name:\"火车王\",\n    cost:2,\n    atk:6,\n    hp:2,\n    mine:3,\n    block:1,\n    illust: \"http://newsimg.5054399.com/uploads/userup/1405/1015531B059.jpg\",\n    reinforce: 1,\n    was_enemy: true,\n    desc: \"战吼: 为对手召唤2只1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let blank_enemy = {\n        name: \"源石虫\",\n        atk: 1,\n        hp: 1,\n        illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n        dmg: 0,\n        exhausted: false,\n      };\n      G.efield.push({...blank_enemy});\n      G.efield.push({...blank_enemy});\n    },\n    reinforce_desc: \"+2/+2\",\n    onReinforce(G, ctx, self) {\n      self.atk += 2;\n      self.hp += 2;\n    }\n  },\n\n  {\n    name:\"百变泽鲁斯\",\n    cost:1,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    illust: \"https://i03piccdn.sogoucdn.com/f8b756971cd5abcd\",\n    was_enemy: true,\n    reinforce: 1,\n    desc: \"如果这张牌在你的手牌中，每个回合都会随机变成一张随从牌\",\n    onTurnBegin(G, ctx, self) {\n      let idx = G.hand.indexOf(self);\n      if (~idx) {\n        G.hand[idx] = {...ctx.random.Shuffle(G.CARDS)[0], onTurnBegin: self.onTurnBegin, reinforce_desc: self.reinforce_desc, was_enemy:true}; // add \"was enemy\" to differ it from other cards, may got a better method, and meybe in the future other cards may use this feature \"was_enemy\" as well, but at this time only this card use this feature.\n      }\n    },\n    reinforce_desc: \"这张牌由百变泽鲁斯变成\",\n    onReinforce(G, ctx, self) {\n      self.onTurnBegin(G, ctx, self);\n    }\n  },\n\n];\n\nexport const heijiao_in_dream =  {\n    name:\"黑角\",\n    cost:1,\n    atk:8,\n    hp:8,\n    mine:4,\n    block:2,\n    desc:\"部署: 获得5000分\",\n    illust:\"http://prts.wiki/images/a/ac/%E7%AB%8B%E7%BB%98_%E7%99%BD%E9%9D%A2%E9%B8%AE_1.png\",\n    onPlay(G, ctx) {\n      G.score += 5000;\n    },\n    action(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n      ready_order(G, ctx);\n    },\n    reinforce: 2,\n    onReinforce(G, ctx, self) {\n      G.costs += 2;\n    },\n    reinforce_desc: \"获得2点费用\",\n};\n\nexport const extra_cards = [\n  {\n    name:\"稀音\",\n    cost:0,\n    atk:1,\n    hp:1,\n    mine:1,\n    block:1,\n    desc:\"\",\n    illust:\"http://prts.wiki/images/d/dd/%E7%AB%8B%E7%BB%98_%E7%A8%80%E9%9F%B3_1.png\",\n    reinforce: 1,\n    onReinforce(G, ctx, self) {\n      self.hp += 2;\n      self.atk += 2;\n    },\n    reinforce_desc: \"+2/+2\",\n  },\n  {\n    name: \"梅尔\",\n    generator(ctx) {\n      let material = ctx.random.Die(3) - 1;\n      return {\n          name:\"梅尔\",\n          cost:1,\n          atk:3,\n          hp:2,\n          mine:1,\n          block:1,\n          desc: <span>行动: 消耗1个{material_icons[material]}，造成6点伤害</span>,\n          illust:\"http://prts.wiki/images/f/f0/%E7%AB%8B%E7%BB%98_%E6%A2%85%E5%B0%94_1.png\",\n          reinforce: 1,\n      \n          action(G, ctx) {\n            let requirements = [0,0,0,0];\n            requirements[material] = 1;\n            if (payMaterials(G, ctx, requirements)) {\n                deal_random_damage(G, ctx, 6);\n            }\n          },\n          \n          onReinforce(G, ctx) {\n            deal_random_damage(G, ctx, 3);\n          },\n          reinforce_desc: \"造成3点伤害\",\n        };\n    }\n  },\n    \n];\n\nexport const default_deck = CARDS.map(x => `1 ${x.name}`).join(\"\\n\");","import React from 'react';\nimport _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { ENEMIES } from \"./enemies\";\nimport { ORDERS, material_icons, default_order } from \"./orders\";\nimport { UPGRADES } from './upgrades';\nimport { get_deck_name, generate_deck, generate_deck_s2, generate_deck_s1 } from './DeckGenerator';\nimport { arr2obj, PRNG } from \"./utils\";\nimport { ICONS } from \"./icons\";\n\nexport function move(G, ctx, d1, d2, idx) {\n  let card = G[d1].splice(idx || 0, 1)[0];\n  G[d2].push(card);\n  return card;\n}\n\nexport function payCost(G, ctx, cost, from_card) {\n  if (G.costs >= cost) {\n    G.costs -= cost;\n\n    if (from_card) {\n      for (let f of G.onPayCost) {\n        f(G, ctx, cost);\n      }\n    }\n\n    return true;\n  }\n\n  else{\n    logMsg(G, ctx, \"费用不足\");\n    return false;\n  }\n}\n\nexport function gainMaterials(G, ctx, count) {\n  let gained = [];\n\n  for (let i=0; i<count; i++) {\n    let material = ctx.random.Die(3)-1;\n    G.materials[material] += 1; //TODO: add this to log\n    gained.push(material);\n  }\n\n  G.gained = gained;\n}\n\nexport function payMaterials(G, ctx, requirements) {\n  let delta = 0;\n  for (let i=0; i<4; i++) {\n    if (G.materials[i] < requirements[i]) {\n      delta += requirements[i] - G.materials[i];\n    }\n  }\n\n  if (G.materials[3] < delta) {\n    logMsg(G, ctx, \"材料不足\");\n    return false;\n  }\n\n  else {\n    for (let i=0; i<4; i++) {\n      G.materials[i] -= requirements[i];\n\n      if (G.materials[i] < 0) {\n        G.materials[3] += G.materials[i]; //add a negative num is reduce\n        G.materials[i] = 0;\n      }\n    }\n\n    G.gained = [];\n\n    return true;\n  }\n}\n\nfunction use(G, ctx, card) {\n  if (!card.exhausted) {\n    card.exhausted = true;\n    return true;\n  }\n\n  else {\n    return false;\n  }\n}\n\nexport function get_blocker(G, ctx, enemy) {\n  let idx = G.efield.indexOf(enemy);\n  let blocked_enemies = 0;\n\n  if (idx == -1) {\n    return false;\n  }\n\n  for (let c of G.field) {\n    blocked_enemies += Math.max(0, c.block||0);\n    if (blocked_enemies > idx) {\n      return c;\n    }\n  }\n\n  return false;\n}\n\nfunction out(G, ctx, deck, idx) {\n  let card = G[deck][idx];\n  let discard = (deck == \"field\") ? \"discard\" : \"ediscard\";\n  move(G, ctx, deck, discard, idx);\n  logMsg(G, ctx, `${card.name} 被摧毁`);\n  if (card.onOut) {\n    card.onOut(G, ctx, card);\n  }\n}\n\nexport function deal_damage(G, ctx, deck, idx, dmg) {\n  let card = G[deck][idx];\n\n  if (card) {\n    //cards with no damage may not have the damage attr\n    let total_dmg = dmg + (card.vulnerable || 0);\n    card.dmg = (card.dmg || 0) + total_dmg;\n    logMsg(G, ctx, `${card.name} 受到${total_dmg}点伤害`);\n\n    if (card.dmg >= card.hp) {\n      // if (~G.efield.indexOf(card)) {\n      //   out(G, ctx, deck, idx);\n      // }\n      card.exhausted = true;\n    }\n  }\n}\n\nexport function deal_random_damage(G, ctx, amount) {\n  let enemy = ctx.random.Shuffle(G.efield.filter(x => (x.dmg < x.hp)))[0];\n  if (enemy) {\n    let idx = G.efield.indexOf(enemy);\n    deal_damage(G, ctx, \"efield\", idx, amount);\n  }\n}\n\nexport function silent(card) {\n  card.onPlay = undefined;\n  card.onMine = undefined;\n  card.onFight = undefined;\n  card.action = undefined;\n  card.onRest = undefined;\n  card.onOut = undefined;\n  card.desc = \"\";\n}\n\nexport function addTags(G, ctx, tags) {\n  for (let t of tags) {\n    t.effect(G, ctx);\n  }\n}\n\nexport function init_card_state(G, ctx, card) {\n  card.dmg = 0;\n  card.power = card.power || 0;\n  if (card.material == undefined) {\n    card.material = (ctx.random.Die(3) - 1); \n  }\n  card.exhausted = G.exhausted_enter;\n  return card;\n}\n\nexport function eliminate_field(G, ctx) {\n  let card = ctx.random.Shuffle(G.field.filter(x => !x.exhausted))[0];\n  if (card) {\n    G.field = G.field.filter(x => x != card);\n    if (card.onOut) {\n      card.onOut(G, ctx, card);\n    }\n  }\n  return card;\n}\n\nexport function draw(G, ctx) {\n  // First, check the limit\n  if (G.limit_hand && (G.hand.length >= 5)) {\n    logMsg(G, ctx, \"手牌数已达到上限\");\n    return;\n  }\n\n  if (G.deck.length > 0) {\n    G.hand.unshift(G.deck.pop());\n  } \n}\n\nexport function drop(G, ctx) {\n  let idx = ctx.random.Die(G.hand.length) - 1;\n  if (~idx) {\n    G.hand.splice(idx, 1);\n\n    G.has_discarded = true;\n\n    for (let f of G.onDropCard) {\n      f(G, ctx);\n    }\n  }\n}\n\nexport function mulligan(G, ctx, choices) {\n  let discarded = G.hand.filter((x, idx) => choices[idx]);\n  G.hand = G.hand.filter((x, idx) => !choices[idx]);\n  if (G.hand.length < 5) {\n    let num_draw = 5 - G.hand.length; // What a tricky feature of js\n    for (let i = 0; i < num_draw; i++) {\n      draw(G, ctx);\n    }\n    G.deck = ctx.random.Shuffle([...G.deck, ...discarded]);\n  }\n\n  // Add init here\n  G.hand = [...G.deck.filter(card => card.is_init), ...G.hand];\n}\n\nexport function play_card(G, ctx, card) {\n  if (G.field.length < G.field_limit) {\n    let inserted = init_card_state(G, ctx, {...card});\n    G.field = [...G.field, inserted];\n    if (inserted.onPlay) {\n      inserted.onPlay(G, ctx, inserted);\n    }\n    for (let bonus of (inserted.onPlayBonus || [])) {\n      bonus.effect(G, ctx, inserted);\n    }\n    return inserted;\n  }\n  else {\n    logMsg(G, ctx, \"场上干员数已达到上限\");\n    return false;\n  }\n}\n\nfunction play(G, ctx, idx) {\n  let card = G.hand[idx]; //No need to verify at this stage\n\n  // if (G.limit_hand_field && (G.field.length >= 6)) {\n  //   logMsg(G, ctx, \"场上干员数已达到上限\");\n  //   return;\n  // }\n\n  if (payCost(G, ctx, card.cost)) {\n    // move(G, ctx, \"hand\", \"field\", idx);\n    // init_card_state(G, ctx, card);\n    G.hand.splice(idx, 1);\n    let inserted = play_card(G, ctx, card); // EH: What a strange abstraction, this should be changed\n    if (inserted) {\n      logMsg(G, ctx, `部署 ${card.name}`);\n      for (let f of G.onPlayCard) {\n        f(G, ctx, inserted, card);\n      }\n    }\n    else {\n      G.costs += card.cost;\n      G.hand.push(card);\n    }\n  }\n}\n\nfunction mine(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    gainMaterials(G, ctx, card.mine);\n    logMsg(G, ctx, `使用 ${card.name} 采掘`);\n    if (card.onMine) {\n      card.onMine(G, ctx, card);\n    }\n    for (let f of G.onCardMine) {\n      f(G, ctx, card);\n    }\n  }\n}\n\nfunction setValue(G, ctx, attr, val) {\n  G[attr] = val;\n}\n\nexport function refreshOrder(G, ctx) {\n  G.orders = ctx.random.Shuffle(G.odeck).slice(0, 8);\n  G.orders = sort_orders(G.orders);\n}\n\nfunction sort_orders(orders) {\n  return orders.sort((x,y) => {\n    let price_y = _.sum(y.requirements);\n    let price_x = _.sum(x.requirements);\n    if (price_y != price_x) return price_x - price_y;\n    if (y.advanced && !x.advanced) return -1;\n    if (!y.advanced && x.advanced) return 1;\n    return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n  });\n}\n\n// function sort_orders(G) {\n//   G.orders = G.orders.sort((x,y)=>{\n//     if (y.advanced && !x.advanced) return -1;\n//     if (!y.advanced && x.advanced) return 1;\n//     return x.requirements.indexOf(3) - y.requirements.indexOf(3);\n//   });\n// }\n\n// function sort_finished(G) {\n//   G.finished = G.finished.sort((x,y)=>(x.order_id-y.order_id));\n// }\n\nfunction price_up(order) {\n  // let new_requirements = order.requirements;\n  // if (order.advanced) {\n  //   new_requirements[3] += 1;\n  // }\n  // else {\n  //   new_requirements = new_requirements.map(x => (x == 0)? 0 : x+1);\n  // }\n  // return {...order, requirements: new_requirements};\n  if (order.advanced) {\n    order.requirements[3] += 1;\n  }\n  else {\n    order.requirements = order.requirements.map(x => (x==0)?0:x+1);\n  }\n}\n\nfunction finishOrder(G, ctx, idx) {\n  let order = G.orders[idx];\n\n  if (payMaterials(G, ctx, order.requirements)) {\n    G.score += order.score;\n    if (order.reward != undefined) {\n      G.materials[order.reward] += 1;\n    }\n    G.finished.push({...G.orders.splice(idx, 1)[0]});\n    logMsg(G, ctx, \"完成订单\");\n    // sort_orders(G);\n\n    if ([4,7].includes(G.finished.length)) {\n      G.orders.map(price_up);\n      G.odeck.map(price_up);\n    }\n  }\n}\n\nfunction useOrder(G, ctx, idx, field_selected, enemy_selected) {\n  let order = G.finished[idx];\n\n  if (use(G, ctx, order) && ((order.cost == undefined) || (payMaterials(G, ctx, order.cost)))) {\n    order.effect(G, ctx, field_selected, enemy_selected);\n    for (let f of G.onUseOrder) {\n      f(G, ctx, order);\n    }\n  }\n}\n\nfunction harvest(G, ctx) {\n  let harvest_orders = G.finished.filter(x => x.harvest);\n  for (let order of harvest_orders) {\n    if (use(G, ctx, order)) {\n      order.effect(G, ctx);\n    }\n  }\n}\n\nexport function drawEnemy(G, ctx) {\n  if (G.edeck.length > 0) {\n    let enemy = move(G, ctx, \"edeck\", \"efield\");\n    enemy.exhausted = G.enemy_exhausted_enter;\n    enemy.dmg = 0;\n    enemy.enraged = enemy.enraged || false;\n    logMsg(G, ctx, `${enemy.name} 入场`);\n    if (enemy.is_elite) {\n      switchEnemy(G, ctx);\n      // if (enemy.onPlay && !surge) {\n      //   enemy.onPlay(G, ctx, enemy);\n      // }\n    }\n    if (enemy.onPlay) {\n      enemy.onPlay(G, ctx, enemy);\n    }\n  \n  }\n}\n\nexport function switchEnemy(G, ctx) {\n  // if (G.not_switch) {\n  //   return false;\n  // }\n\n  let len = G.efield.length;\n  let enemy = G.efield[len-1];\n  let switcher = G.efield[len-2];\n\n  // let surge = false;\n  // if (len == 1) {\n  //   surge = true;\n  // }\n  // else if (switcher.is_elite) {\n  //   surge = true;\n  // }\n\n  // if (surge) {\n  //   G.efield.pop();\n  //   drawEnemy(G, ctx);\n  // }\n  if (switcher && (!switcher.is_elite)) {\n    G.efield.splice(len-2, 1);\n  }\n  else {\n    enemy.atk = Math.max(enemy.atk - 2, 1);\n    enemy.hp = Math.max(enemy.hp - 2, 1);\n  }\n\n  // return false;\n}\n\nexport function enemy2card(G, ctx) {\n  let enemy = Object.assign({}, ctx.random.Shuffle(G.edeck)[0]);\n  enemy = {\n    ...enemy,\n    was_enemy: true,\n    cost: 1,\n    mine: 3,\n    block: 2,\n    reinforce: 1,\n    reinforce_desc: \"+3/+3\",\n    material: ctx.random.Die(3)-1,\n    onReinforce: (G, ctx, self) => {\n      self.atk += 3;\n      self.hp += 3;\n    },\n  };\n  if (typeof enemy.desc == \"string\") {\n    enemy.desc = enemy.desc.replace(\"动乱\", \"采掘\");\n    enemy.desc = enemy.desc.replace(\"入场\", \"部署\");\n  }\n  return enemy;\n}\n\nexport function generate_combined_card(G, ctx) {\n  let card = {\n    reversed: true,\n    cost: ctx.random.Die(12)-2,\n    atk: ctx.random.Die(12)-2,\n    hp: ctx.random.Die(12),\n    mine: ctx.random.Die(5),\n    block: ctx.random.Die(4)-1,\n    reinforce: 1,\n    material: ctx.random.Die(3)-1,\n    desc: [],\n  };\n\n  let time_points = [\n    [\"部署: \", \"onPlay\"],\n    [\"采掘: \", \"onMine\"],\n    [\"战斗: \", \"onFight\"],\n    [\"行动: \", \"action\"],\n    [\"摧毁: \", \"onOut\"],\n  ];\n  time_points = ctx.random.Shuffle(time_points).slice(0,2);\n  let effects = ctx.random.Shuffle(G.EFFECTS);\n\n  for (let i=0; i<2; i++) {\n    card.desc.push(`${time_points[i][0]}${effects[i][0]}`);\n    card[time_points[i][1]] = effects[i][1];\n  }\n  card.desc = [card.desc[0], <br/>, card.desc[1]];\n\n  card.reinforce_desc = effects[2][0];\n  card.onReinforce = effects[2][1];\n\n  let title = ctx.random.Shuffle(G.CARDS)[0];\n  card.name = title.name.split(\"\").reverse().join(\"\");\n  if (card.name == \"W\") {\n    card.name = \"M\";\n  }\n  card.illust = title.illust;\n\n  return card;\n  \n}\n\nfunction fight(G, ctx, idx1, idx2) {\n  if (idx1 < 0 || idx1 >= G.field.length || idx2 < 0 || idx2 >= G.efield.length) {\n    console.log(\"invalid move\");\n    return;\n  }\n\n  let card = G.field[idx1];\n  let enemy = G.efield[idx2];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 战斗`);\n    deal_damage(G, ctx, \"efield\", idx2, card.atk);\n    if (card.onFight) {\n      card.onFight(G, ctx, card, enemy);\n    }\n    for (let f of G.onCardFight) {\n      f(G, ctx, card, enemy);\n    }\n  }\n}\n\nfunction act(G, ctx, idx) {\n  let card = G.field[idx];\n\n  if (use(G, ctx, card) && (G.stage == \"player\")) {\n    logMsg(G, ctx, `使用 ${card.name} 行动`);\n    card.action(G, ctx, card);\n  }\n}\n\nexport function reinforce_card(G, ctx, card) {\n  card.power = card.power || 0; // EH: are there any better methods to write less var||0?\n  card.power += 1;\n  if (card.onReinforce) {\n    card.onReinforce(G, ctx, card);\n  }\n}\n\nexport function get_num_rest_cards(G, ctx) {\n  return G.field.filter(x => (!x.exhausted)).length;\n}\n\nexport function rest(G, ctx) {\n  let rest_cards = G.field.filter(x => (!x.exhausted));\n  let num_rest_cards = rest_cards.length;\n\n  for (let i=0; i<num_rest_cards; i++) {\n      draw(G, ctx);\n      G.costs += 1;\n  }\n\n  for (let card of rest_cards) {\n    if (card.onRest) {\n      card.onRest(G, ctx, card);\n    }\n  }\n}\n\nexport function reinforce(G, ctx, idx) {\n  let card = G.field[idx];\n  let requirements = [0,0,0,0];\n  requirements[card.material] = card.reinforce;\n\n  if (G.reinforce_need_cost) {\n    let paid = payCost(G, ctx, 1);\n    if (!paid) {\n      return;\n    }\n  }\n\n  if (payMaterials(G, ctx, requirements)) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function choice(ctx, alist) {\n  return ctx.random.Shuffle(alist)[0];\n}\n\nexport function reinforce_hand(G, ctx) {\n  let card = ctx.random.Shuffle(G.hand)[0];\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function reinforce_field(G, ctx) {\n  let card = choice(ctx, G.field.filter(x => (!(x.exhausted||[\"诗怀雅\"].includes(x.name)))));\n\n  if (card) {\n    reinforce_card(G, ctx, card);\n  }\n}\n\nexport function exhaust_random_enemy(G, ctx) {\n  let unexhausted = G.efield.filter(x => (!(x.exhausted||x.unyielding)));\n  if (unexhausted.length > 0) {\n    ctx.random.Shuffle(unexhausted)[0].exhausted = true;\n  }\n}\n\nexport function reduce_enemy_atk(G, ctx, amount) {\n  let reduced = ctx.random.Shuffle(G.efield)[0];\n  if (reduced) {\n    reduced.atk -= amount;\n  }\n}\n\nexport function add_vulnerable(G, ctx, amount) {\n  let enemy = choice(ctx, G.efield);\n  if (enemy) {\n    enemy.vulnerable = (enemy.vulnerable || 0) + amount;\n  }\n}\n\nexport function ready_random_card(G, ctx, self) {\n  let exhausted_cards = G.field.filter(x => (x.exhausted && (x != self)));\n  let prepared_cards = exhausted_cards.filter(x => (![self.name, \"雷蛇\", \"白面鸮\", \"艾雅法拉\", \"能天使\", \"温蒂\", \"白雪\", \"霜叶\"].includes(x.name)));\n  if ((exhausted_cards.length != 0) && (prepared_cards.length == 0)) {\n    logMsg(G, ctx, \"干员们感到意外的疲惫，无法被重置\");\n  }\n  if (prepared_cards.length > 0) {\n    let card = ctx.random.Shuffle(prepared_cards)[0];\n    card.ready_times = card.ready_times || 0;\n    if (card.ready_times >= 5) {\n      logMsg(G, ctx, `${card.name} 感到意外的疲惫`);\n      return;\n    }\n    card.exhausted = false;\n    card.ready_times += 1;\n    logMsg(G, ctx, `重置 ${card.name}`);\n  }\n\n}\n\nexport function fully_restore(G, ctx) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  let cured = card.dmg;\n  card.dmg = 0;\n\n  return cured;\n}\n\nexport function cure(G, ctx, amount) {\n  // EH: find a \"sorted\" function instead of this way\n  let card = [...G.field].sort((x,y) => {\n    if (x.dmg != y.dmg) {\n      return y.dmg - x.dmg;\n    }\n    else {\n      return x.hp-y.hp;\n    }\n  })[0];\n  if (card) {\n    card.dmg = Math.max(card.dmg - amount, 0);\n    // if (card.dmg < 0) {\n      // card.hp -= card.dmg;\n      // card.dmg = 0;\n    // }\n  }\n  return card;\n}\n\nexport function get_rhine_order(G, ctx) {\n  let order = {...(ctx.random.Shuffle(G.odeck)[0])};\n  order.rhine = true;\n  order.color = undefined;\n  G.finished.unshift(order);\n  // sort_finished(G);\n}\n\nfunction enemyInit(G, ctx) {\n  clearField(G, ctx, \"efield\");\n  G.stage = \"enemy\";\n}\n\nexport function enemyMove(G, ctx, idx) {\n  let enemy = G.efield[idx];\n\n  if (use(G, ctx, enemy)) {\n\n    if (enemy.action && (!enemy.enraged)) {\n      enemy.action(G, ctx, enemy);\n      logMsg(G, ctx, `${enemy.name} 使用其行动能力`);\n    }\n\n    else {\n      let blocker = get_blocker(G, ctx, enemy);\n      let blocker_idx = G.field.indexOf(blocker);\n\n      if (blocker_idx != -1) {\n        deal_damage(G, ctx, \"field\", blocker_idx, enemy.atk);\n        logMsg(G, ctx, `${enemy.name} 对 ${blocker.name} 发起了进攻`);\n        if (enemy.onFight) {\n          enemy.onFight(G, ctx, enemy, blocker);\n        }\n      }\n\n      else {\n        if (enemy.enraged) {\n          if (G.field.length > 0) {\n            let card = ctx.random.Shuffle(G.field.filter(x=>(x.hp>x.dmg)))[0];\n            let card_idx = G.field.indexOf(card);\n            if (card){\n              deal_damage(G, ctx, \"field\", card_idx, enemy.atk);\n              if (enemy.onFight) {\n                enemy.onFight(G, ctx, enemy, card);\n              }\n            }\n            logMsg(G, ctx, `暴怒的 ${enemy.name} 发起了进攻`);\n          }\n        }\n        else {\n          G.danger += 1;\n          logMsg(G, ctx, `${enemy.name} 发起了动乱`);\n          if (enemy.onMine) {\n            enemy.onMine(G, ctx, enemy);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction clearField(G, ctx, field=\"field\") {\n  for (let i=G[field].length-1; i>=0; i--) {\n    let card = G[field][i];\n    if (card.hp - card.dmg <= 0) {\n      out(G, ctx, field, i);\n      if (field == \"efield\") {\n        for (let f of G.onEnemyOut) {\n          f(G, ctx);\n        }\n      }\n    }\n  }\n}\n\nfunction refresh(G, ctx) {\n  for (let card of [].concat(G.field, G.efield, G.finished)) {\n    card.exhausted = false;\n  }\n}\n\nfunction onScenarioBegin(G, ctx) {\n  //Setup edeck\n  for (let enemy of G.edeck) {\n    if (enemy.atk < 0) { // Not <= because some is 0\n      enemy.atk = 1;\n    }\n  }\n\n  //SetUp\n  for (let i=0; i<4; i++){\n    draw(G, ctx);\n  }\n\n  for (let i=0; i<2; i++){\n    drawEnemy(G, ctx);\n  }\n\n  refreshOrder(G, ctx);\n\n  console.log(\"Setup finished\");\n  G.playing = true;\n  ctx.events.endTurn(); // After set playing to true, end turn to call onTurnBegin effects\n}\n\nexport function str2deck(deck_data) {\n  let card_dict = arr2obj(CARDS);\n  let deck = [];\n\n  let cards = deck_data.split(\"\\n\");\n  for (let i=0; i<cards.length; i++) {\n    let card = cards[i];\n    let card_data = card.split(\" \");\n    if (card_data.length >= 2) {\n      let amount = parseInt(card_data[0]) || 0; // If it's NaN, then assign it 0\n      let target_card = card_dict[card_data[1]];\n\n      if (target_card) {\n        //init card state here\n        target_card.material = i % 3;\n        for (let j=0; j<amount; j++) {\n            deck.push(Object.assign({}, target_card));\n        }\n      }\n    }\n  }\n\n  return deck;\n}\n\n// function setDeck(G, ctx, deck_data) {\n//   G.deck = ctx.random.Shuffle(str2deck(deck_data));\n// }\n\nfunction setDecks(G, ctx, decks) {\n  Object.assign(G, decks);\n  // To make sure each time also got different ctx.random results\n  // EH: However, it's still better if I can adjust the seed of ctx\n  for (let i=0; i<G.shuffle_times; i++) {\n    ctx.random.D4(); \n  }\n}\n\nexport function init_decks(deck, seed) {\n  // let deck = str2deck(deck_data);\n  // deck = deck.map(x=>({...x, reversed:true}));\n  let rng = new PRNG(seed);\n\n  let get_enemies = () => (ENEMIES.map(x=>({...x})));\n  let edeck = get_enemies().concat(get_enemies());\n  let odeck = ORDERS.map((x,idx)=>({...x, order_id:idx, color:rng.randRange(3)}));\n\n  deck = rng.shuffle(deck);\n  edeck = rng.shuffle(edeck);\n  odeck = rng.shuffle(odeck);\n\n  edeck = edeck.slice(0, 22);\n\n  return {deck, edeck, odeck, shuffle_times:rng.randRange(10)};\n}\n\nexport function logMsg(G, ctx, msg) {\n  G.messages.unshift(msg);\n}\n\nfunction changeMsg(G, ctx, msg) {\n  G.messages[0] = msg;\n}\n\nexport function achieve(G, ctx, achievement_name, achievement_desc, card) {\n  if (card && !G.achievements[card.name]) {\n    alert(`达成成就: ${achievement_name}\\n${achievement_desc}`);\n    G.achievements[card.name] = true;\n  }\n}\n\nexport function setup(ctx) {\n    const G = {};\n    setup_scenario(G, ctx);\n\n    return G;\n}\n\nfunction setup_events(G, ctx) {   \n  G.onPlayCard = [];\n  G.onCardMine = [];\n  G.onCardFight = [];\n  G.onCardAct = [];\n  G.onCardReinforced = [];\n\n  G.onPayCost = [];\n  G.onDropCard = [];\n\n  G.onUseOrder = [];\n\n  G.onEnemyOut = [];\n}\n\nfunction setup_turn_states(G, ctx) {\n  G.has_discarded = false;\n}\n\nexport function setup_scenario(G, ctx) {\n    G.hand = [];\n    G.field = [];\n\n    G.deck = [];\n    // let get_enemies = () => (ENEMIES.map(x=>Object.assign({},x)));\n    // G.edeck = ctx.random.Shuffle(get_enemies().concat(get_enemies())).slice(0,20);\n    // G.odeck = ctx.random.Shuffle(ORDERS.map((x,idx)=>({...x, order_id:idx})));\n    G.edeck = [];\n    G.odeck = [];\n    \n    G.efield = [];\n    G.discard = [];\n    G.ediscard = [];\n\n    G.orders = [];\n    // G.finished = [default_order];\n    G.finished = [];\n\n    G.picks = [];\n\n    G.costs = 2; //On turn begin, gain 3, so it's 2 at setup\n    G.materials = [1, 1, 1, 0]; //EH: it may not be a good idea to set materials in array, but whatever, do it at first\n\n    G.score = 0;\n    G.danger = 0;\n    G.goal = 10;\n    G.max_danger = 8;\n    G.num_enemies_out = 2;\n    G.field_limit = 8;\n\n    setup_events(G, ctx);\n\n    G.exhausted_enter = false;\n    G.enemy_exhausted_enter = true;\n\n    G.messages = [\"欢迎来到明日方舟: 采掘行动\"];\n    G.achievements = {};\n\n    G.playing = false;\n    G.gained = [];\n    G.stage = \"player\";\n    G.round_num = 0;\n\n    G.CARDS = CARDS.slice(0);\n    let banned_cards = [\"可露希尔\"];\n    G.CARDS = G.CARDS.filter(x => !banned_cards.includes(x.name));\n    let effects = [];\n    for (let c of CARDS.filter(x=>((typeof x.desc == \"string\") && (x.name != \"可露希尔\")))) {\n      let desc = c.desc.split(\":\").slice(1).join(\"\");\n      if (c.onPlay) {\n        effects.push([desc, c.onPlay]);\n      }\n      if (c.onMine) {\n        effects.push([desc, c.onMine]);\n      }\n      if (c.action) {\n        effects.push([desc, c.action]);\n      }\n    }\n    G.EFFECTS = effects;\n    // G.ORDERS = [...ORDERS];\n\n    console.log(\"Scenario setup finished.\");\n}\n\nfunction setup_competition_deck(G, ctx, Deck=[]) {\n  G.Deck = Deck;\n}\n\nexport function pick(G, ctx, idx) {\n  let card = G.picks[idx];\n\n  if (card) {\n    if (payMaterials(G, ctx, card.price)) {\n      G.picks.splice(idx, 1);\n      G.hand.unshift(card);\n    }\n  }\n}\n\nexport function refresh_picks(G, ctx) {\n  G.picks = ctx.random.Shuffle(G.deck).slice(0, 5);\n  let add_price = (pick, idx) => {\n    let price = [0, 0, 0, 0];\n    let requirement = ctx.random.Die(3) - 1;\n    price[requirement] = Math.floor(idx / 2) + 1;\n    return {...pick, price};\n  }\n  G.picks = G.picks.map(add_price);\n}\n\nexport function summon(G, ctx, card, self) {\n  let idx = G.field.indexOf(self) + 1;\n  if (card) {\n    G.field.splice(idx, 0, init_card_state(G, ctx, {...card}));\n  }\n}\n\nfunction setup_deck_selection(G, ctx, num_shuffles) {\n  _.times(num_shuffles, ctx.random.D4);\n  G.deck_list = [];\n  G.deck_names = _.times(3, get_deck_name);\n  let deck_generators = [generate_deck_s2, generate_deck_s2, generate_deck_s1];\n  for (let i=0; i<3; i++) {\n    G.deck_list.push(str2deck(deck_generators[i](G.deck_names[i])));\n  }\n  G.num_upgrades = 15;\n}\n\n\nfunction select_deck(G, ctx, idx) {\n  G.Deck = G.deck_list[idx];\n  for (let card of G.Deck) {\n    card.onPlayBonus = [];\n  }\n  refresh_selections(G, ctx);\n}\n\nfunction refresh_selections(G, ctx) {\n  // TOFINDOUT: Double list bug? Or say copy list bug? If modify items in sliced version of the list, then the item from the main list is not modified. Maybe \"new card object\" bug is similar.\n  // G.selections = ctx.random.Shuffle(G.Deck).slice(0,3);\n  // Control the 12 selections on frontend? On frontend at first, if there are requirements for reconstructing it to backend, reconstruct it.    \n  G.selections = ctx.random.Shuffle(G.Deck);\n  G.upgrades = ctx.random.Shuffle(UPGRADES).slice(0,3);\n\n\n  G.num_upgrades -= 1;\n  if (G.num_upgrades <= 0) {\n    G.finish_upgrading = true;\n  }\n}\n\nfunction upgrade(G, ctx, card_idx, upgrade_idx) {\n  let card = G.selections[card_idx];\n  let upgrade = G.upgrades[upgrade_idx];\n  if (card && upgrade) {\n    upgrade.effect(card);\n    card.upgraded = true;\n  }\n  // To prevent double list bug\n  G.Deck = G.selections;\n}\n\n\nexport function get_desc(card) {\n  return  <span>\n    <span style={{fontSize:\"120%\"}}>\n      {card.atk}/{card.hp} &nbsp;\n      {ICONS.mine}{card.mine} &nbsp;\n      {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n    </span>\n    <br/>\n    {card.desc||\"\"}\n    <br/>\n    <span style={{\n      display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n    }}>\n      <i>\n      部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      </i>\n      <br/>\n    </span>\n    ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n    <br />\n    <i>{card.quote||\"\"}</i>\n  </span>;\n}\n\nexport const AC = {\n  setup: setup,\n\n  moves: {\n    setup_scenario,\n    setDecks,\n    addTags,\n    onScenarioBegin,\n    mulligan,\n    draw,\n    play,\n    mine,\n    act,\n    reinforce,\n    rest,\n    setValue,\n    refreshOrder,\n    finishOrder,\n    useOrder,\n    harvest,\n    drawEnemy,\n    fight,\n    clearField,\n    enemyInit,\n    enemyMove,\n    logMsg,\n    changeMsg,\n    setup_competition_deck,\n    setup_deck_selection,\n    select_deck,\n    refresh_selections,\n    upgrade,\n    pick,\n  },\n\n  turn: {\n    onBegin(G, ctx) {\n      if (G.playing) {\n        console.log(\"On turn begin\");\n        logMsg(G, ctx, \"回合开始\");\n        G.stage = \"player\";\n        G.round_num += 1;\n\n        refresh(G, ctx);\n        draw(G, ctx);\n        refreshOrder(G, ctx);\n        G.costs += 3;\n        refresh_picks(G, ctx);\n\n        setup_events(G, ctx);\n        setup_turn_states(G, ctx);\n\n        for (let card of [...G.hand, ...G.field, ...G.efield]) {\n          card.ready_times = 0;\n          if (card.onTurnBegin) {\n            card.onTurnBegin(G, ctx, card);\n          }\n        }\n\n        if (G.enemy_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 1;\n            enemy.hp += 1;\n          }\n        }\n        \n        if (G.enemy_hp_grow && G.round_num > 1) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 2;\n          }\n        }\n\n        if (G.round_num == 3 && G.reinforceOnR3) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.hp += 4;\n          }\n        }\n        \n        if (G.round_num == 3 && G.dashOnR3) {\n          G.enemy_exhausted_enter = false;\n        }\n\n        if (G.round_num == 4 && G.reinforceOnR4) {\n          for (let enemy of [...G.edeck, ...G.efield]) {\n            enemy.atk += 5;\n            enemy.hp += 5;\n          }\n        }\n\n        if (G.round_num == 3 && G.moreEnemiesOnR3) {\n          G.num_enemies_out += 1;\n        }\n\n        if (G.fog) {\n          for (let i=G.field.length-1; i>=0; i--) {\n            deal_damage(G, ctx, \"field\", i, 1);\n          }\n          clearField(G, ctx, \"field\"); // Add this to discard destroyed cards\n          // EH: Maybe this can be reconstructed?\n        }\n\n        if (G.limit_hand && G.hand.length > 5) {\n          G.discard = [...G.discard, ...G.hand.slice(5)];\n          G.hand = G.hand.slice(0, 5);\n        }\n\n        if (G.danger < 0) {\n          G.danger = 0;\n        }\n\n        if (G.reduce_goal) {\n          G.goal -= 4;\n        }\n      }\n    },\n\n    onEnd(G, ctx) {\n      clearField(G, ctx, \"field\");\n    },\n\n    // moveLimit: 1000,    // I don't know why, when adding this line, the init hand size comes to 4, and this won't work for infinity loop as loop occurs in one move\n\n  },\n\n  endIf(G, ctx) {\n    if (G.playing) {\n      if (G.deck.length == 0) {\n        return {\n          win: false,\n          reason: \"牌库被抽光\",\n        };\n      }\n      else if (G.edeck.length == 0) {\n        return {\n          win: false,\n          reason: \"敌人牌库被抽光\",\n        }\n      }\n      else if (G.danger >= G.max_danger) {\n        return {\n          win: false,\n          reason: \"动乱指数过高\",\n        }\n      }\n      else if (G.score >= G.goal) {\n        return {\n          win: true,\n        }\n      }\n    }\n  },\n\n  seed: undefined,\n  \n\n  // TODO: know how to set available moves to all moves, then add this phase feature\n  // phases: {\n  //   // TODO: set available moves on phases\n  //   preScenario: {\n  //     start: true,\n  //     next: \"scenario\",\n  //     onEnd(G, ctx) {\n  //       console.log(\"Scenario setup finished, enter the game\");\n  //     }\n  //   },\n\n  //   scenario: {\n  //     turn: {\n  //       onBegin(G, ctx) {\n  //         console.log(\"On turn begin\");\n  //         refresh(G, ctx);\n  //         draw(G, ctx);\n  //         G.costs += 3;\n  //       },\n\n  //     },\n\n  //   }\n  // },\n\n};","import \n  { drawEnemy, switchEnemy, deal_damage, enemyMove,\n    get_blocker, logMsg, ready_random_card,\n } from \"./Game\";\n\nexport var ENEMIES = [\n  {\n    name: \"小兵\",\n    atk: 2,\n    hp: 3,\n    illust: \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A3%AB%E5%85%B5.png\",\n  },\n  {\n    name: \"游击队战士\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B8%B8%E5%87%BB%E9%98%9F%E6%88%98%E5%A3%AB.png\",\n    desc: \"入场: 使1个敌人获得+2/+2\",\n    onPlay(G, ctx, self) {\n      let enemy = ctx.random.Shuffle(G.efield)[0];\n      enemy.atk += 2;\n      enemy.hp += 2;\n    }\n  },\n  {\n    name: \"弩手\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/a/a5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%B0%84%E6%89%8B.png\",\n    desc: \"行动: 对最后部署的干员造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let card = G.field[G.field.length-1];\n      if (card) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"猎犬\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/3/3f/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8C%8E%E7%8B%97.png\",\n    desc: \"冲锋\",\n    onPlay(G, ctx, self) {\n      self.exhausted = false;\n    }\n  },\n  {\n    name: \"源石虫\",\n    atk: 1,\n    hp: 1,\n    illust: \"http://prts.wiki/images/3/3e/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"入场: 召唤1个1/1的源石虫\",\n    onPlay(G, ctx, self) {\n      let self_copy = {...self, atk:1, hp:1};\n      G.efield.splice(G.efield.length-1, 0, self_copy);\n    }\n  },\n  {\n    name: \"重装\",\n    atk: 4,\n    hp: 6,\n    illust: \"http://prts.wiki/images/f/f0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%87%8D%E8%A3%85%E9%98%B2%E5%BE%A1%E8%80%85.png\",\n    desc: \"替换\",\n    is_elite: true,\n  },\n  {\n    name: \"破阵者\",\n    atk: 3,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A0%B4%E9%98%B5%E8%80%85.png\",\n    desc: \"动乱: 额外增加1点动乱值\",\n    onMine(G, ctx) {\n      G.danger += 1;\n    }\n  },\n  {\n    name: \"术师\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%9C%AF%E5%B8%88.png\",\n    desc: \"行动: 对1个无阻挡能力干员，造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      if (high.length > 0) {\n        ctx.random.Shuffle(high)[0].dmg += self.atk;\n      }\n    }\n  },\n  {\n    name: \"空降兵\",\n    atk: 2,\n    hp: 2,\n    illust: \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A9%BA%E9%99%8D%E5%85%B5.png\",\n    desc: \"入场: 使1个敌人获得+2攻击力\",\n    onPlay(G, ctx) {\n      ctx.random.Shuffle(G.efield)[0].atk += 2;\n    }\n  },\n  {\n    name: \"高阶术师\",\n    atk: 2,\n    hp: 6,\n    illust: \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E9%98%B6%E6%9C%AF%E5%B8%88.png\",\n    is_elite: true,\n    desc: \"替换, 行动: 对2个无阻挡能力干员, 造成[攻击力]点伤害\",\n    action(G, ctx, self) {\n      let high = G.field.filter(x => (x.block == 0));\n      for (let card of ctx.random.Shuffle(high).slice(0,2)) {\n        card.dmg += self.atk;\n      }\n    }\n  },\n\n  {\n    name: \"高能源石虫\",\n    atk: 1,\n    hp: 2,\n    illust: \"http://prts.wiki/images/6/68/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%AB%98%E8%83%BD%E6%BA%90%E7%9F%B3%E8%99%AB.png\",\n    desc: \"摧毁: 对最后部署的干员造成[攻击力+2]点伤害\",\n    onOut(G, ctx, self) {\n      let idx = G.field.length - 1;\n      if (G.field[idx]) {\n        deal_damage(G, ctx, \"field\", idx, self.atk+2);\n        logMsg(G, ctx, `高能源石虫对 ${G.field[idx].name} 造成了${self.atk+2}点伤害`);\n      }\n    }\n  },\n  \n  {\n    name: \"双持剑士\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%8F%8C%E6%8C%81%E5%89%91%E5%A3%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"无法被横置\",\n    unyielding: true,\n  },\n\n  {\n    name: \"寻仇者\",\n    atk: 2,\n    hp: 4,\n    illust: \"http://prts.wiki/images/d/d0/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%AF%BB%E4%BB%87%E8%80%85.png\",\n    desc: \"愤怒\",\n    enraged: true,\n  },\n\n  {\n    name: \"复仇者\",\n    atk: 3,\n    hp: 6,\n    illust: \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E5%A4%8D%E4%BB%87%E8%80%85.png\",\n    desc: \"替换，愤怒，超杀: 增加1点动乱值\",\n    is_elite: true,\n    enraged: true,\n    onFight(G, ctx, self, card) {\n      if (card.dmg > card.hp) {\n        G.danger += 1;\n      }\n    },\n  },\n  \n  {\n    name: \"碎岩者\",\n    illust: \"http://prts.wiki/images/b/bd/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85.png\",\n    atk: -3,\n    hp: 8,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"碎岩者组长\",\n    illust: \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%A2%8E%E5%B2%A9%E8%80%85%E7%BB%84%E9%95%BF.png\",\n    atk: -2,\n    hp: 12,\n    desc: \"替换\",\n    is_elite: true,\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n  {\n    name: \"酸液源石虫\",\n    illust: \"http://prts.wiki/images/6/6b/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E9%85%B8%E6%B6%B2%E6%BA%90%E7%9F%B3%E8%99%AB%C2%B7%CE%B1.png\",\n    atk: -1,\n    hp: 4,\n    desc: \"替换, 摧毁: 对所有干员造成1点伤害\",\n    is_elite: true,\n    onOut(G, ctx, self) {\n      for (let card of G.field) {\n        card.dmg += 1;\n      }\n    },\n  },\n\n  {\n    name: \"拳手\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/e/e5/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%89%93%E6%89%8B.png\",\n    desc: \"摧毁: 重置1个干员\",\n    onOut(G, ctx, self) {\n      ready_random_card(G, ctx, self);\n    }\n  },\n\n  {\n    name: \"法术近卫\",\n    atk: 4,\n    hp: 4,\n    illust: \"http://prts.wiki/images/6/6d/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB.png\",\n    desc: \"摧毁: 获得2分\",\n    onOut(G, ctx, self) {\n      G.score += 2;\n    }\n  },\n\n  {\n    name: \"法术近卫组长\",\n    atk: 8,\n    hp: 8,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E6%B3%95%E6%9C%AF%E8%BF%91%E5%8D%AB%E7%BB%84%E9%95%BF.png\",\n    desc: \"摧毁: 获得6分\",\n    onOut(G, ctx, self) {\n      G.score += 6;\n    }\n  },\n  \n  {\n    name: \"哨兵\",\n    atk: 0,\n    hp: 4,\n    illust: \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E8%90%A8%E5%8D%A1%E5%85%B9%E5%93%A8%E5%85%B5.png\",\n    desc: \"行动: 翻开1张敌人牌\",\n    action(G, ctx, self) {\n      drawEnemy(G, ctx);\n    },\n    onTurnBegin(G, ctx, self) {\n      if (self.atk > 0) {\n        self.atk = 0;\n      }\n    }\n  },\n\n  {\n    name: \"狂暴宿主组长\",\n    atk: -2,\n    hp: 6,\n    is_elite: true,\n    illust: \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E6%95%8C%E4%BA%BA_%E7%8B%82%E6%9A%B4%E5%AE%BF%E4%B8%BB%E6%8E%B7%E9%AA%A8%E6%89%8B.png\",\n    desc: \"替换，摧毁: 胜利所需分数+4\",\n    onOut(G, ctx, self) {\n      G.goal += 4;\n    },\n    // onTurnBegin(G, ctx, self) {\n    //   if (self.atk <= 0) {\n    //     self.atk = 1;\n    //   }\n    // }\n  },\n\n\n];","import { gainMaterials, draw, deal_random_damage, reinforce_card, fully_restore, get_rhine_order, reinforce_hand, init_card_state, refresh_picks } from './Game';\nimport { ready_order } from './orders';\n\nexport const UPGRADES = [\n  {\n    name: \"+4/+0\",\n    desc: \"+4攻击力\", // Write \"获得\"always\n    effect(card) {\n      card.atk += 4;\n    }\n  },\n  // {\n  //   name: \"+0/+4\",\n  //   desc: \"+4生命值\", // Write \"获得\"always\n  //   effect(G, ctx, card) {\n  //     card.hp += 4;\n  //   }\n  // },\n  {\n    name: \"+0/+6\",\n    desc: \"+6生命值\", // Write \"获得\"always\n    effect(card) {\n      card.hp += 6;\n    }\n  },\n\n  {\n    name: \"-2费\",\n    desc: \"部署费用-2\", // Write \"获得\"always\n    effect(card) {\n      card.cost -= 2;\n    }\n  },\n\n  {\n    name: \"阻挡数+2\",\n    desc: \"阻挡数+2\",\n    effect(card) {\n      card.block = card.block || 0;\n      card.block += 2;\n    }\n  },\n\n  {\n    name: \"起始\",\n    desc: \"\\\"对局开始时，将这张牌置入手牌\\\"\",\n    effect(card) {\n      card.is_init = true;\n      if (typeof card.desc == \"string\") {\n        card.desc += \" (起始)\";\n      }\n      else {\n        card.desc = [card.desc, \"(起始)\"];\n      }\n    }\n  },\n\n\n\n  // Init \"onplay bonus\" before\n  {\n    name: \"3分\",\n    desc: \"部署奖励:\\\"获得3分\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.score += 3;\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"1分 刷新选牌\",\n  //   desc: \"部署奖励:\\\"获得1分并刷新选牌区\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.score += 1;\n  //         refresh_picks(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2材料\",\n    desc: \"部署奖励:\\\"获得2个材料\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          gainMaterials(G, ctx, 2);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"2张牌\",\n    desc: \"部署奖励:\\\"摸2张牌\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          draw(G, ctx);\n          draw(G, ctx);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"4伤害\",\n    desc: \"部署奖励:\\\"造成4点伤害\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          deal_random_damage(G, ctx, 4);\n        }\n      });\n    }\n  },\n\n  {\n    name: \"强化1\",\n    desc: \"部署奖励:\\\"强化自己1次\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          reinforce_card(G, ctx, card);\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"手牌强化2\",\n  //   desc: \"部署奖励:\\\"强化2张手牌\\\"\",\n  //   effect(card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(G, ctx, card) {\n  //         reinforce_hand(G, ctx);\n  //         reinforce_hand(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"2费干员\",\n    desc: \"部署奖励:\\\"召唤1个费用为2的干员并使其生命值降为1\\\"\",\n    effect(card) {\n      // Maybe reconstruct this to call the skill of Ansel is better?\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          let new_card = ctx.random.Shuffle(G.CARDS.filter(x=>(x.cost==2)))[0];\n          if (new_card) {\n            new_card = init_card_state(G, ctx, {...new_card});\n            new_card.hp = 1;\n            G.field.push(new_card);\n          }\n        }\n    });\n  }\n},\n\n// {\n//     name: \"凯尔希之力\",\n//     desc: \"部署奖励:\\\"召唤1个自己的1/1复制\\\"\",\n//     effect(card) {\n//       // Maybe reconstruct this to call the skill of Ansel is better?\n//       card.onPlayBonus.push({\n//         name: this.name,\n//         effect(G, ctx, card) {\n//           if (card) {\n//             let new_card = G.CARDS.find(x => x.name == card.name);\n//             new_card = init_card_state(G, ctx, {...new_card});\n//             new_card.atk = 1;\n//             new_card.hp = 1;\n//             new_card.mine = 1;\n//             new_card.cost = 1;\n//             new_card.power = 0;\n//             G.field.push(new_card);\n//           }\n//         }\n//     });\n//   }\n// },\n\n{\n  name: \"回响\",\n  desc: \"部署奖励:\\\"将1张自己的同名牌加入手牌\\\"\",\n  effect(card) {\n    // Maybe reconstruct this to call the skill of Ansel is better?\n    card.onPlayBonus.push({\n      name: this.name,\n      effect(G, ctx, card) {\n        let new_card = G.CARDS.find(x => x.name == card.name);\n        if (new_card) {\n          G.hand.unshift(new_card);\n        }\n      }\n  });\n}\n},\n\n  // {\n  //   name: \"完全治疗\",\n  //   desc: \"部署奖励:\\\"完全治疗场上的1个干员\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         fully_restore(G, ctx);\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"订单1\",\n    desc: \"部署奖励:\\\"获得1个已完成的订单\\\"\",\n    effect(card) {\n      card.onPlayBonus.push({\n        name: this.name,\n        effect(G, ctx, card) {\n          G.finished.push({...ctx.random.Shuffle(G.odeck)[0]});\n        }\n      });\n    }\n  },\n\n  // {\n  //   name: \"化解\",\n  //   desc: \"部署奖励:\\\"化解所有动乱值\\\"\",\n  //   effect(G, ctx, card) {\n  //     card.onPlayBonus.push({\n  //       name: this.name,\n  //       effect(card) {\n  //         G.danger = 0;\n  //       }\n  //     });\n  //   }\n  // },\n\n  {\n    name: \"加倍\",\n    desc: \"自己所有部署奖励的复制\",\n    effect(card) {\n      card.onPlayBonus = [...card.onPlayBonus, ...card.onPlayBonus];\n    }\n  },\n  \n];","export function map_object(fn, obj) {\n  let new_obj = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function arr2obj(arr) {\n  let new_obj = {};\n\n  for (let item of arr) {\n    new_obj[item.name] = item;\n  }\n\n  return new_obj;\n}\n\nexport class PRNG {\n  constructor(seed) {\n    this.seed = seed || 0;\n\n    this.val = 0.0;\n    if (typeof seed == \"string\"){\n      for (let i=0; i<seed.length; i++) {\n        this.val += seed.charCodeAt(i);\n      }\n    }\n    else {\n      this.val = seed;\n    }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n  }\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import _ from 'lodash';\nimport { CARDS } from \"./cards\";\nimport { arr2obj, PRNG } from \"./utils\";\n\nconst PREFIXES = \"欧皇 非酋 只肝不氪 只氪不肝 肝帝 碎石猛肝 一发入魂 基建搓玉者 线索7传递者 借点龙门币 调箱师 不要恐慌 大哥抽芙蓉 热泵通道 高级资深干员 非洲战神 黄票之源 注意力涣散 弑君者迫害者 空降兵拯救者 工口发生 工具人 摔炮 中门对狙 富婆 老婆 猛男 打得不错 神抽狗 金色普通 龙门粗口 Kokodayo 拳皇\".split(\" \");\n\nconst SEEDS = \"龙门外环 龙门市区 荒芜广场 无人危楼 59区废墟 破碎大道 荒漠 新街 中转站 霜冻废墟 黄铁峡谷 军械库东\".split(\" \");\n\n// const dubin_defend = `杜宾 0 3\n// 推进之王 0 3\n// 天火 0 1\n// 香草 2 3\n// 讯使 2 3\n// 芬 2 3\n// 玫兰莎 2 3\n// 米格鲁 3 4\n// 芙蓉 3 4\n// 蛇屠箱 0 2\n// 清流 0 2`;\n\nconst cost_vanguard =  `极境 1 2\n香草 1 2\n讯使 1 2\n桃金娘 1 2\n清道夫 0 2\n贾维 1 1\n惊蛰 1 1`;\n\nconst draw_vanguard = `芬 1 2\n调香师 0 2\n清流 0 1`;\n\nconst scorer = `阿米娅 0 1\n崖心 0 1\n食铁兽 0 1\n酸糖 0 1\n阿消 0 1\n苏苏洛 0 1\n阿米娅-近卫 0 1\n赫默 0 1\n阿 0 1`;\n\nconst miner =  `史都华德 0 1\n夜烟 0 1\n远山 0 1\n12F 0 1`;\n\nconst shooter = `杰西卡 0 1\n棘刺 0 1\n刻刀 0 1\n拉普兰德 0 1\n史尔特尔 0 1`;\n\nconst defender = `米格鲁 1 1\n蛇屠箱 0 1\n年 0 1\n摄影车 0 1`;\n\n// const dubin_score = `杜宾 2 3\n// 推进之王 2 3\n// 天火 1 2\n// 讯使 1 2\n// 香草 1 2\n// 桃金娘 1 2\n// 芬 2 3\n// 清道夫 1 2\n// 米格鲁 2 3\n// 玫兰莎 2 3\n// 克洛丝 2 3\n// 史都华德 2 3\n// 安赛尔 1 2\n// 阿米娅 2 3\n// 杰西卡 2 3\n// 慕斯 0 2\n// 蛇屠箱 0 2\n// 炎熔 0 2\n// 蓝毒 0 2\n// 白金 1 2\n// 梓兰 0 1\n// 凛冬 0 2\n// 真理 0 2\n// 极境 0 1\n// 狮蝎 1 2\n// 斯卡蒂 1 2\n// 阿 1 2\n// 苏苏洛 1 2\n// 食铁兽 1 2\n// 清流 0 2`;\n\nconst solve = `能天使 1 2\n煌 2 3\n棘刺 1 2\n陨星 1 2\n酸糖 1 2\n普罗旺斯 1 2\n灰喉 0 2\n克洛丝 2 3\n蓝毒 1 3\n白金 1 3\n末药 1 2\n宴 2 3\n孑 1 2\n巡林者 2 3\n陈 1 2\n红豆 1 2\n炎熔 1 2\n刻俄柏 2 3\n刻刀 1 2\n白面鸮 1 2\n拉普兰德 1 2\n柏喙 1 2\n翎羽 1 2\n杜宾 1 3\n伊桑 0 1\n黑 0 1\n斯卡蒂 1 2`;\n\nconst penguin =  `德克萨斯 2 3\n空 2 3\n莫斯提马 1 2\n皇帝 2 2\n波登可 1 2\n艾雅法拉 1 2\n阿消 1 2\n苏苏洛 0 2\n温蒂 1 2\n可颂 1 2\n白面鸮 1 2\n阿米娅 1 2\n拉普兰德 1 2\n梓兰 0 2\n坚雷 1 2\n夜刀 1 2`;\n\nconst highcost = `风笛 3 3\n桃金娘 1 2\n温蒂 1 2\n惊蛰 1 2\n阿消 1 2\n巡林者 1 2\n12F 1 2\n黑角 1 2\n刻俄柏 1 2\n煌 1 2\n食铁兽 2 2\n雷蛇 1 2\n蓝毒 1 2\n银灰 1 2\n白面鸮 1 2\n赫拉格 1 2\n普罗旺斯 1 2\n坚雷 1 2\n夜刀 1 3`;\n\nconst rhine = `赫默 2 3\n白面鸮 3 3\n苏苏洛 1 2\n梅尔 2 3\n稀音 1 2\n特米米 2 2\n塞雷娅 1 2\n米格鲁 2 3\n红 2 3\n史都华德 1 2\n巡林者 1 2\n银灰 1 2\n苏苏洛 0 2\n阿米娅 1 2\n艾雅法拉 0 2\n惊蛰 0 2\n陈 1 2\n斯卡蒂 1 2`;\n\nconst eyja = `艾雅法拉 1 2\n阿米娅 1 2\n杰西卡 0 2\n凛冬 0 2\n真理 1 2\n调香师 1 2\n清道夫 0 2\n断罪者 0 2\n刻俄柏 1 2\n刻刀 0 2\n克洛丝 0 2\n柏喙 1 2\n雷蛇 1 2\n翎羽 0 2\n慕斯 1 2\n赫默 1 2\n特米米 0 2\n梓兰 0 2`;\n\nconst angelina = `安洁莉娜 3 3\n陈 3 3\n热水壶 3 4\n波登可 2 3\n芬 2 3\n推进之王 1 2\n翎羽 2 3\n极境 1 2\n末药 1 2\n远山 1 2\n星极 1 2\n红 2 3\n刻俄柏 1 2\n清流 1 2\n古米 1 2\n梓兰 1 2\n狮蝎 2 2\n斯卡蒂 2 3`;\n\nconst karlan = `银灰 2 3\n崖心 2 3\n角峰 2 2\n初雪 2 3\n星极 1 2\n赫默 1 2\n白面鸮 0 2\n慕斯 1 2\n末药 0 2\n芙蓉 0 2\n讯使 1 2\n伊桑 1 2\n斯卡蒂 1 2`;\n\nconst ursus = `凛冬 2 3\n真理 2 3\n桃金娘 1 2\n惊蛰 1 2\n推进之王 1 2\n陈 2 3\n斯卡蒂 2 3\n伊桑 1 2\n阿米娅 1 2\n食铁兽 2 2\n炎熔 1 2\n黑角 0 2\n芙兰卡 0 2\n拉普兰德 1 2\n艾雅法拉 0 1\n能天使 0 1\n雷蛇 0 2`;\n\n// const arise = `阿 2 3\n// 断罪者 2 3\n// 清流 2 3\n// 芬 2 3\n// 调香师 2 3\n// 推进之王 2 3\n// 波登可 1 2\n// 米格鲁 2 3\n// 蛇屠箱 2 3\n// 红 2 3\n// 翎羽 1 2\n// 斯卡蒂 0 2\n// 克洛丝 1 2\n// 玫兰莎 1 2\n// 史都华德 1 2\n// 极境 2 3\n// 桃金娘 2 3\n// 惊蛰 2 3\n// 慕斯 1 2\n// 刻刀 1 2\n// 梓兰 1 2\n// 苏苏洛 1 2\n// 星熊 0 2`;\n\nconst champion = `香草 1 2\n极境 1 2\n调香师 1 2\n清道夫 1 2\n芬 1 2\n能天使 1 2\n拉普兰德 2 3\n白面鸮 0 2\n雷蛇 1 2\n艾雅法拉 1 2\n断罪者 2 2\n清流 1 2`;\n\nconst rest = `夜莺 2 2\n守林人 2 2\n霜叶 2 2\n锡兰 2 3\n诗怀雅 2 2\n陈 1 2\n推进之王 2 2\n末药 1 2\n远山 0 2\n星极 0 2\n刻俄柏 1 2\n古米 1 2\n斯卡蒂 3 3\n红 2 3\n稀音 1 2\n米格鲁 1 2\n断罪者 0 2`;\n\nconst fullmoon = `铃兰 2 3\n推进之王 2 3\n红 3 3\n调香师 1 2\n芬 1 2\n极境 2 3\n惊蛰 0 2\n安洁莉娜 0 2\n诗怀雅 0 2\n米格鲁 2 3\n玫兰莎 1 2\n史都华德 1 2\n克洛丝 1 2\n霜叶 0 2\n星熊 0 2\n杜宾 1 2\n天火 0 2\n清流 0 2\n安赛尔 0 2\n末药 1 2\n孑 2 3\n宴 2 3\n梅尔 1 2\n白金 0 2\n斯卡蒂 1 2\n真理 0 2\n刻刀 1 2`;\n\n// const strategies = [dubin_score, solve, penguin, highcost, rhine, eyja, angelina, karlan, ursus, arise, champion];\nconst strategies = [solve, penguin, highcost, rhine, karlan, ursus, fullmoon];\n\nconst mini_sets = [\n  //风笛套\n  ' 风笛 伊桑 白面鸮  温蒂  黑角 夜刀 ',\n  ' 风笛 伊桑 雷蛇  能天使|艾雅法拉  黑角 夜刀 ',\n\n  //莱茵订单流\n  ' 赫默 赫默|白面鸮 赫默|白面鸮 12F|远山|炎熔|特米米|天火 艾雅法拉 ',\n\n  //企鹅物流 有德狗爆费核心 有空皇帝刷分核心 还有空德可颂的清场\n  ' 德克萨斯 德克萨斯 艾雅法拉 坚雷|泥岩 阿消 ',\n  ' 空 空 温蒂 波登可 皇帝 ',\n  ' 德克萨斯 可颂 可颂 ',\n\n  //能天使核心各种 能陨速清场 能炎熔刷材料\n  ' 能天使 陨星 蓝毒 炎熔 ',\n  ' 能天使 陨星 拉普兰德 炎熔 ',\n\n  //空爆\n  ' 空爆 摄影车 砾 流星 ',\n\n  //艾雅法拉核心各种\n  ' 艾雅法拉 杰西卡 柏喙 柏喙 ',\n  ' 艾雅法拉 巫恋 巫恋 刻俄柏 刻俄柏 ', // 易伤流\n\n  //安洁莉娜强力全套\n  ' 安洁莉娜 陈|翎羽 陈|翎羽 刻刀|极境 ',\n  ' 安洁莉娜 推进之王 推进之王 森蚺 ',\n\n  //送盾流\n  ' 年 米格鲁 米格鲁 ',\n\n  //梅尔清场流\n  ' 机械水獭 机械水獭 惊蛰 史都华德|远山|天火 ',\n\n  //雷蛇引擎流\n  ' 艾雅法拉  能天使  雷蛇  雷蛇 ',\n\n  //温蒂引擎流\n  ' 温蒂 白面鸮 白面鸮 食铁兽 ',\n\n  //崖心刷钢流\n  ' 星极  史都华德|远山  赫默|白面鸮  崖心 ',\n\n  //经典断罪者套\n  ' 调香师  调香师 艾雅法拉 棘刺 微风|棘刺 清流 断罪者 ',\n\n  //召唤回手套\n  ' 凯尔希 安赛尔 安赛尔 清流 ',\n\n  //调香师单核\n  ' 微风 微风 星极|棘刺|微风 星极|棘刺|微风 调香师 断崖 月见夜 ',\n  ' 棘刺 棘刺 星极|棘刺|微风 星极|棘刺|微风 调香师 断崖 月见夜 ',\n\n  //铃兰小家族\n  ' 铃兰 阿 空爆|清道夫 摄影车 摄影车 推进之王 ',\n\n  //波登可经典引擎战吼套\n  ' 波登可 白面鸮 温蒂 ',\n  //波登可全员增强\n  ' 波登可 凯尔希 杜宾 杜宾 ',\n\n  //阿米娅经典套\n  ' 阿米娅  雷蛇  艾雅法拉 ',\n  //苏苏洛经典套\n  ' 苏苏洛 天火 卡达 波登可 ',\n\n  //阿消与消费狙\n  ' 阿消 夜烟 史尔特尔 普罗旺斯 ',\n\n  //真理单核套路集合\n  ' 凛冬 凛冬 真理 ',\n  ' 拉普兰德 陈 食铁兽 真理 ',\n  ' 伊桑 刻俄柏 芙兰卡 真理 ',\n\n  //经典强化\n  ' 古米 诗怀雅 ',\n\n  //超杀\n  ' 安比尔 特米米|煌|迷迭香 特米米|煌|迷迭香 赫拉格 ',\n\n  //绝对解场\n  ' 酸糖 拉普兰德 刻刀 ',\n\n  //整活套路\n  ' 斯卡蒂 斯卡蒂 森蚺 ',\n  ' 凯尔希 亚叶 ',\n  ' 安赛尔 安赛尔 微风 ',\n  ' 伊桑  狮蝎  狮蝎 ',\n  ' 热水壶 热水壶 热水壶 ',\n\n  //养巨怪套路\n  ' 波登可 斑点 森蚺 ',\n  \n  //刻刀单核小套路\n  ' 刻刀 刻刀 刻俄柏 波登可 ',\n  //前期猛打小套路\n  ' 孑 宴 孑|宴  翎羽 ',\n  //前期直接打爆 稳住直接持续\n  ' 孑 孑 孑 史都华德 惊蛰 ',\n  //拉狗单核小套路\n  ' 拉普兰德  能天使  刻俄柏 ',\n  //柏喙小套路\n  ' 柏喙  翎羽 ',\n  //银灰小配合\n  ' 银灰 赫默 星极 ',\n  //清道夫小配合\n  ' 清道夫 空爆 砾 摄影车 流星 ',\n  //闪灵小配合\n  ' 闪灵 蛇屠箱 ',\n  //史尔特尔小配合\n  ' 史尔特尔 米格鲁 空 ',\n  //阿米娅近卫小配合\n  ' 阿米娅-近卫 卡达 ',\n\n].map(mini_set => mini_set.split(\" \").filter(card => card != \"\"));\n  // ' 阿 蛇屠箱 闪灵 ',\n  // ' 棘刺 棘刺 调香师 芬 ',\n  // ' 酸糖 酸糖 刻俄柏 陨星 蓝毒 能天使 刻刀 杜宾 翎羽 ',\n  // ' 米格鲁 玫兰莎 史都华德 嘉维尔 ',\n  // ' 锡兰  锡兰  夜莺 ',\n  // ' 普罗旺斯  灰喉  巡林者 波登可 ',\n  // ' 安洁莉娜 陈 陈  波登可 ',\n  // ' 铃兰  安洁莉娜  极境  芬  推进之王  推进之王 ',\n  // ' 梅尔 赫默 白面鸮 特米米  艾雅法拉 ',\n  // ' 能天使 蓝毒 陨星 酸糖 ',\n  // ' 霜叶  凯尔希  杜宾 ',\n  // ' 守林人  守林人  夜莺 ',\n  //  ' 末药  银灰  初雪 ',\n  //  ' 梓兰  梓兰  能天使 ',\n  //  ' 赫默  稀音  梅尔 梅尔 史都华德  特米米  塞雷娅 ',\n  //  ' 温蒂  白面鸮  桃金娘 ',\n  //  ' 白金  末药  煌 ',\n  //' 拉普兰德  白雪  白雪 ',\n  //  ' 酸糖 米格鲁 米格鲁 红 ',\n\n\nfunction get_random_card(rng) {\n  let banned_cards = [\"可露希尔\"];\n  let card_pool = CARDS.filter(x => (!banned_cards.includes(x.name)));\n  return rng.choice(card_pool).name;\n}\n\nexport function get_deck_name() {\n  let rng = new PRNG(Math.random());\n  return '\"' + rng.choice(PREFIXES) + '\"' + get_random_card(rng);\n}\n\nexport function get_seed_name() {\n  let rng = new PRNG(Math.random());\n  return rng.choice(SEEDS) + String.fromCharCode(97+rng.randRange(26));\n}\n\nexport function get_single_card(rng, name, count1, count2) {\n  let count = count1;\n  if (count2) {\n    count += rng.randRange(count2 - count1 + 1);\n  }\n  return [count, name];\n}\n\nexport function get_roguelike_pick() {\n  let rng = new PRNG(Math.random());\n  let selection = rng.choice(mini_sets);\n  if (selection.length > 3) {\n    selection = selection.slice(0, 3);\n  }\n  else if (selection.length < 3) {\n    selection = rng.shuffle([...selection, ...selection]).slice(0, 3);\n  }\n  return selection;\n}\n\nfunction arr2deck(arr) {\n  let deck = [];\n\n  for (let card of arr) {\n    for (let i=0; i<card[0]; i++) {\n      deck.push(card[1]);\n    }\n  }\n\n  return deck;\n\n}\n\nfunction deck2str(deck) {\n  let output = {};\n\n  for (let card of deck) {\n    if (output[card]) {\n      output[card] += 1;\n    }\n    else {\n      output[card] = 1;\n    }\n  }\n\n  let cards = Object.keys(output).sort();\n  return cards.map(c => `${output[c]} ${c}`).join(\"\\n\");\n}\n\nfunction remove_redundant(deck) {\n  for (let card of deck) {\n    if (card[0] > 3) {\n      card[0] = 3;\n    }\n  }\n  return deck;\n}\n\nfunction deck_from_strategy(strategy, amount, rng) {\n  let deck = [];\n  for (let l of strategy.split(\"\\n\")) {\n    let card = l.split(\" \");\n    deck.push(get_single_card(rng, card[0], parseInt(card[1]), parseInt(card[2])));\n  }\n  deck = rng.shuffle(arr2deck(deck)).slice(0, amount);\n  return deck;\n}\n\nfunction deck_from_mini_sets(amount, rng) {\n  let deck = [];\n  let sets = rng.shuffle([...mini_sets, ...mini_sets]);\n\n  for (let mini_set of sets) {\n    deck = [...deck, ...mini_set];\n    if (deck.length >= amount) {\n      break;\n    }\n  }\n  \n  return rng.shuffle(deck).slice(0, amount);\n}\n\n\nexport function generate_deck_s1(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 5, rng)];\n  deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 3, rng)];\n\n  // Strategy deck\n  let strategy = rng.choice(strategies);\n  deck = [...deck, ...deck_from_strategy(strategy, 16, rng)];\n\n  // Random cards\n  let amount_add = 32 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_deck_s2(deck_name) {\n  let deck = [];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 8, rng)];\n  // deck = [...deck, ...deck_from_strategy(draw_vanguard, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 2, rng)];\n\n  // Strategy deck\n  deck = [...deck, ...deck_from_mini_sets(16, rng)];\n\n  // Let diff goes\n  // console.log(\"deck before\", deck);\n  deck = deck.map(x => x.includes(\"|\")? rng.choice(x.split(\"|\")):x);\n  // console.log(\"deck after\", deck);\n\n  // No more than 3\n  let deck_dict = deck.reduce((acc, val) => ({...acc, [val]: (acc[val]+1)||1}), {})\n  for (let card in deck_dict) {\n    if (deck_dict[card] > 3) {\n      deck_dict[card] = 3;\n    }\n  }\n  deck = Object.keys(deck_dict).reduce((acc, val) => [...acc, ..._.times(deck_dict[val], ()=>val)], [])\n\n  // Random cards\n  let amount_add = 36 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\nexport function generate_roguelike_deck(deck_name) {\n  let deck = [\"黑角\", \"极境\"];\n  let rng = new PRNG(deck_name);\n\n  // Basic deck\n  deck = [...deck, ...deck_from_strategy(cost_vanguard, 2, rng)];\n  deck = [...deck, ...deck_from_strategy(scorer, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(miner, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(shooter, 1, rng)];\n  deck = [...deck, ...deck_from_strategy(defender, 1, rng)];\n\n  // Random cards\n  let amount_add = 12 - deck.length;\n  for (let i=0; i<amount_add; i++) {\n    deck.push(get_random_card(rng));\n  }\n\n  return deck2str(deck);\n}\n\n\nexport function generate_deck(deck_name) {\n  let rng = new PRNG(deck_name);\n  // let generator = (rng.random() > 0.05)? generate_deck_s2 : generate_deck_s1;\n  let generator = generate_deck_s2;\n  return generator(deck_name);\n}\n\nexport function is_standard(deck_data) {\n  let numbers = deck_data.split(\"\\n\").map(x=>parseInt(x.split(\" \")[0]));\n  let names = deck_data.split(\"\\n\").map(x=>(x.split(\" \")[1])); // EH: reconstruct this\n  numbers = numbers.filter(x => !isNaN(x));\n  let unique_names = [...new Set(names)];\n  if (names.length != unique_names.length) {\n    return false;\n  }\n  let banned_cards = [\"可露希尔\", \"砾\"];\n  for (let card of banned_cards) {\n    if (names.includes(card)) {\n      return false;\n    }\n  }\n  for (let i of numbers) {\n    if (i > 3) {\n      return false;\n    }\n  }\n  let sum_value = _.sum(numbers);\n  if (sum_value < 30) {\n    return false;\n  }\n\n  return true;\n}","import React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\n\nexport function useShaker(playing, setPlaying, changeX=0, changeY=0, config, onEnd) {\n  let from_state = {\n    x: 0,\n    y: 0\n  };\n  let to_state = {\n    x: changeX,\n    y: changeY,\n  };\n\n  let {x, y} = useSpring({\n    from: from_state,\n    to: (playing)? [to_state, from_state] : from_state,\n    config,\n    onRest() {\n      if (playing) {\n        setPlaying(false);\n        onEnd && onEnd();\n      }\n    },\n  });\n\n  return {\n    transform: interpolate([x,y], (x,y)=>`translate(${x}px, ${y}px)`)\n  };\n}","import React, { useState } from 'react';\nimport { useSpring, animated, config as springConfig } from 'react-spring';\n\nconst ripple_style = {\n  position: \"absolute\",\n  borderRadius: \"50%\",\n  width: \"200px\",\n  height: \"200px\",\n  background: \"rgba(160, 160, 160, 0.5)\",\n  // zIndex: -1,\n};\n\nexport function Ripple(props) {\n  // Props: playing, setPlaying\n  // console.log(\"Ripple render:\", props.playing);\n  let from_state = {\n    ...ripple_style,\n    ...props.variants, // Here, \"variants\" for additional styles and \"variant\" for one type of style, but maybe \"type\" is more prefered than \"variant\"\n    transform: \"scale(0)\",\n    opacity: 1,\n  };\n  let to_state = [{\n    opacity: 0,\n    transform: \"scale(2)\",\n  }, \n  {\n    transform: \"scale(0)\",\n  }\n  ];\n  let anim = useSpring({\n    from: from_state,\n    to: (props.playing)? to_state : from_state,\n    onRest() {\n      if (props.playing) {\n        props.setPlaying(false);\n      }\n    },\n    config: {duration: 290},\n  });\n   return <animated.div \n      className=\"ripple\" \n      style = {anim}\n    >\n    </animated.div>;\n}","import React, { useEffect } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport { animated } from 'react-spring';\nimport { useShaker } from './Shaker';\nimport { Ripple } from './Ripple';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './Card.css';\n\nexport const Card = (props) => {\n  let additional_styles = {\n    illust: {},\n    e_illust: {},\n    o_illust: {},\n    r_illust: {},\n    hp: {},\n    atk: {},\n    upgrade_name: {},\n    cost: {},\n    price: {},\n    cost_detailed: {},\n    order_effect: {},\n    finished_effect: {},\n    requirements: {},\n    score: {},\n  };\n\n  if (props.cardState.exhausted) {\n    let exhausted_border = \"1px solid #f5222d\";\n    for (let attr in additional_styles) {\n      if (attr.includes(\"illust\")) {\n        additional_styles[attr].border = exhausted_border;\n      }\n    }\n    //EH: reconstruct this part\n  }\n  if (props.cardState.selected) {\n    if (props.cardState.exhausted) {\n      let selected_exhausted_border = \"3px solid #9254de\"; // Selected Exhausted Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")) {\n          additional_styles[attr].border = selected_exhausted_border;\n        }\n      }\n\n    }\n    else {\n      let selected_border = \"3px solid #096dd9\"; // Selected Border\n      for (let attr in additional_styles) {\n        if (attr.includes(\"illust\")|| (attr == \"upgrade_name\")) {\n          additional_styles[attr].border = selected_border;\n        }\n        additional_styles.requirements.border = selected_border;\n        // additional_styles.score.border = selected_border;\n      }\n    }\n  };\n  if (props.cardState.damaged) { \n    additional_styles.hp.color = \"red\";\n    //EH: only font change color and border does not change, are there parameters like that? I've searched through the parameters and did not find such one.\n  };\n  if (props.cardState.enraged) {\n    additional_styles.atk.color = \"orange\";\n  };\n  if (props.cardState.upgraded) {\n    additional_styles.cost.color = \"#1E90FF\";\n    additional_styles.price.borderColor = \"#1E90FF\";\n    // additional_styles.cost_detailed.color = \"#1E90FF\";\n  }\n  if (props.cardState.color >= 0) {\n    const color = props.cardState.color;\n    const order_colors = [\"#00cd00\", \"#1e90ff\", \"rgb(229,131,8)\"];\n    additional_styles.order_effect.borderColor = order_colors[color];\n    additional_styles.finished_effect.borderColor = order_colors[color];\n  }\n  // if (props.cardState.left_more) {\n  //   additional_styles.illust.marginLeft = \"-150%\";\n  // }\n  // EH: Find a way to let some illust change pattern\n\n  let shaker = useShaker(props.cardState.shaking, props.cardState.setShaking, -30, -30, {duration:125}, props.cardState.onEnd);\n\n  useEffect(() => {\n    if ((props.cardState.dmg > 0) && props.cardState.setShaking) {\n      props.cardState.setShaking(true);\n    }\n  }, \n  [props.cardState.dmg]);\n\n  return (\n    <div\n      className=\"card\"\n      onClick = {props.handleClick}\n      style = {props.cardStyle}\n    >\n      <Ripple \n        playing = {props.cardState.playing}\n        setPlaying = {props.cardState.setPlaying || function(){return;}}\n        variants = {{top:\"-50%\", left:\"-50%\"}}\n      />\n      <animated.div style={{width: \"100%\", height: \"100%\", ...shaker}}>\n      {Object.keys(props.data).filter(key => (props.data[key] != undefined)).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.data[variant]}\n          additionalStyle = {additional_styles[variant]}\n        />\n      ))}\n      </animated.div>\n    </div>\n\n  );\n};\n\nexport const Data = (props) => {\n  let is_img = props.variant.includes(\"illust\");\n  let img_tag = (\n    <img\n        className = {props.variant}\n        src = {props.value}\n    />\n  );\n\n  return (\n    <div\n      className = {\"data \"+props.variant}\n      style = {props.additionalStyle}\n    >\n      {(is_img) ? img_tag : props.value}\n    </div>\n  );\n};\n\nexport const CardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  return (\n    <div className=\"card-row\" style={props.additionalStyle} >\n      {props.cards.map((card, idx) => (\n        <Card\n          data={card}\n          cardState = {props.states? props.states[idx]:{}}\n          handleClick={(props.handleClick)? (props.handleClick(idx)) : null} \n          // This is not a good idea for handleClick?\n          cardStyle = {props.cardStyle}\n        />\n      ))}\n    </div>\n  );\n}\n\n// EH: \"data\" or \"card\", need to be the same for both card and SCard\nexport const SCard = (props) =>  (\n  <div className=\"card-detailed\" style={props.additionalStyle} onClick={props.handleClick} >\n      {Object.keys(props.card).map((variant) => (\n        <Data\n          variant = {variant}\n          value = {props.card[variant]}\n        />\n      ))}\n  </div>\n);\n\nexport const SCardRow = (props) => {\n  // EH: is card state really required? can it combine to data? okay, the problem is, all data are shown, and states are style changers\n  // TODO: props.what?props.what:undefined, reconstruct this\n  return (\n    <div className=\"card-detailed-row\" >\n      {props.cards.map((card, idx) => (\n        <SCard\n          card = {card}\n          handleClick = {props.handleClick?props.handleClick(idx):undefined}\n          additionalStyle = {props.additionalStyles?props.additionalStyles[idx]:undefined}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const TypeFilter = (props) => (\n  <div className=\"type-filter\">\n  <Tabs>\n    <TabList>\n      <Tab>Title 1</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n      <Tab>Title 2</Tab>\n    </TabList>\n\n  </Tabs>\n  </div>\n);\n\n// TODO: Combine this with SCardRow\nexport const CheckCard = (props) => {\n  return (\n    <div className=\"check-card\" align=\"center\">\n      <SCard card={props.card} />\n      <button className=\"card-detailed-button\" onClick={props.handleClick}>完成查看</button>\n    </div>\n  )\n};","import React from 'react';\nimport './Controller.css';\nimport { ICONS, smaller_icons } from './icons';\nimport { material_icons } from './orders';\n\nconst actions_with_icon = {\n    采掘: ICONS.mineAction,\n    战斗: ICONS.fight,\n    行动: ICONS.action,\n    部署: ICONS.play,\n    查看: ICONS.check,\n    完成: ICONS.finish,\n    拿取: ICONS.pick,\n};\n\nfunction process_action(action) {\n  if (action.includes(\"强化\")) {\n    return (<span>{smaller_icons[parseInt(action[2])]}强化</span>);\n  }\n\n  if (Object.keys(actions_with_icon).includes(action)) {\n    return (<span>{actions_with_icon[action]}{action}</span>)\n  }\n\n  return action;\n}\n\nexport const Controller = (props) => {\n  return (\n    <div className=\"controller\" >\n      {Object.keys(props.actions).map(\n        (action) => (\n          <button onClick={props.actions[action]} className=\"controller-button\" >{process_action(action)}</button>\n        )\n      )}\n      <button className=\"controller-button\" onClick={props.checkCard} style={{display:props.checkCard?\"\":\"none\"}}>{actions_with_icon.查看}查看</button>\n    </div>\n  );\n};\n\nexport const EnterGame = (props) => {\n  return (\n    <div className=\"enter-game\" align={props.divAlign} >\n      {Object.keys(props.actions).map(action => <button\n        className = \"enter-game\"\n        onClick = {props.actions[action]}\n      >\n        {action}\n      </button>)}\n      {/* <button\n        className = \"enter-game\"\n        onClick = {props.advancedSettings}\n        style = {{display:props.advancedSettings?\"\":\"none\"}}\n      >\n        高级设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.fastSetup}\n        style = {{display:props.fastSetup?\"\":\"none\"}}\n      >\n        快速设置\n      </button>\n      <button\n        className = \"enter-game\"\n        onClick = {props.back}\n        style = {{display:props.back?\"\":\"none\"}}\n      >\n        返回标题\n      </button> */}\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Ripple } from './Ripple';\nimport { useShaker } from './Shaker';\nimport { animated } from 'react-spring';\nimport { material_icons } from './orders';\n\nimport './Panel.css';\n\nexport const Panel = (props) => {\n  return (<div className={props.variant}>\n    {props.content}\n  </div>);\n};\n\nexport function ScoreBoard(props) {\n  let [playing, setPlaying] = useState(false);\n\n  useEffect(() => setPlaying(true), [props.score]);\n\n  return <div style={{position:\"relative\", display:\"inline-block\"}}>\n    <Ripple \n      playing={playing} \n      setPlaying={setPlaying} \n      variants={{top: \"-95px\", left:\"-70px\"}}\n    />\n    分数:{props.score}/{props.goal}\n  </div>;\n}\n\nexport function MaterialDisplay(props) {\n  // Props: idx, gained, materials, playing, setPlaying\n  let idx = props.idx;\n  let anim = useShaker(props.playing, props.setPlaying, 0, -30, {duration: 125});\n  return (\n      <div \n        style={{\n          display: \"inline-block\",\n          color:(props.gained.includes(idx))?\"blue\":\"black\",\n        }}\n      >\n        <animated.div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n            ...anim,\n          }}\n        >\n          {material_icons[idx]}\n        </animated.div>\n        :{props.materials[idx]}&nbsp;&nbsp;&nbsp; \n      </div>\n    );\n}","import React from 'react';\nimport './TagSelection.css';\n\n\nfunction Tag(props) {\n  // let bg_color = \"#c5c5c5\";\n  let bg_color = \"#434343\";\n  if (props.selected) {\n    bg_color = \"#0098dc\";\n  }\n  if (props.locked) {\n    bg_color = \"#096dd9\";\n  }\n\n  return <div className=\"tag\" style={{backgroundColor: bg_color}} onClick={props.handleClick} >\n    <img className=\"tag-img\" src={props.src} >\n    </img>\n  </div>\n}\n\nexport const TagSelection = (props) => {\n  // let tbody = [];\n\n  // for (let i=0; i<props.tags.length; i+=3) {\n  //   let row = [];\n  //   let row_tags = props.tags.slice(i, i+3);\n  //   for (let tag of row_tags) {\n  //     let borderColor = \"black\";\n  //     if (tag.selected) {\n  //       borderColor = \"red\";\n  //     }\n  //     if (tag.locked) {\n  //       borderColor = \"#1E90FF\";\n  //     }\n  //     row.push(\n  //       <td \n  //         onClick={props.handleClick(props.tags.indexOf(tag))}\n  //       >\n  //         <div className=\"tag\">\n  //         <img \n  //           className=\"tag-img\" \n  //           src={tag.src}\n  //           style={{\n  //           borderColor: borderColor,\n  //         }} \n  //         ></img>\n  //         </div>\n  //       </td>\n  //     );\n  //   }\n  //   tbody.push(<tr>{row}</tr>);\n  // }\n\n  return (\n    <div className=\"tag-selection\" >\n      {/* <table>\n        <tbody>{tbody}</tbody>\n      </table> */}\n      {props.tags.map((tag, idx) => <Tag {...tag} handleClick={props.handleClick(idx)} />)}\n    </div>\n  );\n};\n\nexport const TagList = (props) => {\n  return (\n    <div className=\"tag-list\" >\n      <ul\n        style = {{\n          marginLeft: \"-6%\",\n          marginTop: \"1%\",\n        }}\n      >\n        {props.selected_tags.map((tag) => (<li className=\"tag-desc\" style={{color:(tag.level>=3)?\"#cf1322\":\"black\"}}>{tag.desc}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport const RiskLevel = (props) => {\n  return (\n    <div className=\"risk-level\" >\n      危机等级:<br/>\n      <span className=\"risk-level-value\">{props.risk_level}</span>\n    </div>\n  );\n}","import React from 'react';\nimport './DeckConstruction.css';\nimport { is_standard } from './DeckGenerator';\n\nexport const DeckConstruction = (props) => {\n  return (\n    <div className=\"deck-construction\">\n      <form>\n        <br/>\n        当前卡组为&nbsp;{is_standard(props.value)?\"标准卡组\":\"狂野卡组\"}\n        <br/>\n        <textarea \n          value={props.value} \n          onChange={props.handleChange} \n          className=\"deck-construction-textarea\" \n          rows={15}\n          cols={20}\n        />\n      </form>\n      <button\n        onClick={props.checkDeck} \n        className=\"deck-construction-button\"\n      >\n        查看卡组\n      </button>\n      <button\n        onClick={props.checkCards} \n        className=\"deck-construction-button\"\n      >\n        干员图鉴\n      </button>\n      <button\n        onClick={()=>{\n          alert(\"标准卡组: 至少30张, 且同名卡不能超过3张;\\n狂野卡组: 来啊, 整活啊!\\n标准模式荣誉室: 可露希尔;\");\n        }} \n        className=\"deck-construction-button\"\n      >\n        查看标准\n      </button>\n      <br/>\n      <br/>\n      <span>提示：系统不会帮你保存卡组，记得自行保存！</span>\n    </div>\n  )\n}\n\nexport const DeckGeneration = (props) => {\n  return (\n    <div className=\"deck-generation\" >\n      <form>\n        请输入卡组名:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n          onClick={props.changeName} \n          className=\"deck-construction-button\"\n        >\n          换个随机名字\n        </button>\n        <button\n          onClick={props.checkDeck} \n          className=\"deck-construction-button\"\n        >\n          查看卡组\n        </button>\n        \n      <br/>\n      {/* <p>给卡组取个好听的名字，然后系统会根据名字，生成一套卡组。</p> */}\n    </div>\n  );\n};\n\nexport const Settings = (props) => (\n  <div className=\"deck-generation\" style={{marginTop:\"45%\"}}>\n    <form>\n        地图种子:&nbsp;\n        <input \n          type = \"text\"\n          value = {props.value} \n          onChange = {props.handleChange} \n          className = \"input-deck-name\"\n        />\n      </form>\n      <button\n        onClick={props.back} \n        className=\"deck-construction-button\"\n        style={{padding:\"3%\"}}\n      >\n        确认\n      </button>\n  </div>\n)","import React from 'react';\nimport './TitleScreen.css';\n\nexport const TitleScreen = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    <h2 className=\"title\" >明日方舟: 采掘行动</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\">大雕游戏</a>\n    </div>\n    <button className=\"title-screen-button primary\" onClick={props.enterGame}>进入游戏</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkRule}>玩法教学</button><br/>\n    <button className=\"title-screen-button primary\" onClick={props.checkDeck}>干员图鉴</button><br/>\n  </div>\n);\n\nexport const ModeSelection = (props) => (\n  <div style={{textAlign: \"center\", marginTop:\"45%\"}}>\n    {Object.keys(props.actions).map(action => <><button className=\"mode-selection-button\" onClick={props.actions[action]}>{action}</button><br/></>)}\n  </div>\n);","import React from 'react';\nimport { CardRow } from './Card';\nimport { EnterGame } from './Controller';\n\nimport './Board.css';\nimport './Competition.css';\n\nfunction DeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\nfunction process_selected_desc(card) {\n  let desc = [card.desc];\n\n  if (card.onPlayBonus && (card.onPlayBonus.length > 0)) {\n    desc.push(` (${card.onPlayBonus.map(x => x.name).join(\" \")})`);\n  }\n\n  return desc;\n}\n\nfunction introduce_competition_mode() {\n  alert(`欢迎来到竞技模式！此模式适合对游戏规则有足够了解的玩家前来挑战;\\n首先，从3套随机卡组中选择1套，作为本次竞技模式的参赛卡组;\\n然后，对该卡组进行15次强化;\\n接着，进行5次完整的对局，最后，取5次对局中成绩最好的3次对局，以该3局的平均成绩作为最终结果;\\n对于一次对局的成绩，如果对局成功，则以该局的危机等级作为该局成绩; 如果该局失败，则成绩记为0;`);\n}\n\nexport function DeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">{props.welcome_title}<br/>请选择你的参赛卡组</div>\n    {props.decks.map(deck => <DeckRepr {...deck} />)}\n    <br/>\n    <button className=\"deck-selection-button\" onClick={props.introduce || introduce_competition_mode}>{props.introduce_title}</button>\n    <button className=\"deck-selection-button\" onClick={props.back}>返回</button>\n  </div>\n}\n\nexport function DeckUpgrade(props) {\n  return <div className=\"board\">\n    <CardRow cards={props.upgrades || []} states={props.upgradeStates || []} additionalStyle={{marginTop: \"35%\"}} handleClick={props.handleUpgradeClick}/>\n    <div className=\"card-desc\">{props.selectedUpgrade.desc? \"获得\"+props.selectedUpgrade.desc : \"\"}</div>\n    <CardRow cards={props.cards || []} states={props.cardStates || []} handleClick={props.handleCardClick}/>\n    <div className=\"card-desc\">{props.selectedCard && process_selected_desc(props.selectedCard)}</div>\n    <button className=\"deck-selection-button\" style={{margin:\"2%\", padding:\"3.5%\"}} onClick={props.handleClick}>升级</button>\n  </div>\n}\n\nexport function Competition(props) {\n  return <div className=\"board\">\n    <div className=\"results\" align=\"center\">\n      {props.results[0]}&nbsp;&nbsp;{props.results[1]}&nbsp;&nbsp;{props.results[2]}<br/>\n      {props.results[3]}&nbsp;&nbsp;{props.results[4]}\n    </div>\n    <div className=\"final-result\" align=\"center\">\n      <span style={{display:(props.finalResult>=0)?\"\":\"none\"}}>最终成绩: <div style={{color: \"#1E90FF\", fontSize:\"250%\"}}>{props.finalResult}</div></span>\n    </div>\n\n    <EnterGame actions={props.actions} divAlign=\"center\" />\n\n  </div>\n\n}","import { enemy2card } from \"./Game\";\n\nconst tag_list = [\n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需的分数+4\",\n    level: 1,\n    effect(G, ctx) {\n      G.goal += 4\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/a/a6/Global_lifepoint_1.png\",\n    desc: \"我方可承受的动乱指数-2\",\n    level: 1,\n    effect(G, ctx) {\n      G.max_danger -= 2;\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/5/5a/Enemy_atk_1.png\",\n    desc: \"所有敌人获得+1攻击力\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.atk += 1;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/4/4e/Enemy_hp_1.png\",\n    desc: \"所有敌人获得+2生命值\",\n    level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        enemy.hp += 2;\n      }\n    }\n  },\n  {\n    src: \"http://prts.wiki/images/7/71/Level_predefines_1.png\",\n    desc: \"敌方牌库减少20%的牌\",\n    level: 1,\n    effect(G, ctx) {\n      G.edeck = G.edeck.slice(4);\n    }\n  },\n  // {\n  //   src: \"http://prts.wiki/images/6/65/Char_cost_casterhealer_1.png\",\n  //   desc: \"所有高台干员部署费用+1\",\n  //   level: 1,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck.filter(x=>((x.block||0)==0))) {\n  //       card.cost += 1;\n  //     }\n  //   }\n  // },\n  {\n    src: \"http://prts.wiki/images/9/99/Enemy_movespeed_2.png\",\n    desc: \"2回合后，所有敌人获得\\\"冲锋\\\"\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx) {\n      G.dashOnR3 = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/a/a0/Enemy_hp_2.png\",\n    desc: \"回合开始时，所有敌人获得+2生命值\",\n    level: 2,\n    // standard_level: 3,\n    effect(G, ctx){\n      G.enemy_hp_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_reveng_3.png\",\n    desc: \"所有精英敌人获得+2/+4\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx) {\n      for (let enemy of G.edeck) {\n        if (enemy.is_elite) {\n          enemy.atk += 2;\n          enemy.hp += 4;\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n  //   desc: \"手牌上限和场上干员数量上限调整为6\",\n  //   level: 2,\n  //   effect(G, ctx) {\n  //     G.limit_hand_field = true;\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/c/c7/Global_costrecovery_1.png\",\n    desc: \"强化干员需要消耗1点费用\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx) {\n      // for (let card of G.deck) {\n      //   card.reinforce += 1;\n      // }\n      G.reinforce_need_cost = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/4/46/Global_forbidloc_2.png\",\n    desc: \"可同时部署的干员数-3\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx){\n      G.field_limit -= 3;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/c/c5/Global_skillrecovery_1.png\",\n    desc: \"所有干员采掘力-1\",\n    level: 2,\n    challenge: true,\n    effect(G, ctx){\n      for (let card of G.deck) {\n        card.mine -= 1;\n        card.mine = Math.max(0, card.mine);\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/f/f4/Enemy_reveng_spdmod_2.png\",\n    desc: \"2回合后，每回合额外翻开1张敌人牌\",\n    level: 2,\n    standard_level: 1,\n    effect(G, ctx){\n      G.moreEnemiesOnR3 = true;\n    }\n  },\n\n\n  {\n    src: \"http://prts.wiki/images/f/f1/Enemy_buster_1.png\",\n    desc: \"这个tag是送你的哦~\",\n    level: -50,\n    effect(G, ctx) {\n      let deck = G.deck.map(x=>enemy2card(G, ctx));\n      G.edeck = ctx.random.Shuffle(G.deck.map(x=>({...x, power:0}))); // If don't add power:0, plenty of bugs gonna come\n      G.deck = deck;\n      G.rhodes_training_mode = true;\n\n      for (let card of G.edeck) {\n        if (typeof card.desc == \"string\") {\n          card.desc = card.desc.replace(\"采掘\", \"动乱\");\n          card.desc = card.desc.replace(\"部署\", \"入场\");\n        }\n      }\n    }\n  },\n\n  // {\n  //   src: \"http://prts.wiki/images/7/7f/Global_costrecovery_3.png\",\n  //   desc: \"所有干员的部署费用提升至1.5倍\",\n  //   level: 3,\n  //   effect(G, ctx) {\n  //     for (let card of G.deck) {\n  //       card.cost *= 1.5;\n  //     }\n  //   }\n  // },\n\n  {\n    src: \"http://prts.wiki/images/e/eb/Global_pcharnum_2.png\",\n    desc: \"所有订单的分数-1\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx) {\n      for (let order of G.odeck) {\n        order.score -= 1;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/e/ee/Char_atkatkspeed_1.png\",\n    desc: \"所有干员攻击力-2\",\n    level: 3,\n    challenge: true,\n    effect(G, ctx) {\n      // G.goal += 28; // Because first turn gonna -4 too\n      // G.reduce_goal = true;\n      for (let card of G.deck) {\n        card.atk -= 2;\n      }\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/0/06/Enemy_attackspeed_2.png\",\n    desc: \"每回合额外翻开1张敌人牌\",\n    level: 3,\n    challenge: true,\n    effect(G, ctx) {\n      G.num_enemies_out += 1;\n    }\n  },\n\n  \n\n  {\n    src: \"http://prts.wiki/images/0/03/Enemy_atk_2.png\",\n    desc: \"回合开始时，所有敌人获得+1/+1\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.enemy_grow = true;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/9/95/Char_debuff_1.png\",\n    desc: \"回合开始时，所有干员受到1点伤害\",\n    level: 3,\n    standard_level: 1,\n    effect(G, ctx){\n      G.fog = true;\n    }\n  },\n\n  \n  \n  {\n    src: \"http://prts.wiki/images/d/d3/Enemy_def_1.png\",\n    desc: \"胜利所需分数+10\",\n    level: 3,\n    standard_level: 2,\n    effect(G, ctx){\n      G.goal += 10;\n    }\n  },\n\n  {\n    src: \"http://prts.wiki/images/4/40/Enemy_hirman_2.png\",\n    desc: \"3回合后，所有敌人获得+5/+5\",\n    level: 3,\n    standard_level: 3,\n    effect(G, ctx){\n      G.reinforceOnR4 = true;\n    }\n  },\n\n  \n  {\n    src: \"http://prts.wiki/images/c/c1/Char_cdtime_2.png\",\n    desc: \"干员以横置状态入场\",\n    level: 10,\n    effect(G, ctx){\n      G.exhausted_enter = true;\n    }\n  },\n\n\n  \n];\n\nfunction process_tags(tag_list) {\n  let tags = [];\n\n  for (let t of tag_list) {\n    t.selected = false;\n\n    if (t.level == 1) {\n      for (let i=0; i<3; i++) {\n        tags.push(Object.assign({}, t)); // EH: maybe this can be reconstructed to one line instead of for loop\n      }\n    }\n    else {\n      tags.push(Object.assign({}, t));\n    }\n  }\n\n  return tags;\n}\n\nexport const TAGS = process_tags(tag_list);","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { get_deck_name, generate_deck_s2, get_roguelike_pick, generate_roguelike_deck } from './DeckGenerator';\nimport { str2deck } from './Game';\nimport { map_object, PRNG } from './utils';\nimport { TAGS } from './tags';\n// import { InversedTabs } from './InversedTabs';\n\nimport './Board.css';\nimport './Card.css';\nimport './Roguelike.css';\nimport './Competition.css';\nimport { ICONS } from './icons';\nimport { CARDS, heijiao_in_dream } from './cards';\nimport { UPGRADES } from './upgrades';\n\nexport function introduce_roguelike_mode() {\n  alert(`欢迎来到Roguelike模式“黑角的金针菇迷境”！\\n通关要求：完成9局对战；\\n每一局对战，都有要求的危机等级，成功完成该局对战，即可获得赏金，并进入下一局对战；\\n如果其中一次对局失败，则本次Roguelike旅程即宣告失败，胜败乃兵家常事，大侠请重头再来；\\n在每一局对战中，如果你挑战比要求难度更高的危机等级，则会获得更多的赏金！每高1级，就会额外获得10赏金；\\n如果比要求等级高4级，则会达成“满贯”，额外获得50赏金；`);\n}\n\nfunction reset_tags() {\n  return TAGS.map(x => ({...x}));\n}\n\nfunction setup_roguelike_mode(S) {\n  console.log(\"Roguelike mode reset\");\n  S.roguelike_mode = true;\n\n  S.tags = reset_tags();\n\n  S.Deck = [];\n\n  S.gold = 60;\n\n  S.relics = [];\n\n  S.game_count = 1;\n  S.level_required = 0;\n\n  S.central_idx = 0;\n\n  S.dream_count = 0;\n\n  reset_card_picks(S);\n  // reset_shop(S);\n}\n\nfunction select_deck(S, deck) {\n  S.Deck = deck;\n  reset_shop(S);\n}\n\nfunction end_roguelike_mode(S) {\n  S.roguelike_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction reduce_basic_tags(tags, rng) {\n  // return tags.filter((x,idx) => !rng.choice([[6,7,8],[9,10,11],[12,13,14]]).includes(idx));\n  return [...tags.slice(0,6), ...rng.shuffle(tags.slice(6)).slice(0,6).sort((t1,t2) => tags.indexOf(t1)-tags.indexOf(t2))];\n}\n\nfunction setup_normal_challenge(tags, rng) {\n  for (let t of tags) {\n    if (t.standard_level <= 2 || [0,3,4,6,12].includes(tags.indexOf(t))) {\n      t.locked = true;\n    }\n  }\n  let challenge_tag = rng.choice(tags.filter(x => x.challenge));\n  challenge_tag.locked = true;\n  let locked_tags = tags.filter(x => x.locked && [2,3].includes(x.level));\n  let other_tags = tags.filter(x => !x.locked && [2,3].includes(x.level));\n  other_tags = rng.shuffle(other_tags).slice(0,3);\n  return [...reduce_basic_tags(tags.slice(0,15), rng), ...locked_tags, ...other_tags];\n}\n\nfunction setup_exhausted_challenge(tags, rng) {\n  tags[0].locked = true;\n  tags[1].locked = true;\n  let final_tag = tags[tags.length-1];\n  final_tag.locked = true;\n  let basic_tags = tags.filter(x => x.level == 1);\n  let another_challenge_tag = rng.choice(tags.filter(x => x.level == 3));\n  another_challenge_tag.locked = true;\n  let advanced_tags = rng.shuffle(tags.filter(x => [2,3].includes(x.level) && x != another_challenge_tag)).slice(0,5);\n  return [...reduce_basic_tags(basic_tags, rng), another_challenge_tag, ...advanced_tags, final_tag];\n}\n\nfunction setup_daily_tags(S) {\n  let rng = new PRNG(S.date);\n  let tags = reset_tags();\n\n  if (rng.random() <= 0.6) {\n    S.tags = setup_normal_challenge(tags, rng);\n    S.level_required = 24;\n  }\n  else {\n    S.tags = setup_exhausted_challenge(tags, rng);\n    S.level_required = 18;\n  }\n}\n\nfunction enter_daily_mode(S) {\n  S.daily_mode = true;\n  S.date = Date().slice(0,15);\n  // S.date = Math.random();\n  setup_daily_tags(S);\n}\n\nfunction end_daily_mode(S) {\n  S.daily_mode = false;\n  S.tags = reset_tags();\n}\n\nfunction set_difficulty(S, difficulty) {\n  S.difficulty = difficulty;\n\n  S.levels = [12, 14, 16, 18, 22, 26, 30, 34, 45];\n\n  if (difficulty == \"hard\") {\n    S.levels = [15, 18, 21, 24, 30, 36, 42, 48, 60];\n  }\n\n  S.level_required = S.levels[0];\n}\n\nfunction preprocess_roguelike_card(card) {\n  card.onPlayBonus = [];\n}\n\nfunction setup_deck_selection(S) {\n  let rng = new PRNG(Date());\n  S.deck_names = _.times(3, ()=>rng.choice(CARDS.map(x=>x.name))).map(x => x + \"·黑角\");\n  S.deck_list = S.deck_names.map(generate_roguelike_deck).map(str2deck); // TODO: change the generator\n  S.deck_list.map(deck => deck.map(preprocess_roguelike_card))\n}\n\nfunction get_pick() {\n  return get_roguelike_pick().map(card => CARDS.find(x => x.name == card)).filter(card => card != undefined);\n}\n\nfunction reset_card_picks(S) {\n  S.card_picks = _.times(3, get_pick);\n}\n\nfunction get_shop_item(S) {\n  let rng = new PRNG(Math.random());\n\n  let item_type = rng.randRange(10);\n  console.log(item_type, \"item type\");\n\n  if (item_type <= 6) {\n    return get_upgrade(S, rng);\n  }\n  else if (item_type <= 8) {\n    return get_reinforced_card(S, rng);\n  }\n  else{\n    return delete_card(S, rng);\n  }\n\n}\n\nfunction get_upgrade(S, rng) {\n  let shop_item = {};\n\n  // Get upgrade\n  let upgrade = rng.choice(UPGRADES);\n  shop_item.name = \"升级: \" + upgrade.name;\n  shop_item.price = rng.randRange(20) + 20;\n  console.log(\"This deck\", S.Deck);\n  shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"获得 \" + upgrade.desc;\n  shop_item.onBought = (S, idx) => {\n    let card = S.Deck[idx];\n    console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n    if (card) {\n      upgrade.effect(card);\n    }\n    card.upgraded = true;\n  };\n\n  return shop_item;\n}\n\n// function get_reinforceupgrade(S, rng) {\n//   let shop_item = {};\n\n//   // Get upgrade\n//   let upgrade = rng.choice(UPGRADES);\n//   shop_item.name = \"升级: \" + upgrade.name;\n//   shop_item.price = rng.randRange(20) + 20;\n//   console.log(\"This deck\", S.Deck);\n//   shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n//   shop_item.desc = \"获得 \" + upgrade.desc;\n//   shop_item.onBought = (S, idx) => {\n//     let card = S.Deck[idx];\n//     console.log(\"Upgrade on \", card.name, \"with \", upgrade.desc)\n//     if (card) {\n//       upgrade.effect(card);\n//     }\n//     card.upgraded = true;\n//   };\n\n//   return shop_item;\n// }\n\nfunction get_reinforced_card(S, rng) {\n  let shop_item = {};\n\n  // Get card\n  let card = {\n    ...rng.choice(CARDS),\n    material: rng.randRange(3),\n    upgraded: true,\n    onPlayBonus: [], // EH: this should be abstracted instead of write here again\n  };\n  let reinforce_time = rng.randRange(2) + 1;\n\n  shop_item.name = card.name + \"(强化\" + reinforce_time + \")\";\n  shop_item.price = rng.randRange(20) + 20 + (30+rng.randRange(20)) * (reinforce_time - 1);\n  shop_item.desc = card.desc;\n\n  let reinforce_once = UPGRADES.find(x => x.name == \"强化1\");\n  for (let i=0; i<reinforce_time; i++) {\n    reinforce_once.effect(card);\n  }\n\n  shop_item.onBought = (S) => {\n    S.Deck.unshift(card);\n  };\n\n  return shop_item;\n}\n\nfunction delete_card(S, rng) {\n  let shop_item = {};\n\n  shop_item.name = \"删1张牌\";\n  shop_item.price = 10 + rng.randRange(10);\n  shop_item.indexes = rng.shuffle(S.Deck.map((x,idx)=>idx)).slice(0,4);\n  shop_item.desc = \"\";\n  shop_item.onBought = (S, card_idx) => {\n    console.log(\"The index:\", card_idx);\n    console.log(\"Before delete\", S.Deck.length, S.Deck);\n    S.Deck = S.Deck.filter((x,idx) => (idx != card_idx));\n    console.log(\"After delete\", S.Deck.length, S.Deck);\n  }\n\n  return shop_item;\n}\n\n\nfunction payGold(S, amount) {\n  if (S.gold >= amount) {\n    S.gold -= amount;\n    return true;\n  }\n  else {\n    alert(\"剩余赏金不够\");\n    return false;\n  }\n}\n\nfunction buy(S, idx) {\n  let item = S.current_item;\n  let item_idx = S.current_item_idx;\n  if (payGold(S, item.price)) {\n    S.shop_items = S.shop_items.filter((x,idx) => idx != item_idx);\n    if (idx) {\n      let card_idx = S.current_item.indexes[idx];\n      item.onBought(S, card_idx);\n    }\n    else {\n      S.relics.unshift(item);\n      item.onBought(S);\n    }\n  }\n}\n\nfunction reset_shop(S) {\n  S.shop_items = _.times(6, ()=>get_shop_item(S));\n}\n\nfunction refresh_shop(S) {\n  if (payGold(S, 10)) {\n    reset_shop(S);\n  }\n}\n\n// EH: Actually it's better to set all formats the same, but Deck selection is done on board\nfunction pick_cards(S, idx) {\n  S.Deck = [...S.Deck, ...S.card_picks[idx]];\n  S.card_picks = undefined;\n}\n\nfunction skip_pick(S) {\n  S.card_picks = undefined;\n  S.gold += 10;\n}\n\nfunction enter_dream(S) {\n  S.dream_count += 1;\n  if (S.dream_count == 9) {\n    alert(\"已进入黑角梦境\");\n    S.Deck = _.times(10, () => heijiao_in_dream);\n  }\n  S.gold = 5000;\n}\n\nexport function get_gold_gained(risk_level, level_required) {\n   let gold_gained = 30;\n\n    let level_diff = risk_level - level_required;\n    gold_gained += Math.min(level_diff * 10, 100);\n\n    // For slam, don't store them in variables, instead, calculate it on time\n    // So do plenty of other things\n    if (level_diff >= 4) {\n      gold_gained += 50;\n    }\n    if (level_diff >= 8) {\n      gold_gained += 50;\n    }\n\n    return gold_gained;\n\n}\n\nfunction continue_run(S) {\n  // Resets go here\n  S.central_idx = 1;\n  reset_shop(S);\n  reset_card_picks(S);\n\n  if (S.won) {\n    S.gold += get_gold_gained(S.level_achieved, S.level_required);\n  }\n\n  S.game_count += 1;\n  if ((S.level_achieved - S.level_required) >= 8) {\n    S.game_count += 1;\n  }\n  S.game_count = Math.min(S.game_count, 9);\n\n  S.level_required = S.levels[S.game_count - 1];\n}\n\nexport function RoguelikeDeckSelection(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"deck-selection-title\">选择你的卡组</div>\n    {props.decks.map(deck => <RoguelikeDeckRepr {...deck} />)}\n    <br/>\n    {/* <button className=\"deck-selection-button\" onClick={props.back}>返回</button> */}\n  </div>\n}\n\nfunction RoguelikeDeckRepr(props) {\n  return <div className=\"deck-repr\" align=\"center\">\n    <div className=\"deck-repr-name\">{props.deckName || \"\\\"热泵通道\\\"推进之王\"}</div>\n    <button className=\"deck-repr-button\" onClick={props.checkDeck}>查看</button>\n    <button className=\"deck-repr-button\" onClick={props.selectDeck}>选择</button>\n  </div>\n}\n\n\nexport function Prepare(props) {\n  return <div className=\"central\" align=\"center\">\n    <h3 className=\"prepare\">目前进度: 第{props.game_idx}/9战</h3>\n    <p className=\"prepare\">要求危机等级: {props.risk_level_required}</p>\n    <button className=\"prepare\" onClick={props.enter_game} >进入对战</button>\n    <button className=\"prepare\" onClick={props.check_deck} >查看卡组</button>\n  </div>;\n}\n\nexport function Pick(props) {\n  return <div className=\"pick\" align=\"center\">\n    <br/>\n    {props.cards.map(card => <>{card.name}<br/></>)}\n    <button className=\"pick-button\" onClick={props.check_cards}>查看</button>\n    <button className=\"pick-button\" onClick={props.pick_cards}>加入</button>\n  </div>\n}\n\nexport function GoldAmount(props) {\n  return <div className=\"gold-wrapper desc\">\n    <span className=\"gold-amount\">{ICONS.gold}{props.gold}</span>\n  </div>;\n}\nexport function PickCards(props) {\n  // console.log(props.picks);\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <button className=\"refresh-picks\" onClick={props.refresh_picks}><span>刷新选牌({ICONS.gold}10)</span></button>\n    {props.picks.map((cards, idx) => <Pick cards={cards} check_cards={() => props.check_cards(idx)} pick_cards={() => props.pick_cards(idx)} />)}\n    <button className=\"skip-picks\" onClick={props.skip_picks}><span>跳过选牌并获得{ICONS.gold}10</span></button>\n  </div>\n}\n\nfunction ShopItem(props) {\n  return <div className=\"shop-item\" align=\"center\">\n    <div className=\"shop-item-img-container\"><img src={props.src} className=\"shop-item-img\"/></div>\n    <div className=\"shop-item-info\" align=\"center\">\n      <span className=\"shop-item-name\">{props.name}</span>\n      <br/>\n      <span className=\"shop-item-price\">{ICONS.gold}{props.price}</span>\n      <br/>\n      <div className=\"shop-item-desc\">{props.desc}</div>\n    </div>\n    <button className=\"buy\" onClick={props.buy}>购买</button>\n  </div>\n}\n\nexport function Shop(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"shop-items\">    \n      {props.shop_items.map((item, idx) => <ShopItem {...item} buy={props.buy(idx)} />)}\n    </div>\n    <button className=\"refresh-shop\" onClick={props.refresh_shop}>刷新商店({ICONS.gold}10)</button>\n  </div>\n\n}\n\nexport function Roguelike(props) {\n  return <div className=\"central\">\n    <div className=\"heijiao-container-2\"></div>\n    <div className=\"counter-container\" align=\"center\">\n      <div className=\"battle-count-title\" >第<span className=\"battle-count\">{props.game_count || 1}</span>/<span onClick={props.enter_dream}>9</span>战</div>\n    </div>\n    <div className=\"roguelike-operations\">\n      <button onClick={props.enter_battle} className=\"roguelike-operation primary\">进入对战</button>\n      <button onClick={props.check_deck} className=\"roguelike-operation\">查看卡组</button>\n      <button onClick={props.check_relics} className=\"roguelike-operation\">查看藏品</button>\n    </div>\n  </div>\n}\n\nexport function FinishPick(props) {\n  return <div className=\"central\" align=\"center\">\n    <GoldAmount gold={props.gold} />\n    <div className=\"finish-pick\">你已经完成了选择</div>\n  </div>\n}\n\nexport function RoguelikeTabs(props) {\n  return <div className=\"roguelike-tabs\" align=\"center\">\n    {props.selections.map((selection, idx) => <button className=\"roguelike-tab\" onClick={()=>props.onSelect(idx)}>{selection}</button>)}\n  </div>\n}\n\nexport function RoguelikeEntry(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"entry\">欢迎来到集成战略模式<br/>“黑角的金针菇迷境”<br/>请选择难度</div>\n    <div className=\"difficulty-selection\">\n      {props.difficulties.map(selection => <button className=\"difficulty-button\" onClick={selection.handleClick}>{selection.name}</button>)}\n    </div>\n    <button className=\"introduce-button\" onClick={introduce_roguelike_mode}>集成战略模式介绍</button>\n  </div>\n}\n\nexport function ShowMeTheMoney(props) {\n  return <div className=\"gold-gained\">\n    {ICONS.gold}+{props.amount}\n  </div>\n\n}\n\nexport function ResultWin(props) {\n  let slam = \"\";\n  if (props.slam) {\n    slam = \"满贯！\";\n  }\n  if (props.grand_slam) {\n    slam = \"大满贯！\";\n  }\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务完成<br/>\n      第{props.game_count}/9战<br/>\n      要求等级: {props.level_required}<br/>\n      实际等级: {props.level_achieved}<br/>\n    </div>\n    <ShowMeTheMoney \n      amount = {props.gold_amount}\n    />\n    <div className=\"slam\">{slam}</div>\n    <button className=\"continue-btn primary\" onClick={props.continue} >继续</button>\n  </div>\n\n}\n\nexport function ResultLose(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      任务失败<br/>\n      第{props.game_count}/9战<br/>\n    </div>\n    <div className=\"result-quote\">\n      胜败乃兵家常事<br/>\n      大侠请重新来过\n    </div>\n    <button className=\"endrun-btn\" onClick={props.continue}>结束游戏</button>\n  </div>\n}\n\nexport function FinalResult(props) {\n  return <div className=\"board\" align=\"center\">\n    <div className=\"result-info\">\n      <div className=\"ascension\">通关！</div>\n      完成难度: {props.difficulty}\n    </div>\n    {/* TODO: Add show deck and show relics */}\n  <button className=\"endrun-btn\" onClick={props.continue}>{props.endgame}</button>\n  </div>\n\n\n}\n\nexport const roguelike = {\n  setup_roguelike_mode,\n  set_difficulty,\n  setup_deck_selection,\n  select_deck,\n\n  pick_cards,\n  skip_pick,\n  enter_dream,\n  buy,\n  reset_shop,\n  refresh_shop,\n\n  continue_run,\n  end_roguelike_mode,\n\n  enter_daily_mode,\n  end_daily_mode,\n};","import React from 'react';\nimport { CARDS } from './cards';\nimport { ORDERS, material_icons } from './orders';\nimport { ICONS } from './icons';\n\nexport const RULES = <div>\n  <h3>明日方舟: 采掘行动 游戏规则</h3>\n  <br/><br/>\n  游戏目标: 获得10分；\n  <br/><br/>\n  在你的回合，你可以做以下事情: <br/><br/>\n  <b>* 部署干员: </b>将干员从手牌中部署到场上，并消耗其部署费用(写在左上角)；<br/><br/>\n  <b>* 使用干员采掘: </b>干员每有1点采掘能力，就获得1个随机材料；<br/>\n  <i>举例: 博士使用\"阿米娅\"进行采掘，阿米娅的采掘能力为2，博士因此获得了{material_icons[0]}和{material_icons[1]}，而阿米娅的能力为\"采掘: 获得1分\"，所以在采掘材料的同时，博士还能获得1分；</i><br/><br/>\n  <b>* 使用干员战斗:</b> 对目标敌人造成[攻击力]点伤害；<br/>\n  <i>举例: 博士使用\"克洛丝\"对\"破阵者\"发起攻击，克洛丝的攻击力为3，因此对破阵者造成3点伤害，破阵者的生命值为2，伤害大于生命值，因此破阵者被摧毁；</i><br/><br/>\n  <b>* 使用干员行动:</b> 如果干员有\"行动:\"效果，则触发之；<br/>\n  <i>举例: 博士使用\"桃金娘\"行动，桃金娘的能力为\"行动: 获得3点费用\"，因此博士使用桃金娘行动后，获得了3点费用；</i><br/><br/>\n  <b>* 完成订单:</b> 消耗订单所需的材料组合(写在订单左上角)，完成订单，获得订单的奖励(写在右上角，通常是2分和1个材料)；{material_icons[3]}是百搭资源，可作为任意资源使用；<br/><br/>\n  <b>* 使用订单能力:</b> 已完成的订单，拥有自己的订单能力，每回合可使用一次；<br/>\n  <i>举例: 博士消耗了3个{material_icons[1]}，完成了1个需要3个{material_icons[1]}的订单，获得了2分和1个{material_icons[2]}，此时博士刚好凑够了3个{material_icons[2]}，立刻再完成了一个需要3个{material_icons[2]}的订单，获得了2分和1个{material_icons[1]}，该订单的能力描述为\"{material_icons[0]}→2分\"，也就是可以用1个{material_icons[0]}换2分，博士使用了该订单，消耗了1个{material_icons[0]}，获得了2分，此时博士总共获得了6分，再得4分即可获胜；</i><br/>\n  <br/>\n  以上的事情，在你的回合，可以以任意顺执行任意次；<br/>\n  <b>看到这里，只要你理解了部署、采掘、战斗，以及如何通过完成订单得分之后，就可以开始玩起来啦！</b><br/>以下内容都是对规则细节的补充：<br/><br/>\n  回合结束时，场上每有1个重置状态的干员，就摸1张牌并获得1点费用，然后所有重置状态下的干员触发其\"休整:\"效果；<br/>\n  额外说明: 所有干员能力的作用对象(如造成伤害、强化手牌、横置、重置等)均为随机选择<br/><br/>\n  在你的回合结束后，进入整合运动阶段:<br/><br/>\n  首先，<b>翻开2张敌人牌，</b>以横置状态入场；<br/><br/>\n  然后，场上的敌人，<b>从左到右行动一次，</b>被阻挡的敌人，会向其阻挡者发起攻击；未被阻挡的敌人，会发起动乱，增加动乱值，动乱值达到8点时，游戏立刻失败；<br/><br/>\n  干员的阻挡数标在场上干员的右上角，以蓝色的盾牌表示，\"阻挡X\"表示阻挡敌人阵列最左侧的X个敌人，已经被阻挡的敌人，不会被重复阻挡；<br/>\n  <i>举例: 博士的场上有3名干员，克洛丝(阻挡0)，米格鲁(阻挡2)，和玫兰莎(阻挡1)，敌方场上有4只源石虫；克洛丝阻挡数为0，所以不阻挡任何敌人；米格鲁阻挡数为2，所以会阻挡前两只源石虫；玫兰莎阻挡数为1，所以会阻挡第三只源石虫(因为前两只已经被米格鲁阻挡)；第四只源石虫未被阻挡，因此会发起动乱，增加1点动乱值；</i>\n  <br/><br/>\n  拥有\"行动:\"能力的敌人(比如高阶术师)，无论被阻挡与否，都会执行其\"行动:\"能力；\n  <br/>\n  愤怒状态的敌人，一定会发起攻击，如果未被阻挡，则会攻击场上的一名随机干员，而不会发起动乱或行动；\n  <br/><br/>\n  <b>挑战任务:</b>\n  <br/>\n  * 完成危机等级12  <br/>\n  * 完成危机等级20  <br/>\n  * 用5套不同的随机卡组完成危机等级18  <br/>\n  * 用5套不同的随机卡组完成危机等级25  <br/>\n  * 点\"干员以横置状态入场\"并完成危机等级12  <br/>\n  * 点\"敌方牌库减少20%的牌\"3级并完成危机等级20  <br/>\n  * 点\"所有敌人获得+2生命值\"3级并完成危机等级20  <br/>\n  * 点\"2回合后，所有敌人获得冲锋\"并完成危机等级20 <br/>\n  * 使用自组卡组\"30 斯卡蒂\"完成危机等级18  <br/>\n  * 使用自组卡组\"30 凯尔希\"完成危机等级18  <br/>\n  * 完成危机等级30  <br/>\n  <br/><br/>\n  <b>成就一览:</b>\n  <br/>\n  <span>* 女主角</span><br/>\n  <span>* 罗德岛的基石</span><br/>\n  <span>* 常山豆子龙</span><br/>\n  <span>* 特殊召唤</span><br/>\n  <span>* 推进之王</span><br/>\n  <span>* 赤霄·绝影</span><br/>\n  <span>* 企鹅物流</span><br/>\n  <span>* 龙门消防局</span><br/>\n  {/* <span>* 无敌的小火龙</span><br/> */}\n  <span>* 沸腾爆裂</span><br/>\n  <span>* 真银斩</span><br/>\n  <span>* 爆发剂·榴莲味</span><br/>\n  <span>* 17张牌你能秒我</span><br/>\n  <span>* 德克萨斯做得到吗</span><br/>\n</div>;","import React from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { Tabs, TabList, Tab } from 'react-tabs';\nimport { useSpring, animated } from 'react-spring';\nimport { Card, SCard, CardRow, CheckCard, SCardRow, TypeFilter } from './Card';\nimport { Controller, EnterGame } from './Controller';\nimport { Panel, ScoreBoard, MaterialDisplay } from './Panel';\nimport { TagSelection, TagList, RiskLevel } from './TagSelection';\nimport { DeckConstruction, DeckGeneration, Settings } from './DeckConstruction';\nimport { TitleScreen, ModeSelection } from './TitleScreen';\nimport { DeckSelection, DeckUpgrade, Competition } from './Competition';\nimport { get_deck_name, get_seed_name, generate_deck, is_standard, generate_deck_s2 } from './DeckGenerator';\nimport { str2deck, init_decks, get_desc } from './Game';\nimport { map_object, sleep, PRNG } from './utils';\nimport { CARDS, default_deck } from './cards';\nimport { order_illust, rhine_illust, material_icons } from './orders';\nimport { ICONS } from './icons';\nimport { TAGS } from './tags';\nimport { roguelike, introduce_roguelike_mode, RoguelikeTabs, PickCards, FinishPick, Shop, RoguelikeEntry, RoguelikeDeckSelection, Roguelike, ResultWin, ResultLose, FinalResult, get_gold_gained } from './Roguelike';\nimport { RULES } from './rules';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport './Board.css';\n\nconst init_animations = {\n  field: {},\n  efield: {},\n  finished: {},\n  materials: {},\n};\n\nexport class Board extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.handle_hand_clicked = this.handle_hand_clicked.bind(this);\n    this.handle_field_clicked = this.handle_field_clicked.bind(this);\n    this.handle_efield_clicked = this.handle_efield_clicked.bind(this);\n    this.handle_order_clicked = this.handle_order_clicked.bind(this);\n    this.handle_finished_clicked = this.handle_finished_clicked.bind(this);\n    this.handle_mulligan_clicked = this.handle_mulligan_clicked.bind(this);\n    this.handle_deck_change = this.handle_deck_change.bind(this);\n    this.handle_selection_clicked = this.handle_selection_clicked.bind(this) \n    this.handle_upgrade_clicked = this.handle_upgrade_clicked.bind(this);\n    this.handle_pick_clicked = this.handle_pick_clicked.bind(this);\n\n    this.enemy_move = this.enemy_move.bind(this);\n\n    this.process_hand_data = this.process_hand_data.bind(this);\n    this.process_hand_state = this.process_hand_state.bind(this);\n    this.process_field_data = this.process_field_data.bind(this);\n    this.process_field_state = this.process_field_state.bind(this);\n    this.process_efield_data = this.process_efield_data.bind(this);\n    this.process_efield_state = this.process_efield_state.bind(this);\n    this.process_order_data = this.process_order_data.bind(this);\n    this.process_order_state = this.process_order_state.bind(this);\n    this.process_finished_data = this.process_finished_data.bind(this);\n    this.process_finished_state = this.process_finished_state.bind(this);\n    this.process_selection_state = this.process_selection_state.bind(this);\n    this.process_upgrade_data = this.process_upgrade_data.bind(this);\n    this.process_upgrade_state = this.process_upgrade_state.bind(this);\n    this.process_pick_data = this.process_pick_data.bind(this);\n    this.process_pick_state = this.process_pick_state.bind(this);\n\n    this.process_card_details = this.process_card_details.bind(this);\n    this.process_enemy_details = this.process_enemy_details.bind(this);\n    this.process_order_details = this.process_order_details.bind(this);\n\n    this.process_deck_data = this.process_deck_data.bind(this);\n    this.process_roguelike_deck_data = this.process_roguelike_deck_data.bind(this);\n\n    this.set_animations = this.set_animations.bind(this);\n    this.wrap_controller_action = this.wrap_controller_action.bind(this);\n    this.set_branch = this.set_branch.bind(this);\n    this.check_card = this.check_card.bind(this);\n    this.get_illust_attr = this.get_illust_attr.bind(this);\n\n    this.play_card = this.play_card.bind(this);\n    this.use_mine = this.use_mine.bind(this);\n    this.use_fight = this.use_fight.bind(this);\n    this.use_act = this.use_act.bind(this);\n    this.reinforce_card = this.reinforce_card.bind(this);\n    this.finish_order = this.finish_order.bind(this);\n    this.use_order = this.use_order.bind(this);\n    this.harvest_orders = this.harvest_orders.bind(this);\n\n    this.render_title_board = this.render_title_board.bind(this);\n    this.render_mode_selection_board = this.render_mode_selection_board.bind(this);\n    this.render_rules_board = this.render_rules_board.bind(this);\n    this.render_game_board = this.render_game_board.bind(this);\n    this.render_tag_board = this.render_tag_board.bind(this);\n    this.render_deck_board = this.render_deck_board.bind(this);\n    this.render_card_board = this.render_card_board.bind(this);\n    this.render_preview_board = this.render_preview_board.bind(this);\n    this.render_mulligan_board = this.render_mulligan_board.bind(this);\n    this.render_setting_board = this.render_setting_board.bind(this);\n    this.render_deck_selection_board = this.render_deck_selection_board.bind(this);\n    this.render_deck_upgrade_board = this.render_deck_upgrade_board.bind(this);\n    this.render_competition_board = this.render_competition_board.bind(this);\n    this.render_roguelike_deck_selection_board = this.render_roguelike_deck_selection_board.bind(this);\n    this.render_roguelike_board = this.render_roguelike_board.bind(this);\n    this.render_roguelike_shop_board = this.render_roguelike_shop_board.bind(this);\n    this.render_roguelike_result_board = this.render_roguelike_result_board.bind(this);\n    this.render_roguelike_final_result_board = this.render_roguelike_final_result_board.bind(this);\n    this.render_roguelike_entry_board = this.render_roguelike_entry_board.bind(this);\n\n    this.enter_competition_mode = this.enter_competition_mode.bind(this);\n    this.select_deck = this.select_deck.bind(this);\n    this.upgrade_card = this.upgrade_card.bind(this);\n    this.start_competition = this.start_competition.bind(this);\n\n    this.enter_roguelike_mode = this.enter_roguelike_mode.bind(this);\n    this.end_roguelike_mode = this.end_roguelike_mode.bind(this);\n    this.buy_item = this.buy_item.bind(this);\n\n    this.enter_daily_mode = this.enter_daily_mode.bind(this);\n\n    this.change_board = this.change_board.bind(this);\n    this.reset_preview_deck = this.reset_preview_deck.bind(this);\n    this.choose_tag = this.choose_tag.bind(this);\n    this.choose_standard_tags = this.choose_standard_tags.bind(this);\n    this.get_risk_level = this.get_risk_level.bind(this);\n    this.enter_game = this.enter_game.bind(this);\n    this.check_deck = this.check_deck.bind(this);\n    this.back = this.back.bind(this);\n\n    this.roguelike = map_object(action => (...args) => this.setState(produce((S) => action(S, ...args))), roguelike);\n\n    this.state = {\n      hand_selected: -1,\n      field_selected: -1,\n      efield_selected: -1,\n      order_selected: -1,\n      finished_selected: -1,\n      selection_selected: -1,\n      upgrade_selected: -1,\n      pick_selected: -1,\n      shop_selected: -1,\n      hand_choices: [false, false, false, false, false],\n\n      branch: {},\n      show_field: true,\n      show_tag_selection: false,\n\n      stage: \"player\",\n\n      animations: {...init_animations},\n\n      board: this.render_title_board, \n      // board: this.render_roguelike_final_result_board,\n      // DEFAULT\n      last_board: this.render_title_board,\n\n      tags: TAGS.map(x=>({...x})),\n      risk_level: 0, // this is changed on game begin\n      standard_level: 0,\n\n      deck_mode: \"random\",\n      deck_name: get_deck_name(),\n      deck_data: CARDS.slice(0,10).map(x=>`3 ${x.name}`).join(\"\\n\"),\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n\n      show_finished: true,\n\n      seed: get_seed_name(),\n\n      checking: {},\n\n      scenario_finished: false,\n\n      dream_count: 0,\n    };\n\n    this.branches = { \n      hand: {\n        部署: this.play_card,\n      },\n      field: {\n        采掘: this.use_mine,\n        // 战斗: this.use_fight,\n      },\n      efield: {\n        战斗: this.use_fight,\n      },\n      orders: {\n        完成: this.finish_order,\n      },\n      finished: {\n        行动: this.use_order,\n        // 一键收货: this.harvest_orders,\n      },\n      pick: {\n        拿取: () => this.props.moves.pick(this.state.pick_selected),\n      }\n    };\n\n    this.log_select = () => ((this.props.G.messages[0].includes(\"选定\")? this.props.moves.changeMsg : this.props.moves.logMsg));\n  }\n\n  choose_tag(idx) {\n    return () => {\n      let new_tags = this.state.tags;\n      new_tags[idx].selected = !new_tags[idx].selected;\n      this.setState({tags: new_tags});\n    };\n  }\n\n  choose_standard_tags(tags, current_standard_level) {\n    let new_tags = [...tags];\n    // let current_standard_level = this.state.standard_level + 1;\n    for (let tag of new_tags) {\n      if (tag.standard_level <= current_standard_level) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 1) && [0,3].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n      if ((current_standard_level >= 2) && [4,6,12].includes(new_tags.indexOf(tag))) {\n        tag.selected = true;\n      }\n    }\n\n    if (this.state.competition_mode) {\n      for (let tag of new_tags) {\n        if (tag.selected) {\n          tag.locked = true;\n        }\n      }\n    }\n\n    return new_tags;\n  }\n\n  get_risk_level() {\n    let selected_tags = this.state.tags.filter(t => (t.selected || t.locked));\n    let reducer = (acc, val) => (acc + val.level);\n    let risk_level = selected_tags.reduce(reducer, 0);\n    return risk_level;\n  }\n  \n  check_card() {\n    this.change_board(\"card\");\n    return this.state.branch;\n  }\n\n  play_card() {\n    this.props.moves.play(this.state.hand_selected);\n    this.set_animations(\"field\", this.props.G.field.length, true);\n    this.setState({hand_selected: -1});\n    return {};\n  }\n  \n  use_mine() {\n    this.props.moves.mine(this.state.field_selected);\n    // this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  use_fight() {\n    this.props.moves.fight(this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"efield\", this.state.efield_selected, true);\n    this.setState({\n      field_selected: -1,\n      efield_selected: -1,\n    });\n    return {};\n  }\n\n  use_act() {\n    this.props.moves.act(this.state.field_selected);\n    this.set_animations(\"field\", this.state.field_selected, true);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  reinforce_card() {\n    this.props.moves.reinforce(this.state.field_selected);\n    this.setState({field_selected: -1});\n    return {};\n  }\n\n  finish_order() {\n    this.props.moves.finishOrder(this.state.order_selected);\n    // this.set_animations(\"finished\", this.props.G.finished.length, true);\n    this.setState({order_selected: -1});\n    return {};\n  }\n\n  use_order() {\n    this.props.moves.useOrder(this.state.finished_selected, this.state.field_selected, this.state.efield_selected);\n    // this.set_animations(\"field\", this.state.finished_selected, true);\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  harvest_orders() {\n    this.props.moves.harvest();\n    this.setState({finished_selected: -1});\n    return {};\n  }\n\n  get_illust_attr(card) {\n    if (card.was_enemy) {\n      return \"e_illust\";\n    }\n\n    else if (card.reversed) {\n      return \"r_illust\";\n    }\n\n    else {\n      return \"illust\";\n    }\n  }\n\n  set_animations(cardrow, idx, value) {\n    let animations = {...this.state.animations};\n    animations[cardrow][idx] = value;\n    this.setState({animations});\n  }\n\n  reset_preview_deck() {\n    this.setState({\n      preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),\n    });\n  }\n  \n  process_hand_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      cost: card.cost,\n    };\n    if (card.power > 0) {\n      data.power = \"↑\"+card.power;\n    }\n    return data;\n  }\n\n  process_hand_state(card, idx) {\n    return {\n      selected: (this.state.hand_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n  \n  process_selection_state(card, idx) {\n    return {\n      selected: (this.state.selection_selected == idx),\n      upgraded: card.upgraded,\n    };\n  }\n\n  process_pick_data(card) {\n    let illust = this.get_illust_attr(card);\n    let requirements = [];\n    // EH: Reconstruct this, this is too procedure\n    for (let i=0; i<3; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.price[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: card.hp,\n      price: requirements,\n      // upgraded: card.upgraded,\n    };\n    return data;\n  }\n\n  process_pick_state(card, idx) {\n    return {\n      selected: (this.state.pick_selected == idx),\n      upgraded: card.upgraded,\n      illust_variants: card.illust_variants,\n    };\n  }\n\n  process_upgrade_data(card) {\n    return {\n      upgrade_name: <span><br/>{card.name}</span>,\n    };\n  }\n\n  process_upgrade_state(card, idx) {\n    return {\n      selected: (this.state.upgrade_selected == idx),\n    };\n  }\n  \n  process_field_data(card) {\n    let illust = this.get_illust_attr(card);\n    let data = {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      mine: (<span>{ICONS.mine}{card.mine}</span>),\n    };\n    if (card.block > 0) {\n      data.block = (<span>{ICONS.block}{card.block}</span>);\n    }\n    if (card.power > 0) {\n      data.power = `↑${card.power}`;\n    }\n    return data;\n  }\n\n  process_field_state(card, idx) {\n    return {\n      selected: (this.state.field_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      playing: this.state.animations.field[idx],\n      setPlaying: (value) => this.set_animations(\"field\", idx, value),\n      illust_variants: card.illust_variants,\n    }\n  }\n\n  process_efield_data(card) {\n    let illust = this.props.G.rhodes_training_mode?\"illust\":\"e_illust\";\n    return {\n      [illust]: card.illust,\n      atk: card.atk,\n      hp: (card.hp - card.dmg),\n      vulnerable: card.vulnerable? (\"↓\" + card.vulnerable) : undefined,\n      //cost: card.cost,\n    };\n  }\n\n  process_efield_state(card, idx) {\n    return {\n      selected: (this.state.efield_selected == idx),\n      exhausted: card.exhausted, \n      damaged: (card.dmg > 0),\n      dmg: card.dmg,\n      enraged: card.enraged,\n      shaking: this.state.animations.efield[idx],\n      setShaking: (value) => this.set_animations(\"efield\", idx, value),\n      onEnd: () => {this.props.moves.clearField(\"efield\");console.log(\"onEnd\");},\n    }\n  }\n\n  process_order_data(card) {\n    //EH: reconstruct this\n    let requirements = [];\n    for (let i=0; i<4; i++) {\n      let icon = ICONS[Object.keys(ICONS)[i]];\n      let amount = card.requirements[i];\n      for (let j=0; j<amount; j++) {\n        requirements.push(icon);\n      }\n    }\n\n    let order_data = {\n      o_illust: \"https://ak.hypergryph.com/upload/images/20190228/32ddf0470a305376204d1312ca4720f9.jpg\",\n      // o_illust: \"https://ak.hypergryph.com/assets/index/images/ak/common/story/item_origin.png\",\n      score: card.score,\n      order_effect: card.desc,\n      requirements: requirements, // Show requirements later for higher priority\n    };\n\n    if (card.reward != undefined) {\n      order_data.reward = material_icons[card.reward];\n    }\n\n    return order_data;\n  }\n\n  process_order_state(card) {\n    return {\n      selected: (this.state.order_selected == this.props.G.orders.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n  process_finished_data(card) {\n    return {\n      o_illust: card.rhine? rhine_illust : order_illust,\n      finished_effect: card.desc,\n    };\n  }\n\n  process_finished_state(card) {\n    return {\n      selected: (this.state.finished_selected == this.props.G.finished.indexOf(card)),\n      exhausted: card.exhausted, \n      color: card.color,\n    }\n  }\n\n\n  process_card_details(card) {\n    let illust = card.was_enemy?\"eo_illust_detailed\":\"illust_detailed\";\n    if (card.reversed) {\n      illust = \"r_\" + illust;\n    }\n    return {\n      [illust]: card.illust,\n      cost_detailed: card.cost,\n      desc: get_desc(card),\n      // desc: (\n      //   <span>\n      //     <span style={{fontSize:\"120%\"}}>\n      //       {card.atk}/{card.hp} &nbsp;\n      //       {ICONS.mine}{card.mine} &nbsp;\n      //       {(card.block>0)? (<span>{ICONS.block}{card.block}</span>) : \"\"}\n      //     </span>\n      //     <br/>\n      //     {card.desc||\"\"}\n      //     <br/>\n      //     <span style={{\n      //       display: (card.onPlayBonus && card.onPlayBonus.length > 0)?\"\":\"none\"\n      //     }}>\n      //       <i>\n      //       部署奖励: {card.onPlayBonus && card.onPlayBonus.reduce((acc, val) => (acc + val.name + \" \"), \"\")}\n      //       </i>\n      //       <br/>\n      //     </span>\n      //     ({_.times(card.reinforce, ()=>material_icons[card.material])}: {card.reinforce_desc||\"\"})\n      //     <br />\n      //     <i>{card.quote||\"\"}</i>\n      //   </span>\n      // ), // EH: figure out why only string formatting does not work, I think it maybe because of JSX only accept string in html way instead of js way\n    }\n  }\n\n  process_enemy_details(card) {\n    return {\n      eo_illust_detailed: card.illust,\n      desc: (\n        <span>\n          {card.atk}/{card.hp}\n          <br/>\n          {card.desc||\"\"}\n        </span>\n      ),\n    }\n  }\n\n  process_order_details(card) {\n    return {\n      eo_illust_detailed: order_illust,\n      desc: card.desc,\n    };\n  }\n\n  enemy_move(i) {\n    if (i < this.props.G.efield.length) {\n      let sleep_time = 350;\n      if (i < 0) {\n        this.props.moves.drawEnemy(); // start from -2 to draw 2 enemies\n      }\n      else {\n        if (this.props.G.efield[i].exhausted) {\n          sleep_time = 50;\n        }\n        this.props.moves.enemyMove(i);\n      }\n      sleep(sleep_time).then(() => {this.enemy_move(i+1);});\n    }\n    else{\n      this.props.events.endTurn();\n    }\n  }\n\n  handle_hand_clicked(idx) {\n    let card = this.props.G.hand[idx];\n    return () => {\n      // if (this.state.hand_selected == -2) { // Turn this feature on by changing that to idx\n      //   this.play_card();\n      // }\n      // else {\n        this.setState({\n          hand_selected: idx,\n          checking: this.process_card_details(card),\n        });\n        this.set_branch(\"hand\");\n        this.log_select()(\"选定 \"+card.name);\n      // }\n    };\n  }\n\n  handle_selection_clicked(idx) {\n    return () => {\n      this.setState({\n        selection_selected: idx,\n      });\n    }\n  }\n  handle_pick_clicked(idx) {\n    return () => {\n      // if (this.state.pick_selected == idx) {\n      if (this.state.pick_selected == -2) {\n        this.props.moves.pick(idx);\n        this.setState({pick_selected: -1});\n      }\n      else{\n        this.setState({\n          pick_selected: idx,\n          checking: this.process_card_details(this.props.G.picks[idx]),\n        });\n        this.set_branch(\"pick\");\n      }\n    }\n  }\n  handle_upgrade_clicked(idx) {\n    return () => {\n      this.setState({\n        upgrade_selected: idx,\n      });\n    };\n  }\n\n  handle_field_clicked(idx) {\n    let card = this.props.G.field[idx];\n    return () => {\n      this.setState({\n        field_selected: idx,\n        checking: this.process_card_details(card),\n      });\n      this.log_select()(\"选定 \"+card.name);\n\n      let new_branch = Object.assign({}, this.branches.field);\n      // Add action\n      if (this.props.G.field[idx].action) {\n        new_branch[\"行动\"] = this.use_act;\n      }\n      // console.log(Object.keys(new_branch));\n      // Add reinforce\n      new_branch[\"强化\"+card.material] = this.reinforce_card;\n\n      this.setState({branch: map_object(this.wrap_controller_action, new_branch)});\n    };\n  }\n\n  handle_efield_clicked(idx) {\n    let card = this.props.G.efield[idx];\n    return () => {\n      this.setState({\n        efield_selected: idx,\n        checking: this.process_enemy_details(card),\n      });\n      this.set_branch(\"efield\");\n      this.log_select()(\"选定 \"+card.name);\n    };\n  }\n\n  handle_order_clicked(idx) {\n    let card = this.props.G.orders[idx];\n    return () => {\n      // if (this.state.order_selected == idx) {\n      if (this.state.order_selected == -2) {\n        this.finish_order();\n      }\n      else {\n        this.setState({\n          order_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"orders\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_finished_clicked(idx) {\n    let card = this.props.G.finished[idx];\n    return () => {\n      // if (this.state.finished_selected == idx) {\n      if (this.state.finished_selected == -2) {\n        this.use_order();\n      }\n      else {\n        this.setState({\n          finished_selected: idx,\n          checking: this.process_order_details(card),\n        });\n        this.set_branch(\"finished\");\n        this.log_select()(\"选定订单\");\n      }\n    };\n  }\n\n  handle_mulligan_clicked(idx) {\n    return () => {\n      let choices = this.state.hand_choices;\n      choices[idx] = !choices[idx];\n      this.setState({hand_choices: choices});\n    }\n  }\n\n  handle_deck_change(event) {\n    let attr = (this.state.deck_mode == \"random\")? \"deck_name\" : \"deck_data\";\n    let changer = {};\n    // TODO: reconstruct this\n    changer[attr] = event.target.value;\n    this.setState(changer);\n  }\n\n  wrap_controller_action(action) {\n    return () => {this.set_branch(action())};\n  }\n\n  set_branch(branch) {\n    if (typeof branch == \"string\") {\n        this.setState({\n          branch: map_object(this.wrap_controller_action, this.branches[branch])\n        });\n    }\n    else {\n      this.setState({branch: map_object(this.wrap_controller_action, branch)});\n    }\n\n  }\n\n  //CHANGE\n  change_board(new_board) {\n    const BOARDS = {\n      \"title\": this.render_title_board,\n      \"mode_selection\": this.render_mode_selection_board,\n      \"rules\": this.render_rules_board,\n      \"game\": this.render_game_board,\n      \"tag\": this.render_tag_board,\n      \"deck\": this.render_deck_board,\n      \"card\": this.render_card_board,\n      \"preview\": this.render_preview_board,\n      \"mulligan\": this.render_mulligan_board,\n      \"settings\": this.render_setting_board,\n      \"deck_selection\": this.render_deck_selection_board,\n      \"deck_upgrade\": this.render_deck_upgrade_board,\n      \"competition\": this.render_competition_board,\n      \"roguelike_deck_selection\": this.render_roguelike_deck_selection_board,\n      \"roguelike\": this.render_roguelike_board,\n      \"roguelike_entry\": this.render_roguelike_entry_board,\n      \"roguelike_shop\": this.render_roguelike_shop_board,\n      \"roguelike_result\": this.render_roguelike_result_board,\n      \"roguelike_final_result\": this.render_roguelike_final_result_board,\n    };\n    this.setState({last_board: this.state.board})\n    this.setState({board: BOARDS[new_board]});\n  }\n\n  check_deck() {\n    this.change_board(\"preview\");\n  }\n\n  back() {\n    this.setState({board: this.state.last_board});\n  }\n\n  enter_game() {\n    let deck = [];\n    let seed = this.state.seed;\n    if (this.state.competition_mode || this.state.roguelike_mode){\n      deck = this.state.Deck;\n      seed += this.state.roguelike_mode? this.state.game_count : this.state.results.length;\n    }\n    else {\n      let deck_data = (this.state.deck_mode == \"random\")? generate_deck(this.state.deck_name) : this.state.deck_data;\n      deck = str2deck(deck_data);\n    }\n\n    // EH: it's better to setup each scenario in one function, and in backend\n    this.props.moves.setDecks(init_decks(deck, seed));\n    if (this.state.roguelike_mode) {\n      // Setup other roguelike stuffs here\n    }\n    this.props.moves.addTags(this.state.tags.filter(t => (t.selected || t.locked)));\n    this.props.moves.onScenarioBegin();\n    this.setState({hand_choices: [false, false, false, false, false]});\n    this.change_board(\"mulligan\");\n  }\n\n  end_game() {\n    this.props.reset();\n    this.setState({\n      scenario_finished: false,\n    });\n    \n    if (this.state.competition_mode) {\n      this.change_board(\"competition\");\n    }\n    else if (this.state.roguelike_mode) {\n      // Let results stuffs go to winning \n      // Set finishing stuffs here\n\n      this.change_board(\"roguelike_result\");\n      // this.roguelike.end_battle();\n    }\n    else{\n      this.change_board(\"tag\");\n      this.setState({seed: get_seed_name()});\n    }\n  }\n\n  end_roguelike_mode() {\n    this.roguelike.end_roguelike_mode();\n    this.enter_roguelike_mode();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"updated\");\n    // Materials\n    for (let i=0; i<this.props.G.materials.length; i++) {\n      let material_diff = this.props.G.materials[i] - prevProps.G.materials[i];\n      if (material_diff > 0) {\n        this.set_animations(\"materials\", i, true);\n      } \n    }\n\n    // About result\n    let result = this.props.ctx.gameover;\n    if (result && !this.state.scenario_finished) {\n      console.log(\"Get the result\");\n      this.setState({\n        scenario_finished: true,\n        won: result.win,\n        level_achieved: this.get_risk_level(),\n      });\n      let good_grade = \"O-oooooooooo AAAAE-A-A-I-A-U- JO-oooooooooooo AAE-O-A-A-U-U-A- E-eee-ee-eee AAAAE-A-E-I-E-A- JO-ooo-oo-oo-oo EEEEO-A-AAA-AAAA\";\n\n      if (result.win) {\n        let risk_level = this.get_risk_level();\n        let grade = \"D\";\n        // TODO: reconstruct this using \"range\" function\n        if (risk_level < 0 || this.props.G.rhodes_training_mode) {\n          grade = good_grade;\n        }\n        else if (risk_level >= 0 && risk_level < 8) {\n          grade = \"C\";\n        }\n        else if (risk_level >= 8 && risk_level < 16) {\n          grade = \"B\";\n        }\n        else if (risk_level >= 16 && risk_level < 24) {\n          grade = \"A\";\n        }\n        else if (risk_level >= 24 && risk_level < 32) {\n          grade = \"S\";\n        }\n        else if (risk_level >= 32 && risk_level < 40) {\n          grade = \"SS\";\n        }\n        else if (risk_level >= 40 && risk_level < 50) {\n          grade = \"SSS\";\n        }\n        // else if (risk_level >= 22 && risk_level < 30) {\n        //   grade = \"SSSS\";\n        // }\n        // else if (risk_level >= 30 && risk_level < 50) {\n        //   grade = \"SSSSS\";\n        // }\n        else {\n          grade = \"SSSSSS\";\n        }\n        // console.log(\"Time to alert finish\");\n        // TODO: reconstruct this part, flat is better than nested\n        let finish = this.props.G.rhodes_training_mode?\"任务失败\":\"任务完成\";\n        alert(`${finish}\\n完成危机等级: ${risk_level}\\n评级: ${grade}\\n使用卡组: ${this.state.deck_mode==\"random\"?this.state.deck_name:`${is_standard(this.state.deck_data)?\"标准\":\"狂野\"}自组卡组`}\\n${this.state.daily_mode?`完成每日挑战: ${this.state.date}\\n`:\"\"}地图种子: ${this.state.seed}`);\n\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, risk_level]});\n        }\n\n\n      }\n\n      else {\n        let failed = this.props.G.rhodes_training_mode?\"任务完成\":\"任务失败\";\n        alert(`${failed}\\n原因: ${result.reason}\\n${this.props.G.rhodes_training_mode?`评级: ${good_grade}\\n`:\"\"}地图种子: ${this.state.seed}`);\n        if (this.state.competition_mode) {\n          this.setState({results: [...this.state.results, 0]});\n        }\n      }\n        \n      \n\n    }\n  }\n\n  render_title_board() {\n    return <div className=\"board\">\n      <img src=\"https://s1.ax1x.com/2020/10/20/0z4han.gif\" className=\"title-img\"></img>\n      <TitleScreen enterGame={()=>this.change_board(\"tag\")} checkRule={()=>this.change_board(\"rules\")} checkDeck={() => {this.reset_preview_deck();this.check_deck();}} />\n    </div>;\n  }\n\n  render_mode_selection_board() {\n    const actions = {\n      // \"常规模式\": () => this.change_board(\"tag\"),\n      \"每日挑战\": this.enter_daily_mode,\n           // \"Roguelike模式\": this.enter_roguelike_mode,\n      \"返回\": this.back,\n    };\n    return <div className=\"board\">\n      <ModeSelection actions={actions} />\n    </div>\n  }\n\n  render_rules_board() {\n    return <div className=\"board\">\n      <div style={{\n        height: \"80%\", \n        width: \"94%\", \n        margin:\"3%\", \n        overflow:\"scroll\",\n      }}>\n        {/* this part, css in js, or css in file? \n        In my view, after this part is moved to a new file, change it to css in file\n        TODO: reconstruct this part\n        */}\n        {RULES}\n      </div>\n      <button \n        onClick={()=>this.change_board(\"title\")}\n        className=\"preview-button\"\n      >\n        返回\n      </button>\n    </div>;\n  }\n\n  render_preview_board() {\n    return (<div className=\"board\" >\n      <SCardRow \n        cards = {this.state.preview_deck.map(this.process_card_details)}\n      />\n      <button className=\"preview-button\" onClick={this.back}>\n        返回\n      </button>\n    </div>);\n  }\n\n  render_mulligan_board() {\n    // TODO: reconstruct the mulligan part\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <span style={{position:\"absolute\", top:\"10%\", left:\"3%\"}}>请选择要重调的手牌</span>\n      <SCardRow \n        cards = {this.props.G.hand.map(this.process_card_details)}\n        handleClick = {this.handle_mulligan_clicked}\n        additionalStyles = {this.state.hand_choices.map(x => ({border: x?\"3px solid #096dd9\":\"2px solid\"}))}\n      />\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.props.moves.mulligan(this.state.hand_choices);\n          this.change_board(\"game\");\n        }}\n      >\n        完成重调\n      </button>\n    </div>);\n\n  }\n\n  process_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.props.G.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.select_deck(idx)},\n    }\n  }\n  \n  process_roguelike_deck_data(deck, idx) {\n    let checkDeck = () => {\n      this.setState({preview_deck: deck});\n      this.check_deck();\n    };\n    return {\n      deckName: this.state.deck_names[idx],\n      checkDeck,\n      selectDeck: () => {this.roguelike.select_deck(deck);this.change_board(\"roguelike\");},\n    }\n  }\n\n\n  upgrade_card() {\n    this.props.moves.upgrade(this.state.selection_selected, this.state.upgrade_selected); \n    this.props.moves.refresh_selections();\n    this.setState({selection_selected: -1, upgrade_selected: -1});\n\n    if (this.props.G.finish_upgrading) {\n      this.start_competition();\n    }\n  }\n\n  enter_competition_mode() {\n    this.setState({competition_mode: true});\n    this.props.moves.setup_deck_selection(_.random(50));\n    this.change_board(\"deck_selection\");\n  }\n\n  start_competition() {\n    this.setState({\n      // Deck: this.props.G.Deck,\n      // preview_deck: this.props.G.Deck,\n      results: [],\n    });\n    this.setState({tags: this.choose_standard_tags(TAGS.map(x=>({...x})), 3)});\n    this.change_board(\"competition\");\n  }\n\n  select_deck(idx) {\n    this.props.moves.select_deck(idx);\n    this.change_board(\"deck_upgrade\");\n  }\n  \n  enter_roguelike_mode() {\n    this.roguelike.setup_roguelike_mode();\n    this.roguelike.setup_deck_selection();\n    this.change_board(\"roguelike_entry\");\n  }\n  \n  enter_daily_mode() {\n    this.roguelike.enter_daily_mode();\n    this.change_board(\"tag\");\n  }\n\n  enter_difficulty(difficulty) {\n    this.roguelike.set_difficulty(difficulty);\n    this.change_board(\"roguelike_deck_selection\");\n  }\n\n  buy_item(idx) {\n    return () => {\n      let item = this.state.shop_items[idx];\n      this.setState({\n        current_item: item,\n        current_item_idx: idx,\n      });\n\n      if (item.indexes) {\n        this.change_board(\"roguelike_shop\");\n      }\n      else {\n        this.roguelike.buy();\n      }\n    };\n  }\n\n  render_roguelike_entry_board() {\n    let difficulties = [\n      {\n        name: \"欢乐云游\",\n        handleClick: () => this.enter_difficulty(\"easy\"),\n      },\n      {\n        name: \"整装待发\",\n        handleClick: () => this.enter_difficulty(\"medium\"),\n      },\n      {\n        name: \"苦难之路\",\n        handleClick: () => this.enter_difficulty(\"hard\"),\n      },\n    ];\n    return <RoguelikeEntry \n      difficulties = {difficulties}\n    />;\n  }\n\n  render_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      // Unlock all tags here? Because only one tag source shared between normal and competition mode\n      this.setState({competition_mode: false})\n    };\n    return <DeckSelection decks={this.props.G.deck_list.map(this.process_deck_data)} back={back} welcome_title=\"欢迎来到竞技模式!\" introduce_title=\"竞技模式介绍\" />\n  }\n\n  render_roguelike_deck_selection_board() {\n    let back = () => {\n      this.change_board(\"title\");\n      this.setState({roguelike_mode: false})\n    };\n    return <RoguelikeDeckSelection decks={this.state.deck_list.map(this.process_roguelike_deck_data)} />\n// introduce_title=\"集成战略模式介绍\" introduce={introduce_roguelike_mode} \n  }\n\n  render_roguelike_board() {\n    const check_cards = (idx) => {\n      this.setState({preview_deck: this.state.card_picks[idx]});\n      this.change_board(\"preview\");\n    };\n    const pick_cards = (idx) => {\n      this.roguelike.pick_cards(idx);\n    };\n\n    const card_picks = this.state.card_picks? (<PickCards picks={this.state.card_picks} gold={this.state.gold} check_cards={check_cards} pick_cards={pick_cards} skip_picks={()=>this.roguelike.skip_pick()}/>) : (<FinishPick gold={this.state.gold} />);\n    const shop = <Shop gold={this.state.gold} shop_items={this.state.shop_items} buy={this.buy_item} refresh_shop={this.roguelike.refresh_shop} />\n\n    const roguelike_main = <Roguelike \n      enter_battle = {() => this.change_board(\"tag\")}\n      enter_dream = {this.roguelike.enter_dream}\n      game_count = {this.state.game_count}\n      check_deck = {() => {this.setState({preview_deck:this.state.Deck});this.change_board(\"preview\");}}\n    />;\n\n    const centrals = [roguelike_main, card_picks, shop];\n\n    return <div className=\"board\">\n      {centrals[this.state.central_idx]}\n      <RoguelikeTabs \n        selections={[\"对战区\", \"选牌区\", \"诡意行商\"]}\n        onSelect={(idx) => {this.setState({central_idx: idx})}}\n      />\n      {/* <p className=\"gold-amount\">{ICONS.gold}: {this.state.gold}</p> */}\n    </div>\n  }\n\n  render_roguelike_shop_board() {\n    let cards = this.state.Deck.filter((x,idx) => this.state.current_item.indexes.includes(idx) && (idx < this.state.Deck.length));\n    let selected_card = cards[this.state.shop_selected];\n    // console.log(cards);\n    return (<div className=\"board\" style={{position:\"relative\"}} >\n      <div style={{marginTop: \"38.2%\", marginLeft: \"2%\"}}>{this.state.current_item.desc}</div>\n      <CardRow \n        cards = {cards.map(this.process_hand_data)}\n        handleClick = {(idx)=>()=>this.setState({shop_selected: idx})}\n        states = {this.state.current_item.indexes.map((x,idx) => ({selected: (idx==this.state.shop_selected)}))}\n        additionalStyle = {{marginTop: \"5%\"}}\n      />\n      <div style={{margin:\"5% 2% 5% 2%\", width:\"95%\", height:\"30%\", overflowY:\"hidden\"}}>\n        {selected_card && get_desc(selected_card)}\n      </div>\n      <button \n        className=\"preview-button\" \n        onClick={() => {\n          this.roguelike.buy(this.state.shop_selected);\n          this.back();\n        }}\n      >\n        确认购买({ICONS.gold}{this.state.current_item.price})\n      </button>\n      <button className=\"preview-button\" onClick={this.back}>返回</button>\n    </div>);\n  }\n\n  render_roguelike_result_board() {\n    let level_diff = this.state.level_achieved - this.state.level_required;\n    let win = <ResultWin \n      game_count = {this.state.game_count}\n      level_required = {this.state.level_required}\n      level_achieved = {this.state.level_achieved}\n      gold_amount = {get_gold_gained(this.state.level_achieved, this.state.level_required)}\n      slam = {level_diff >= 4}\n      grand_slam = {level_diff >= 8}\n      continue = {() => {\n        let game_count = this.state.game_count;\n        this.roguelike.continue_run();\n        if (game_count < 9) {\n          this.change_board(\"roguelike\");\n        }\n        else {\n          this.change_board(\"roguelike_final_result\");\n        }\n      }}\n    />\n    let lose = <ResultLose\n      game_count = {this.state.game_count}\n      continue = {this.end_roguelike_mode}\n    />\n    return this.state.won? win : lose;\n  }\n  \n  render_roguelike_final_result_board() {\n    let difficulty = {\n      easy: \"欢乐云游\",\n      medium: \"整装待发\",\n      hard: \"苦难之路\",\n    }[this.state.difficulty];\n    return <FinalResult \n      difficulty = \"整装待发\"\n      endgame = \"结束游戏\"\n      continue = {this.end_roguelike_mode}\n    />;\n  }\n\n  render_deck_upgrade_board() {\n    return <DeckUpgrade \n      cards = {this.props.G.selections.map(this.process_hand_data).slice(0,3)}\n      cardStates = {this.props.G.selections.map(this.process_selection_state)}\n      selectedCard = {{...this.props.G.selections[this.state.selection_selected]}}\n      handleCardClick = {this.handle_selection_clicked}\n      upgrades = {this.props.G.upgrades.map(this.process_upgrade_data)}\n      upgradeStates = {this.props.G.upgrades.map(this.process_upgrade_state)}\n      selectedUpgrade = {{...this.props.G.upgrades[this.state.upgrade_selected]}}\n      handleUpgradeClick = {this.handle_upgrade_clicked}\n      handleClick = {this.upgrade_card}\n    />\n  }\n\n  render_competition_board() {\n    let actions = {\n       \"查看卡组\": () => {\n         this.setState({preview_deck: this.state.Deck || this.props.G.Deck});  // Write deck init here, not in \"start_competition\", because of async moves and would swallow the last card upgrade\n         this.change_board(\"preview\");\n      },\n       \"进入游戏\": () => {\n         this.setState({Deck: this.state.Deck || this.props.G.Deck});\n         this.change_board(\"tag\");\n      },\n     };\n     let finalResult = undefined;\n     if (this.state.results.length >= 5) {\n       finalResult = _.mean(this.state.results.sort((a,b) => (b-a)).slice(0,3));\n       finalResult = _.round(finalResult, 2);\n       actions = {\n         \"查看卡组\": actions.查看卡组,\n         \"结束游戏\": () => {\n           this.change_board(\"title\");\n           this.setState({\n             competition_mode: false,\n             Deck: undefined,\n             tags: TAGS.map(x => ({...x})),\n            });\n         } \n      };\n     }\n    return <Competition \n     results = {[...this.state.results, ..._.times(5-this.state.results.length, ()=>\"_\")]}\n     finalResult = {finalResult}\n     actions = {actions}\n    />;\n  }\n\n  render_game_board() {\n    // EH: map object in state changing and store the mapped object in state\n\n    // SR: player panel\n    // TODO: reconstruct this, this is stateful, and html elements should go to stateless\n    // let material_display = (idx) => (\n    //   <div \n    //     style={{\n    //       display: \"inline-block\",\n    //       color:(this.props.G.gained.includes(idx))?\"blue\":\"black\",\n    //     }}\n    //   >\n    //     <animated.div\n    //       style={{\n    //         display: \"inline-block\",\n    //       }}\n    //     >\n    //       {material_icons[idx]}\n    //     </animated.div>\n    //     :{this.props.G.materials[idx]}&nbsp;&nbsp;&nbsp; \n    //   </div>\n    // );\n\n    let player_panel = (<div align=\"center\">\n      <p style={{marginTop:\"2%\"}}>\n        {[0,1,2,3].map(\n            (idx) => <MaterialDisplay \n              playing = {this.state.animations.materials[idx]}\n              setPlaying = {(value) => this.set_animations('materials', idx, value)}\n              idx = {idx}\n              gained = {this.props.G.gained}\n              materials = {this.props.G.materials}\n            />\n          )\n        }\n        费用: {this.props.G.costs}  \n        <br/>\n        <button \n          className=\"player-panel-button\"\n          onClick={() => {this.setState({show_field: !this.state.show_field})}}\n        >\n          {(this.state.show_field)? <span>{ICONS.order}查看订单</span> : <span>{ICONS.battlefield}查看战场</span>}\n        </button>\n        <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.G.stage==\"enemy\" && !this.props.ctx.gameover)? \"none\" : \"\"\n          }} \n          onClick={()=>{\n            if (this.props.ctx.gameover) {\n              this.end_game();\n            }\n            this.props.moves.rest();\n            this.props.moves.enemyInit();\n            this.enemy_move(-this.props.G.num_enemies_out);\n          }}\n        >\n          {this.props.ctx.gameover? <span>{ICONS.endgame}结束游戏</span>:<span>{ICONS.endturn}结束回合</span>}\n        </button>\n        {/* <button \n          className=\"player-panel-button\"\n          style={{\n            display: (this.props.ctx.gameover)? \"\" : \"none\"\n          }} \n          onClick={()=>{this.end_game();}}\n        >\n          结束游戏\n        </button> */}\n      </p>\n    </div>);\n\n    //SR: game panel and debug the <p> and maybe get all styles out of this\n    //And learn about the diff between span and p\n    let game_panel = (<div>\n      <p style={{marginTop: \"0%\"}}>\n        动乱:{this.props.G.danger}/{this.props.G.max_danger} &nbsp;&nbsp;&nbsp;\n        {/* <span>分数:{this.props.G.score}/{this.props.G.goal}</span> */}\n        <ScoreBoard score={this.props.G.score} goal={this.props.G.goal} />\n      <br/>\n        <button \n          onClick={()=>this.end_game()}\n          style = {{\n            position: \"absolute\",\n            fontSize: \"120%\",\n            top: \"2%\",\n            left: \"88%\",\n\n            display: (this.state.competition_mode || this.state.roguelike_mode)?\"none\":\"\",\n          }}\n        >\n        ⟳\n        </button>\n\n        <span \n          onClick={()=>{alert(this.props.G.messages.slice(0,20).join(\"\\n\"));}}\n        >\n          {this.props.G.messages[0]}\n        </span>\n      </p>\n    </div>);\n\n    let field_cardrow = (\n      <CardRow \n        cards = {this.props.G.field.map(this.process_field_data)}\n        states = {this.props.G.field.map(this.process_field_state)}\n        handleClick = {this.handle_field_clicked}\n      />\n    );\n\n    let hand_cardrow = (\n      <CardRow\n          cards = {this.props.G.hand.map(this.process_hand_data)}\n          states = {this.props.G.hand.map(this.process_hand_state)}\n          handleClick = {this.handle_hand_clicked}\n        />\n    );\n\n    let orders_cardrow = (\n      <CardRow \n        cards = {this.props.G.orders.map(this.process_order_data)}\n        states = {this.props.G.orders.map(this.process_order_state)}\n        handleClick = {this.handle_order_clicked}\n        additionalStyle = {{height: \"28%\"}}\n        cardStyle = {{height: \"70%\", marginRight:\"5%\"}}\n      />\n    );\n\n    let finished_cardrow = (<CardRow \n      cards = {this.props.G.finished.map(this.process_finished_data)}\n      states = {this.props.G.finished.map(this.process_finished_state)}\n      handleClick = {this.handle_finished_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n    \n    let pick_cardrow = (<CardRow \n      cards = {this.props.G.picks.map(this.process_pick_data)}\n      states = {this.props.G.picks.map(this.process_pick_state)}\n      handleClick = {this.handle_pick_clicked}\n      additionalStyle = {{height: \"25%\", marginTop: \"15%\"}}\n    />);\n\n    let finished_pick_cardrow = (\n    <>\n      {/* <Tabs \n        onSelect={(idx)=>this.setState({finished_mode:[\"finished\", \"pick\"][idx]})}\n        selectedIndex={[\"finished\", \"pick\"].indexOf(this.state.finished_mode)}\n        style={{margin: \"2%\", marginTop: \"3%\", height: \"8%\",}}\n      >\n        <TabList>\n          <Tab>订单区</Tab>\n          <Tab>选牌区</Tab>\n        </TabList>\n      </Tabs> */}\n      {(this.state.show_finished)?finished_cardrow:pick_cardrow}\n    </>\n    );\n\n    return (\n      <div className=\"board\" >\n        <Panel \n          variant = \"game-panel\"\n          content = {game_panel}\n        />\n        <CardRow \n          cards = {this.props.G.efield.map(this.process_efield_data)}\n          states = {this.props.G.efield.map(this.process_efield_state)}\n          handleClick = {this.handle_efield_clicked}\n          additionalStyle = {{display: this.state.show_field?\"\":\"none\"}}\n        />\n        {(this.state.show_field)? field_cardrow : finished_pick_cardrow}\n        <Controller \n          actions = {this.state.branch}\n          checkCard = {(Object.keys(this.state.branch).length!=0)?this.wrap_controller_action(this.check_card):undefined}\n        />\n        {(this.state.show_field)? \"\":<button className=\"pick-toggle-button\" onClick={()=>this.setState({show_finished: !this.state.show_finished})}>{this.state.show_finished?\"查看选牌区\":\"查看订单区\"}</button>}\n        {(this.state.show_field)? hand_cardrow : orders_cardrow}\n        <Panel \n          variant = \"player-panel\"\n          content = {player_panel}\n        />\n        <div className=\"card-display\">\n          <SCard card={this.state.checking} />\n        </div>\n\n      </div>\n    );\n  }\n\n  render_card_board() {\n    return (\n      <div className=\"board\" align=\"center\">\n        <CheckCard \n          card={this.state.checking} \n          handleClick={()=>this.change_board(\"game\")} \n        />\n      </div>\n    );\n\n  }\n\n  render_tag_board() {\n    let risk_level = this.get_risk_level();\n\n    let actions = {\n      进入游戏: () => this.change_board(\"deck\"),\n      快速设置: () => this.setState({\n        tags: this.choose_standard_tags(this.state.tags, this.state.standard_level+1),\n        standard_level: this.state.standard_level + 1,\n      }),\n      // 其他模式: () => this.change_board('mode_selection'),\n      每日挑战: this.enter_daily_mode,\n      肉鸽模式: this.enter_roguelike_mode,\n      返回标题: () => this.change_board(\"title\"),\n    };\n\n    if (this.state.competition_mode) {\n      actions = {\n        进入游戏: () => this.enter_game(),\n      }\n    }\n    if (this.state.roguelike_mode) {\n      actions = {};\n\n      if (risk_level >= this.state.level_required) {\n        actions.进入游戏 = () => this.enter_game();\n      }\n    }\n\n    if (this.state.daily_mode) {\n      let end_daily_mode = () => {\n          this.roguelike.end_daily_mode();\n          this.change_board(\"tag\");\n        };\n      actions = {\n        返回: end_daily_mode ,\n      };\n\n      if (risk_level >= this.state.level_required) {\n        actions = {\n          进入游戏: () => this.change_board(\"deck\"),\n          返回: end_daily_mode,\n        };\n      }\n    }\n\n    return (\n      <div className=\"board\" >\n        <TagSelection \n          tags = {this.state.tags}\n          handleClick = {this.choose_tag}\n        />\n        <TagList \n          selected_tags = {this.state.tags.filter(t => (t.selected || t.locked))}\n        />\n        <RiskLevel \n          risk_level = {risk_level}\n        />\n        <br/>\n        <div \n          style={{\n            color: \"#cf1322\", \n            marginLeft: \"2%\",\n            marginTop: \"-3%\",\n            display:(risk_level>=16 && (!(this.state.roguelike_mode || this.state.daily_mode)))? \"\" : \"none\"\n          }}\n        >\n          当前合约难度极大，请谨慎行动\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 1% 2%\",\n            display:(this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          今天是: {this.state.date}\n        </div>\n        <div \n          style={{\n            color: \"#black\", \n            margin: \"-1% 0% 3% 2%\",\n            display:(this.state.roguelike_mode || this.state.daily_mode)? \"\" : \"none\",\n            fontSize: \"105%\",\n          }}\n        >\n          要求危机等级: {this.state.level_required}\n        </div>\n\n        \n        <EnterGame \n          actions = {actions}\n        />\n        \n      </div>\n    );\n  }\n\n  render_deck_board() {\n    let deck_generation = (<DeckGeneration\n      value = {this.state.deck_name}\n      handleChange = {this.handle_deck_change}\n      changeName = {() => this.setState({deck_name:get_deck_name()})}    \n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(generate_deck(this.state.deck_name))});\n        this.check_deck();\n      }}\n      />);\n\n    let deck_construction = (<DeckConstruction \n      value = {this.state.deck_data}\n      handleChange = {this.handle_deck_change}\n      checkDeck = {() => {\n        this.setState({preview_deck: str2deck(this.state.deck_data)});\n        this.check_deck();\n      }}\n      checkCards = {() => {\n        // this.setState({\n          // preview_deck: CARDS.map(x=>({...x, material:Math.floor(Math.random()*3)})),});\n        this.reset_preview_deck();\n        this.check_deck();\n      }}\n    />)\n\n    return (\n      <div className=\"board\" >\n        <Tabs \n          onSelect={(idx)=>this.setState({deck_mode:[\"random\", \"custom\"][idx]})}\n          selectedIndex={[\"random\", \"custom\"].indexOf(this.state.deck_mode)}\n          style={{margin: \"2%\", height: \"8%\",}}\n        >\n          <TabList>\n            <Tab>随机卡组</Tab>\n            <Tab>自组卡组</Tab>\n          </TabList>\n        </Tabs>\n\n        {(this.state.deck_mode == \"random\")? deck_generation : deck_construction}\n\n        <EnterGame \n          actions = {{\n            进入游戏: () => this.enter_game(),\n            高级设置: () => this.change_board(\"settings\"),\n            返回合约: () => this.change_board(\"tag\"),\n          }}\n        />\n      </div>\n    );\n  }\n\n  render_setting_board() {\n    return (<div className=\"board\">\n      <Settings \n        back = {() => this.back()}\n        handleChange = {(event) => {this.setState({seed: event.target.value})}}\n        value = {this.state.seed}\n      />\n    </div>);\n  }\n\n  render() {\n    return this.state.board(); \n  }\n}","import { Client } from 'boardgame.io/react';\nimport { AC } from './Game';\nimport { Board } from './Board';\n\n// import 'antd/dist/antd.css';\n\nconst App = Client({ \n  game: AC, \n  board: Board,\n  debug: false,\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}